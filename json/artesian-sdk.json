{"info": {"author": "Ark-Lab", "author_email": "niccolo.cecchi@ark-energy.eu", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "![image](http://www.ark-energy.eu/wp-content/uploads/ark-dark.png)\n# Artesian.SDK\n\nThis Library provides read access to the Artesian API\n\n## Getting Started\n### Installation\nYou can install the package directly from pip [pip](https://pypi.org/project/pip/).\n```Python\npip install artesian-sdk\n```\nAlternatively, to install this package go to the [release page](https://github.com/ARKlab/Artesian.SDK-Python/releases)  .\n\n## How to use\nThe Artesian.SDK instance can be configured using API-Key authentication\n```Python\nfrom artesian import ArtesianConfig\n\ncfg = ArtesianServiceConfig(\"https://fake-artesian-env/\", \"{api-key}\")\n```\n\n## QueryService\nUsing the ArtesianServiceConfig `cfg` we create an instance of the QueryService which is used to create Actual, Versioned and Market Assessment time series queries\n\n### Actual Time Series\n```Python\nfrom artesian import QueryService,Granularity\n\nqs = QueryService(cfg);\ndata = qs.createActual() \\\n    .forMarketData([100011484,100011472,100011477,100011490,100011468,100011462,100011453]) \\\n    .inAbsoluteDateRange(\"2018-01-01\",\"2018-01-02\") \\\n    .inTimeZone(\"UTC\") \\\n    .inGranularity(Granularity.HOUR) \\\n    .execute()\n\n```\nTo construct an Actual Time Series the following must be provided.\n<table>\n  <tr><th>Actual Query</th><th>Description</th></tr>\n  <tr><td>Market Data ID</td><td>Provide a market data id or set of market data id's to query</td></tr>\n  <tr><td>Time Granularity</td><td>Specify the granularity type</td></tr>\n  <tr><td>Time Extraction Window</td><td>An extraction time window for data to be queried</td></tr>\n</table>\n\n[Go to Time Extraction window section](#artesian-sdk-extraction-windows)\n\n### Versioned Time Series\n```Python\nfrom artesian import QueryService,Granularity\n\nqs = QueryService(cfg);\nq = qs.createVersioned() \\\n    .forMarketData([100042422,100042283,100042285,100042281,100042287,100042291,100042289]) \\\n    .inAbsoluteDateRange(\"2018-01-01\",\"2018-01-02\") \\\n    .inTimeZone(\"UTC\") \\\n    .inGranularity(Granularity.HOUR)\n\n\nq.forMUV().execute()\nq.forLastNVersions(2).execute()\nq.forLastOfDays(\"2019-03-12\",\"2019-03-16\").execute()\nq.forLastOfDays(\"P0Y0M-2D\",\"P0Y0M2D\").execute()\nq.forLastOfDays(\"P0Y0M-2D\").execute()\nq.forLastOfMonths(\"2019-03-12\",\"2019-03-16\").execute()\nq.forLastOfMonths(\"P0Y-1M0D\",\"P0Y1M0D\").execute()\nq.forLastOfMonths(\"P0Y-1M0D\").execute()\nq.forVersion(\"2019-03-12T14:30:00\").execute()\nq.test1.forMostRecent(\"2019-03-12\",\"2019-03-16\").execute()\nq.test1.forMostRecent(\"P0Y0M-2D\",\"P0Y0M2D\").execute()\nq.test1.forMostRecent(\"P0Y0M-2D\").execute()\nq.test1.forMostRecent(\"2019-03-12\",\"2019-03-16\").execute()\nq.test1.forMostRecent(\"P0Y-1M0D\",\"P0Y1M0D\").execute()\nq.test1.forMostRecent(\"P0Y-1M0D\").execute() \n```\nTo construct a Versioned Time Series the following must be provided.\n<table>\n  <tr><th>Versioned Query</th><th>Description</th></tr>\n  <tr><td>Market Data ID</td><td>Provide a market data id or set of market data id's to query</td></tr>\n  <tr><td>Time Granularity</td><td>Specify the granularity type</td></tr>\n  <tr><td>Versioned Time Extraction Window</td><td>Versioned extraction time window</td></tr>\n  <tr><td>Time Extraction Window</td><td>An extraction time window for data to be queried</td></tr>\n</table>\n\n[Go to Time Extraction window section](#artesian-sdk-extraction-windows)\n\n### Market Assessment Time Series\n```Python\nfrom artesian import QueryService\n\nqs = QueryService(cfg);\ndata = qs.createMarketAssessment() \\\n    .forMarketData([100000032,100000043]) \\\n    .forProducts([\"D+1\",\"Feb-18\"]) \\\n    .inAbsoluteDateRange(\"2018-01-01\",\"2018-01-02\") \\\n    .execute()\n```\nTo construct a Market Assessment Time Series the following must be provided.\n<table>\n  <tr><th>Mas Query</th><th>Description</th></tr>\n  <tr><td>Market Data ID</td><td>Provide a market data id or set of market data id's to query</td></tr>\n  <tr><td>Product</td><td>Provide a product or set of products</td></tr>\n  <tr><td>Time Extraction Window</td><td>An extraction time window for data to be queried </td></tr>\n</table>\n\n[Go to Time Extraction window section](#artesian-sdk-extraction-windows)\n\n### Artesian SDK Extraction Windows\nExtraction window types  for queries.\n\nDate Range\n```Python\n .inAbsoluteDateRange(\"2018-08-01\", \"2018-08-10\")\n```\nRelative Interval\n```Python\n .inRelativeInterval(RelativeInterval.ROLLING_WEEK)\n```\nPeriod\n```Python\n .inRelativePeriod(\"P5D\")\n```\nPeriod Range\n```Python\n .inRelativePeriodRange(\"P-3D\", \"P10D\")\n```\n\n## MarketData Service\n\nUsing the ArtesianServiceConfig `cfg` we create an instance of the MarketDataService which is used to retrieve MarketData infos.\n\n```Python\nfrom artesian import MarketDataService\n\nmds = MarketDataService(cfg);\n\n```\n\nTo list MarketData curves\n```Python\npage = 1\npageSize = 100\nres = mds.readCurveRange(100042422, page, pageSize, versionFrom=\"2016-12-20\" , versionTo=\"2019-03-12\")\n```\n\n\n## Links\n* [Github](https://github.com/ARKlab/Artesian.SDK-Python)\n* [Ark Energy](http://www.ark-energy.eu/)\n* [Artesian Portal](https://portal.artesian.cloud)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ARKlab/Artesian.SDK-Python", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "artesian-sdk", "package_url": "https://pypi.org/project/artesian-sdk/", "platform": "", "project_url": "https://pypi.org/project/artesian-sdk/", "project_urls": {"Homepage": "https://github.com/ARKlab/Artesian.SDK-Python"}, "release_url": "https://pypi.org/project/artesian-sdk/1.1.0/", "requires_dist": null, "requires_python": "", "summary": "Library provides read access to the Artesian API", "version": "1.1.0"}, "last_serial": 5758905, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "62193dfe3ff6075180ccf55623df134d", "sha256": "972f60d7b2a7a4972254444df6e596b7c089e1d8457f1d4b98d6788c37a3e28b"}, "downloads": -1, "filename": "artesian_sdk-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "62193dfe3ff6075180ccf55623df134d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17960, "upload_time": "2019-05-15T10:38:01", "upload_time_iso_8601": "2019-05-15T10:38:01.208659Z", "url": "https://files.pythonhosted.org/packages/82/4c/baa27a716312ea1e47e09a6be3929f217b9c1755ca863b680e338a3e56ed/artesian_sdk-1.0.0-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "9970e11cbf4816092b999184caba633e", "sha256": "45dc604d2b7b563d7f6d559fab9983e224c08ef836f61fad586ce09d6994c501"}, "downloads": -1, "filename": "artesian-sdk-1.0.0.tar.gz", "has_sig": false, "md5_digest": "9970e11cbf4816092b999184caba633e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11553, "upload_time": "2019-05-15T10:38:03", "upload_time_iso_8601": "2019-05-15T10:38:03.939702Z", "url": "https://files.pythonhosted.org/packages/9a/f2/ca370c5dc1fe9c4c71c48e9f3c9b1c98f078885b5e2cdaa37af27951111b/artesian-sdk-1.0.0.tar.gz"}], "1.1.0": [{"comment_text": "", "digests": {"md5": "0dd4213102e46eb56c2b521ad38d7e93", "sha256": "367f480bd82681ae191c96a1931da3a867691ce3c7eee14acfad376c8d282079"}, "downloads": -1, "filename": "artesian_sdk-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0dd4213102e46eb56c2b521ad38d7e93", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20317, "upload_time": "2019-08-30T07:55:25", "upload_time_iso_8601": "2019-08-30T07:55:25.227021Z", "url": "https://files.pythonhosted.org/packages/49/6e/6c21f57b1eacd2a46f031c6ef346c2d059d1acd6f97366429fbf59c88636/artesian_sdk-1.1.0-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "4023e9eecef6eeab933042d3ab65d181", "sha256": "b77ffb716eeee0321721f8ec2d5114d7b8979ec3b5320277534c7804de844053"}, "downloads": -1, "filename": "artesian-sdk-1.1.0.tar.gz", "has_sig": false, "md5_digest": "4023e9eecef6eeab933042d3ab65d181", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11844, "upload_time": "2019-08-30T07:55:26", "upload_time_iso_8601": "2019-08-30T07:55:26.598785Z", "url": "https://files.pythonhosted.org/packages/46/42/7ccb46b729df64a59d73742ffd77f798113e9961dbdcdd947d481419884b/artesian-sdk-1.1.0.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "0dd4213102e46eb56c2b521ad38d7e93", "sha256": "367f480bd82681ae191c96a1931da3a867691ce3c7eee14acfad376c8d282079"}, "downloads": -1, "filename": "artesian_sdk-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0dd4213102e46eb56c2b521ad38d7e93", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20317, "upload_time": "2019-08-30T07:55:25", "upload_time_iso_8601": "2019-08-30T07:55:25.227021Z", "url": "https://files.pythonhosted.org/packages/49/6e/6c21f57b1eacd2a46f031c6ef346c2d059d1acd6f97366429fbf59c88636/artesian_sdk-1.1.0-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "4023e9eecef6eeab933042d3ab65d181", "sha256": "b77ffb716eeee0321721f8ec2d5114d7b8979ec3b5320277534c7804de844053"}, "downloads": -1, "filename": "artesian-sdk-1.1.0.tar.gz", "has_sig": false, "md5_digest": "4023e9eecef6eeab933042d3ab65d181", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11844, "upload_time": "2019-08-30T07:55:26", "upload_time_iso_8601": "2019-08-30T07:55:26.598785Z", "url": "https://files.pythonhosted.org/packages/46/42/7ccb46b729df64a59d73742ffd77f798113e9961dbdcdd947d481419884b/artesian-sdk-1.1.0.tar.gz"}]}