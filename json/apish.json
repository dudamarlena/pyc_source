{"info": {"author": "Greenhouse AI team", "author_email": "ai@greenhousegroup.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "Description\n============\n\nIntroduction\n------------\n\nApian is an opinionated library for setting up a Python-based service with a\nminimum of boilerplate. It is a thin wrapper around `flask-restplus\n<https://pypi.org/project/flask-restplus/>`_ and provides:\n\n* Documentation using OpenAPI.\n* Info and health resources.\n* JWT-based authentication.\n* Configuration injection using `miniscule\n  <https://pypi.org/project/miniscule/>`_.\n\nExample\n-------\n\nAdd a configuration file :code:`config.yaml` in the root of the project, with the\nfollowing contents:\n\n.. code-block:: yaml\n\n  environment: production\n  debug: False\n  authentication:\n    enabled: True\n    secret: secret\n\nTo create a Flask application and run it on :code:`localhost:5000`:\n\n.. code-block:: python\n\n  from apian import read_config, create_api, create_app, authenticated\n  from flask_restplus import Namespace, Resource\n\n  ns = Namespace(\"user\")\n\n  @ns.route(\"\")\n  class UserItem(Resource):\n\n      @authenticated\n      def get(self, user_id):\n          return user_id\n\n  config = read_config()\n  api = create_app(\"my-app\", config)\n  api.add_namespace(ns)\n  app = create_app(api, config)\n  app.run()\n\nThe application has endpoints at the paths:\n\n* :code:`GET /my-app/api/info` - Return information about the service.\n* :code:`GET /my-app/api/health` - Return the health status of the service.\n* :code:`GET /my-app/api/user` - Return the user ID set in the Bearer token.\n\nTo access the user resource, ensure that the `requests\n<https://pypi.org/project/requests/>`_ package is installed and execute the\nfollowing snippet:\n\n.. code-block:: python\n\n  import jwt\n  import requests\n\n  def auth_token():\n    user_id = 10\n    claims = {\"iat\": dt.datetime.utcnow(), \"sub\": user_id}\n    key = \"secret\"\n    return jwt.encode(claims, key, \"HS256\")\n\n  headers = {\"Authorization\": \"Bearer {}\".format(\n  requests.get(\"http://localhost:5000/my-app/api/user\", headers=headers)", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/greenhousegroup/ai/libraries/apish/", "keywords": "rest http web", "license": "", "maintainer": "", "maintainer_email": "", "name": "apish", "package_url": "https://pypi.org/project/apish/", "platform": "", "project_url": "https://pypi.org/project/apish/", "project_urls": {"Homepage": "https://gitlab.com/greenhousegroup/ai/libraries/apish/"}, "release_url": "https://pypi.org/project/apish/0.0.3/", "requires_dist": null, "requires_python": "", "summary": " Small, opinionated library for building async REST APIs.", "version": "0.0.3"}, "last_serial": 6957351, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "e0a232ed7b1244102534ec66c0ba96f4", "sha256": "604402727bbe145dd4e7e0409cc31becaa74ba7d26d7507c381cde8cdf8440d2"}, "downloads": -1, "filename": "apish-0.0.1.tar.gz", "has_sig": false, "md5_digest": "e0a232ed7b1244102534ec66c0ba96f4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5817, "upload_time": "2020-04-03T14:53:44", "upload_time_iso_8601": "2020-04-03T14:53:44.458941Z", "url": "https://files.pythonhosted.org/packages/24/5e/b44ea8f48ebd09cf356dbb99c7f198ffb43014620be0b3e435bbc247d963/apish-0.0.1.tar.gz"}], "0.0.2": [{"comment_text": "", "digests": {"md5": "284c05192395696cc1cb136a1aff7f99", "sha256": "28cedfd4113624d9290115824296f0964ffcbc14b7bccf9a867887acebd396b8"}, "downloads": -1, "filename": "apish-0.0.2.tar.gz", "has_sig": false, "md5_digest": "284c05192395696cc1cb136a1aff7f99", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4894, "upload_time": "2020-04-04T09:49:19", "upload_time_iso_8601": "2020-04-04T09:49:19.985709Z", "url": "https://files.pythonhosted.org/packages/bf/db/b606886e7a1f8854c47f2fa1e0e89b99da2f800b03ccc42fa09919dea311/apish-0.0.2.tar.gz"}], "0.0.3": [{"comment_text": "", "digests": {"md5": "19dea4a90f23a2c6e86af16ffaccb80b", "sha256": "78ec3f2dc177c7cd9336616489e945c34a1a1b1e940db2ec8ad9d23863336c87"}, "downloads": -1, "filename": "apish-0.0.3.tar.gz", "has_sig": false, "md5_digest": "19dea4a90f23a2c6e86af16ffaccb80b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2451755, "upload_time": "2020-04-05T19:25:51", "upload_time_iso_8601": "2020-04-05T19:25:51.542309Z", "url": "https://files.pythonhosted.org/packages/6d/bd/5597e8ef6514caa505cb20526e22971f46703686a45e5542213660411cf4/apish-0.0.3.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "19dea4a90f23a2c6e86af16ffaccb80b", "sha256": "78ec3f2dc177c7cd9336616489e945c34a1a1b1e940db2ec8ad9d23863336c87"}, "downloads": -1, "filename": "apish-0.0.3.tar.gz", "has_sig": false, "md5_digest": "19dea4a90f23a2c6e86af16ffaccb80b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2451755, "upload_time": "2020-04-05T19:25:51", "upload_time_iso_8601": "2020-04-05T19:25:51.542309Z", "url": "https://files.pythonhosted.org/packages/6d/bd/5597e8ef6514caa505cb20526e22971f46703686a45e5542213660411cf4/apish-0.0.3.tar.gz"}]}