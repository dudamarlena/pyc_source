{"info": {"author": "Matthew Laue", "author_email": "matt@zuar.com", "bugtrack_url": null, "classifiers": [], "description": "# APIToolbox\nFull-stack, asynchronous Python3 framework.\n\n## Design goals\n* Fast, full-service framework\n* Modular approach that does not force any design decisions\n\n## Getting started\n\n```python\nfrom fastapi import FastAPI, Request\n\nfrom apitoolbox import crud, db_registry\nfrom apitoolbox.middleware import SessionMiddleware\nfrom apitoolbox.models import BASE, Session, User\n\nDATABASE_URL = \"sqlite:///sqlite.db?check_same_thread=False\"\n\n\n# Define our model\nclass MyUser(User):\n    pass\n\n\n# Instantiate the application\napp = FastAPI()\napp.add_middleware(SessionMiddleware, bind=DATABASE_URL)\n\n# Create all tables\nbind = db_registry.get_or_create(DATABASE_URL)\nBASE.metadata.create_all(bind=bind)\n\n# Load some data\nsession = Session()\nfor name in [\"alice\", \"bob\", \"charlie\", \"david\"]:\n    user = MyUser.get_by_username(session, name)\n    if user is None:\n        user = MyUser(username=name)\n        session.add(user)\nsession.commit()\n\n# Add an endpoint\n@app.get(\"/users\")\nasync def list_users(\n        request: Request\n):\n    return await crud.list_instances(MyUser, request.state.session)\n```\n\nAssuming the above code is stored in the file `main.py`, then run it via:\n```bash\nuvicorn main:app --reload\n```\n\nCall the endpoint:\n```bash\ncurl -s localhost:8000/users | jq .\n```\n\nThe output should contain a list of 4 users,\neach with the attributes `id`, `username`, `updated_at` and `created_at`.\n \n<aside class=\"warning\">\nNOTE: Sqlite3 really doesn't like multiple threads using the same connection (hence <i>check_same_thread=False</i>).\nIn this case, it's safe but in production a different database should be used.\n</aside>", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/zuarbase/apitoolbox/archive/v0.9.1.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/zuarbase/apitoolbox", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "apitoolbox", "package_url": "https://pypi.org/project/apitoolbox/", "platform": "", "project_url": "https://pypi.org/project/apitoolbox/", "project_urls": {"Download": "https://github.com/zuarbase/apitoolbox/archive/v0.9.1.tar.gz", "Homepage": "https://github.com/zuarbase/apitoolbox"}, "release_url": "https://pypi.org/project/apitoolbox/0.9.1/", "requires_dist": null, "requires_python": "", "summary": "Full-stack async framework for Python.", "version": "0.9.1"}, "last_serial": 6903632, "releases": {"0.9.1": [{"comment_text": "", "digests": {"md5": "fdee1f2ef112d63ef80330f0fb23d663", "sha256": "55fd5a5a435b38202069a7cbc973709e043d4df2c9e0cf70aff2ec2454663c6c"}, "downloads": -1, "filename": "apitoolbox-0.9.1.tar.gz", "has_sig": false, "md5_digest": "fdee1f2ef112d63ef80330f0fb23d663", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22344, "upload_time": "2020-03-28T20:57:42", "upload_time_iso_8601": "2020-03-28T20:57:42.309948Z", "url": "https://files.pythonhosted.org/packages/34/d7/88a9fee10c7641eb6e71e6d698e628663ec8a8091006d056b499887bfa2f/apitoolbox-0.9.1.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "fdee1f2ef112d63ef80330f0fb23d663", "sha256": "55fd5a5a435b38202069a7cbc973709e043d4df2c9e0cf70aff2ec2454663c6c"}, "downloads": -1, "filename": "apitoolbox-0.9.1.tar.gz", "has_sig": false, "md5_digest": "fdee1f2ef112d63ef80330f0fb23d663", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22344, "upload_time": "2020-03-28T20:57:42", "upload_time_iso_8601": "2020-03-28T20:57:42.309948Z", "url": "https://files.pythonhosted.org/packages/34/d7/88a9fee10c7641eb6e71e6d698e628663ec8a8091006d056b499887bfa2f/apitoolbox-0.9.1.tar.gz"}]}