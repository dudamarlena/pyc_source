{"info": {"author": "Alexandre Borges", "author_email": "ab@blackstormsecurity.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Malwoverview.py\n\n      Copyright (C)  2018-2020 Alexandre Borges <alexandreborges at blackstormsecurity dot com>\n\n      This program is free software: you can redistribute it and/or modify\n      it under the terms of the GNU General Public License as published by\n      the Free Software Foundation, either version 3 of the License, or\n      (at your option) any later version.\n\n      This program is distributed in the hope that it will be useful,\n      but WITHOUT ANY WARRANTY; without even the implied warranty of\n      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n      GNU General Public License for more details.\n\n      See GNU Public License on <http://www.gnu.org/licenses/>.\n\n\n# Current Version: 2.1.9.1\n\n## Important note:  Malwoverview does NOT submit samples to Virus Total or Hybrid Analysis by default. It submits only hashes, so respecting Non-Disclosure Agreements (NDAs). Nonetheless, if you use the \"-V\" (uppercase), \"-A\" (uppercase) or \"-P\" (uppercase), so Malwoverview SUBMITS your malware sample to Virus Total, Hybrid Analysis and Polyswarm, respectively. \n\n\n# ABOUT\n\nMalwoverview.py is a simple tool to perform an initial and quick triage of malware samples, URLs and hashes. \nAdditionally, Malwoverview is able to show some threat intelligence information.   \n\nThis tool aims to : \n\n1. Determine similar executable malware samples (PE/PE+) according to the import table (imphash) and group \n   them by different colors (pay attention to the second column from output). Thus, colors matter!\n2. Show hash information on Virus Total, Hybrid Analysis, Malshare, Polyswarm and URLhaus engines. \n3. Determining whether the malware samples contain overlay and, if you want, extract it. \n4. Check suspect files on Virus Total, Hybrid Analysis and Polyswarm.\n5. Check URLs on Virus Total, Malshare, Polyswarm and URLhaus engines. \n6. Download malware samples from Hybrid Analysis, Malshare and HausURL engines.\n7. Submit malware samples to VirusTotal, Hybrid Analysis and Polyswarm.\n8. List last suspected URLs from Malshare and URLHaus.\n9. List last payloads from URLHaus. \n10. Search for specific payloads on the Malshare.\n11. Search for similar payloads (PE32/PE32+) on Polyswarm engine.\n12. Classify all files in a directory searching information on Virus Total and Hybrid Analysis. \n13. Make reports about a suspect domain. \n\n# REQUERIMENTS\n\nThis tool has been tested on Ubuntu, Kali Linux 2020, Windows 8.1 and 10. Malwoverview can be installed by executing the following command:\n\n       $ pip3.7 install malwoverview              (Linux)\n       $ python -m pip install malwoverviewwin    (Windows)\n\nIn Linux systems, add the /usr/local/bin to the PATH environment variable.\n\nAdditionally, insert your APIs in the malwconf.py file in /usr/local/lib/python3.x/dist-packages/malwoverview/conf directory (Linux) or C:\\Python37\\Lib\\site-packages\\malwoverviewwin\\conf directory (Windows).\n\nIn Windows systems, when the package is installed using pip, it is not necessary to specify \"-w 1\" anymore.\n\nTo check the installation, execute:\n\n       (Linux) malwoverview --help\n       (Windows) malwoverview.py --help\n\nIf you are installing the Malwoverview into a Python virtual environment, so you should follow the step-by-step procedure below:\n\n       $ mkdir mytest\n       $ python3.7 -m venv mytest/\n       $ source mytest/bin/activate\n       $ cd mytest/\n       $ pip3.7 -q install malwoverview\n       $ cd bin\n       $ pip3.7 show malwoverview\n       $ ls ../lib/python3.7/site-packages/malwoverview/conf/\n       $ cp /malwoverview/configmalw.py ../lib/python3.7/site-packages/malwoverview/conf/\n       $ malwoverview\n\nIf you want to perform the manual steps, so few steps will be necessary:\n\n## Kali Linux\n\n1. Python version 3.7 or later (Only Python 3.x !!! It does NOT work using Python 2.7) \n\n       $ apt-get install python3.7  (for example)\n\n2. Python-magic.  \n\n      To install python-magic package you can execute the following command:\n\n       $ pip3.7 install python-magic\n\n      Or compiling it from the github repository:\n\n       $ git clone https://github.com/ahupp/python-magic\n       $ cd python-magic/\n       $ python3.7 setup.py build\n       $ python3.7 setup.py install\n\n      As there are serious problems about existing two versions of python-magic package, my recommendation is to install it\n      from github (second procedure above) and copy the magic.py file to the SAME directory of malwoverview tool. \n\n3. Install several Python packages: \n\n       $ pip3.7 install -r requirements.txt\n\n       OR\n\n       $ pip3.7 install pefile\n       $ pip3.7 install colorama\n       $ pip3.7 install simplejson\n       $ pip3.7 install python-magic\n       $ pip3.7 install requests\n       $ pip3.7 install validators\n       $ pip3.7 install geocoder\n       $ pip3.7 install polyswarm-api\n\n\n## Windows\n\n1. Install the Python version 3.7.x or later from https://www.python.org/downloads/windows/ \n\n2. Python-magic.  \n\n      To install python-magic package you can execute the following command:\n\n       C:\\> pip3.7 install python-magic\n\n      Or compiling it from the github repository:\n\n       C:\\> git clone https://github.com/ahupp/python-magic\n       C:\\> cd python-magic/\n       C:\\> python3.7 setup.py build\n       C:\\> python3.7 setup.py install\n\n3. Install several Python packages: \n\n       C:\\> pip3.7 install -r requirements.txt\n\n       OR: \n\n       C:\\> pip3.7 install pefile\n       C:\\> pip3.7 install colorama\n       C:\\> pip3.7 install simplejson\n       C:\\> pip3.7 install python-magic\n       C:\\> pip3.7 install requests\n       C:\\> pip3.7 install validators\n       C:\\> pip3.7 install geocoder\n       C:\\> pip3.7 install polyswarm-api\n       C:\\> pip3.7 install python-magic-bin==0.4.14\n\n4. (IMPORTANT) Remove the magic.py file from malwoverview directory.\n\n5. (VERY IMPORTANT) Install the python-magic DLLs by executing the following command:\n\n       C:\\> pip3.7 install python-magic-bin==0.4.14 \n\n\n## Virus Total, Hybrid-Analysis, Malshare, URLHaus and Polyswarm engines\n\nYou must edit the configmalw.py file (Linux: /usr/local/lib/python3.x/dist-packages/malwoverview/conf directory ; Windows: C:\\<Python installation directory>\\Lib\\malwoverview directory) and insert your APIs to enable all engines. Pay attention: the APIs are not registered within malwoverview.py anymore!\n\n      VT: \n\n            VTAPI = '<----ENTER YOUR API HERE---->'\n\n      Hybrid-Analysis: \n\n            HAAPI = '<----ENTER YOUR API HERE---->'    \n\n      Malshare: \n\n            MALSHAREAPI = '<----ENTER YOUR API HERE---->'\n\n      HAUSUrl:\n\n            HAUSSUBMITAPI = '<----ENTER YOUR API HERE---->'\n\n      Polyswarm.IO:\n\n            POLYAPI = '<----ENTER YOUR API HERE---->'\n\n\n\n# USAGE\n\nTo use the malwoverview, execute the command as shown below:\n\n      root@ubuntu19:~/malwoverview# python3.7 malwoverview.py  | more\n\n      usage: python malwoverview.py -d <directory> -f <fullpath> -i <0|1> -b <0|1> -v <0|1> -a <0|1> \n      -p <0|1> -s <0|1> -x <0|1> -w <|1> -u <url> -H <hash file> -V <filename> -D <0|1> -e<0|1|2|3|4> \n      -A <filename> -g <job_id> -r <domain> -t <0|1> -Q <0|1> -l <0|1> -n <1|2|3|4|5|6> -m <hash> -M <0|1> \n      -U <url> -S <url> -z <tags> -B <0|1> -K <0|1> -j <hash> -J <hash> -P <filename> \n      -N <url> -R <executable_file>\n\nOptions:\n\n      Malwoverview is a malware triage tool written by Alexandre Borges.\n\n      optional arguments:\n\n        -h, --help            show this help message and exit\n        -d DIRECTORY, --directory DIRECTORY\n                              specify directory containing malware samples.\n        -f FILENAME, --filename FILENAME\n                              Specifies a full path to a file. Shows general\n                              information about the file (any filetype)\n        -b BACKGROUND, --background BACKGROUND\n                              (optional) Adapts the output colors to a white\n                              terminal. The default is black terminal\n        -i IAT_EAT, --iat_eat IAT_EAT\n                              (optional) Shows imports and exports (it is used with\n                              -f option).\n        -x OVERLAY, --overlay OVERLAY\n                              (optional) Extracts overlay (it is used with -f\n                              option).\n        -s SHOW_VT_REPORT, --vtreport SHOW_VT_REPORT\n                              Shows antivirus reports from the main players. This\n                              option is used with the -f option (any filetype).\n        -v VIRUSTOTAL, --virustotal VIRUSTOTAL\n                              Queries the Virus Total database for positives and\n                              totals.Thus, you need to edit the configmalw.py and\n                              insert your VT API.\n        -a HYBRID_ANALYSIS, --hybrid HYBRID_ANALYSIS\n                              Queries the Hybrid Analysis database for general\n                              report. Use the -e option to specify which environment\n                              are looking for the associate report because the\n                              sample can have been submitted to a different\n                              environment that you are looking for. Thus, you need\n                              to edit the configmalw.py and insert your HA API and\n                              secret.\n        -p USE_VT_PUB_KEY, --vtpub USE_VT_PUB_KEY\n                              (optional) You should use this option if you have a\n                              public Virus Total API. It forces a one minute wait\n                              every 4 malware samples, but allows obtaining a\n                              complete evaluation of the malware repository.\n        -w RUN_ON_WINDOWS, --windows RUN_ON_WINDOWS\n                              This option is used when the OS is Microsoft Windows.\n        -u URL_VT, --vturl URL_VT\n                              SUBMITS a URL for the Virus Total scanning.\n        -r URL_DOMAIN, --urldomain URL_DOMAIN\n                              GETS a domain's report from Virus Total.\n        -H FILE_HASH, --hash FILE_HASH\n                              Specifies the hash to be checked on Virus Total and\n                              Hybrid Analysis. For the Hybrid Analysis report you\n                              must use it together -e option.\n        -V FILENAME_VT, --vtsubmit FILENAME_VT\n                              SUBMITS a FILE(up to 32MB) to Virus Total scanning and\n                              read the report. Attention: use forward slash to\n                              specify the target file even on Windows systems.\n                              Furthermore, the minimum waiting time is set up in 90\n                              seconds because the Virus Total queue. If an error\n                              occurs, so wait few minutes and try to access the\n                              report by using -f option.\n        -A SUBMIT_HA, --submitha SUBMIT_HA\n                              SUBMITS a FILE(up to 32MB) to be scanned by Hybrid\n                              Analysis engine. Use the -e option to specify the best\n                              environment to run the suspicious file.\n        -g HA_STATUS, --hastatus HA_STATUS\n                              Checks the report's status of submitted samples to\n                              Hybrid Analysis engine by providing the job ID.\n                              Possible returned status values are: IN_QUEUE,\n                              SUCCESS, ERROR, IN_PROGRESS and PARTIAL_SUCCESS.\n        -D DOWNLOAD, --download DOWNLOAD\n                              Downloads the sample from Hybrid Analysis. Option -H\n                              must be specified.\n        -e HA_ENVIRONMENT, --haenv HA_ENVIRONMENT\n                              This option specifies the used environment to be used\n                              to test the samlple on Hybrid Analysis: <0> Windows 7\n                              32-bits; <1> Windows 7 32-bits (with HWP Support); <2>\n                              Windows 7 64-bits; <3> Android; <4> Linux 64-bits\n                              environment. This option is used together either -H\n                              option or the -A option or -a option.\n        -t MULTITHREAD, --thread MULTITHREAD\n                              (optional) This option is used to force multithreads\n                              on Linux whether: the -d option is specifed AND you\n                              have a PAID Virus Total API or you are NOT checking\n                              the VT while using the -d option. PS1: using this\n                              option causes the Imphashes not to be grouped anymore;\n                              PS2: it also works on Windows, but there is not gain\n                              in performance.\n        -Q QUICK_CHECK, --quick QUICK_CHECK\n                              This option should be used with -d option in two\n                              scenarios: 1) either including the -v option (Virus\n                              Total -- you'll see a complete VT response whether you\n                              have the private API) for a multithread search and\n                              reduced output; 2) or including the -a option (Hybrid\n                              Analysis) for a multithread search and complete and\n                              amazing output. If you are using the -a option, so -e\n                              option can also be used to adjust the output to your\n                              sample types. PS1: certainly, if you have a directory\n                              holding many malware samples, so you will want to test\n                              this option with -a option; PS2: it also works on\n                              Windows, but there is not gain in performance.\n        -l MALSHARE_HASHES, --malsharelist MALSHARE_HASHES\n                              Show hashes from last 24 hours from Malshare. You need\n                              to insert your Malshare API into the configmalw.py\n                              file.\n        -m MALSHARE_HASH_SEARCH, --malsharehash MALSHARE_HASH_SEARCH\n                              Searches for the provided hash on the Malshare\n                              repository. You need to insert your Malshare API into\n                              the configmalw.py file. PS: sometimes the Malshare\n                              website is unavailable, so should check the website\n                              availability if you get some error message.\n        -n FILE_TYPE, --filetype FILE_TYPE\n                              Specifies the file type to be listed by -l option.\n                              Therefore, it must be used together -l option.\n                              Possible values: 1: PE32 (default) ; 2: Dalvik ; 3:\n                              ELF ; 4: HTML ; 5: ASCII ; 6: PHP.\n        -M MALSHARE_DOWNLOAD, --malsharedownload MALSHARE_DOWNLOAD\n                              Downloads the sample from Malshare. This option must\n                              be specified with -m option.\n        -B URL_HAUS_BATCH, --haus_batch URL_HAUS_BATCH\n                              Retrieves a list of recent URLs (last 3 days, limited\n                              to 1000 entries) from URLHaus website.\n        -K HAUS_PAYLOADS, --haus_payloadbatch HAUS_PAYLOADS\n                              Retrieves a list of downloadable links to recent\n                              PAYLOADS (last 3 days, limited to 1000 entries) from\n                              URLHaus website. Take care: each link take you to\n                              download a passworless zip file containing a malware,\n                              so your AV can generate alerts!\n        -U URL_HAUS_QUERY, --haus_query URL_HAUS_QUERY\n                              Queries a URL on the URLHaus website.\n        -j HAUS_HASH, --haus_hash HAUS_HASH\n                              Queries a payload's hash (md5 or sha256) on the\n                              URLHaus website.\n        -S URL_HAUS_SUB, --haus_submission URL_HAUS_SUB\n                              Submits a URL used to distribute malware (executable,\n                              script, document) to the URLHaus website. Pay\n                              attention: Any other submission will be\n                              ignored/deleted from URLhaus. You have to register\n                              your URLHaus API into the configmalw.py file.\n        -z [HAUSTAG [HAUSTAG ...]], --haustag [HAUSTAG [HAUSTAG ...]]\n                              Associates tags (separated by spaces) to the specified\n                              URL. Please, only upper case, lower case, '-' and '.'\n                              are allowed. This is an optional option, which should\n                              be used with the -S option.\n        -J HAUS_DOWNLOAD, --haus_download HAUS_DOWNLOAD\n                              Downloads a sample (if it is available) from the\n                              URLHaus repository. It is necessary to provide the\n                              SHA256 hash.\n        -P POLYSWARMFILE, --polyswarm_scan POLYSWARMFILE\n                              Performs a file scan using the Polyswarm engine.\n        -N POLYSWARMURL, --polyswarm_url POLYSWARMURL\n                              Performs a URL scan using the Polyswarm engine.\n        -O POLYSWARMHASH, --polyswarm_hash POLYSWARMHASH\n                              Performs a hash scan using the Polyswarm engine.\n        -R POLYSWARMMETA, --polyswarm_meta POLYSWARMMETA\n                              Performs a complementary search for similar PE\n                              executables through meta-information using the\n                              Polyswarm engine.\n\n\n        If you use Virus Total, Hybrid Analysis, Malshare, URLHaus or Polyswarm options, so it is necessary \n        to edit the configmalw.py file and insert your APIs. \n\n        Remember that public VT API only allows 4 searches per second (as shown at the image above). Therefore, \n        if you are willing to wait some minutes, so you can use the -p option, which forces a one minute wait \n        every 4 malware samples, but allows obtaining a complete evaluation of the repository.\n\n\n        * ATTENTION 1: if the directory contains many malware samples while using -d option, so malwoverview.py \n                       could take some time. Nonetheless, you can use the new -t option (multithreading) to \n                       speed-up things. :)\n\n        ** ATTENTION 2: All engines enforces quota of submission and/or verification per day and/or month. \n                        Take care!\n\n        *** ATTENTION 3: Some options searching on Hybrid Analysis strongly depend of the \"-e\" option, which \n                         specifies the environment. Therefore, to check an Android sample (for example) it is \n                         necessary to use the right environment (-e 3 for Android).\n\n        **** ATTENTION 4: When you execute Malwoverview on Windows systems, you MUST to specify the \"-w 1\" option. \n\n\n## Examples:\n\n      root@ubuntu19:~/malwoverview# python3.7 malwoverview.py -d /root/malware/misc/\n      root@ubuntu19:~/malwoverview# python3.7 malwoverview.py -d /root/malware/misc/ -t 1\n      root@ubuntu19:~/malwoverview# python3.7 malwoverview.py -d /root/malware/misc/ -t 1 -v 1\n      root@ubuntu19:~/malwoverview# python3.7 malwoverview.py -d /root/malware/misc/ -v 1 -p 1\n      root@ubuntu19:~/malwoverview# python3.7 malwoverview.py -d /root/malware/misc/ -Q 1 -v 1\n      root@ubuntu19:~/malwoverview# python3.7 malwoverview.py -d /root/malware/misc/ -Q 1 -a 1\n      root@ubuntu19:~/malwoverview# python3.7 malwoverview.py -d /root/malware/android/ -Q 1 -a 1 -e 3\n      root@ubuntu19:~/malwoverview# python3.7 malwoverview.py -d /root/malware/linux/ -Q 1 -a 1 -e 4\n      root@ubuntu19:~/malwoverview# python3.7 malwoverview.py -f /root/malware/misc/sample1 -v 1 -s 1\n      root@ubuntu19:~/malwoverview# python3.7 malwoverview.py -f /root/malware/misc/sample1 -i 1\n      root@ubuntu19:~/malwoverview# python3.7 malwoverview.py -f /root/malware/misc/sample1 -v 1 -s 1 -x 1\n      root@ubuntu19:~/malwoverview# python3.7 malwoverview.py -u <url>\n      root@ubuntu19:~/malwoverview# python3.7 malwoverview.py -r <domain>\n      root@ubuntu19:~/malwoverview# python3.7 malwoverview.py -H <hash> -e 2\n      root@ubuntu19:~/malwoverview# python3.7 malwoverview.py -H <hash> -e 1\n      root@ubuntu19:~/malwoverview# python3.7 malwoverview.py -V /root/malware/android/sample.apk\n      root@ubuntu19:~/malwoverview# python3.7 malwoverview.py -A /root/malware/windows/sample1\n      root@ubuntu19:~/malwoverview# python3.7 malwoverview.py -A /root/malware/android/sample.apk -e 3\n      root@ubuntu19:~/malwoverview# python3.7 malwoverview.py -g <job_id>\n      root@ubuntu19:~/malwoverview# python3.7 malwoverview.py -l 1\n      root@ubuntu19:~/malwoverview# python3.7 malwoverview.py -l 1 -n 2\n      root@ubuntu19:~/malwoverview# python3.7 malwoverview.py -l 1 -n 3\n      root@ubuntu19:~/malwoverview# python3.7 malwoverview.py -m <hash>\n      root@ubuntu19:~/malwoverview# python3.7 malwoverview.py -m <hash> -M 1\n      root@ubuntu19:~/malwoverview# python3.7 malwoverview.py -B 1\n      root@ubuntu19:~/malwoverview# python3.7 malwoverview.py -U <URL>\n      root@ubuntu19:~/malwoverview# python3.7 malwoverview.py -K 1\n      root@ubuntu19:~/malwoverview# python3.7 malwoverview.py -j <hash>\n      root@ubuntu19:~/malwoverview# python3.7 malwoverview.py -J <hash>\n      root@ubuntu19:~/malwoverview# python3.7 malwoverview.py -S <URL> -z SpelevoEK exe psixbot\n      root@ubuntu19:~/malwoverview# python3.7 malwoverview.py -O <hash>\n      root@ubuntu19:~/malwoverview# python3.7 malwoverview.py -N <URL>\n      root@ubuntu19:~/malwoverview# python3.7 malwoverview.py -P sample1\n      root@ubuntu19:~/malwoverview# python3.7 malwoverview.py -R /root/malware/windows/sample1\n\n\n\n# HISTORY\n\nVersion 2.1.9.1:\n\n      This version:\n\n            * Fixes several issues about colors in outputs.\n            * Removes the -L option from Malshare (unfortunately, Malshare doesn't provide an\n              URL list anymore..\n            * Removes the -c option.\n            * Introduces some verification lines in the URLHaus command.\n\nVersion 2.1:\n\n      This version:\n\n            * Fixes formatting issues related to Hybrid Analysis output (-Q 1 -a 1). \n            * Fixes color issues. \n            * Fixes small issues related to Polyswarm. \n\nVersion 2.0.8.1:\n\n      This version:\n\n            * Introduces installation using: pip3.7 install malwoverview (Linux) or \n              python -m pip install malwoverviewwin (Windows).\n            * Fixes small problems related to Polyswarm usage.\n            * Changes the help to verify whether the APIs were inserted into configmalw.py file.\n\nVersion 2.0.1:\n\n      This version:\n\n            * Fixes a problem related to searching by hash on Malshare (-m option). \n            * Fixes a problem related to searching by hash on Polyswarm (-O option). \n\nVersion 2.0.0:\n\n      This version:\n\n            * Introduces a completely ported version of Malwoverview to Python 3.x (it does not work in \n              Python 2.7.x anymore!)\n            * Fixes several bugs related to IAT/EAT listing. \n            * Fixes several bugs related to colors. \n            * Introduces multi-threading to some options. \n            * Introduces several options related to Malshare. \n            * Introduces several options related to URLHaus.\n            * Introduces several options related to Polyswarm engine. \n            * Changes the place of the API key configuration. Now you should edit the configmalw.py file. \n            * Changes the help libraries and functions, so making the Malwoverview's help more complete. \n            * Introduces geolocation feature by using the package named Geocoder written by Dennis Carrierre.\n            * Fixes problems related to Hybrid Analysis engine. \n            * Fixes several mistaked related to a mix between spaces and Tab.\n            * Extends the -d option to include Hybrid Analysis. \n\nVersion 1.7.5:\n\n      This version: \n\n            * It has been fixed a problem related to sample submission to Hybrid Analysis on Windows operating \n              system. Additionally, file name handling has been also fixed. \n\nVersion 1.7.3:\n\n      This version: \n\n            * Malwoverview has been adapted to API version 2.6.0 of Hybrid Analysis.\n            * -A option has been fixed according to new version (2.6.0) of Hybrid Analysis.\n            * -a option has been modified to work together with  -e option.\n            * help information has been modified. \n\nVersion 1.7.2:\n\n      This version: \n\n            * A small fix related to -g option has been included. \n\nVersion 1.7.1:\n\n      This version: \n\n            * Relevant fix of a problem related to options -A and -H options.\n            * Includes a new Hybrid Analysis environment to the -e option (Windows 7 32-bits with HWP support).\n            * Updates the Malwoverview to support Hybrid Analysis API version 2.5.0.\n\nVersion 1.7.0:\n\n      This version: \n\n            * Includes -A option for submitting a sample to Hybrid Analysis.\n            * Includes -g option for checking the status a submission of a sample to Hybrid Analysis.\n            * Includes -e option for specifying the testing environment on the Hybrid Analysis.\n            * Includes -r option for getting a complete domain report from Virus Total.\n            * Modifies the -H options for working together the -e option.\n            * Modifies several functions of the tool to prepare it for version 1.8.0\n\nVersion 1.6.3:\n\n      This version: \n\n            * Includes creation of new functions aiming 1.7.0 version.\n            * Includes new exception handling blocks.\n\nVersion 1.6.2:\n\n      This version: \n\n            * Includes small fixes.\n            * For the Hybrid Analysis API version 2.40 is not longer necessary to include the API Secret.  \n\nVersion 1.6.1:\n\n      This version: \n\n            * Includes small format fixes.\n\nVersion 1.6.0:\n\n      This version: \n\n            * It is using the Hybrid Analysis API version 2.4.0.\n            * Includes certificate information in the Hybrid Analysis report. \n            * Includes MITRE information in the Hybrid Analysis report. \n            * Includes an option to download samples from Hybrid Analysis. \n\nVersion 1.5.1:\n\n      This version: \n\n            * Small change to fix format issue in -d option. \n\nVersion 1.5.0:\n\n      This version: \n\n            * Includes the -u option to check URLs against Virus Total and associated engines. \n            * Includes the -H option to find existing reports on Virus Total and Hybrid Analysis through the hash.\n            * Includes the -V option to submit a file to Virus Total. Additionally, the report is shown afer few \n              minutes.\n            * Includes two small fixes. \n\nVersion 1.4.5.2:\n\n      This version:\n\n            * Includes two small fixes.\n\nVersion 1.4.5.1:\n\n      This version:\n\n            * Includes one small fix. \n\nVersion 1.4.5:\n\n      This version:\n\n            * Adds the -w option to use malwoverview in Windows systems.\n            * Improves and fixes colors when using -b option with black window.  \n\nVersion 1.4: \n\n      This version:\n\n            * Adds the -a option for getting the Hybrid Analysis summary report.\n            * Adds the -i option for listing imported and exported functions. Therefore, imported/exported\n              function report was decoupled for a separated option.  \n\nVersion 1.3: \n\n      This version:\n\n            * Adds the -p option for public Virus Total API.\n\nVersion 1.2: \n\n      This version includes:\n\n            * evaluates a single file (any filetype)\n            * shows PE sessions.\n            * shows imported functions.\n            * shows exported function.\n            * extracts overlay.\n            * shows AV report from the main players. (any filetype)\n\nVersion 1.1: \n\n      This version:\n\n            * Adds the VT checking feature.\n\n\nVersion 1.0:\n\n      Malwoverview is a tool to perform a first triage of malware samples in a directory and group them \n      according to their import functions (imphash) using colors. This version:\n\n            * Shows the imphash information classified by color. \n            * Checks whether malware samples are packed.  \n            * Checks whether malware samples have overlay. \n            * Shows the entropy of the malware samples. \n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/alexandreborges/malwoverview", "keywords": "", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "malwoverview", "package_url": "https://pypi.org/project/malwoverview/", "platform": "", "project_url": "https://pypi.org/project/malwoverview/", "project_urls": {"Homepage": "https://github.com/alexandreborges/malwoverview"}, "release_url": "https://pypi.org/project/malwoverview/2.1.9.1/", "requires_dist": ["pefile (>=2019.4.18)", "python-magic (>=0.4.15)", "colorama (>=0.4.3)", "simplejson (>=3.17.0)", "requests (>=2.22.0)", "validators (>=0.14.1)", "geocoder (>=1.38.1)", "polyswarm-api (>=1.1.1)"], "requires_python": ">=3.7", "summary": "Malwoverview is a first response tool for profiling malware samples, URLs, submitting and downloading malware samples.", "version": "2.1.9.1"}, "last_serial": 6760045, "releases": {"2.1.9.1": [{"comment_text": "", "digests": {"md5": "febdb6f1e6a01478decad9826ff0f3a2", "sha256": "fb19c61a5654828384188abffacc548e6d33697b4a7cd2427049b47821891535"}, "downloads": -1, "filename": "malwoverview-2.1.9.1-py3-none-any.whl", "has_sig": false, "md5_digest": "febdb6f1e6a01478decad9826ff0f3a2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 39129, "upload_time": "2020-03-06T06:57:54", "upload_time_iso_8601": "2020-03-06T06:57:54.482791Z", "url": "https://files.pythonhosted.org/packages/dc/89/d63577fb5d71cc5ced1b2b06e99332a943891a0334993d0d40bf65ca09e6/malwoverview-2.1.9.1-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "54d3c4ff58f7da8953884818f25f12eb", "sha256": "a75fb7efc4c2c280fe4e0ff77af57761e1c5205b2b591de117fcf32ecdb50100"}, "downloads": -1, "filename": "malwoverview-2.1.9.1.tar.gz", "has_sig": false, "md5_digest": "54d3c4ff58f7da8953884818f25f12eb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 45812, "upload_time": "2020-03-06T06:57:56", "upload_time_iso_8601": "2020-03-06T06:57:56.269166Z", "url": "https://files.pythonhosted.org/packages/0e/21/fa5f0fc70bf0d7a73d373226886a3463f0b3077dbbf1c419d2c82782cf39/malwoverview-2.1.9.1.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "febdb6f1e6a01478decad9826ff0f3a2", "sha256": "fb19c61a5654828384188abffacc548e6d33697b4a7cd2427049b47821891535"}, "downloads": -1, "filename": "malwoverview-2.1.9.1-py3-none-any.whl", "has_sig": false, "md5_digest": "febdb6f1e6a01478decad9826ff0f3a2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 39129, "upload_time": "2020-03-06T06:57:54", "upload_time_iso_8601": "2020-03-06T06:57:54.482791Z", "url": "https://files.pythonhosted.org/packages/dc/89/d63577fb5d71cc5ced1b2b06e99332a943891a0334993d0d40bf65ca09e6/malwoverview-2.1.9.1-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "54d3c4ff58f7da8953884818f25f12eb", "sha256": "a75fb7efc4c2c280fe4e0ff77af57761e1c5205b2b591de117fcf32ecdb50100"}, "downloads": -1, "filename": "malwoverview-2.1.9.1.tar.gz", "has_sig": false, "md5_digest": "54d3c4ff58f7da8953884818f25f12eb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 45812, "upload_time": "2020-03-06T06:57:56", "upload_time_iso_8601": "2020-03-06T06:57:56.269166Z", "url": "https://files.pythonhosted.org/packages/0e/21/fa5f0fc70bf0d7a73d373226886a3463f0b3077dbbf1c419d2c82782cf39/malwoverview-2.1.9.1.tar.gz"}]}