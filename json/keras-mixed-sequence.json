{"info": {"author": "Luca Cappelletti", "author_email": "cappelletti.luca94@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3"], "description": "keras_mixed_sequence\n=========================================================================================\n|travis| |sonar_quality| |sonar_maintainability| |codacy|\n|code_climate_maintainability| |pip| |downloads|\n\nLazily loading mixed sequences using Keras Sequence,\nfocused on multi-task models.\n\nHow do I install this package?\n----------------------------------------------\nAs usual, just download it using pip:\n\n.. code:: shell\n\n    pip install keras_mixed_sequence\n\nTests Coverage\n----------------------------------------------\nSince some software handling coverages sometimes get\nslightly different results, here's three of them:\n\n|coveralls| |sonar_coverage| |code_climate_coverage|\n\nUsage examples\n----------------------------------------------\n\nExample for traditional single-task models\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nFirst of all let's create a simple single-task model:\n\n.. code:: python\n\n    from tensorflow.keras.layers import Dense\n    from tensorflow.keras.models import Sequential\n\n    model = Sequential([\n        Dense(1, activation=\"relu\")\n    ])\n    model.compile(\n        optimizer=\"nadam\",\n        loss=\"relu\"\n    )\n\nThen we proceed to load or otherwise create the training data.\nHere there will be listed, in the future, some custom\nSequence objects that have been created for the purpose\nof being used alongside this library.\n\n.. code:: python\n\n    X = either_a_numpy_array_or_sequence_for_input\n    y = either_a_numpy_array_or_sequence_for_output\n\nNow we combine the training data using the MixedSequence\nobject.\n\n.. code:: python\n\n    from keras_mixed_sequence import MixedSequence\n\n    sequence = MixedSequence(\n        X, y,\n        batch_size=batch_size\n    )\n\nFinally, we can train the model:\n\n.. code:: python\n\n    from multiprocessing import cpu_count\n\n    model.fit_generator(\n        sequence,\n        steps_per_epoch=sequence.steps_per_epoch,\n        epochs=2,\n        verbose=0,\n        use_multiprocessing=True,\n        workers=cpu_count(),\n        shuffle=True\n    )\n\n\nExample for multi-task models\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nFirst of all let's create a simple multi-taks model:\n\n.. code:: python\n\n    from tensorflow.keras.models import Model\n    from tensorflow.keras.layers import Dense, Input\n\n    inputs = Input(shape=(10,))\n\n    output1 = Dense(\n        units=10,\n        activation=\"relu\",\n        name=\"output1\"\n    )(inputs)\n    output2 = Dense(\n        units=10,\n        activation=\"relu\",\n        name=\"output2\"\n    )(inputs)\n\n    model = Model(\n        inputs=inputs,\n        outputs=[output1, output2],\n        name=\"my_model\"\n    )\n\n    model.compile(\n        optimizer=\"nadam\",\n        loss=\"MSE\"\n    )\n\nThen we proceed to load or otherwise create the training data.\nHere there will be listed, in the future, some custom\nSequence objects that have been created for the purpose\nof being used alongside this library.\n\n.. code:: python\n\n    X = either_a_numpy_array_or_sequence_for_input\n    y1 = either_a_numpy_array_or_sequence_for_output1\n    y2 = either_a_numpy_array_or_sequence_for_output2\n\nNow we combine the training data using the MixedSequence\nobject.\n\n.. code:: python\n\n    from keras_mixed_sequence import MixedSequence\n\n    sequence = MixedSequence(\n        x=X,\n        y={\n            \"output1\": y1,\n            \"output2\": y2\n        },\n        batch_size=batch_size\n    )\n\nFinally, we can train the model:\n\n.. code:: python\n\n    from multiprocessing import cpu_count\n\n    model.fit_generator(\n        sequence,\n        steps_per_epoch=sequence.steps_per_epoch,\n        epochs=2,\n        verbose=0,\n        use_multiprocessing=True,\n        workers=cpu_count(),\n        shuffle=True\n    )\n\n.. |travis| image:: https://travis-ci.org/LucaCappelletti94/keras_mixed_sequence.png\n   :target: https://travis-ci.org/LucaCappelletti94/keras_mixed_sequence\n   :alt: Travis CI build\n\n.. |sonar_quality| image:: https://sonarcloud.io/api/project_badges/measure?project=LucaCappelletti94_keras_mixed_sequence&metric=alert_status\n    :target: https://sonarcloud.io/dashboard/index/LucaCappelletti94_keras_mixed_sequence\n    :alt: SonarCloud Quality\n\n.. |sonar_maintainability| image:: https://sonarcloud.io/api/project_badges/measure?project=LucaCappelletti94_keras_mixed_sequence&metric=sqale_rating\n    :target: https://sonarcloud.io/dashboard/index/LucaCappelletti94_keras_mixed_sequence\n    :alt: SonarCloud Maintainability\n\n.. |sonar_coverage| image:: https://sonarcloud.io/api/project_badges/measure?project=LucaCappelletti94_keras_mixed_sequence&metric=coverage\n    :target: https://sonarcloud.io/dashboard/index/LucaCappelletti94_keras_mixed_sequence\n    :alt: SonarCloud Coverage\n\n.. |coveralls| image:: https://coveralls.io/repos/github/LucaCappelletti94/keras_mixed_sequence/badge.svg?branch=master\n    :target: https://coveralls.io/github/LucaCappelletti94/keras_mixed_sequence?branch=master\n    :alt: Coveralls Coverage\n\n.. |pip| image:: https://badge.fury.io/py/keras-mixed-sequence.svg\n    :target: https://badge.fury.io/py/keras-mixed-sequence\n    :alt: Pypi project\n\n.. |downloads| image:: https://pepy.tech/badge/keras-mixed-sequence\n    :target: https://pepy.tech/badge/keras-mixed-sequence\n    :alt: Pypi total project downloads\n\n.. |codacy| image:: https://api.codacy.com/project/badge/Grade/249884df3ba34204850ac2448a9b176d\n    :target: https://www.codacy.com/manual/LucaCappelletti94/keras_mixed_sequence?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=LucaCappelletti94/keras_mixed_sequence&amp;utm_campaign=Badge_Grade\n    :alt: Codacy Maintainability\n\n.. |code_climate_maintainability| image:: https://api.codeclimate.com/v1/badges/b5ec3fe894a0f561f7e1/maintainability\n    :target: https://codeclimate.com/github/LucaCappelletti94/keras_mixed_sequence/maintainability\n    :alt: Maintainability\n\n.. |code_climate_coverage| image:: https://api.codeclimate.com/v1/badges/b5ec3fe894a0f561f7e1/test_coverage\n    :target: https://codeclimate.com/github/LucaCappelletti94/keras_mixed_sequence/test_coverage\n    :alt: Code Climate Coverate", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/LucaCappelletti94/keras_mixed_sequence", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "keras-mixed-sequence", "package_url": "https://pypi.org/project/keras-mixed-sequence/", "platform": "", "project_url": "https://pypi.org/project/keras-mixed-sequence/", "project_urls": {"Homepage": "https://github.com/LucaCappelletti94/keras_mixed_sequence"}, "release_url": "https://pypi.org/project/keras-mixed-sequence/1.0.6/", "requires_dist": null, "requires_python": "", "summary": "Lazily loading mixed sequences using Keras Sequence, focused on multi-task models.", "version": "1.0.6"}, "last_serial": 6729675, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "c1191f58b70e1b82a760b8de7f499eb8", "sha256": "0e8d6c46a6c035bb368edc625ee0c4cf6630af9005a608bc31f2fb2359d32276"}, "downloads": -1, "filename": "keras_mixed_sequence-1.0.0.tar.gz", "has_sig": false, "md5_digest": "c1191f58b70e1b82a760b8de7f499eb8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5587, "upload_time": "2020-01-24T16:07:12", "upload_time_iso_8601": "2020-01-24T16:07:12.071503Z", "url": "https://files.pythonhosted.org/packages/98/02/8454c21d89e58e21f70d2a571b7d5a5312584ccbd4d2bef05b7a2a90ffa9/keras_mixed_sequence-1.0.0.tar.gz"}], "1.0.2": [{"comment_text": "", "digests": {"md5": "f21ea1f3432d2a546e12692dac88359e", "sha256": "22fe60b5c9ca1b12a72b97adac181667f5aaa28582da89747c71926591a42107"}, "downloads": -1, "filename": "keras_mixed_sequence-1.0.2.tar.gz", "has_sig": false, "md5_digest": "f21ea1f3432d2a546e12692dac88359e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5695, "upload_time": "2020-01-29T17:34:39", "upload_time_iso_8601": "2020-01-29T17:34:39.196350Z", "url": "https://files.pythonhosted.org/packages/30/8b/b0f9b637f4a04fd75845cf30a414478eb04cf1cb7ea01231d26408012b15/keras_mixed_sequence-1.0.2.tar.gz"}], "1.0.3": [{"comment_text": "", "digests": {"md5": "64b9b432b8db1491bd073490169d6246", "sha256": "0d2483cf04f40b5a03f253aec9bc009f0b49e91cd69ff7b020fc89c083e0963a"}, "downloads": -1, "filename": "keras_mixed_sequence-1.0.3.tar.gz", "has_sig": false, "md5_digest": "64b9b432b8db1491bd073490169d6246", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5678, "upload_time": "2020-01-30T22:03:00", "upload_time_iso_8601": "2020-01-30T22:03:00.553503Z", "url": "https://files.pythonhosted.org/packages/02/2d/6bc006eda76a937b16e80f3a2cac3e107e74deae9ce8b287046f91691271/keras_mixed_sequence-1.0.3.tar.gz"}], "1.0.4": [{"comment_text": "", "digests": {"md5": "558c92eb0f6e5810879aeba85ba1eb21", "sha256": "dbf14d1456441edfaf398a0e48c49bd8b2e375301d150de93e9aec5de5144441"}, "downloads": -1, "filename": "keras_mixed_sequence-1.0.4.tar.gz", "has_sig": false, "md5_digest": "558c92eb0f6e5810879aeba85ba1eb21", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5717, "upload_time": "2020-02-01T07:28:38", "upload_time_iso_8601": "2020-02-01T07:28:38.790274Z", "url": "https://files.pythonhosted.org/packages/84/67/84ab7d7d2c6bad21d2f602ccb45955da33efcb1e2f8a1c286f54d274c66b/keras_mixed_sequence-1.0.4.tar.gz"}], "1.0.5": [{"comment_text": "", "digests": {"md5": "96542f210a8cbeeb8899bb98e1fe93d9", "sha256": "b30bc5dfe9ab32cbfbac127de45d94ca3aeaba2c4b7d04e811ad28e2e7a93906"}, "downloads": -1, "filename": "keras_mixed_sequence-1.0.5.tar.gz", "has_sig": false, "md5_digest": "96542f210a8cbeeb8899bb98e1fe93d9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5720, "upload_time": "2020-02-01T18:42:19", "upload_time_iso_8601": "2020-02-01T18:42:19.659826Z", "url": "https://files.pythonhosted.org/packages/72/b1/73670e92a9e6bc2c1961c327fe97828a6c3a960027e5db3b0e6d5a5c6d91/keras_mixed_sequence-1.0.5.tar.gz"}], "1.0.6": [{"comment_text": "", "digests": {"md5": "36e2d80ef36df91e5d4306f4b358b489", "sha256": "a219809df4ca3905f8c8e4ad6914ad3fdb7a4cea9a2c0cf95b2fe2aaeb975426"}, "downloads": -1, "filename": "keras_mixed_sequence-1.0.6.tar.gz", "has_sig": false, "md5_digest": "36e2d80ef36df91e5d4306f4b358b489", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5800, "upload_time": "2020-03-01T19:35:22", "upload_time_iso_8601": "2020-03-01T19:35:22.317934Z", "url": "https://files.pythonhosted.org/packages/bc/5d/09750ea95d91793b1a8c0e32b943e397a08145913820eafd7ac2adca0b51/keras_mixed_sequence-1.0.6.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "36e2d80ef36df91e5d4306f4b358b489", "sha256": "a219809df4ca3905f8c8e4ad6914ad3fdb7a4cea9a2c0cf95b2fe2aaeb975426"}, "downloads": -1, "filename": "keras_mixed_sequence-1.0.6.tar.gz", "has_sig": false, "md5_digest": "36e2d80ef36df91e5d4306f4b358b489", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5800, "upload_time": "2020-03-01T19:35:22", "upload_time_iso_8601": "2020-03-01T19:35:22.317934Z", "url": "https://files.pythonhosted.org/packages/bc/5d/09750ea95d91793b1a8c0e32b943e397a08145913820eafd7ac2adca0b51/keras_mixed_sequence-1.0.6.tar.gz"}]}