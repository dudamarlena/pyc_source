{"info": {"author": "Adafruit Industries", "author_email": "circuitpython@adafruit.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Software Development :: Libraries", "Topic :: System :: Hardware"], "description": "Introduction\n============\n\n.. image:: https://readthedocs.org/projects/adafruit-circuitpython-jwt/badge/?version=latest\n    :target: https://circuitpython.readthedocs.io/projects/jwt/en/latest/\n    :alt: Documentation Status\n\n.. image:: https://img.shields.io/discord/327254708534116352.svg\n    :target: https://discord.gg/nBQh6qu\n    :alt: Discord\n\n.. image:: https://github.com/adafruit/Adafruit_CircuitPython_JWT/workflows/Build%20CI/badge.svg\n    :target: https://github.com/adafruit/Adafruit_CircuitPython_JWT/actions/\n    :alt: Build Status\n\nJSON Web Token (JWT) Authentication module for CircuitPython. JSON Web Tokens are an open, industry standard\n`RFC 7519 <https://tools.ietf.org/html/rfc7519>`_ method for representing claims securely between two parties.\n\nThis library currently supports the following signature algorithms for JWT generation and verification:\n * No encoding (\"none\")\n * RS256/SHA-256 (via `Adafruit_CircuitPython_RSA <https://github.com/adafruit/Adafruit_CircuitPython_RSA>`_)\n * RS384/SHA-384 (via `Adafruit_CircuitPython_RSA <https://github.com/adafruit/Adafruit_CircuitPython_RSA>`_)\n * RS512/SHA-512 (via `Adafruit_CircuitPython_RSA <https://github.com/adafruit/Adafruit_CircuitPython_RSA>`_)\n\nDependencies\n=============\nThis driver depends on:\n\n* `Adafruit CircuitPython <https://github.com/adafruit/circuitpython>`_\n* `Adafruit_CircuitPython_RSA <https://github.com/adafruit/Adafruit_CircuitPython_RSA>`_\n* `Adafruit_CircuitPython_binascii <https://github.com/adafruit/Adafruit_CircuitPython_binascii>`_\n\nPlease ensure all dependencies are available on the CircuitPython filesystem.\nThis is easily achieved by downloading\n`the Adafruit library and driver bundle <https://github.com/adafruit/Adafruit_CircuitPython_Bundle>`_.\n\nInstalling from PyPI\n=====================\nOn supported GNU/Linux systems like the Raspberry Pi, you can install the driver locally `from\nPyPI <https://pypi.org/project/adafruit-circuitpython-jwt/>`_. To install for current user:\n\n.. code-block:: shell\n\n    pip3 install adafruit-circuitpython-jwt\n\nTo install system-wide (this may be required in some cases):\n\n.. code-block:: shell\n\n    sudo pip3 install adafruit-circuitpython-jwt\n\nTo install in a virtual environment in your current project:\n\n.. code-block:: shell\n\n    mkdir project-name && cd project-name\n    python3 -m venv .env\n    source .env/bin/activate\n    pip3 install adafruit-circuitpython-jwt\n\nUsage Example\n=============\n\nGenerating encoded JWT\n\n.. code-block:: python\n\n        import adafruit_jwt\n        # Import Private RSA key from a secrets.py file\n        try:\n            from secrets import secrets\n        except ImportError:\n            print(\"WiFi secrets are kept in secrets.py, please add them there!\")\n            raise\n\n        # Create JWT Claims\n        claims = {\"iss\": \"joe\",\n                \"exp\": 1300819380,\n                \"name\": \"John Doe\",\n                \"admin\": True}\n\n        # Generate JWT, sign with RSA private key and RS-256\n        encoded_jwt = adafruit_jwt.JWT.generate(\n            claims, secrets[\"private_key\"], algo=\"RS256\")\n        print(\"Encoded JWT: \", encoded_jwt)\n\n\nValidating a generated JWT, encoded_jwt.\n\n.. code-block:: python\n\n        import adafruit_jwt\n        decoded_jwt = adafruit_jwt.JWT.validate(encoded_jwt)\n        # The decoded JWT's JOSE header and claims set are returned as a tuple\n        print('JOSE Header: {}\\nJWT Claims: {}'.format(decoded_jwt[0], decoded_jwt[1]))\n\nContributing\n============\n\nContributions are welcome! Please read our `Code of Conduct\n<https://github.com/adafruit/Adafruit_CircuitPython_JWT/blob/master/CODE_OF_CONDUCT.md>`_\nbefore contributing to help this project stay welcoming.\n\nDocumentation\n=============\n\nFor information on building library documentation, please check out `this guide <https://learn.adafruit.com/creating-and-sharing-a-circuitpython-library/sharing-our-docs-on-readthedocs#sphinx-5-1>`_.", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/adafruit/Adafruit_CircuitPython_JWT", "keywords": "adafruit blinka circuitpython micropython jwt jwt,json,token,authentication", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "adafruit-circuitpython-jwt", "package_url": "https://pypi.org/project/adafruit-circuitpython-jwt/", "platform": "", "project_url": "https://pypi.org/project/adafruit-circuitpython-jwt/", "project_urls": {"Homepage": "https://github.com/adafruit/Adafruit_CircuitPython_JWT"}, "release_url": "https://pypi.org/project/adafruit-circuitpython-jwt/1.1.0/", "requires_dist": null, "requires_python": "", "summary": "JSON Web Token Authentication", "version": "1.1.0"}, "last_serial": 6832004, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "d5093d676ec6041985da9ca715db9791", "sha256": "4fc33c4ec208f92b295be554bb878b6fad5948a02c1c5f916b63fcfa2c2e5f5d"}, "downloads": -1, "filename": "adafruit-circuitpython-jwt-1.0.1.tar.gz", "has_sig": false, "md5_digest": "d5093d676ec6041985da9ca715db9791", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21645, "upload_time": "2020-01-22T01:24:30", "upload_time_iso_8601": "2020-01-22T01:24:30.792432Z", "url": "https://files.pythonhosted.org/packages/ea/17/a3d2653cbd78cea063909243988dc62bae48fd3218c203acf8c8018a8413/adafruit-circuitpython-jwt-1.0.1.tar.gz"}], "1.1.0": [{"comment_text": "", "digests": {"md5": "2415882fc6f9805d1ab78f10e7e5d2cf", "sha256": "e07f32a2373e5a50e89f88d425a6e5bcfdaf22861643bfed210230d2504c36b3"}, "downloads": -1, "filename": "adafruit-circuitpython-jwt-1.1.0.tar.gz", "has_sig": false, "md5_digest": "2415882fc6f9805d1ab78f10e7e5d2cf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21784, "upload_time": "2020-03-17T22:46:28", "upload_time_iso_8601": "2020-03-17T22:46:28.639784Z", "url": "https://files.pythonhosted.org/packages/9c/cf/d2d2536ad9fb184980fa76aed20495ef79280148c4b0216c5f6b7130c54f/adafruit-circuitpython-jwt-1.1.0.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "2415882fc6f9805d1ab78f10e7e5d2cf", "sha256": "e07f32a2373e5a50e89f88d425a6e5bcfdaf22861643bfed210230d2504c36b3"}, "downloads": -1, "filename": "adafruit-circuitpython-jwt-1.1.0.tar.gz", "has_sig": false, "md5_digest": "2415882fc6f9805d1ab78f10e7e5d2cf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21784, "upload_time": "2020-03-17T22:46:28", "upload_time_iso_8601": "2020-03-17T22:46:28.639784Z", "url": "https://files.pythonhosted.org/packages/9c/cf/d2d2536ad9fb184980fa76aed20495ef79280148c4b0216c5f6b7130c54f/adafruit-circuitpython-jwt-1.1.0.tar.gz"}]}