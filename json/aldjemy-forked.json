{"info": {"author": "Mihail Krivushin", "author_email": "onosendi@protonmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7"], "description": "=======\nAldjemy\n=======\n\n|circleci_build| |pypi_version| |pypi_license|\n\n-----\n\n\nBase\n----\n\nSmall package for integration SQLAlchemy into an existent Django project.\nThe primary use case of this package is building complex queries that are\nnot possible with the Django ORM.\n\nYou need to include aldjemy at the end of `INSTALLED_APPS`. When models are\nimported, aldjemy will read all models and contribute `sa` attribute to them.\n`sa` attribute is a class, mapped to Table class.\n\nInternally, aldjemy generates tables from Django models. This is an important\ndistinction from the standard decision of using SQLAlchemy reflection.\n\nCode example:\n\n.. code-block:: python\n\n    User.sa.query().filter(User.sa.username=='Brubeck')\n\nM2M sample:\n\n.. code-block:: python\n\n    User.sa.query().join(User.sa.groups).filter(Group.sa.name==\"GROUP_NAME\")\n\nExplicit joins is part of SQLAlchemy philosophy, so aldjemy can't get you exactly\nthe same experience as Django.\nBut aldjemy is not positioned as Django ORM drop-in replacement. It's a helper for special situations.\n\nWe have some stuff in the aldjemy cache too:\n\n.. code-block:: python\n\n    from aldjemy_forked import core\n    core.Cache.models # All generated models\n\nYou can use this stuff if you need - maybe you want to build queries with tables, or something like this.\n\n\nSettings\n--------\n\nYou can add your own field types to map django types to sqlalchemy ones with\n``ALDJEMY_DATA_TYPES`` settings parameter.\nParameter must be a ``dict``, key is result of ``field.get_internal_type()``,\nvalue must be a one arg function. You can get idea from ``aldjemy_forked.types``.\n\nAlso it is possible to extend/override list of supported SQLALCHEMY engines\nusing ``ALDJEMY_ENGINES`` settings parameter.\nParameter should be a ``dict``, key is substring after last dot from\nDjango database engine setting (e.g. ``sqlite3`` from ``django.db.backends.sqlite3``),\nvalue is SQLAlchemy driver which will be used for connection (e.g. ``sqlite``, ``sqlite+pysqlite``).\nIt could be helpful if you want to use ``django-postgrespool``.\n\n\nMixins\n------\n\nOften django models have helper function and properties that helps to\nrepresent the model's data (`__unicode__`), or represent some model based logic.\n\nTo integrate it with aldjemy models you can put these methods into a separate mixin:\n\n.. code-block:: python\n\n    class TaskMixin(object):\n        def __unicode__(self):\n            return self.code\n\n    class Task(TaskMixin, models.Model):\n        aldjemy_mixin = TaskMixin\n        code = models.CharField(_('code'), max_length=32, unique=True)\n\nVoil\u00e0! You can use `unicode` on aldjemy classes, because this mixin will be\nmixed into generated aldjemy model.\n\nIf you want to expose all methods and properties without creating a\nseparate mixin class, you can use the `aldjemy_forked.meta.AldjemyMeta`\nmetaclass:\n\n.. code-block:: python\n\n    from aldjemy_forked.meta import AldjemyMeta\n\n    class Task(models.Model):\n        code = models.CharField(_('code'), max_length=32, unique=True)\n\n        def __unicode__(self):\n            return self.code\n\n        __metaclass__ = AldjemyMeta\n\nThe result is same as with the example above, only you didn't need to\ncreate the mixin class at all.\n\nAlso note that with Python 3, the syntax is a bit different:\n\n.. code-block:: python\n\n    class Task(models.Model, metaclass=AldjemyMeta):\n        code = models.CharField(_('code'), max_length=32, unique=True)\n\n        def __str__(self):\n            return self.code\n\n\n.. |circleci_build| image:: https://circleci.com/gh/Deepwalker/aldjemy.svg?style=shield\n    :target: https://circleci.com/gh/Deepwalker/aldjemy\n    :alt: Build status\n\n.. |pypi_version| image:: https://img.shields.io/pypi/v/aldjemy.svg?style=flat-square\n    :target: https://pypi.python.org/pypi/aldjemy\n    :alt: Downloads\n\n.. |pypi_license| image:: https://img.shields.io/pypi/l/aldjemy.svg?style=flat-square\n    :target: https://pypi.python.org/pypi/aldjemy\n    :alt: Downloads", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/onosendi/aldjemy", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "aldjemy-forked", "package_url": "https://pypi.org/project/aldjemy-forked/", "platform": "", "project_url": "https://pypi.org/project/aldjemy-forked/", "project_urls": {"Homepage": "https://github.com/onosendi/aldjemy"}, "release_url": "https://pypi.org/project/aldjemy-forked/1.0.3/", "requires_dist": null, "requires_python": "", "summary": "SQLAlchemy to Django integration library", "version": "1.0.3"}, "last_serial": 6673096, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "f66239cc1c3bd50a1e75eaa71b7b19a5", "sha256": "1397805987bc7417c083cb1a539ebb9e4ad71a7e0d221c5f150fd955f0ee235f"}, "downloads": -1, "filename": "aldjemy_forked-1.0.0.tar.gz", "has_sig": false, "md5_digest": "f66239cc1c3bd50a1e75eaa71b7b19a5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21815, "upload_time": "2020-02-21T04:12:43", "upload_time_iso_8601": "2020-02-21T04:12:43.790302Z", "url": "https://files.pythonhosted.org/packages/79/f3/97a446477905781e26c2af2cfe36aafa7628e966d9be331171c4ef96188b/aldjemy_forked-1.0.0.tar.gz"}], "1.0.1": [{"comment_text": "", "digests": {"md5": "0ef9e02acbc2d3b0bf25fb896472cc3d", "sha256": "c0efe3b3133373bf9d7cf86aca6ddd97296e4a64c12ba5529d9c4df26d8418e1"}, "downloads": -1, "filename": "aldjemy_forked-1.0.1.tar.gz", "has_sig": false, "md5_digest": "0ef9e02acbc2d3b0bf25fb896472cc3d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16525, "upload_time": "2020-02-21T04:38:01", "upload_time_iso_8601": "2020-02-21T04:38:01.869786Z", "url": "https://files.pythonhosted.org/packages/e4/87/96e2b69aa6d3e372680141bdbe592fc19902d3bea5a25f6c45cfaca656a4/aldjemy_forked-1.0.1.tar.gz"}], "1.0.2": [{"comment_text": "", "digests": {"md5": "dc0ea1beb906b949afb41f89cd147994", "sha256": "e2ece59dc807c74bb4fdcf085217007547e51108fde88be3b91f465e9160f88b"}, "downloads": -1, "filename": "aldjemy_forked-1.0.2.tar.gz", "has_sig": false, "md5_digest": "dc0ea1beb906b949afb41f89cd147994", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16536, "upload_time": "2020-02-21T04:43:46", "upload_time_iso_8601": "2020-02-21T04:43:46.924473Z", "url": "https://files.pythonhosted.org/packages/52/a0/b2228dc711ae53495bc4c6ba652867d692edfb86df4aec7b0cc4de767c2b/aldjemy_forked-1.0.2.tar.gz"}], "1.0.3": [{"comment_text": "", "digests": {"md5": "3b0df86cc37f958831363a6c35cc9181", "sha256": "e082b40e91aaed7735c4322b34d7f7ec7401d6e81ae30a2de328ec8ed9889e1b"}, "downloads": -1, "filename": "aldjemy_forked-1.0.3.tar.gz", "has_sig": false, "md5_digest": "3b0df86cc37f958831363a6c35cc9181", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16531, "upload_time": "2020-02-21T04:55:40", "upload_time_iso_8601": "2020-02-21T04:55:40.480288Z", "url": "https://files.pythonhosted.org/packages/1b/fe/52ae72d900df63f94ec701d726943ebe04008ec1f70d48d379b8eada1691/aldjemy_forked-1.0.3.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "3b0df86cc37f958831363a6c35cc9181", "sha256": "e082b40e91aaed7735c4322b34d7f7ec7401d6e81ae30a2de328ec8ed9889e1b"}, "downloads": -1, "filename": "aldjemy_forked-1.0.3.tar.gz", "has_sig": false, "md5_digest": "3b0df86cc37f958831363a6c35cc9181", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16531, "upload_time": "2020-02-21T04:55:40", "upload_time_iso_8601": "2020-02-21T04:55:40.480288Z", "url": "https://files.pythonhosted.org/packages/1b/fe/52ae72d900df63f94ec701d726943ebe04008ec1f70d48d379b8eada1691/aldjemy_forked-1.0.3.tar.gz"}]}