{"info": {"author": "S\u00e9bastien Nicolet", "author_email": "snicolet@student.42.fr", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# MongoModel\n## Description\nThis project is a tiny ORM in python3 for mongodb.\nEach database entry is a `Document` and each document has `Fields`\n\n## Getting started\n```shell\ngit clone git@github.com:Chr0nos/mongomodel.git\nvirtualenv .venv\nsource .venv/bin/activate\npip install -r requirements.txt\n```\n\nthen the in the code\n```python\nimport mongomodel\n\nmongomodel.setup_database(hostname='something', database='test')\n# now you can use the orm.\n```\n\n## Example\n### Create\nTo create a new document model you have to make a new class from `Document`\n```python\nimport mongomodel\n\n\nclass User(mongomodel.Document):\n\tcollection = 'user'\n\tname = mongomodel.StringField(maxlen=255)\n\temail = mongomodel.EmailField(maxlen=255)\n\tlevel = mongomodel.IntegerField()\n```\n\nthen you can instanciate a new user in two ways:\n```python\nuser = User()\nuser.name = 'john doe'\nuser.level = 2\nuser.email = 'something@test.com'\nuser.save()\n```\n\nor with the constructor:\n```python\nuser = User(name='john doe', email='something@test.com', level=2)\nuser.save()\n```\n\nin case of an invalid model, example:\n```python\nuser.name = 123\nuser.save()\n```\n\nan `DocumentInvalidError` will be raised.\n\n## Update\nTo update a document you just have to perform a `document.save()`, it will\nupdate the document if it's already present in database.\n\n## Delete\nUse `document.delete()`\n\n## Dynamic model creation\nIn some circumstancies you don't know the excat shape of a model at parsetime,\nso it's possible to edit a model, the new field(s) has to be an instance of `Field`\n\n```python\nuser.specific_information = Field(value='whatever')\n```\n\n## Remove fields\nyou can delete the class attribute with\n```python\ndel user.name\n```\n\n## Transform to dict\n```python\nuser.to_dict()\n```\n\n## Get all fields name for a document\n```python\nuser.fields\n```\nreturns a list of `str`\n\n\n## Create a document from an other\n```python\ncpy = user.copy()\ncpy.kind = StringField(value='artist', maxlen='20')\n```\nthe copied document wil have it's own `Fields`\n\n\n## Load a document from it's ID\n```python\nfrom bson import ObjectId\n\nuser = User.from_id(ObjectId('012345678'))\n```\n\n\n## Reset all fields to default\n```python\nuser.clear()\n```\n\n\n## Reload from database\n```python\nuser.refresh()\n```\n\n\n### Default fields\nIf you won't filter what kind of data can be set into a field, just use the\nmain class `Field` wich is allways considered as valid.\n\nit's possible to have default values if the field stay at a `None` state\n\n```python\nimport mongomodel\nfrom datetime import datetime\n\n\nclass Book(mongomodel.Document):\n\tcollection = 'book'\n\tname = mongomodel.Field(default=lambda: '')\n\tcreation_date = mongomodel.Field(default=lambda: datetime.now().isoformat())\n\n```\nI use function to prevent a useless call in case of no value provided.\n\n\n## Custom field\nThis is an example of a `last updated` field\n\n```python\nfrom datetime import datetime\n\nclass LastUpdateField(mongomodel.Field):\n\tdef get(self):\n\t\treturn datetime.now().isoformat()\n```\n\nthe `get` method will be called each time you will call the attribute in the\ndocument.\n\n## Custom field validation\n```python\nclass CustomField(mongomodel.Field):\n\tdef check(self):\n\t\t# you can perform validations here.\n\t\t# self.value = the current value\n\t\t# self.get() = the value OR it's default if available\n\t\tpass\n```\n\n\n## Extra fields from database\nAll fields that are not defined into the model/document will be available in\nreadonly.\n\n\n## Create many documents at once\n```python\nbooks: List[Book] = [\n\tBook(name='mongodb'),\n\tBook(name='something'),\n\t...\n]\nBook.insert_many(books)\n```\nAt this point all inserted (valids) book will have an `_id` property,\nIn case of invalid documents, no errors will be raised but the document will be\nignored.\n\n\n## QuerySet\nAll `Document` has a `object` attribute (created by a metaclass factory), wich\nis a `QuerySet` instance pointing on the current `model`\n\nwith the `User` example\n```python\nfrom examples.user import User, mongomodel\n\n# setup the database\nmongomodel.setup_database('127.0.0.1', 'test')\n\n# get all users, the .all() will iterate over ALL results and put them in a list\nUser.objects.all()\n\n# to iterate in more efficient way just iter over the `QuerySet` object\nfor user in User.objects:\n\tprint(user)\n\n# search for all admin user with age higher than 30 years old\n# the .filter expression return a `QuerySet` object, so you can chain them\nUser.objects.filter(is_admin=True, age__gt=30)\nUser.objects.filter(is_admin=True).exclude(age__gte=30)\n# Both expressions does the same here.\n\n# To see what a query will look like you can access to the .query parameter of\n# the queryset\nUser.objects.filter(is_admin__exists=True).query\n\n# will give us:\n{'is_admin': {'$exists': True}}\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Chr0nos/mongorm", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "mongomodel", "package_url": "https://pypi.org/project/mongomodel/", "platform": "", "project_url": "https://pypi.org/project/mongomodel/", "project_urls": {"Homepage": "https://github.com/Chr0nos/mongorm"}, "release_url": "https://pypi.org/project/mongomodel/0.3.2/", "requires_dist": ["pymongo (>=3.9.0)"], "requires_python": "", "summary": "Tiny mongodb odm, it mimics the orm of django", "version": "0.3.2"}, "last_serial": 6515967, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "ca406e185f0e8c933b9c4c7c0af462ca", "sha256": "86fffe181b29acad86f91c0bd3aae20125df6c8caea5f0f2605b76e237c331c8"}, "downloads": -1, "filename": "mongomodel-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ca406e185f0e8c933b9c4c7c0af462ca", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14875, "upload_time": "2020-01-03T12:38:29", "upload_time_iso_8601": "2020-01-03T12:38:29.606210Z", "url": "https://files.pythonhosted.org/packages/82/60/3afc8ea7958c8414b2f22407d1ac85e54895a19d4c3aafacf0b891fd524d/mongomodel-0.1-py3-none-any.whl"}], "0.2.0": [{"comment_text": "", "digests": {"md5": "166316fa9705e6c5d2d6877027506a35", "sha256": "76590edf1000d10411675bc6553305c960ccaf68cf846c48465a039bf398bb5c"}, "downloads": -1, "filename": "mongomodel-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "166316fa9705e6c5d2d6877027506a35", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14900, "upload_time": "2020-01-03T12:58:50", "upload_time_iso_8601": "2020-01-03T12:58:50.742732Z", "url": "https://files.pythonhosted.org/packages/80/99/bba5a7a2e0b7723ebea0d52453ee1b81a206164e1d9fcfdad918bd291120/mongomodel-0.2.0-py3-none-any.whl"}], "0.2.1": [{"comment_text": "", "digests": {"md5": "360249be157c0547f89f2a6cdb15fc38", "sha256": "b524d5b8f3a9f1ee7dd51020d656847e4750d428a1731d177d2c6a4d2e830d42"}, "downloads": -1, "filename": "mongomodel-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "360249be157c0547f89f2a6cdb15fc38", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14919, "upload_time": "2020-01-03T13:01:05", "upload_time_iso_8601": "2020-01-03T13:01:05.214114Z", "url": "https://files.pythonhosted.org/packages/42/7c/29238a021c6537b0d98a96f8a913c9a2b0d20bb5580a568d852fb39dcbf6/mongomodel-0.2.1-py3-none-any.whl"}], "0.2.2": [{"comment_text": "", "digests": {"md5": "f3f0a9f7a792bee57bf1da0bbac54f02", "sha256": "dc6666b4f3e3e6a4f491a4636d9c3ea5c8b50c7950eba1eb3974131516e96d11"}, "downloads": -1, "filename": "mongomodel-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "f3f0a9f7a792bee57bf1da0bbac54f02", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14969, "upload_time": "2020-01-03T15:50:25", "upload_time_iso_8601": "2020-01-03T15:50:25.579466Z", "url": "https://files.pythonhosted.org/packages/c2/52/27bee0c94f099a2d5b566041a3f671644cd472fb52973697c6c0226b3eaf/mongomodel-0.2.2-py3-none-any.whl"}], "0.2.3": [{"comment_text": "", "digests": {"md5": "65a6f6526ffea3c120aaf6d96133d479", "sha256": "817bf372ec2aa26518363166b5d72325de6f5b980a4643ef431183872bfe1c3e"}, "downloads": -1, "filename": "mongomodel-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "65a6f6526ffea3c120aaf6d96133d479", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15017, "upload_time": "2020-01-03T20:24:26", "upload_time_iso_8601": "2020-01-03T20:24:26.316132Z", "url": "https://files.pythonhosted.org/packages/93/1f/1ff449ef0f8023af7402b1b4e21cb1899f4c025598c66d63cbd90f47c885/mongomodel-0.2.3-py3-none-any.whl"}], "0.2.4": [{"comment_text": "", "digests": {"md5": "8c0b48e47c2a5c762e9d624ad31799b9", "sha256": "9185fecb8496327f086279dd13f4fcfe5eed308dbc15d02f2fcbd52d6d97bf43"}, "downloads": -1, "filename": "mongomodel-0.2.4-py3-none-any.whl", "has_sig": false, "md5_digest": "8c0b48e47c2a5c762e9d624ad31799b9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15060, "upload_time": "2020-01-03T20:27:54", "upload_time_iso_8601": "2020-01-03T20:27:54.287012Z", "url": "https://files.pythonhosted.org/packages/d4/cc/c1724e9a8353b07e5b251019174b88936d1592e24ac223a62fe7e2d7119a/mongomodel-0.2.4-py3-none-any.whl"}], "0.2.5": [{"comment_text": "", "digests": {"md5": "77982291c0e5a35d9b81b73a3483186e", "sha256": "93163b8070948fd4d99e1d668cd60daf0d5d2754fcfadd7dd9093ad31c491fac"}, "downloads": -1, "filename": "mongomodel-0.2.5-py3-none-any.whl", "has_sig": false, "md5_digest": "77982291c0e5a35d9b81b73a3483186e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15157, "upload_time": "2020-01-04T12:56:34", "upload_time_iso_8601": "2020-01-04T12:56:34.362911Z", "url": "https://files.pythonhosted.org/packages/da/a8/ba6ff8e0bca4ee3c66eed99c8e0437feb8c0be4208ee8b2d4f7696e2b2c2/mongomodel-0.2.5-py3-none-any.whl"}], "0.2.6": [{"comment_text": "", "digests": {"md5": "dd3c2c07f9b287065a27b5dbe53ed390", "sha256": "9a3c81fd584dfc128d53bea7bfef6605b4d5e6bc43b3a9563f83e4be8c02399b"}, "downloads": -1, "filename": "mongomodel-0.2.6-py3-none-any.whl", "has_sig": false, "md5_digest": "dd3c2c07f9b287065a27b5dbe53ed390", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11211, "upload_time": "2020-01-24T18:03:30", "upload_time_iso_8601": "2020-01-24T18:03:30.043227Z", "url": "https://files.pythonhosted.org/packages/c0/8d/9e3bec0f97de8f696f19a999ae16878493e22c61453b2b9f9da00dcf6b4e/mongomodel-0.2.6-py3-none-any.whl"}], "0.3.0": [{"comment_text": "", "digests": {"md5": "23abaa54c1eb64d2349e7c279eaf042e", "sha256": "8cb623d8c9a8987e7c28348fb46e23213797ae8f1ee5b817affba77f0723514a"}, "downloads": -1, "filename": "mongomodel-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "23abaa54c1eb64d2349e7c279eaf042e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11215, "upload_time": "2020-01-24T18:37:40", "upload_time_iso_8601": "2020-01-24T18:37:40.328050Z", "url": "https://files.pythonhosted.org/packages/0b/50/e74e51439d336215f0948986eae14a6af7014ac2918da63506807b57b56e/mongomodel-0.3.0-py3-none-any.whl"}], "0.3.1": [{"comment_text": "", "digests": {"md5": "7b3152514765a2e2b99ce55757ac3f70", "sha256": "9dab480f9a7879f831ca45f675911f229fad8a03f30362996212da10b4ff95e4"}, "downloads": -1, "filename": "mongomodel-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7b3152514765a2e2b99ce55757ac3f70", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11237, "upload_time": "2020-01-24T18:54:11", "upload_time_iso_8601": "2020-01-24T18:54:11.891474Z", "url": "https://files.pythonhosted.org/packages/ec/1d/92a006489705d68373193c92482a6522c65d5e0decc6b06ffb9456860b11/mongomodel-0.3.1-py3-none-any.whl"}], "0.3.2": [{"comment_text": "", "digests": {"md5": "0e3985e4a03e416826e8ed0fa3e27bab", "sha256": "4f7f5fca27b2177596d0a44a542937e4c08b91fadd7939383666bda4096a7428"}, "downloads": -1, "filename": "mongomodel-0.3.2-py3-none-any.whl", "has_sig": false, "md5_digest": "0e3985e4a03e416826e8ed0fa3e27bab", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11320, "upload_time": "2020-01-24T21:45:52", "upload_time_iso_8601": "2020-01-24T21:45:52.382910Z", "url": "https://files.pythonhosted.org/packages/de/62/28c76084bb0ec08a0209d0b1d2504d51cacd80c627919430b9cf59dd242c/mongomodel-0.3.2-py3-none-any.whl"}]}, "urls": [{"comment_text": "", "digests": {"md5": "0e3985e4a03e416826e8ed0fa3e27bab", "sha256": "4f7f5fca27b2177596d0a44a542937e4c08b91fadd7939383666bda4096a7428"}, "downloads": -1, "filename": "mongomodel-0.3.2-py3-none-any.whl", "has_sig": false, "md5_digest": "0e3985e4a03e416826e8ed0fa3e27bab", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11320, "upload_time": "2020-01-24T21:45:52", "upload_time_iso_8601": "2020-01-24T21:45:52.382910Z", "url": "https://files.pythonhosted.org/packages/de/62/28c76084bb0ec08a0209d0b1d2504d51cacd80c627919430b9cf59dd242c/mongomodel-0.3.2-py3-none-any.whl"}]}