{"info": {"author": "IBM Watson", "author_email": "watdevex@us.ibm.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Software Development :: Libraries :: Application Frameworks", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Watson Developer Cloud Python SDK\n=================================\n\n|Build Status| |Slack| |Latest Stable Version| |CLA assistant|\n\nPython client library to quickly get started with the various `Watson\nAPIs <http://www.ibm.com/watson/developercloud/>`__ services.\n\n Table of Contents\n\n-  `Before you begin <#before-you-begin>`__\n-  `Installation <#installation>`__\n-  `Examples <#examples>`__\n-  `Discovery v2 only on CP4D <#discovery-v2-only-on-cp4d>`__\n-  `Running in IBM Cloud <#running-in-ibm-cloud>`__\n-  `Authentication <#authentication>`__\n\n   -  `Getting credentials <#getting-credentials>`__\n   -  `IAM <#iam>`__\n   -  `Username and password <#username-and-password>`__\n   -  `No Authentication <#no-authentication>`__\n\n-  `Python version <#python-version>`__\n-  `Changes for v1.0 <#changes-for-v10>`__\n-  `Changes for v2.0 <#changes-for-v20>`__\n-  `Changes for v3.0 <#changes-for-v30>`__\n-  `Changes for v4.0 <#changes-for-v40>`__\n-  `Migration <#migration>`__\n-  `Configuring the http\n   client <#configuring-the-http-client-supported-from-v110>`__\n-  `Disable SSL certificate\n   verification <#disable-ssl-certificate-verification>`__\n-  `Setting the service url <#setting-the-service-url>`__\n-  `Sending request headers <#sending-request-headers>`__\n-  `Parsing HTTP response\n   information <#parsing-http-response-information>`__\n-  `Getting the transaction ID <#getting-the-transaction-id>`__\n-  `Using Websockets <#using-websockets>`__\n-  `Cloud Pak for Data(CP4D) <#cloud-pak-for-data>`__\n-  `Logging <#logging>`__\n-  `Dependencies <#dependencies>`__\n-  `License <#license>`__\n-  `Contributing <#contributing>`__\n-  `Featured Projects <#featured-projects>`__\n\nBefore you begin\n----------------\n\n-  You need an `IBM\n   Cloud <https://cloud.ibm.com/registration?target=/developer/watson&cm_sp=WatsonPlatform-WatsonServices-_-OnPageNavLink-IBMWatson_SDKs-_-Python>`__\n   account. We now only support ``python 3.5`` and above\n\nInstallation\n------------\n\nTo install, use ``pip`` or ``easy_install``:\n\n.. code:: bash\n\n    pip install --upgrade ibm-watson\n\nor\n\n.. code:: bash\n\n    easy_install --upgrade ibm-watson\n\nNote the following: a) Versions prior to 3.0.0 can be installed using:\n\n.. code:: bash\n\n    pip install --upgrade watson-developer-cloud\n\nb) If you run into permission issues try:\n\n.. code:: bash\n\n    sudo -H pip install --ignore-installed six ibm-watson\n\nFor more details see\n`#225 <https://github.com/watson-developer-cloud/python-sdk/issues/225>`__\n\nc) In case you run into problems installing the SDK in DSX, try\n\n   ::\n\n       !pip install --upgrade pip\n\n   Restarting the kernel\n\nFor more details see\n`#405 <https://github.com/watson-developer-cloud/python-sdk/issues/405>`__\n\nExamples\n--------\n\nThe\n`examples <https://github.com/watson-developer-cloud/python-sdk/tree/master/examples>`__\nfolder has basic and advanced examples. The examples within each service\nassume that you already have `service\ncredentials <#getting-credentials>`__.\n\nDiscovery v2 only on CP4D\n-------------------------\n\nDiscovery v2 is only available on Cloud Pak for Data.\n\nRunning in IBM Cloud\n--------------------\n\nIf you run your app in IBM Cloud, the SDK gets credentials from the\n```VCAP_SERVICES`` <https://cloud.ibm.com/docs/services/watson?topic=watson-vcapServices>`__\nenvironment variable.\n\nAuthentication\n--------------\n\nWatson services are migrating to token-based Identity and Access\nManagement (IAM) authentication.\n\n-  With some service instances, you authenticate to the API by using\n   **`IAM <#iam>`__**.\n-  In other instances, you authenticate by providing the **`username and\n   password <#username-and-password>`__** for the service instance.\n\nGetting credentials\n~~~~~~~~~~~~~~~~~~~\n\nTo find out which authentication to use, view the service credentials.\nYou find the service credentials for authentication the same way for all\nWatson services:\n\n1. Go to the IBM Cloud `Dashboard <https://cloud.ibm.com/>`__ page.\n2. Either click an existing Watson service instance in your `resource\n   list <https://cloud.ibm.com/resources>`__ or click `**Create resource\n   > AI** <https://cloud.ibm.com/catalog?category=ai>`__ and create a\n   service instance.\n3. Click on the **Manage** item in the left nav bar of your service\n   instance.\n\nOn this page, you should be able to see your credentials for accessing\nyour service instance.\n\nSupplying credentials\n~~~~~~~~~~~~~~~~~~~~~\n\nThere are three ways to supply the credentials you found above to the\nSDK for authentication.\n\nCredential file\n^^^^^^^^^^^^^^^\n\nWith a credential file, you just need to put the file in the right place\nand the SDK will do the work of parsing and authenticating. You can get\nthis file by clicking the **Download** button for the credentials in the\n**Manage** tab of your service instance.\n\nThe file downloaded will be called ``ibm-credentials.env``. This is the\nname the SDK will search for and **must** be preserved unless you want\nto configure the file path (more on that later). The SDK will look for\nyour ``ibm-credentials.env`` file in the following places (in order):\n\n-  The top-level directory of the project you're using the SDK in\n-  Your system's home directory\n\nAs long as you set that up correctly, you don't have to worry about\nsetting any authentication options in your code. So, for example, if you\ncreated and downloaded the credential file for your Discovery instance,\nyou just need to do the following:\n\n.. code:: python\n\n    discovery = DiscoveryV1(version='2018-08-01')\n\nAnd that's it!\n\nIf you're using more than one service at a time in your code and get two\ndifferent ``ibm-credentials.env`` files, just put the contents together\nin one ``ibm-credentials.env`` file and the SDK will handle assigning\ncredentials to their appropriate services.\n\nIf you would like to configure the location/name of your credential\nfile, you can set an environment variable called\n``IBM_CREDENTIALS_FILE``. **This will take precedence over the locations\nspecified above.** Here's how you can do that:\n\n.. code:: bash\n\n    export IBM_CREDENTIALS_FILE=\"<path>\"\n\nwhere ``<path>`` is something like\n``/home/user/Downloads/<file_name>.env``.\n\nEnvironment Variables\n^^^^^^^^^^^^^^^^^^^^^\n\nSimply set the environment variables using \\_ syntax. For example, using\nyour favourite terminal, you can set environment variables for Assistant\nservice instance:\n\n.. code:: bash\n\n    export ASSISTANT_APIKEY=\"<your apikey>\"\n    export ASSISTANT_AUTH_TYPE=\"iam\"\n\nThe credentials will be loaded from the environment automatically\n\n.. code:: python\n\n    assistant = AssistantV1(version='2018-08-01')\n\nManually\n^^^^^^^^\n\nIf you'd prefer to set authentication values manually in your code, the\nSDK supports that as well. The way you'll do this depends on what type\nof credentials your service instance gives you.\n\nIAM\n~~~\n\nIBM Cloud has migrated to token-based Identity and Access Management\n(IAM) authentication. IAM authentication uses a service API key to get\nan access token that is passed with the call. Access tokens are valid\nfor approximately one hour and must be regenerated.\n\nYou supply either an IAM service **API key** or a **bearer token**:\n\n-  Use the API key to have the SDK manage the lifecycle of the access\n   token. The SDK requests an access token, ensures that the access\n   token is valid, and refreshes it if necessary.\n-  Use the access token if you want to manage the lifecycle yourself.\n   For details, see `Authenticating with IAM\n   tokens <https://cloud.ibm.com/docs/services/watson?topic=watson-iam>`__.\n-  Use a server-side to generate access tokens using your IAM API key\n   for untrusted environments like client-side scripts. The generated\n   access tokens will be valid for one hour and can be refreshed.\n\nSupplying the API key\n^^^^^^^^^^^^^^^^^^^^^\n\n.. code:: python\n\n    from ibm_watson import DiscoveryV1\n    import from ibm_cloud_sdk_core.authenticators import IAMAuthenticator\n\n    # In the constructor, letting the SDK manage the token\n    authenticator = IAMAuthenticator('apikey',\n                                     url='<iam_url>') # optional - the default value is https://iam.cloud.ibm.com/identity/token\n    discovery = DiscoveryV1(version='2018-08-01',\n                            authenticator=authenticator)\n    discovery.set_service_url('<url_as_per_region>')\n\nGenerating bearer tokens using API key\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code:: python\n\n    from ibm_watson import IAMTokenManager\n\n    # In your API endpoint use this to generate new bearer tokens\n    iam_token_manager = IAMTokenManager(apikey='<apikey>')\n    token = iam_token_manager.get_token()\n\nSupplying the bearer token\n''''''''''''''''''''''''''\n\n.. code:: python\n\n    from ibm_watson import DiscoveryV1\n    from ibm_cloud_sdk_core.authenticators import BearerTokenAuthenticator\n\n    # in the constructor, assuming control of managing the token\n    authenticator = BearerTokenAuthenticator('your bearer token')\n    discovery = DiscoveryV1(version='2018-08-01',\n                            authenticator=authenticator)\n    discovery.set_service_url('<url_as_per_region>')\n\nUsername and password\n~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n    from ibm_watson import DiscoveryV1\n    from ibm_cloud_sdk_core.authenticators import BasicAuthenticator\n\n    authenticator = BasicAuthenticator('username', 'password')\n    discovery = DiscoveryV1(version='2018-08-01', authenticator=authenticator)\n    discovery.set_service_url('<url_as_per_region>')\n\nNo Authentication\n~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n    from ibm_watson import DiscoveryV1\n    from ibm_cloud_sdk_core.authenticators import NoAuthAuthenticator\n\n    authenticator = NoAuthAuthenticator()\n    discovery = DiscoveryV1(version='2018-08-01', authenticator=authenticator)\n    discovery.set_service_url('<url_as_per_region>')\n\nPython version\n--------------\n\nTested on Python 3.5, 3.6, and 3.7.\n\nChanges for v1.0\n----------------\n\nVersion 1.0 focuses on the move to programmatically-generated code for\nmany of the services. See the\n`changelog <https://github.com/watson-developer-cloud/python-sdk/wiki/Changelog>`__\nfor the details.\n\nChanges for v2.0\n----------------\n\n``DetailedResponse`` which contains the result, headers and HTTP status\ncode is now the default response for all methods.\n\n.. code:: python\n\n    from ibm_watson import AssistantV1\n\n    assistant = AssistantV1(\n        username='xxx',\n        password='yyy',\n        url='<url_as_per_region>',\n        version='2018-07-10')\n\n    response = assistant.list_workspaces(headers={'Custom-Header': 'custom_value'})\n    print(response.get_result())\n    print(response.get_headers())\n    print(response.get_status_code())\n\nSee the\n`changelog <https://github.com/watson-developer-cloud/python-sdk/wiki/Changelog>`__\nfor the details.\n\nChanges for v3.0\n----------------\n\nThe SDK is generated using OpenAPI Specification(OAS3). Changes are\nbasic reordering of parameters in function calls.\n\nThe package is renamed to ibm\\_watson. See the\n`changelog <https://github.com/watson-developer-cloud/python-sdk/wiki/Changelog>`__\nfor the details.\n\nChanges for v4.0\n----------------\n\nAuthenticator variable indicates the type of authentication to be used.\n\n.. code:: python\n\n    from ibm_watson import AssistantV1\n    from ibm_cloud_sdk_core.authenticators import IAMAuthenticator\n\n    authenticator = IAMAuthenticator('your apikey')\n    assistant = AssistantV1(\n        version='2018-07-10',\n        authenticator=authenticator)\n    assistant.set_service_url('<url as per region>')\n\nFor more information, follow the\n`MIGRATION-V4 <https://github.com/watson-developer-cloud/python-sdk/blob/master/MIGRATION-V4.md>`__\n\nMigration\n---------\n\nTo move from v3.x to v4.0, refer to the\n`MIGRATION-V4 <https://github.com/watson-developer-cloud/python-sdk/blob/master/MIGRATION-V4.md>`__.\n\nConfiguring the http client (Supported from v1.1.0)\n---------------------------------------------------\n\nTo set client configs like timeout use the ``set_http_config()``\nfunction and pass it a dictionary of configs. For example for a\nAssistant service instance\n\n.. code:: python\n\n    from ibm_watson import AssistantV1\n    from ibm_cloud_sdk_core.authenticators import IAMAuthenticator\n\n    authenticator = IAMAuthenticator('your apikey')\n    assistant = AssistantV1(\n        version='2018-07-10',\n        authenticator=authenticator)\n    assistant.set_service_url('https://gateway.watsonplatform.net/assistant/api')\n\n    assistant.set_http_config({'timeout': 100})\n    response = assistant.message(workspace_id=workspace_id, input={\n        'text': 'What\\'s the weather like?'}).get_result()\n    print(json.dumps(response, indent=2))\n\nDisable SSL certificate verification\n------------------------------------\n\nFor ICP(IBM Cloud Private), you can disable the SSL certificate\nverification by:\n\n.. code:: python\n\n    service.set_disable_ssl_verification(True)\n\nOr can set it from extrernal sources. For example set in the environment\nvariable.\n\n::\n\n    export <service name>_DISABLE_SSL=True\n\nSetting the service url\n-----------------------\n\nTo set the base service to be used when contacting the service\n\n.. code:: python\n\n    service.set_service_url('my_new_service_url')\n\nOr can set it from extrernal sources. For example set in the environment\nvariable.\n\n::\n\n    export <service name>_URL=\"<your url>\"\n\nSending request headers\n-----------------------\n\nCustom headers can be passed in any request in the form of a ``dict``\nas:\n\n.. code:: python\n\n    headers = {\n        'Custom-Header': 'custom_value'\n    }\n\nFor example, to send a header called ``Custom-Header`` to a call in\nWatson Assistant, pass the headers parameter as:\n\n.. code:: python\n\n    from ibm_watson import AssistantV1\n    from ibm_cloud_sdk_core.authenticators import IAMAuthenticator\n\n    authenticator = IAMAuthenticator('your apikey')\n    assistant = AssistantV1(\n        version='2018-07-10',\n        authenticator=authenticator)\n    assistant.set_service_url('https://gateway.watsonplatform.net/assistant/api')\n\n    response = assistant.list_workspaces(headers={'Custom-Header': 'custom_value'}).get_result()\n\nParsing HTTP response information\n---------------------------------\n\nIf you would like access to some HTTP response information along with\nthe response model, you can set the ``set_detailed_response()`` to\n``True``. Since Python SDK ``v2.0``, it is set to ``True``\n\n.. code:: python\n\n    from ibm_watson import AssistantV1\n    from ibm_cloud_sdk_core.authenticators import IAMAuthenticator\n\n    authenticator = IAMAuthenticator('your apikey')\n    assistant = AssistantV1(\n        version='2018-07-10',\n        authenticator=authenticator)\n    assistant.set_service_url('https://gateway.watsonplatform.net/assistant/api')\n\n    assistant.set_detailed_response(True)\n    response = assistant.list_workspaces(headers={'Custom-Header': 'custom_value'}).get_result()\n    print(response)\n\nThis would give an output of ``DetailedResponse`` having the structure:\n\n.. code:: python\n\n    {\n        'result': <response returned by service>,\n        'headers': { <http response headers> },\n        'status_code': <http status code>\n    }\n\nYou can use the ``get_result()``, ``get_headers()`` and\nget\\_status\\_code() to return the result, headers and status code\nrespectively.\n\nGetting the transaction ID\n--------------------------\n\nEvery SDK call returns a response with a transaction ID in the\nx-global-transaction-id header. This transaction ID is useful for\ntroubleshooting and accessing relevant logs from your service instance.\n### Suceess\n\n.. code:: python\n\n    from ibm_watson import MyService\n\n    service = MyService(authenticator=my_authenticator)\n    response_headers = service.my_service_call().get_headers()\n    print(response_headers.get('x-global-transaction-id'))\n\nFailure\n~~~~~~~\n\n.. code:: python\n\n    from ibm_watson import MyService, ApiException\n\n    try:\n        service = MyService(authenticator=my_authenticators)\n        service.my_service_call()\n    except ApiException as e:\n        print(e.global_transaction_id)\n        # OR\n        print(e.http_response.headers.get('x-global-transaction-id'))\n\nUsing Websockets\n----------------\n\nThe Text to Speech service supports synthesizing text to spoken audio\nusing web sockets with the ``synthesize_using_websocket``. The Speech to\nText service supports recognizing speech to text using web sockets with\nthe ``recognize_using_websocket``. These methods need a custom callback\nclass to listen to events. Below is an example of\n``synthesize_using_websocket``. Note: The service accepts one request\nper connection.\n\n.. code:: py\n\n    from ibm_watson.websocket import SynthesizeCallback\n\n    class MySynthesizeCallback(SynthesizeCallback):\n        def __init__(self):\n            SynthesizeCallback.__init__(self)\n\n        def on_audio_stream(self, audio_stream):\n            return audio_stream\n\n        def on_data(self, data):\n            return data\n\n    my_callback = MySynthesizeCallback()\n    service.synthesize_using_websocket('I like to pet dogs',\n                                       my_callback,\n                                       accept='audio/wav',\n                                       voice='en-US_AllisonVoice'\n                                      )\n\nCloud Pak for Data\n------------------\n\nIf your service instance is of CP4D, below are two ways of initializing\nthe assistant service.\n\n1) Supplying the username, password and authentication url\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe SDK will manage the token for the user\n\n.. code:: python\n\n    from ibm_watson import AssistantV1\n    from ibm_cloud_sdk_core.authenticators import CloudPakForDataAuthenticator\n\n    authenticator = CloudPakForDataAuthenticator(\n        '<your username>',\n        '<your password>',\n        '<authentication url>', # should be of the form https://{icp_cluster_host}{instance-id}/api\n        disable_ssl_verification=True) # Disable ssl verification for authenticator\n\n    assistant = AssistantV1(\n        version='<version>',\n        authenticator=authenticator)\n    assistant.set_service_url('<service url>') # should be of the form https://{icp_cluster_host}/{deployment}/assistant/{instance-id}/api\n    assistant.set_disable_ssl_verification(True) # MAKE SURE SSL VERIFICATION IS DISABLED\n\n2) Supplying the access token\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n    from ibm_watson import AssistantV1\n    from ibm_cloud_sdk_core.authenticators import BearerTokenAuthenticator\n\n    authenticator = BearerTokenAuthenticator('your managed access token')\n    assistant = AssistantV1(version='<version>',\n                            authenticator=authenticator)\n    assistant.set_service_url('<service url>') # should be of the form https://{icp_cluster_host}/{deployment}/assistant/{instance-id}/api\n    assistant.set_disable_ssl_verification(True) # MAKE SURE SSL VERIFICATION IS DISABLED\n\nLogging\n-------\n\nEnable logging\n~~~~~~~~~~~~~~\n\n.. code:: python\n\n    import logging\n    logging.basicConfig(level=logging.DEBUG)\n\nThis would show output of the form:\n\n::\n\n    DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): iam.cloud.ibm.com:443\n    DEBUG:urllib3.connectionpool:https://iam.cloud.ibm.com:443 \"POST /identity/token HTTP/1.1\" 200 1809\n    DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): gateway.watsonplatform.net:443\n    DEBUG:urllib3.connectionpool:https://gateway.watsonplatform.net:443 \"POST /assistant/api/v1/workspaces?version=2018-07-10 HTTP/1.1\" 201 None\n    DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): gateway.watsonplatform.net:443\n    DEBUG:urllib3.connectionpool:https://gateway.watsonplatform.net:443 \"GET /assistant/api/v1/workspaces/883a2a44-eb5f-4b1a-96b0-32a90b475ea8?version=2018-07-10&export=true HTTP/1.1\" 200 None\n    DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): gateway.watsonplatform.net:443\n    DEBUG:urllib3.connectionpool:https://gateway.watsonplatform.net:443 \"DELETE /assistant/api/v1/workspaces/883a2a44-eb5f-4b1a-96b0-32a90b475ea8?version=2018-07-10 HTTP/1.1\" 200 28\n\nLow level request and response dump\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nTo get low level information of the requests/ responses:\n\n.. code:: python\n\n    from http.client import HTTPConnection\n    HTTPConnection.debuglevel = 1\n\nDependencies\n------------\n\n-  `requests <http://docs.python-requests.org/en/latest/>`__\n-  ``python_dateutil`` >= 2.5.3\n-  `responses <https://github.com/getsentry/responses>`__ for testing\n-  Following for web sockets support in speech to text\n-  ``websocket-client`` 0.48.0\n-  ``ibm_cloud_sdk_core`` == 1.0.0\n\nContributing\n------------\n\nSee\n`CONTRIBUTING.md <https://github.com/watson-developer-cloud/python-sdk/blob/master/CONTRIBUTING.md>`__.\n\nFeatured Projects\n-----------------\n\nHere are some projects that have been using the SDK:\n\n-  `NLC ICD-10\n   Classifier <https://github.com/IBM/nlc-icd10-classifier>`__\n-  `Cognitive Moderator\n   Service <https://github.com/IBM/cognitive-moderator-service>`__\n\nWe'd love to highlight cool open-source projects that use this SDK! If\nyou'd like to get your project added to the list, feel free to make an\nissue linking us to it.\n\nLicense\n-------\n\nThis library is licensed under the `Apache 2.0\nlicense <http://www.apache.org/licenses/LICENSE-2.0>`__.\n\n.. |Build Status| image:: https://travis-ci.org/watson-developer-cloud/python-sdk.svg?branch=master\n   :target: https://travis-ci.org/watson-developer-cloud/python-sdk\n.. |Slack| image:: https://wdc-slack-inviter.mybluemix.net/badge.svg\n   :target: https://wdc-slack-inviter.mybluemix.net\n.. |Latest Stable Version| image:: https://img.shields.io/pypi/v/ibm-watson.svg\n   :target: https://pypi.python.org/pypi/ibm-watson\n.. |CLA assistant| image:: https://cla-assistant.io/readme/badge/watson-developer-cloud/python-sdk\n   :target: https://cla-assistant.io/watson-developer-cloud/python-sdk", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/watson-developer-cloud/python-sdk", "keywords": "language,vision,question and answer tone_analyzer,natural language classifier,text to speech,language translation,language identification,concept expansion,machine translation,personality insights,message resonance,watson developer cloud,wdc,watson,ibm,dialog,user modeling,tone analyzer,speech to text,visual recognition", "license": "Apache 2.0", "maintainer": "", "maintainer_email": "", "name": "ibm-watson", "package_url": "https://pypi.org/project/ibm-watson/", "platform": "", "project_url": "https://pypi.org/project/ibm-watson/", "project_urls": {"Homepage": "https://github.com/watson-developer-cloud/python-sdk"}, "release_url": "https://pypi.org/project/ibm-watson/4.3.0/", "requires_dist": null, "requires_python": "", "summary": "Client library to use the IBM Watson Services", "version": "4.3.0"}, "last_serial": 6625765, "releases": {"2.10.0": [{"comment_text": "", "digests": {"md5": "cf0e42e491b70a4426cf70231932eb45", "sha256": "93e5055b8751ece73fcc83b32a7c87111932ffd106eb7a994d6573031c3421ad"}, "downloads": -1, "filename": "ibm-watson-2.10.0.tar.gz", "has_sig": false, "md5_digest": "cf0e42e491b70a4426cf70231932eb45", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 245908, "upload_time": "2019-03-30T00:47:43", "upload_time_iso_8601": "2019-03-30T00:47:43.864191Z", "url": "https://files.pythonhosted.org/packages/ec/8c/c3d126af24bec361db542c2a8fc4471251823ffc634449daed83535d64ba/ibm-watson-2.10.0.tar.gz"}], "3.0.1": [{"comment_text": "", "digests": {"md5": "4d1151ce4ce4452c7ddf871ba78cbdb8", "sha256": "307a1e445344b61c7840d9b12b5618355dd5848162ef30d2e429e45a89437ad5"}, "downloads": -1, "filename": "ibm-watson-3.0.1.tar.gz", "has_sig": false, "md5_digest": "4d1151ce4ce4452c7ddf871ba78cbdb8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 245856, "upload_time": "2019-03-30T15:57:35", "upload_time_iso_8601": "2019-03-30T15:57:35.981345Z", "url": "https://files.pythonhosted.org/packages/89/d7/a21b8d46f5a618a4c4ccd34b5f6269fe41593ee7386be472325c8ed0a270/ibm-watson-3.0.1.tar.gz"}], "3.0.2": [{"comment_text": "", "digests": {"md5": "a1129e688a617396223240ea52345466", "sha256": "cfb16130ff1d6f1f76eeecf1c7907976872715bf21de59b0e3bbd723b709a5c7"}, "downloads": -1, "filename": "ibm-watson-3.0.2.tar.gz", "has_sig": false, "md5_digest": "a1129e688a617396223240ea52345466", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 245924, "upload_time": "2019-04-02T23:24:58", "upload_time_iso_8601": "2019-04-02T23:24:58.198058Z", "url": "https://files.pythonhosted.org/packages/36/a6/715d2085ba3386b1ab8a2c4e1a7c85b72710b697d89b05707105f37a0d2a/ibm-watson-3.0.2.tar.gz"}], "3.0.3": [{"comment_text": "", "digests": {"md5": "862a4bc2332d2b9a11d8c09d007ce65f", "sha256": "2229860e6381d27c1ef88060bc2ec569486d8cf605b5339ed0075b0e8bac3bae"}, "downloads": -1, "filename": "ibm-watson-3.0.3.tar.gz", "has_sig": false, "md5_digest": "862a4bc2332d2b9a11d8c09d007ce65f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 245772, "upload_time": "2019-04-03T16:29:16", "upload_time_iso_8601": "2019-04-03T16:29:16.704995Z", "url": "https://files.pythonhosted.org/packages/7f/65/03990ac67ee1772f59cb38acb71504eded748a6614b3668b955cc68a1a64/ibm-watson-3.0.3.tar.gz"}], "3.0.4": [{"comment_text": "", "digests": {"md5": "34d13d4694d379d64f32ec8802438aec", "sha256": "6ffa08ad976e530cc12a8414e7a2f8e215d085626a84027b48966c8b23c4a6b1"}, "downloads": -1, "filename": "ibm-watson-3.0.4.tar.gz", "has_sig": false, "md5_digest": "34d13d4694d379d64f32ec8802438aec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 246352, "upload_time": "2019-05-09T17:19:29", "upload_time_iso_8601": "2019-05-09T17:19:29.779999Z", "url": "https://files.pythonhosted.org/packages/af/82/a0a8555e37c6822bc63b6170d6f30d3681c3ec987b3ab9b8f83f9b3887a3/ibm-watson-3.0.4.tar.gz"}], "3.1.2": [{"comment_text": "", "digests": {"md5": "24d0aa79f708bf7fe715971de9908f90", "sha256": "27d3c2c572e7eab158127cd55c38ee92d67a713a46aa6f2d0a77390408afce71"}, "downloads": -1, "filename": "ibm-watson-3.1.2.tar.gz", "has_sig": false, "md5_digest": "24d0aa79f708bf7fe715971de9908f90", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 270529, "upload_time": "2019-07-03T22:44:38", "upload_time_iso_8601": "2019-07-03T22:44:38.501542Z", "url": "https://files.pythonhosted.org/packages/b6/c5/e45a14ba0e7b2ceb32fc6963d2854619ddf97934150f3728e9587653ea25/ibm-watson-3.1.2.tar.gz"}], "3.2.0": [{"comment_text": "", "digests": {"md5": "7880e0b4d5a3d86a857e5a5256d940a8", "sha256": "afa588880572bd47ab94db23d1467e4ea269e5ae60ffe121301c93ee24ab6d79"}, "downloads": -1, "filename": "ibm-watson-3.2.0.tar.gz", "has_sig": false, "md5_digest": "7880e0b4d5a3d86a857e5a5256d940a8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 276686, "upload_time": "2019-07-24T19:25:29", "upload_time_iso_8601": "2019-07-24T19:25:29.430271Z", "url": "https://files.pythonhosted.org/packages/7e/80/8e452a4ba3cd2b79134a58f8f2c419c0fb6d37841d2beab1092cdaaf90d2/ibm-watson-3.2.0.tar.gz"}], "3.3.0": [{"comment_text": "", "digests": {"md5": "9bacb68620b2d7f1704eb43c2d79439d", "sha256": "836011359d2c3c5a5a7ec2435b70122af1a7fcbac0ca0feab5d0c8e79d7ec256"}, "downloads": -1, "filename": "ibm-watson-3.3.0.tar.gz", "has_sig": false, "md5_digest": "9bacb68620b2d7f1704eb43c2d79439d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 276693, "upload_time": "2019-08-08T14:30:13", "upload_time_iso_8601": "2019-08-08T14:30:13.659239Z", "url": "https://files.pythonhosted.org/packages/ad/d4/4881fec032f84637546492ec7a68ae228197feb92ae512d0728b1f2b931e/ibm-watson-3.3.0.tar.gz"}], "3.4.0": [{"comment_text": "", "digests": {"md5": "d466957dfd487dcfb02b523246303756", "sha256": "5f8be459630dc577c0000d93a94ff6139827c9161d7113574a6bc0beeac88d0d"}, "downloads": -1, "filename": "ibm-watson-3.4.0.tar.gz", "has_sig": false, "md5_digest": "d466957dfd487dcfb02b523246303756", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 276255, "upload_time": "2019-08-22T00:52:18", "upload_time_iso_8601": "2019-08-22T00:52:18.187939Z", "url": "https://files.pythonhosted.org/packages/cd/82/14f5228b343d860545cd51738dff18f8f88825d2ff806716d9b721930d63/ibm-watson-3.4.0.tar.gz"}], "3.4.1": [{"comment_text": "", "digests": {"md5": "ea42f665510eb79bc13c9cd5ea4a6bd7", "sha256": "0f0820e9619a38de023014e291674133682e6b8b0769573f14bed562f84c4cb4"}, "downloads": -1, "filename": "ibm-watson-3.4.1.tar.gz", "has_sig": false, "md5_digest": "ea42f665510eb79bc13c9cd5ea4a6bd7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 276251, "upload_time": "2019-09-27T21:13:02", "upload_time_iso_8601": "2019-09-27T21:13:02.697735Z", "url": "https://files.pythonhosted.org/packages/07/90/21b7c8c7f1f7d553884ac793d42a8a730be75dfe1995a19f4c62fca0ef6f/ibm-watson-3.4.1.tar.gz"}], "3.4.2": [{"comment_text": "", "digests": {"md5": "9d1ab7981d99b8f0f555bc118cd87a50", "sha256": "ccb7e55aecd9320e6d3838d89fee86dbbbb73f37ce002b3912d4983ddb436c08"}, "downloads": -1, "filename": "ibm-watson-3.4.2.tar.gz", "has_sig": false, "md5_digest": "9d1ab7981d99b8f0f555bc118cd87a50", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 276234, "upload_time": "2019-10-02T20:00:57", "upload_time_iso_8601": "2019-10-02T20:00:57.804646Z", "url": "https://files.pythonhosted.org/packages/ee/bf/a3c4490c896725f3ba2213e8cbd5c51a47752d9996b5d8d302da6112b54f/ibm-watson-3.4.2.tar.gz"}], "4.0.0": [{"comment_text": "", "digests": {"md5": "dc598ca04746dcb29d68660ffb172649", "sha256": "25c2cd0b70def16f42c9b920460bd336af50c0db0e41eb20c2462b040f571c16"}, "downloads": -1, "filename": "ibm-watson-4.0.0.tar.gz", "has_sig": false, "md5_digest": "dc598ca04746dcb29d68660ffb172649", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 297670, "upload_time": "2019-10-04T15:52:30", "upload_time_iso_8601": "2019-10-04T15:52:30.941958Z", "url": "https://files.pythonhosted.org/packages/c4/3f/63e610c014877a045a9c18e58eff1e0a0162bb32bcced98f1894dfc13e5e/ibm-watson-4.0.0.tar.gz"}], "4.0.0rc1": [{"comment_text": "", "digests": {"md5": "7204026a98180cfe6e721ec791f2ed49", "sha256": "4ecc2c2282762a5b0f3d9ca1851097f23d70ba92706fc8cc999914128069d46a"}, "downloads": -1, "filename": "ibm-watson-4.0.0rc1.tar.gz", "has_sig": false, "md5_digest": "7204026a98180cfe6e721ec791f2ed49", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 294431, "upload_time": "2019-08-30T19:11:52", "upload_time_iso_8601": "2019-08-30T19:11:52.099411Z", "url": "https://files.pythonhosted.org/packages/52/cb/bcd83ec8bdd46a23574e7e4915fa7d607beb342267331e009c480ff85a5f/ibm-watson-4.0.0rc1.tar.gz"}], "4.0.1": [{"comment_text": "", "digests": {"md5": "f14e3e532bd334504136294b9ff5d367", "sha256": "39ebe6344347a0e05386e1cd2832c0790c5c6e39d5188cf6251d004fffdf6051"}, "downloads": -1, "filename": "ibm-watson-4.0.1.tar.gz", "has_sig": false, "md5_digest": "f14e3e532bd334504136294b9ff5d367", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 297685, "upload_time": "2019-10-04T18:05:12", "upload_time_iso_8601": "2019-10-04T18:05:12.690886Z", "url": "https://files.pythonhosted.org/packages/d0/30/6e444a420b533b53e6b8ab4318ce1a9b19662067515aca0351403bdb615c/ibm-watson-4.0.1.tar.gz"}], "4.0.4": [{"comment_text": "", "digests": {"md5": "fe495154e8a9ab6308bba5d08467e92d", "sha256": "5e3acfcdc368a4df3a9ae1dd8dca8b2c8ffc54ff3b4f9a1c244429026363c651"}, "downloads": -1, "filename": "ibm-watson-4.0.4.tar.gz", "has_sig": false, "md5_digest": "fe495154e8a9ab6308bba5d08467e92d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 297846, "upload_time": "2019-11-22T21:04:57", "upload_time_iso_8601": "2019-11-22T21:04:57.089372Z", "url": "https://files.pythonhosted.org/packages/e5/66/2110031e0c296b7e0fbc01ed4941c2c188fb483c8dcf9561873c7062efe6/ibm-watson-4.0.4.tar.gz"}], "4.1.0": [{"comment_text": "", "digests": {"md5": "15db914fc85b56f6df532e147328fb69", "sha256": "9a278db5eb5594f60eb68ca3791b4dd8f505b474769e7fee4b3c58cd0df1701a"}, "downloads": -1, "filename": "ibm-watson-4.1.0.tar.gz", "has_sig": false, "md5_digest": "15db914fc85b56f6df532e147328fb69", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 324357, "upload_time": "2019-11-27T16:57:30", "upload_time_iso_8601": "2019-11-27T16:57:30.025434Z", "url": "https://files.pythonhosted.org/packages/0e/9d/6ffcc65ec8fde09bb942aa2024cb1f9aeaca03ad4b4ec16ab9ad6955492b/ibm-watson-4.1.0.tar.gz"}], "4.2.0": [{"comment_text": "", "digests": {"md5": "7d932e60b93f3485256e8e39768cf8f4", "sha256": "fb18ca010bd045097b07e86a283d7c86b815695ba40af332f0e7b8eddca74f9f"}, "downloads": -1, "filename": "ibm-watson-4.2.0.tar.gz", "has_sig": false, "md5_digest": "7d932e60b93f3485256e8e39768cf8f4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 348756, "upload_time": "2020-01-16T23:20:26", "upload_time_iso_8601": "2020-01-16T23:20:26.525904Z", "url": "https://files.pythonhosted.org/packages/f9/cd/767d315bb21b81a4b7c1b0b2cbe6c101757d876fa98b44ff12db1c90a3de/ibm-watson-4.2.0.tar.gz"}], "4.2.1": [{"comment_text": "", "digests": {"md5": "8f6ac2baf3e8f0779924cef819557f10", "sha256": "93ff6b266641ed1bf6566c2b82d249e40c08fffd328a897db267d2dad46e6e2f"}, "downloads": -1, "filename": "ibm-watson-4.2.1.tar.gz", "has_sig": false, "md5_digest": "8f6ac2baf3e8f0779924cef819557f10", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 348962, "upload_time": "2020-01-17T22:44:52", "upload_time_iso_8601": "2020-01-17T22:44:52.732459Z", "url": "https://files.pythonhosted.org/packages/da/f4/7e256026ee22c75a630c6de53eb45b6fef4840ac6728b80a92dd2e523a1a/ibm-watson-4.2.1.tar.gz"}], "4.3.0": [{"comment_text": "", "digests": {"md5": "309ef64cb819871b2163311f59648416", "sha256": "e63aa9cba00d0b00eba82c78a40caf62876001b75dacb5ab7244023367894774"}, "downloads": -1, "filename": "ibm-watson-4.3.0.tar.gz", "has_sig": false, "md5_digest": "309ef64cb819871b2163311f59648416", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 360393, "upload_time": "2020-02-13T20:29:41", "upload_time_iso_8601": "2020-02-13T20:29:41.132445Z", "url": "https://files.pythonhosted.org/packages/68/b8/b0cbd12e1813a8cc936619e88e1c54a3475dcb38aff7595b339ddf75fd39/ibm-watson-4.3.0.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "309ef64cb819871b2163311f59648416", "sha256": "e63aa9cba00d0b00eba82c78a40caf62876001b75dacb5ab7244023367894774"}, "downloads": -1, "filename": "ibm-watson-4.3.0.tar.gz", "has_sig": false, "md5_digest": "309ef64cb819871b2163311f59648416", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 360393, "upload_time": "2020-02-13T20:29:41", "upload_time_iso_8601": "2020-02-13T20:29:41.132445Z", "url": "https://files.pythonhosted.org/packages/68/b8/b0cbd12e1813a8cc936619e88e1c54a3475dcb38aff7595b339ddf75fd39/ibm-watson-4.3.0.tar.gz"}]}