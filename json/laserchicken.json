{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: Apache Software License", "Programming Language :: Python"], "description": "<p align=\"left\">\n  <img src=\"https://raw.githubusercontent.com/eEcoLiDAR/laserchicken/master/laserchicken_logo.png\" width=\"500\"/>\n</p>\n\n[![Build Status](https://travis-ci.org/eEcoLiDAR/laserchicken.svg?branch=master)](https://travis-ci.org/eEcoLiDAR/laserchicken)\n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/6e3836750fe14f34ba85e26956e8ef10)](https://www.codacy.com/app/c-meijer/eEcoLiDAR?utm_source=www.github.com&amp;utm_medium=referral&amp;utm_content=eEcoLiDAR/eEcoLiDAR&amp;utm_campaign=Badge_Grade)\n[![Coverage Status](https://coveralls.io/repos/github/eEcoLiDAR/eEcoLiDAR/badge.svg)](https://coveralls.io/github/eEcoLiDAR/eEcoLiDAR)\n[![DOI](https://zenodo.org/badge/95649056.svg)](https://zenodo.org/badge/latestdoi/95649056)\n[![Documentation Status](https://readthedocs.org/projects/laserchicken/badge/?version=latest)](https://laserchicken.readthedocs.io/en/latest/)\n\nToolkit for handling point clouds created using airborne laser scanning (ALS). Find neighboring points in your point cloud and describe them as feature values. Read our [user manual](https://laserchicken.readthedocs.io/) and our (very modest) [tutorial](https://github.com/eEcoLiDAR/laserchicken/blob/master/tutorial.ipynb).\n\n# Installation\nPrerequisites:\n- Python 3.5 or higher\n- pip\n```\npip install laserchicken\n```\n\n\n\n## Feature testing\n\nAll features were tested for the following general conditions:\n- Output consistent point clouds and don't crash with artificial data, real data, all zero data (x, y or z), data without points, data with very low number of neighbors (0, 1, 2)\n- Input should not be changed by the feature extractor\n\nThe specific features were tested as follows.\n\n*Echo ratio*\n\nA test was written with artificial data to check the correctness of the calculation with manually calculated ratio. Also tested on real data to make sure it doesn't crash, without checking for correctness. We could add a test for correctness with real data but we would need both that data and a verified ground truth.\n\n*Eigenvalues*\n\nOnly sanity tests (l1>l2>l3) on real data and corner cases but no actual test for correctness. The code is very simple though and mainly calls numpy.linalg.eig.\n\n*Height statistics (max_z','min_z','mean_z','median_z','std_z','var_z','coeff_var_z','skew_z','kurto_z)*\n\nTested on real data for correctness. It is however unclear where the ground truths come from. Code is mainly calling numpy methods that do all the work already. Only calculations in our code are:\n\n```\nrange_z = max_z - min_z\ncoeff_var_z = np.std(z) / np.mean(z)\n```\n\nI don't know about any packages that could provide an out of the box coefficient of variance. This is probably because the calculation is so simple.\n\n*Pulse penetration ratio*\n\nTested for correctness using artificial data against manually calculated values. No comparison was made with other implementations.\n\n*Sigma_z*\n\nTested for correctness using artificial data against manually calculated values. No comparison was made with other implementations.\n\n*Percentiles*\n\nTested for correctness using a simple case with artificial data against manually calculated values.\n\n*point_density*\n\nTested for correctness on artificial data.\n\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/eEcoLiDAR/eEcoLiDAR", "keywords": "Python,Point cloud", "license": "Apache 2.0", "maintainer": "", "maintainer_email": "", "name": "laserchicken", "package_url": "https://pypi.org/project/laserchicken/", "platform": "", "project_url": "https://pypi.org/project/laserchicken/", "project_urls": {"Homepage": "https://github.com/eEcoLiDAR/eEcoLiDAR"}, "release_url": "https://pypi.org/project/laserchicken/0.3.2/", "requires_dist": ["laspy", "scikit-learn (>=0.15.0)", "scipy (>=0.11)", "pytest", "mock", "plyfile", "python-dateutil", "shapely", "PyShp", "pandas", "click", "colorama", "psutil", "numpy"], "requires_python": "", "summary": "Point cloud toolkit", "version": "0.3.2"}, "last_serial": 6285858, "releases": {"0.3.1": [{"comment_text": "", "digests": {"md5": "7da523852fd32062e2a23ce93d613737", "sha256": "c2300d45a6eee32301925aa7529495e77764805bec3ee387c23ad3e3dbfafdb5"}, "downloads": -1, "filename": "laserchicken-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7da523852fd32062e2a23ce93d613737", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 34057, "upload_time": "2019-10-15T07:49:52", "upload_time_iso_8601": "2019-10-15T07:49:52.516657Z", "url": "https://files.pythonhosted.org/packages/0a/03/c8e51d92216786ca313fbea785bca1ea6e3323955ede69a1acdacf2c4d6a/laserchicken-0.3.1-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "70c76b3c786faa9d09f4a42d96156eb1", "sha256": "18275a8787237e41c5190f0859cef1dd84e730446a38a656caaf4dcc0874482a"}, "downloads": -1, "filename": "laserchicken-0.3.1.tar.gz", "has_sig": false, "md5_digest": "70c76b3c786faa9d09f4a42d96156eb1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22743, "upload_time": "2019-10-15T07:49:54", "upload_time_iso_8601": "2019-10-15T07:49:54.938793Z", "url": "https://files.pythonhosted.org/packages/ab/38/3642f35fa4c24ca8c779a4fb6bdfb122a37b0acbda67847470b9b3967d6d/laserchicken-0.3.1.tar.gz"}], "0.3.2": [{"comment_text": "", "digests": {"md5": "294ec261244fb82867fef247e7c64d93", "sha256": "5dc7f2f81a590c4c01092338f12b6e45ceec15061724e0ac3f01278bbb557c8f"}, "downloads": -1, "filename": "laserchicken-0.3.2-py3-none-any.whl", "has_sig": false, "md5_digest": "294ec261244fb82867fef247e7c64d93", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 35109, "upload_time": "2019-12-12T13:27:18", "upload_time_iso_8601": "2019-12-12T13:27:18.179382Z", "url": "https://files.pythonhosted.org/packages/b5/23/86b683aa029d0f586caf598c951c4457e5519157b5cedbb586b6c0dc8dfb/laserchicken-0.3.2-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "9889ced901b708b1bdba43e1adad8581", "sha256": "efc150101da7593491e1da407bf3febb36e2e373c8fe25e9268234521a21c75f"}, "downloads": -1, "filename": "laserchicken-0.3.2.tar.gz", "has_sig": false, "md5_digest": "9889ced901b708b1bdba43e1adad8581", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23115, "upload_time": "2019-12-12T13:27:19", "upload_time_iso_8601": "2019-12-12T13:27:19.799615Z", "url": "https://files.pythonhosted.org/packages/98/bd/d9033ecc1f87fe58e97681f4941b7e8c8d9120ef44e55fa4aa60db9860f7/laserchicken-0.3.2.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "294ec261244fb82867fef247e7c64d93", "sha256": "5dc7f2f81a590c4c01092338f12b6e45ceec15061724e0ac3f01278bbb557c8f"}, "downloads": -1, "filename": "laserchicken-0.3.2-py3-none-any.whl", "has_sig": false, "md5_digest": "294ec261244fb82867fef247e7c64d93", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 35109, "upload_time": "2019-12-12T13:27:18", "upload_time_iso_8601": "2019-12-12T13:27:18.179382Z", "url": "https://files.pythonhosted.org/packages/b5/23/86b683aa029d0f586caf598c951c4457e5519157b5cedbb586b6c0dc8dfb/laserchicken-0.3.2-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "9889ced901b708b1bdba43e1adad8581", "sha256": "efc150101da7593491e1da407bf3febb36e2e373c8fe25e9268234521a21c75f"}, "downloads": -1, "filename": "laserchicken-0.3.2.tar.gz", "has_sig": false, "md5_digest": "9889ced901b708b1bdba43e1adad8581", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23115, "upload_time": "2019-12-12T13:27:19", "upload_time_iso_8601": "2019-12-12T13:27:19.799615Z", "url": "https://files.pythonhosted.org/packages/98/bd/d9033ecc1f87fe58e97681f4941b7e8c8d9120ef44e55fa4aa60db9860f7/laserchicken-0.3.2.tar.gz"}]}