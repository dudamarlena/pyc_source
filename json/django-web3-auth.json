{"info": {"author": "Bearle", "author_email": "tech@bearle.ru", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Framework :: Django :: 1.11", "Framework :: Django :: 2.0", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "=============================\nDjango-Web3-Auth\n=============================\n\n.. image:: https://badge.fury.io/py/django-web3-auth.svg\n    :target: https://badge.fury.io/py/django-web3-auth\n\n.. image:: https://travis-ci.org/Bearle/django-web3-auth.svg?branch=master\n    :target: https://travis-ci.org/Bearle/django-web3-auth\n\n.. image:: https://codecov.io/gh/Bearle/django-web3-auth/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/Bearle/django-web3-auth\n\ndjango-web3-auth is a pluggable Django app that enables login/signup via an Ethereum wallet (a la CryptoKitties). The user authenticates themselves by digitally signing the session key with their wallet's private key.\n\n.. image:: https://github.com/Bearle/django-web3-auth/blob/master/docs/_static/web3_auth_test.gif?raw=true\n\nDocumentation\n-------------\n\nThe full documentation is at https://django-web3-auth.readthedocs.io.\n\nExample project\n---------------\n\nhttps://github.com/Bearle/django-web3-auth/tree/master/example\n\nYou can check out our example project by cloning the repo and heading into example/ directory.\nThere is a README file for you to check, also.\n\n\nFeatures\n--------\n\n* Web3 API login, signup\n* Web3 Django forms for signup, login\n* Checks ethereum address validity\n* Uses random token signing as proof of private key posession\n* Easy to set up and use (just one click)\n* Custom auth backend\n* VERY customizable - uses Django settings, allows for custom User model\n* Vanilla Javascript helpers included\n\nQuickstart\n----------\ndjango-web3-auth has no releases yet, you'll need to install it from repository::\n\n    pip install https://github.com/Bearle/django-web3-auth/archive/master.zip\n\nWhen it becomes available on pypi, install Django-Web3-Auth with pip::\n\n    pip install django-web3-auth\n\nAdd it to your `INSTALLED_APPS`:\n\n.. code-block:: python\n\n    INSTALLED_APPS = (\n        ...\n        'web3auth.apps.Web3AuthConfig',\n        ...\n    )\nSet `'web3auth.backend.Web3Backend'` as your authentication backend:\n\n.. code-block:: python\n\n    AUTHENTICATION_BACKENDS = [\n    'django.contrib.auth.backends.ModelBackend',\n    'web3auth.backend.Web3Backend'\n    ]\nSet your User model's field to use as ETH address provider:\n\n.. code-block:: python\n\n    WEB3AUTH_USER_ADDRESS_FIELD = 'username'\n\nAnd if you have some other fields you want to be in the SignupForm, add them too:\n\n.. code-block:: python\n\n    WEB3AUTH_USER_SIGNUP_FIELDS = ['email',]\n\n\nAdd Django-Web3-Auth's URL patterns:\n\n.. code-block:: python\n\n    from web3auth import urls as web3auth_urls\n\n\n    urlpatterns = [\n        ...\n        url(r'^', include(web3auth_urls)),\n        ...\n    ]\n\nAdd some javascript to handle login:\n\n\n.. code-block:: html\n\n    <script src=\"{% static 'web3auth/js/web3auth.js' %}\"></script>\n\n\n.. code-block:: javascript\n\n    function startLogin() {\n      if (typeof web3 !== 'undefined') {\n        checkWeb3(function (loggedIn) {\n          if (!loggedIn) {\n            alert(\"Please unlock your web3 provider (probably, Metamask)\")\n          } else {\n            var login_url = '{% url 'web3auth_login_api' %}';\n            web3Login(login_url, console.log, console.log, console.log, console.log, console.log, function (resp) {\n              console.log(resp);\n              window.location.replace(resp.redirect_url);\n            });\n          }\n        });\n\n      } else {\n        alert('web3 missing');\n      }\n    }\n\nYou can access signup using {% url 'web3auth_signup' %}.\n\nIf you have any questions left, head to the example app https://github.com/Bearle/django-web3-auth/tree/master/example\n\n\n\nImportant details and FAQ\n-------------------------\n\n1. *If you set a custom address field (WEB3AUTH_USER_ADDRESS_FIELD), it MUST be unique (unique=True).*\n\nThis is needed because if it's not, the user can register a new account with the same address as the other one,\nmeaning that the user can now login as any of those accounts (sometimes being the wrong one).\n\n2. *How do i deal with user passwords or Password is not set*\nThere should be some code in your project that generates a password using ``User.objects.make_random_password`` and sends it to a user email.\nOr, even better, sends them a 'restore password' link.\nAlso, it's possible to copy signup_view to your project, assign it a url, and add the corresponding lines to set some password for a user.\n\n3. *Why do i have to sign a message? It's not needed in MyEtherWallet or other DApps!*\n\nThe main reason is that when using a DApp, you most likely don't have an account on the website, it's accessible only with web3 (Metamask).\nWhen using web3 only to sign into user account, it is necessary to prove your identity with a private key (e.g. sign a random message),\nbecause when we have backend we can't trust any user just by his knowledge of the public address.\nSigned message proves that user possesses the private key, associated with the address.\n\n\nRunning Tests\n-------------\n\nDoes the code actually work?\n\n::\n\n    source <YOURVIRTUALENV>/bin/activate\n    (myenv) $ pip install tox\n    (myenv) $ tox\n\nCredits\n-------\n\nTools used in rendering this package:\n\n*  Cookiecutter_\n*  `cookiecutter-djangopackage`_\n\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`cookiecutter-djangopackage`: https://github.com/pydanny/cookiecutter-djangopackage\n\n\n\n\nHistory\n-------\n\n0.1.0 (2018-06-24)\n++++++++++++++++++\n\n* Move to using cookiecutter-djangopackage\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Bearle/django-web3-auth", "keywords": "django-web3-auth", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "django-web3-auth", "package_url": "https://pypi.org/project/django-web3-auth/", "platform": "", "project_url": "https://pypi.org/project/django-web3-auth/", "project_urls": {"Homepage": "https://github.com/Bearle/django-web3-auth"}, "release_url": "https://pypi.org/project/django-web3-auth/0.1.0/", "requires_dist": null, "requires_python": "", "summary": "django-web3-auth is a pluggable Django app that enables login/signup via an Ethereum wallet (a la CryptoKitties). The user authenticates themselves by digitally signing the session key with their wallet's private key.", "version": "0.1.0"}, "last_serial": 4016113, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "28a254beab46b8184ae850fb9a43c69c", "sha256": "2b5018067465140f92be4b5ac54b7421937ed2651e2e0bbd3c620e988257b10c"}, "downloads": -1, "filename": "django_web3_auth-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "28a254beab46b8184ae850fb9a43c69c", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 15010, "upload_time": "2018-06-29T17:38:41", "upload_time_iso_8601": "2018-06-29T17:38:41.214457Z", "url": "https://files.pythonhosted.org/packages/ad/2e/11a27a3c5072307167a075179b85e8629d8c5c66344a7b287ab5dddd2551/django_web3_auth-0.1.0-py2.py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "796ea806abbdc2ba54ea17e548772030", "sha256": "d58db8bc4da031e92b17edb138837539af3cab09fe3424ddb3d68f2e09542c28"}, "downloads": -1, "filename": "django-web3-auth-0.1.0.tar.gz", "has_sig": false, "md5_digest": "796ea806abbdc2ba54ea17e548772030", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11797, "upload_time": "2018-06-29T17:38:38", "upload_time_iso_8601": "2018-06-29T17:38:38.576325Z", "url": "https://files.pythonhosted.org/packages/96/b0/5875544442e4235357756c4f2d6ffdcc48d0c90f2545068ca01bf60abfb1/django-web3-auth-0.1.0.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "28a254beab46b8184ae850fb9a43c69c", "sha256": "2b5018067465140f92be4b5ac54b7421937ed2651e2e0bbd3c620e988257b10c"}, "downloads": -1, "filename": "django_web3_auth-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "28a254beab46b8184ae850fb9a43c69c", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 15010, "upload_time": "2018-06-29T17:38:41", "upload_time_iso_8601": "2018-06-29T17:38:41.214457Z", "url": "https://files.pythonhosted.org/packages/ad/2e/11a27a3c5072307167a075179b85e8629d8c5c66344a7b287ab5dddd2551/django_web3_auth-0.1.0-py2.py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "796ea806abbdc2ba54ea17e548772030", "sha256": "d58db8bc4da031e92b17edb138837539af3cab09fe3424ddb3d68f2e09542c28"}, "downloads": -1, "filename": "django-web3-auth-0.1.0.tar.gz", "has_sig": false, "md5_digest": "796ea806abbdc2ba54ea17e548772030", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11797, "upload_time": "2018-06-29T17:38:38", "upload_time_iso_8601": "2018-06-29T17:38:38.576325Z", "url": "https://files.pythonhosted.org/packages/96/b0/5875544442e4235357756c4f2d6ffdcc48d0c90f2545068ca01bf60abfb1/django-web3-auth-0.1.0.tar.gz"}]}