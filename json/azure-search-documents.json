{"info": {"author": "Microsoft Corporation", "author_email": "ascl@microsoft.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# Azure Cognitive Search client library for Python\n\nAzure Cognitive Search is a fully managed cloud search service that provides a rich search experience to custom applications.\n\n[Source code](https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/search/azure-search-documents) |\n[Package (PyPI)](https://pypi.org/project/azure-search-documents/) |\n[API reference documentation](https://aka.ms/azsdk-python-search-ref-docs) |\n[Product documentation](https://docs.microsoft.com/en-us/azure/search/search-what-is-azure-search) |\n[Samples](https://github.com/Azure/azure-sdk-for-python/tree/76f599e28851f5a2430129785dcf46391250313a/sdk/search/azure-search-documents/samples)\n\n\n## Getting started\n\n### Prerequisites\n\n* Python 2.7, or 3.5 or later is required to use this package.\n* You must have an [Azure subscription][azure_sub] and an existing\n[Azure Cognitive Search service][search_resource] to use this package.\n\nIf you need to create the resource, you can use the [Azure Portal][azure_portal] or [Azure CLI][azure_cli].\n\nIf you use the Azure CLI, replace `<your-resource-group-name>` and `<your-resource-name>` with your own unique names:\n\n```PowerShell\naz search service create --resource-group <your-resource-group-name> --name <your-resource-name> --sku S\n```\n\nThe above creates a resource with the \"Standard\" pricing tier. See [choosing a pricing tier](https://docs.microsoft.com/en-us/azure/search/search-sku-tier) for more information.\n\n\n### Install the package\n\nInstall the Azure Cognitive Search client library for Python with [pip](https://pypi.org/project/pip/):\n\n```bash\npip install azure-search-documents --pre\n```\n\n## Key concepts\n\nAzure Cognitive Search has the concepts of search services and indexes and documents, where a search service contains \none or more indexes that provides persistent storage of searchable data, and data is loaded in the form of JSON documents. \nData can be pushed to an index from an external data source, but if you use an indexer, it's possible to crawl a data \nsource to extract and load data into an index.\n\nThere are several types of operations that can be executed against the service:\n\n-   [Index management operations](https://docs.microsoft.com/en-us/rest/api/searchservice/index-operations). Create, delete, update, or configure a search index.\n-   [Document operations](https://docs.microsoft.com/en-us/rest/api/searchservice/document-operations). Add, update, or delete documents in the index, query the index, or look up specific documents by ID.\n-   [Indexer operations](https://docs.microsoft.com/en-us/rest/api/searchservice/indexer-operations). Automate aspects of an indexing operation by configuring a data source and an indexer that you can schedule or run on demand. This feature is supported for a limited number of data source types.\n-   [Skillset operations](https://docs.microsoft.com/en-us/rest/api/searchservice/skillset-operations). Part of a cognitive search workload, a skillset defines a series of a series of enrichment processing steps. A skillset is consumed by an indexer.\n-   [Synonym map operations](https://docs.microsoft.com/en-us/rest/api/searchservice/synonym-map-operations). A synonym map is a service-level resource that contains user-defined synonyms. This resource is maintained independently from search indexes. Once uploaded, you can point any searchable field to the synonym map (one per field).\n\n### Authenticate the client\n\nIn order to interact with the Cognitive Search service you'll need to create an instance of the Search Client class. \nTo make this possible you will need an [api-key of the Cognitive Search service](https://docs.microsoft.com/en-us/azure/search/search-security-api-keys).\n\nThe SDK provides two clients.\n\n1. SearchIndexClient for all document operations.\n2. SearchServiceClient for all CRUD operations on service resources.\n\n### Create a SearchServiceClient\n\nOnce you have the values of the Cognitive Search Service [service endpoint](https://docs.microsoft.com/en-us/azure/search/search-create-service-portal#get-a-key-and-url-endpoint) \nand [api key](https://docs.microsoft.com/en-us/azure/search/search-security-api-keys) you can create the Search Service client:\n\n```python\nfrom azure.core.credentials import AzureKeyCredential\nfrom azure.search import SearchServiceClient\n\ncredential = AzureKeyCredential(\"<api key>\")\n\nclient = SearchServiceClient(endpoint=\"<service endpoint>\"\n                           credential=credential)\n```\n\n### Create a SearchIndexClient\n\nTo create a SearchIndexClient, you will need an existing index name as well as the values of the Cognitive Search Service \n[service endpoint](https://docs.microsoft.com/en-us/azure/search/search-create-service-portal#get-a-key-and-url-endpoint) and \n[api key](https://docs.microsoft.com/en-us/azure/search/search-security-api-keys).\nNote that you will need an admin key to index documents (query keys only work for queries).\n\n```python\nfrom azure.core.credentials import AzureKeyCredential\nfrom azure.search import SearchIndexClient\n\ncredential = AzureKeyCredential(\"<api key>\")\n\nclient = SearchIndexClient(endpoint=\"<service endpoint>\",\n                           index_name=\"<index name>\",\n                           credential=credential)\n```\n\n## Examples\n\n### Create an index\nCreate a new index\n```python\nfrom azure.core.credentials import AzureKeyCredential\nfrom azure.search.documents import SearchServiceClient, CorsOptions, Index, ScoringProfile\nclient = SearchServiceClient(service_endpoint, AzureKeyCredential(key))\nname = \"hotels\"\n    fields = [\n        {\n            \"name\": \"hotelId\",\n            \"type\": \"Edm.String\",\n            \"key\": True,\n            \"searchable\": False\n        },\n        {\n            \"name\": \"baseRate\",\n            \"type\": \"Edm.Double\"\n        }]\n    cors_options = CorsOptions(allowed_origins=[\"*\"], max_age_in_seconds=60)\n    scoring_profiles = []\n    index = Index(\n        name=name,\n        fields=fields,\n        scoring_profiles=scoring_profiles,\n        cors_options=cors_options)\n\n    result = client.create_index(index)\n```\n\n### Upload documents to an index\nAdd documents (or update existing ones), e.g add a new document for a new hotel:\n```python\nfrom azure.core.credentials import AzureKeyCredential\nfrom azure.search import SearchIndexClient\nsearch_client = SearchIndexClient(service_endpoint, index_name, AzureKeyCredential(key))\n\nDOCUMENT = {\n    'Category': 'Hotel',\n    'HotelId': '1000',\n    'Rating': 4.0,\n    'Rooms': [],\n    'HotelName': 'Azure Inn',\n}\n\nresult = search_client.upload_documents(documents=[DOCUMENT])\n\nprint(\"Upload of new document succeeded: {}\".format(result[0].succeeded))\n```\n\n### Retrieve a specific document from an index\nGet a specific document from the index, e.f. obtain the document for hotel \"23\":\n```python\nfrom azure.core.credentials import AzureKeyCredential\nfrom azure.search import SearchIndexClient\nsearch_client = SearchIndexClient(service_endpoint, index_name, AzureKeyCredential(key))\n\nresult = search_client.get_document(key=\"23\")\n\nprint(\"Details for hotel '23' are:\")\nprint(\"        Name: {}\".format(result[\"HotelName\"]))\nprint(\"      Rating: {}\".format(result[\"Rating\"]))\nprint(\"    Category: {}\".format(result[\"Category\"]))\n```\n\n### Perform a simple text search on documents\nSearch the entire index or documents matching a simple search text, e.g. find\nhotels with the text \"spa\":\n```python\nfrom azure.core.credentials import AzureKeyCredential\nfrom azure.search import SearchIndexClient\nsearch_client = SearchIndexClient(service_endpoint, index_name, AzureKeyCredential(key))\n\nresults = search_client.search(query=\"spa\")\n\nprint(\"Hotels containing 'spa' in the name (or other fields):\")\nfor result in results:\n    print(\"    Name: {} (rating {})\".format(result[\"HotelName\"], result[\"Rating\"]))\n```\n\n### Get search suggestions\n\nGet search suggestions for related terms, e.g. find search suggestions for\nthe term \"coffee\":\n```python\nfrom azure.core.credentials import AzureKeyCredential\nfrom azure.search import SearchIndexClient, SuggestQuery\nsearch_client = SearchIndexClient(service_endpoint, index_name, AzureKeyCredential(key))\n\nquery = SuggestQuery(search_text=\"coffee\", suggester_name=\"sg\")\n\nresults = search_client.suggest(query=query)\n\nprint(\"Search suggestions for 'coffee'\")\nfor result in results:\n    hotel = search_client.get_document(key=result[\"HotelId\"])\n    print(\"    Text: {} for Hotel: {}\".format(repr(result[\"text\"]), hotel[\"HotelName\"]))\n```\n\n## Troubleshooting\n\n### General\n\nThe Azure Cognitive Search client will raise exceptions defined in [Azure Core][azure_core].\n\n### Logging\n\nThis library uses the standard [logging][python_logging] library for logging.\nBasic information about HTTP sessions (URLs, headers, etc.) is logged at INFO\nlevel.\n\netailed DEBUG level logging, including request/response bodies and unredacted\nheaders, can be enabled on a client with the `logging_enable` keyword argument:\n```python\nimport sys\nimport logging\nfrom azure.core.credentials import AzureKeyCredential\nfrom azure.search import SearchIndexClient\n\n# Create a logger for the 'azure' SDK\nlogger = logging.getLogger('azure')\nlogger.setLevel(logging.DEBUG)\n\n# Configure a console output\nhandler = logging.StreamHandler(stream=sys.stdout)\nlogger.addHandler(handler)\n\n# This client will log detailed information about its HTTP sessions, at DEBUG level\nsearch_client = SearchIndexClient(service_endpoint, index_name, AzureKeyCredential(key), logging_enable=True)\n```\n\nSimilarly, `logging_enable` can enable detailed logging for a single operation,\neven when it isn't enabled for the client:\n```python\nresult =  search_client.search(query=\"spa\", logging_enable=True)\n```\n\n## Next steps\n\n### Additional documentation\n\nFor more extensive documentation on Cognitive Search, see the [Azure Cognitive Search documentation](https://docs.microsoft.com/en-us/azure/search/) on docs.microsoft.com.\n\n## Contributing\n\nThis project welcomes contributions and suggestions.  Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit [cla.microsoft.com][cla].\n\nWhen you submit a pull request, a CLA-bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.\n\nThis project has adopted the [Microsoft Open Source Code of Conduct][code_of_conduct]. For more information see the [Code of Conduct FAQ][coc_faq] or contact [opencode@microsoft.com][coc_contact] with any additional questions or comments.\n\n## Related projects\n\n* [Microsoft Azure SDK for Python](https://github.com/Azure/azure-sdk-for-python)\n\n<!-- LINKS -->\n\n![Impressions](https://azure-sdk-impressions.azurewebsites.net/api/impressions/azure-sdk-for-python%2Fsdk%2Fsearch%2Fazure-search-documents%2FREADME.png)\n\n[azure_cli]: https://docs.microsoft.com/cli/azure\n[azure_core]: https://github.com/Azure/azure-sdk-for-python/tree/76f599e28851f5a2430129785dcf46391250313a/sdk/core/azure-core/README.md\n[azure_sub]: https://azure.microsoft.com/free/\n[search_resource]: https://docs.microsoft.com/en-us/azure/search/search-create-service-portal\n[azure_portal]: https://portal.azure.com\n\n[python_logging]: https://docs.python.org/3.5/library/logging.html\n\n[cla]: https://cla.microsoft.com\n[code_of_conduct]: https://opensource.microsoft.com/codeofconduct/\n[coc_faq]: https://opensource.microsoft.com/codeofconduct/faq/\n[coc_contact]: mailto:opencode@microsoft.com\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/search/azure-search-documents", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "azure-search-documents", "package_url": "https://pypi.org/project/azure-search-documents/", "platform": "", "project_url": "https://pypi.org/project/azure-search-documents/", "project_urls": {"Homepage": "https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/search/azure-search-documents"}, "release_url": "https://pypi.org/project/azure-search-documents/1.0.0b2/", "requires_dist": ["azure-core (<2.0.0,>=1.4.0.dev)", "msrest (>=0.6.10)", "futures ; python_version<'3.0'", "azure-search-nspkg ; python_version<'3.0'", "enum34 (>=1.0.4) ; python_version<'3.4'", "typing ; python_version<'3.5'"], "requires_python": "", "summary": "Microsoft Azure Cognitive Search Client Library for Python", "version": "1.0.0b2"}, "last_serial": 6971217, "releases": {"1.0.0b2": [{"comment_text": "", "digests": {"md5": "ac8793b9837d171c885e4c5726b0aa9c", "sha256": "bf09c3a137fc14aa9f764d34e9836b89a0058c77bba4d9c33542803e1988e982"}, "downloads": -1, "filename": "azure_search_documents-1.0.0b2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ac8793b9837d171c885e4c5726b0aa9c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 172942, "upload_time": "2020-04-07T16:27:07", "upload_time_iso_8601": "2020-04-07T16:27:07.518999Z", "url": "https://files.pythonhosted.org/packages/16/f6/a037fc1d190556b8f8aa467c68c485b6e2df684af6a1b50ffca2976d89fb/azure_search_documents-1.0.0b2-py2.py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "b54ccc48548d2d8b705c474aaf68328d", "sha256": "16b4a8f9ea26904131f49bba2875d73cc738671ea5ba75c195ace2bf646437fd"}, "downloads": -1, "filename": "azure-search-documents-1.0.0b2.zip", "has_sig": false, "md5_digest": "b54ccc48548d2d8b705c474aaf68328d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 227993, "upload_time": "2020-04-07T16:27:10", "upload_time_iso_8601": "2020-04-07T16:27:10.265749Z", "url": "https://files.pythonhosted.org/packages/17/26/77fd224ae5668a88c51306200404c5086f24711e5b61fa142b1204590f00/azure-search-documents-1.0.0b2.zip"}]}, "urls": [{"comment_text": "", "digests": {"md5": "ac8793b9837d171c885e4c5726b0aa9c", "sha256": "bf09c3a137fc14aa9f764d34e9836b89a0058c77bba4d9c33542803e1988e982"}, "downloads": -1, "filename": "azure_search_documents-1.0.0b2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ac8793b9837d171c885e4c5726b0aa9c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 172942, "upload_time": "2020-04-07T16:27:07", "upload_time_iso_8601": "2020-04-07T16:27:07.518999Z", "url": "https://files.pythonhosted.org/packages/16/f6/a037fc1d190556b8f8aa467c68c485b6e2df684af6a1b50ffca2976d89fb/azure_search_documents-1.0.0b2-py2.py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "b54ccc48548d2d8b705c474aaf68328d", "sha256": "16b4a8f9ea26904131f49bba2875d73cc738671ea5ba75c195ace2bf646437fd"}, "downloads": -1, "filename": "azure-search-documents-1.0.0b2.zip", "has_sig": false, "md5_digest": "b54ccc48548d2d8b705c474aaf68328d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 227993, "upload_time": "2020-04-07T16:27:10", "upload_time_iso_8601": "2020-04-07T16:27:10.265749Z", "url": "https://files.pythonhosted.org/packages/17/26/77fd224ae5668a88c51306200404c5086f24711e5b61fa142b1204590f00/azure-search-documents-1.0.0b2.zip"}]}