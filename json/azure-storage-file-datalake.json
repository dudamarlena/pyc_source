{"info": {"author": "Microsoft Corporation", "author_email": "ascl@microsoft.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# Azure DataLake service client library for Python\nOverview\n\nThis preview package for Python includes ADLS Gen2 specific API support made available in Storage SDK. This includes:\n1. New directory level operations (Create, Rename, Delete) for hierarchical namespace enabled (HNS) storage account. For HNS enabled accounts, the rename/move operations are atomic.\n2. Permission related operations (Get/Set ACLs) for hierarchical namespace enabled (HNS) accounts.\n\n\n[Source code](https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/storage/azure-storage-file-datalake/azure/storage/filedatalake) | [Package (PyPi)](https://pypi.org/project/azure-storage-file-datalake/) | [API reference documentation](https://aka.ms/azsdk-python-storage-filedatalake-ref) | [Product documentation](https://docs.microsoft.com/azure/storage/) | [Samples](https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/storage/azure-storage-file-datalake/samples)\n\n\n## Getting started\n\n### Prerequisites\n* Python 2.7, or 3.5 or later is required to use this package.\n* You must have an [Azure subscription](https://azure.microsoft.com/free/) and an\n[Azure storage account](https://docs.microsoft.com/en-us/azure/storage/blobs/data-lake-storage-quickstart-create-account) to use this package.\n\n### Install the package\nInstall the Azure DataLake Storage client library for Python with [pip](https://pypi.org/project/pip/):\n\n```bash\npip install azure-storage-file-datalake --pre\n```\n\n### Create a storage account\nIf you wish to create a new storage account, you can use the\n[Azure Portal](https://docs.microsoft.com/en-us/azure/storage/blobs/data-lake-storage-quickstart-create-account#create-an-account-using-the-azure-portal),\n[Azure PowerShell](https://docs.microsoft.com/en-us/azure/storage/blobs/data-lake-storage-quickstart-create-account#create-an-account-using-powershell),\nor [Azure CLI](https://docs.microsoft.com/en-us/azure/storage/blobs/data-lake-storage-quickstart-create-account#create-an-account-using-azure-cli):\n\n```bash\n# Create a new resource group to hold the storage account -\n# if using an existing resource group, skip this step\naz group create --name my-resource-group --location westus2\n\n# Create the storage account\naz storage account create -n my-storage-account-name -g my-resource-group --hierarchical-namespace true\n```\n\n### Authenticate the client\n\nInteraction with DataLake Storage starts with an instance of the DataLakeServiceClient class. You need an existing storage account, its URL, and a credential to instantiate the client object.\n\n#### Get credentials\n\nTo authenticate the client you have a few options:\n1. Use a SAS token string \n2. Use an account shared access key\n3. Use a token credential from [azure.identity](https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/identity/azure-identity)\n\nAlternatively, you can authenticate with a storage connection string using the `from_connection_string` method. See example: [Client creation with a connection string](#client-creation-with-a-connection-string).\n\nYou can omit the credential if your account URL already has a SAS token.\n\n#### Create client\n\nOnce you have your account URL and credentials ready, you can create the DataLakeServiceClient:\n\n```python\nfrom azure.storage.filedatalake import DataLakeServiceClient\n\nservice = DataLakeServiceClient(account_url=\"https://<my-storage-account-name>.dfs.core.windows.net/\", credential=credential)\n```\n\n## Key concepts\n\nDataLake storage offers four types of resources:\n* The storage account\n* A file system in the storage account\n* A directory under the file system\n* A file in a the file system or under directory\n\n#### Clients\n\nThe DataLake Storage SDK provides four different clients to interact with the DataLake Service:\n1. **DataLakeServiceClient** - this client interacts with the DataLake Service at the account level. \n    It provides operations to retrieve and configure the account properties\n    as well as list, create, and delete file systems within the account.\n    For operations relating to a specific file system, directory or file, clients for those entities\n    can also be retrieved using the `get_file_client`, `get_directory_client` or `get_file_system_client` functions.\n2. **FileSystemClient** - this client represents interaction with a specific\n    file system, even if that file system does not exist yet. It provides operations to create, delete, or\n    configure file systems and includes operations to list paths under file system, upload, and delete file or\n    directory in the file system.  \n    For operations relating to a specific file, the client can also be retrieved using\n    the `get_file_client` function.  \n    For operations relating to a specific directory, the client can be retrieved using \n    the `get_directory_client` function.  \n3. **DataLakeDirectoryClient** - this client represents interaction with a specific\n    directory, even if that directory does not exist yet. It provides directory operations create, delete, rename,\n    get properties and set properties operations.\n3. **DataLakeFileClient** - this client represents interaction with a specific\n    file, even if that file does not exist yet. It provides file operations to append data, flush data, delete, \n    create, and read file.\n4. **DataLakeLeaseClient** - this client represents lease interactions with a FileSystemClient, DataLakeDirectoryClient\n    or DataLakeFileClient. It provides operations to acquire, renew, release, change, and break leases on the resources.\n\n## Examples\n\nThe following sections provide several code snippets covering some of the most common Storage DataLake tasks, including:\n\n* [Client creation with a connection string](#client-creation-with-a-connection-string)\n* [Uploading a file](#uploading-a-file)\n* [Downloading a file](#downloading-a-file)\n* [Enumerating paths](#enumerating-paths)\n\n\n### Client creation with a connection string\nCreate the DataLakeServiceClient using the connection string to your Azure Storage account.\n\n```python\nfrom azure.storage.filedatalake import DataLakeServiceClient\n\nservice = DataLakeServiceClient.from_connection_string(conn_str=\"my_connection_string\")\n```\n\n### Uploading a file\nUpload a file to your file system.\n\n```python\nfrom azure.storage.filedatalake import DataLakeFileClient\n\ndata = b\"abc\"\nfile = DataLakeFileClient.from_connection_string(\"my_connection_string\", \n                                                 file_system_name=\"myfilesystem\", file_path=\"myfile\")\n\nfile.append_data(data, offset=0, length=len(data))\nfile.flush_data(len(data))\n```\n\n### Downloading a file\nDownload a file from your file system.\n\n```python\nfrom azure.storage.filedatalake import DataLakeFileClient\n\nfile = DataLakeFileClient.from_connection_string(\"my_connection_string\", \n                                                 file_system_name=\"myfilesystem\", file_path=\"myfile\")\n\nwith open(\"./BlockDestination.txt\", \"wb\") as my_file:\n    download = file.download_file()\n    download.readinto(my_file)\n```\n\n### Enumerating paths\nList the paths in your file system.\n\n```python\nfrom azure.storage.filedatalake import FileSystemClient\n\nfile_system = FileSystemClient.from_connection_string(\"my_connection_string\", file_system_name=\"myfilesystem\")\n\npaths = file_system.get_paths()\nfor path in paths:\n    print(path.name + '\\n')\n```\n\n## Troubleshooting\n### General\nDataLake Storage clients raise exceptions defined in [Azure Core](https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/core/azure-core/README.md).\n\nAll DataLake service operations will throw a StorageErrorException on failure with helpful [error codes](https://docs.microsoft.com/rest/api/storageservices/blob-service-error-codes).\n\n### Logging\nThis library uses the standard\n[logging](https://docs.python.org/3/library/logging.html) library for logging.\nBasic information about HTTP sessions (URLs, headers, etc.) is logged at INFO\nlevel.\n\nDetailed DEBUG level logging, including request/response bodies and unredacted\nheaders, can be enabled on a client with the `logging_enable` argument:\n```python\nimport sys\nimport logging\nfrom azure.storage.filedatalake import DataLakeServiceClient\n\n# Create a logger for the 'azure.storage.filedatalake' SDK\nlogger = logging.getLogger('azure.storage')\nlogger.setLevel(logging.DEBUG)\n\n# Configure a console output\nhandler = logging.StreamHandler(stream=sys.stdout)\nlogger.addHandler(handler)\n\n# This client will log detailed information about its HTTP sessions, at DEBUG level\nservice_client = DataLakeServiceClient.from_connection_string(\"your_connection_string\", logging_enable=True)\n```\n\nSimilarly, `logging_enable` can enable detailed logging for a single operation,\neven when it isn't enabled for the client:\n```py\nservice_client.list_file_systems(logging_enable=True)\n```\n\n## Next steps\n\n### More sample code\n\nGet started with our [Azure DataLake samples](https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/storage/azure-storage-file-datalake/samples).\n\nSeveral DataLake Storage Python SDK samples are available to you in the SDK's GitHub repository. These samples provide example code for additional scenarios commonly encountered while working with DataLake Storage:\n\n* [`datalake_samples_access_control.py`](https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/storage/azure-storage-file-datalake/samples/datalake_samples_access_control.py) - Examples for common DataLake Storage tasks:\n    * Set up a file system\n    * Create a directory\n    * Set/Get access control for the directory\n    * Create files under the directory\n    * Set/Get access control for each file\n    * Delete file system\n\n* [`datalake_samples_upload_download.py`](https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/storage/azure-storage-file-datalake/samples/datalake_samples_upload_download.py) - Examples for common DataLake Storage tasks:\n    * Set up a file system\n    * Create file\n    * Append data to the file\n    * Flush data to the file\n    * Download the uploaded data\n    * Delete file system\n\n\n### Additional documentation\n\nTable for [ADLS Gen1 to ADLS Gen2 API Mapping](https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/storage/azure-storage-file-datalake/GEN1_GEN2_MAPPING.md)  \nFor more extensive REST documentation on Data Lake Storage Gen2, see the [Data Lake Storage Gen2 documentation](https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/filesystem) on docs.microsoft.com.\n\n\n## Contributing\nThis project welcomes contributions and suggestions.  Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit https://cla.microsoft.com.\n\nWhen you submit a pull request, a CLA-bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.\n\nThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/). For more information see the [Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/) or contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Azure/azure-sdk-for-python", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "azure-storage-file-datalake", "package_url": "https://pypi.org/project/azure-storage-file-datalake/", "platform": "", "project_url": "https://pypi.org/project/azure-storage-file-datalake/", "project_urls": {"Homepage": "https://github.com/Azure/azure-sdk-for-python"}, "release_url": "https://pypi.org/project/azure-storage-file-datalake/12.0.0/", "requires_dist": ["azure-core (<2.0.0,>=1.2.2)", "msrest (>=0.6.10)", "azure-storage-blob (~=12.0)", "futures ; python_version<'3.0'", "azure-storage-nspkg (<4.0.0,>=3.0.0) ; python_version<'3.0'", "enum34 (>=1.0.4) ; python_version<'3.4'", "typing ; python_version<'3.5'"], "requires_python": "", "summary": "Microsoft Azure File DataLake Storage Client Library for Python", "version": "12.0.0"}, "last_serial": 6796197, "releases": {"12.0.0": [{"comment_text": "", "digests": {"md5": "eefabf377222972256df98aa1e7ad1ca", "sha256": "93445813b08bb3f4c7ce72c9f1abfe97c06fadc11883bfa9118959fbbe6519ef"}, "downloads": -1, "filename": "azure_storage_file_datalake-12.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "eefabf377222972256df98aa1e7ad1ca", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 169247, "upload_time": "2020-03-11T23:31:32", "upload_time_iso_8601": "2020-03-11T23:31:32.966257Z", "url": "https://files.pythonhosted.org/packages/3f/aa/480e5216b43fabcfa9903087ea80a7d4bf56adead5af1c0153014a0366ba/azure_storage_file_datalake-12.0.0-py2.py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "5d0467e0171c40c6be9857402967d468", "sha256": "3e8da9186c2c87a6acf9c8b2d3d74436ce644c9bb7a9ac433f19e01546a4aa32"}, "downloads": -1, "filename": "azure-storage-file-datalake-12.0.0.zip", "has_sig": false, "md5_digest": "5d0467e0171c40c6be9857402967d468", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 234371, "upload_time": "2020-03-11T23:31:34", "upload_time_iso_8601": "2020-03-11T23:31:34.643420Z", "url": "https://files.pythonhosted.org/packages/37/a1/ca24eaf2fc32125687c9dea2e0604afa37955dd8cc93867030bc17e07885/azure-storage-file-datalake-12.0.0.zip"}], "12.0.0b5": [{"comment_text": "", "digests": {"md5": "4f353684a5094007df27bdf5081865e7", "sha256": "55df567cbeaed30fe131b8e23fea40dbd1b14fe7df2ecc51ffe006b64b4b7872"}, "downloads": -1, "filename": "azure_storage_file_datalake-12.0.0b5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4f353684a5094007df27bdf5081865e7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 133839, "upload_time": "2019-11-08T01:33:12", "upload_time_iso_8601": "2019-11-08T01:33:12.778783Z", "url": "https://files.pythonhosted.org/packages/17/0b/5c19c6b87375905869e7320c75fa5f69a594e96d13ebb1fdba983acc928a/azure_storage_file_datalake-12.0.0b5-py2.py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "5144256fe76cb8502dde37d733be73a7", "sha256": "013aff0674b7fc50106bcec0c30450a8d9d5a85711c4df97faeeee851c2ff480"}, "downloads": -1, "filename": "azure-storage-file-datalake-12.0.0b5.zip", "has_sig": false, "md5_digest": "5144256fe76cb8502dde37d733be73a7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 210492, "upload_time": "2019-11-08T01:33:15", "upload_time_iso_8601": "2019-11-08T01:33:15.838339Z", "url": "https://files.pythonhosted.org/packages/82/3a/e410984b89c6e985635c0bf54b513c416bae41ea82c364bdeacd1e2a32fc/azure-storage-file-datalake-12.0.0b5.zip"}], "12.0.0b6": [{"comment_text": "", "digests": {"md5": "f53b529d40c6eacbff73a0265ea619cc", "sha256": "0d0b9c57f3d282efa7e969305ef2208ca04744eea2bf77b51ce96333bde29d8d"}, "downloads": -1, "filename": "azure_storage_file_datalake-12.0.0b6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f53b529d40c6eacbff73a0265ea619cc", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 134490, "upload_time": "2019-12-04T21:58:55", "upload_time_iso_8601": "2019-12-04T21:58:55.863143Z", "url": "https://files.pythonhosted.org/packages/62/b7/16006df57764ba5621c523bc789880133bb20f3694a25d782985df2c293c/azure_storage_file_datalake-12.0.0b6-py2.py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "bf9f6beb76b9c508e6f880a4eaee6288", "sha256": "fe3c9a3f9cd1583e8bfd6b9c9da416a0dd2ceaae30f427e317b7fbdaf1d9c86a"}, "downloads": -1, "filename": "azure-storage-file-datalake-12.0.0b6.zip", "has_sig": false, "md5_digest": "bf9f6beb76b9c508e6f880a4eaee6288", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 171963, "upload_time": "2019-12-04T21:58:57", "upload_time_iso_8601": "2019-12-04T21:58:57.806402Z", "url": "https://files.pythonhosted.org/packages/9f/d8/2da8cad3edc8243ceda7456ed2682950d89885a3cfb330bdf2a45971c973/azure-storage-file-datalake-12.0.0b6.zip"}], "12.0.0b7": [{"comment_text": "", "digests": {"md5": "da0a2f1588f6d0c6583e2202cb79be99", "sha256": "9fd9343b7b9be51b911817920b7908f2cdeec540673acb71f884a13df9fdf478"}, "downloads": -1, "filename": "azure_storage_file_datalake-12.0.0b7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "da0a2f1588f6d0c6583e2202cb79be99", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 162113, "upload_time": "2020-02-12T23:31:46", "upload_time_iso_8601": "2020-02-12T23:31:46.279942Z", "url": "https://files.pythonhosted.org/packages/3b/0d/bc91c1f333c5cbbb2d162caf801389d41504fe34771bc9a40aa83e062e59/azure_storage_file_datalake-12.0.0b7-py2.py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "a1924c6e51ae390ea5afb932d57bf4bf", "sha256": "6ccd11f59968760119cba6c84a0e87dea2e73e71403e98003ccfe1771b5872f3"}, "downloads": -1, "filename": "azure-storage-file-datalake-12.0.0b7.zip", "has_sig": false, "md5_digest": "a1924c6e51ae390ea5afb932d57bf4bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 211195, "upload_time": "2020-02-12T23:31:48", "upload_time_iso_8601": "2020-02-12T23:31:48.006037Z", "url": "https://files.pythonhosted.org/packages/f7/db/76c20fbb845356eeeb1b533557ffa2a413ffea9946eb476dce2059a041f9/azure-storage-file-datalake-12.0.0b7.zip"}]}, "urls": [{"comment_text": "", "digests": {"md5": "eefabf377222972256df98aa1e7ad1ca", "sha256": "93445813b08bb3f4c7ce72c9f1abfe97c06fadc11883bfa9118959fbbe6519ef"}, "downloads": -1, "filename": "azure_storage_file_datalake-12.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "eefabf377222972256df98aa1e7ad1ca", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 169247, "upload_time": "2020-03-11T23:31:32", "upload_time_iso_8601": "2020-03-11T23:31:32.966257Z", "url": "https://files.pythonhosted.org/packages/3f/aa/480e5216b43fabcfa9903087ea80a7d4bf56adead5af1c0153014a0366ba/azure_storage_file_datalake-12.0.0-py2.py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "5d0467e0171c40c6be9857402967d468", "sha256": "3e8da9186c2c87a6acf9c8b2d3d74436ce644c9bb7a9ac433f19e01546a4aa32"}, "downloads": -1, "filename": "azure-storage-file-datalake-12.0.0.zip", "has_sig": false, "md5_digest": "5d0467e0171c40c6be9857402967d468", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 234371, "upload_time": "2020-03-11T23:31:34", "upload_time_iso_8601": "2020-03-11T23:31:34.643420Z", "url": "https://files.pythonhosted.org/packages/37/a1/ca24eaf2fc32125687c9dea2e0604afa37955dd8cc93867030bc17e07885/azure-storage-file-datalake-12.0.0.zip"}]}