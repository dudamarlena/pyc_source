{"info": {"author": "Peter Hunt", "author_email": "peter@huntfx.uk", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7"], "description": "# ftrack-query\nFTrack Query is an object-orientated wrapper over the FTrack API. While the default query syntax is powerful, it is entirely text based so dynamic queries can be difficult to construct. This module supports **and**/**or** operators with nested comparisons.\n\nIt is recommended to first read http://ftrack-python-api.rtd.ftrack.com/en/1.7.0/tutorial.html for a basic understanding of how the FTrack API works.\n\n\n## Example\n```python\nwith FTrackQuery() as session:\n    note = session.Note.create(\n        content='My new note',\n        author=session.User('peter'),\n        category=session.NoteLabel.where(entity.color!=None, name='Internal').one(),\n    )\n\n    task = session.Task.where(\n        entity.parent==session.Episode.first(),\n        name='My Task',\n    ).order(\n        entity.type.name.desc(),\n    ).first()\n\n    task['notes'].append(note)\n    session.commit()\n```\n\n# Reference\n\n## FTrackQuery\nMain class inherited from `ftrack_api.Session`.\n\n## Query\nEvery available entity type is an attribute of a session. What was originally `session.query('Note')` is now `session.Note`. This results in the `Query` object, which is used for constructing and executing queries.\n\n### .where(_\\*args, \\*\\*kwargs_)\nFilter the result.\n\nUsing kwargs is the recommended way, with a syntax like `.where(first_name='Peter', last_name='Hunt')`.\n\nUsing args is required for complex queries. This uses the `Comparison` object, which is automatically created when comparing multiple `Query` objects. An example would be `.where(entity.project.metadata.any(entity.key!='disabled'))`.\n\n### .populate(_\\*args_) | .select(_\\*args_)\nPre-fetch entity attributes.\n\nAn an example, in order to iterate through the name of every user, it would be a good idea to prefetch `first_name` and `last_name`, as otherwise two queries will be performed for each individual user.\n\n### .sort(_attribute_)\nSort the results by an attribute.\n\nThe attribute and order can be given in the format `entity.name.desc()`, or as a raw string such as `name descending`.\n\n### .reverse()\nReverse the sorting direction.\n\n### .limit(_value_)\nLimit the amount of results to a certain value.\n\n### .offset(_value_)\nIn the case of using a limit, this applies an offset to the result that is returned.\n\n### .\\_\\_call\\_\\_(_value_)\nIf an entity has a primary key, by calling the value of that primary key, the entity or `None` will be returned.\nCurrently only `User` supports this.\n\n## Comparison\nThe `Comparison` object is designed to convert data to a string. It contains a wide array of operators that can be used against any data type, including other `Comparison` objects.\n\nAny comparison can be reversed with the `~` prefix.\n\n- String Comparison: `entity.attr=='value'`\n- Number comparison: `entity.attr>5`\n- Pattern Comparison: `entity.attr.like('value%')`\n- Time Comparison: `entity.attr.after(arrow.now().floor('day'))`\n- Scalar Relationship: `entity.attr.has(subattr='value')`\n- Collection Relationship: `entity.attr.any(subattr='value')`\n\n## and\\_(_\\*args, \\*\\*kwargs_) | or\\_(_\\*args, \\*\\*kwargs_)\nJoin multiple comparisons. `and_` is used by default if nothing is provided.\n\n## Equivalent examples from the [API reference](http://ftrack-python-api.rtd.ftrack.com/en/0.9.0/querying.html):\nNote: If an entity type is used multiple times, it's recommended to use `<Entity> = session.<Entity>` after the session is initialised. To save space below, that part has been omitted.\n\n```python\n# projects = session.query('Project')\n# for project in projects:\n#     print project['name']\nprojects = Project\nfor project in projects:\n    print project['name']\n\n# session.query('Project').all()\nProject.all()\n\n# session.query('Project where status is active')\nProject.where(status='active')\n\n# session.query('Project where status is active and name like \"%thrones\"')\nProject.where(Project.name.like('%thrones'), status='active')\n\n# session.query('Project where status is active and (name like \"%thrones\" or full_name like \"%thrones\")')\nProject.where(or_(Project.name.like('%thrones'), Project.full_name.like('%thrones')), status='active')\n\n# session.query('Task where project.id is \"{0}\"'.format(project['id']))\nTask.where(project=project)\n\n# session.query('Task where project.id is \"{0}\" and status.type.name is \"Done\"'.format(project['id']))\nTask.where(Task.status.type.name=='Done', project=project)\n\n# session.query('Task where timelogs.start >= \"{0}\"'.format(arrow.now().floor('day')))\nTask.where(Task.timelogs.start>=arrow.now().floor('day'))\n\n# session.query('Note where author has (first_name is \"Jane\" and last_name is \"Doe\")')\nNote.where(Note.author.has(User.first_name=='Jane', User.last_name=='Doe'))\n\n# session.query('User where not timelogs any ()')\nUser.where(~User.timelogs.any())\n\n# projects = session.query('select full_name, status.name from Project')\nProject.select('full_name', 'status.name')\n\n# select name from Project where allocations.resource[Group].memberships any (user.username is \"john_doe\")\nProject.select('name').where(Project.allocations.resource[Group].memberships.any(Membership.user.username=='john_doe'))\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/Peter92/ftrack-query/archive/1.4.1.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Peter92/ftrack-query", "keywords": "ftrack,api,query", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "ftrack-query", "package_url": "https://pypi.org/project/ftrack-query/", "platform": "", "project_url": "https://pypi.org/project/ftrack-query/", "project_urls": {"Documentation": "https://github.com/Peter92/ftrack-query/wiki", "Download": "https://github.com/Peter92/ftrack-query/archive/1.4.1.tar.gz", "Homepage": "https://github.com/Peter92/ftrack-query", "Issues": "https://github.com/Peter92/ftrack-query/issues", "Source": "https://github.com/Peter92/ftrack-query"}, "release_url": "https://pypi.org/project/ftrack-query/1.4.1/", "requires_dist": null, "requires_python": ">=2.7.9, <3.0", "summary": "Easy query generation for the FTrack API.", "version": "1.4.1"}, "last_serial": 6918795, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "a0191fb9890667e05b5cee1109cd972b", "sha256": "1a59753d78bd8eec39e367b04918e26a480759034c29d53edf3ea567b3fda90c"}, "downloads": -1, "filename": "ftrack-query-1.0.0.tar.gz", "has_sig": false, "md5_digest": "a0191fb9890667e05b5cee1109cd972b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7.9, <3.0", "size": 8315, "upload_time": "2020-01-12T01:42:31", "upload_time_iso_8601": "2020-01-12T01:42:31.565701Z", "url": "https://files.pythonhosted.org/packages/b2/4a/bfe439ffc05a54d34b3a1438d7d934a97359f842c0b83f49955c77cda530/ftrack-query-1.0.0.tar.gz"}], "1.1.0": [{"comment_text": "", "digests": {"md5": "8820008040bc5e2d907e931ad4c85e78", "sha256": "84103b8e8ba2fcf04a1247fbcdf52baa0f6acddfd1ab41f621cf18d1eaefa4c1"}, "downloads": -1, "filename": "ftrack-query-1.1.0.tar.gz", "has_sig": false, "md5_digest": "8820008040bc5e2d907e931ad4c85e78", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7.9, <3.0", "size": 8947, "upload_time": "2020-02-04T19:18:27", "upload_time_iso_8601": "2020-02-04T19:18:27.230788Z", "url": "https://files.pythonhosted.org/packages/07/48/9328aad6f951cb153e5f81bcd4fabf22b18e2ee9a8f15b238f01560dee4e/ftrack-query-1.1.0.tar.gz"}], "1.3.1": [{"comment_text": "", "digests": {"md5": "be240fd527df5b7dcb3a293f0f6bb71f", "sha256": "db61df834a9a90ef44b3fcdf3a78f4e8d3750f85b74bb0204ff407cc8dc8a438"}, "downloads": -1, "filename": "ftrack-query-1.3.1.tar.gz", "has_sig": false, "md5_digest": "be240fd527df5b7dcb3a293f0f6bb71f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7.9, <3.0", "size": 9726, "upload_time": "2020-03-01T17:04:45", "upload_time_iso_8601": "2020-03-01T17:04:45.131707Z", "url": "https://files.pythonhosted.org/packages/42/31/0986042b2efba97dd402a292e77293fb834e234dec95f115799cfd424320/ftrack-query-1.3.1.tar.gz"}], "1.3.3": [{"comment_text": "", "digests": {"md5": "e90d81c29dc0d63af7c6f616927cafed", "sha256": "1925b647cd618e59132d22ef0e80713db481757c3b119e913b73aa71c6f8624a"}, "downloads": -1, "filename": "ftrack-query-1.3.3.tar.gz", "has_sig": false, "md5_digest": "e90d81c29dc0d63af7c6f616927cafed", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7.9, <3.0", "size": 9784, "upload_time": "2020-03-06T01:58:29", "upload_time_iso_8601": "2020-03-06T01:58:29.254973Z", "url": "https://files.pythonhosted.org/packages/39/5c/df8ef223c611b8105978ebb9375334af4c28a77e56a74488e258e070e0ef/ftrack-query-1.3.3.tar.gz"}], "1.4.0": [{"comment_text": "", "digests": {"md5": "fba09b2ba9a3c168b69804ef1fc759b0", "sha256": "f56c3266ed5eaa4600ee31ecc037a5c842e8752236847e467e23f02a4f509e4a"}, "downloads": -1, "filename": "ftrack-query-1.4.0.tar.gz", "has_sig": false, "md5_digest": "fba09b2ba9a3c168b69804ef1fc759b0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7.9, <3.0", "size": 9675, "upload_time": "2020-03-30T15:18:14", "upload_time_iso_8601": "2020-03-30T15:18:14.315645Z", "url": "https://files.pythonhosted.org/packages/3e/7e/4d0466cca1a32a5d1f91b5810eedc604e8eae73d5b906c2ee38847bc4302/ftrack-query-1.4.0.tar.gz"}], "1.4.1": [{"comment_text": "", "digests": {"md5": "53c1c250c0acf50122522bfa5452a166", "sha256": "c53a1b655d70d654ff3d597efbd71a826bd873bddd78fe848f1aafa55a53f137"}, "downloads": -1, "filename": "ftrack-query-1.4.1.tar.gz", "has_sig": false, "md5_digest": "53c1c250c0acf50122522bfa5452a166", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7.9, <3.0", "size": 9727, "upload_time": "2020-03-31T09:12:33", "upload_time_iso_8601": "2020-03-31T09:12:33.098815Z", "url": "https://files.pythonhosted.org/packages/e0/fe/35ebb73ed9055c52542bd245b99a481230acd38e20755297aeb394ae6ab4/ftrack-query-1.4.1.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "53c1c250c0acf50122522bfa5452a166", "sha256": "c53a1b655d70d654ff3d597efbd71a826bd873bddd78fe848f1aafa55a53f137"}, "downloads": -1, "filename": "ftrack-query-1.4.1.tar.gz", "has_sig": false, "md5_digest": "53c1c250c0acf50122522bfa5452a166", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7.9, <3.0", "size": 9727, "upload_time": "2020-03-31T09:12:33", "upload_time_iso_8601": "2020-03-31T09:12:33.098815Z", "url": "https://files.pythonhosted.org/packages/e0/fe/35ebb73ed9055c52542bd245b99a481230acd38e20755297aeb394ae6ab4/ftrack-query-1.4.1.tar.gz"}]}