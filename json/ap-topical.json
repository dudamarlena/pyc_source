{"info": {"author": "Anna Poulakos", "author_email": "anna.poulakos@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: AsyncIO", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7"], "description": "# topical\nTopical is a simple eventing library written in Python.\n\n![build](https://github.com/annapoulakos/topical/workflows/build/badge.svg)\n\n## Table of Contents\n\n1. [Developer Requirements](#developer-requirements)\n1. [Installation](#installation)\n1. [Usage](#usage)\n    1. [Small Example](#small-example)\n    1. [Using the Event Decorator](#using-the-event-decorator)\n\n## Developer Requirements\n\n* Python 3.7 or higher\n\n## Installation\n\n```\npip install ap-topical\n```\n\n## Usage\n\n> Topical supports both synchronous and asynchronous callbacks. This documentation only details the async/await calls. For more in-depth usage instructions, please consult the wiki.\n\nFirst, you will need an event handler. This function requires a `payload` object as its only parameter:\n\n```python\nasync def event_handler_one(payload):\n    pass\n\nasync def event_handler_two(payload):\n    pass\n```\n\nNext, you will need to configure your event pipeline.\n\n```python\ntopical.subscribe('event-one', event_handler_one)\ntopical.subscribe('event-two', event_handler_two)\n```\n\nNext, you will need to publish your first event.\n\n```python\npayload = TopicalEventPayload()\nawait topical.publish_async('event-one', payload)\n```\n\nTo continue your event chain, you will need to publish an event from an existing event handler:\n\n```python\nasync def event_handler_one(payload):\n    # do something with your event payload\n\n    await topical.publish_async('event_two', payload)\n```\n\n#### Small Example\n\n```python\nimport asyncio\nfrom ap.topical import topical\nfrom ap.topical.topical_event_payload import TopicalEventPayload\n\nasync def event_handler_one(payload):\n    print(f'inside event_handler_one for {payload.idempotency_token}')\n\n    print('sleeping for 5 seconds')\n    await asyncio.sleep(5)\n    await topical.publish_async('event-two', payload)\n\nasync def event_handler_two(payload):\n    print(f'inside event_handler_two for {payload.idempotency_token}')\n\n    print('sleeping for 5 seconds')\n    await asyncio.sleep(5)\n    print('done!')\n\nasync def main():\n    topical.subscribe('event-one', event_handler_one)\n    topical.subscribe('event-two', event_handler_two)\n\n    payloads = [TopicalEventPayload() for _ in range(3)]\n\n    await asyncio.gather(*[topical.publish_async('event-one', payload) for payload in payloads])\n\nasyncio.run(main())\n\n# Output\n# (topical) \u03bb python info.py\n# inside event_handler_one for 3744628e-fb1c-4c60-a43a-175b1a09b0fd\n# sleeping for 5 seconds\n# inside event_handler_one for 64a546dc-46fd-4c23-9adc-501194376ea6\n# sleeping for 5 seconds\n# inside event_handler_one for b470535f-f65a-4c22-b764-6fe8379a0388\n# sleeping for 5 seconds\n# inside event_handler_two for 3744628e-fb1c-4c60-a43a-175b1a09b0fd\n# sleeping for 5 seconds\n# inside event_handler_two for 64a546dc-46fd-4c23-9adc-501194376ea6\n# sleeping for 5 seconds\n# inside event_handler_two for b470535f-f65a-4c22-b764-6fe8379a0388\n# sleeping for 5 seconds\n# done!\n# done!\n# done!\n```\n\n#### Using the Event Decorator\n\nManually subscribing to a lot of events could be an issue. Topical ships with a decorator that allows you to decorate any function as an event handler.\n\n```python\nimport asyncio\nfrom ap.topical import topical\n\n@topical.event('event-one')\nasync def event_handler_one(payload):\n    print('in event handler')\n\nasync def main():\n    await asyncio.gather(*[topical.publish_async('event-one', {}) for _ in range(3)])\n\nasyncio.run(main())\n\n# Output\n# (topical) \u03bb python info.py\n# in event handler\n# in event handler\n# in event handler\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "ap-topical", "package_url": "https://pypi.org/project/ap-topical/", "platform": "", "project_url": "https://pypi.org/project/ap-topical/", "project_urls": null, "release_url": "https://pypi.org/project/ap-topical/0.1.2/", "requires_dist": null, "requires_python": ">=3.7.0", "summary": "Topical is a simple event pipeline written in Python.", "version": "0.1.2"}, "last_serial": 6892402, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "4e144809075d4e2a3c7c6e5739b99bd6", "sha256": "86360eb96e6d9ca42c34ea1f32098ce2e0eb9acd0a307acb00d0e00a1adfd634"}, "downloads": -1, "filename": "ap_topical-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4e144809075d4e2a3c7c6e5739b99bd6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4718, "upload_time": "2020-03-26T21:28:53", "upload_time_iso_8601": "2020-03-26T21:28:53.870133Z", "url": "https://files.pythonhosted.org/packages/f3/6b/2f299056a3c2e39a9e8d8919ecd4a95cf7b2ddc710671827542ad2dd6ba4/ap_topical-0.1.1-py3-none-any.whl"}], "0.1.2": [{"comment_text": "", "digests": {"md5": "2de9bb4cc71a7b07c859e48e386392d9", "sha256": "9fb709463de8e861b05d3341154aa3822c60ed5856a211a9952f2a74b87fa87a"}, "downloads": -1, "filename": "ap_topical-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "2de9bb4cc71a7b07c859e48e386392d9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7.0", "size": 4959, "upload_time": "2020-03-26T22:36:28", "upload_time_iso_8601": "2020-03-26T22:36:28.797390Z", "url": "https://files.pythonhosted.org/packages/7d/54/afcbc95cf1995712fefd6a4314cef6c0ba3526de54bdd71c56d770e6fe04/ap_topical-0.1.2-py3-none-any.whl"}]}, "urls": [{"comment_text": "", "digests": {"md5": "2de9bb4cc71a7b07c859e48e386392d9", "sha256": "9fb709463de8e861b05d3341154aa3822c60ed5856a211a9952f2a74b87fa87a"}, "downloads": -1, "filename": "ap_topical-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "2de9bb4cc71a7b07c859e48e386392d9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7.0", "size": 4959, "upload_time": "2020-03-26T22:36:28", "upload_time_iso_8601": "2020-03-26T22:36:28.797390Z", "url": "https://files.pythonhosted.org/packages/7d/54/afcbc95cf1995712fefd6a4314cef6c0ba3526de54bdd71c56d770e6fe04/ap_topical-0.1.2-py3-none-any.whl"}]}