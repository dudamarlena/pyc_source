{"info": {"author": "Uber AI Labs", "author_email": "fritzo@uber.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: MacOS :: MacOS X", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3.6"], "description": "# Funsor\n\nFunsor is a tensor-like library for functions and distributions.\n\nSee\n[Functional tensors for probabilistic programming](https://openreview.net/pdf?id=HkecHuIaUS)\nfor a system description.\n\n## Installing\n\n**Install using pip:**\n\nFunsor supports Python 3.6+.\n\n```sh\npip install funsor\n```\n\n**Install from source:**\n```sh\ngit clone git@github.com:pyro-ppl/funsor.git\ncd funsor\ngit checkout master\npip install .\n```\n\n## Using funsor\n\nFunsor can be used through a number of interfaces:\n\n-   Funsors can be used directly for probabilistic computations, using PyTorch\n    optimizers in a standard training loop. Start with these examples:\n    [discrete_hmm](examples/discrete_hmm.py),\n    [eeg_slds](examples/eeg_slds.py),\n    [kalman_filter](examples/kalman_filter.py),\n    [pcfg](examples/pcfg.py),\n    [sensor](examples/sensor.py),\n    [slds](examples/slds.py), and\n    [vae](examples/slds.py).\n-   Funsors can be used to implement custom inference algorithms within Pyro,\n    using custom elbo implementations in standard\n    [pyro.infer.SVI](http://docs.pyro.ai/en/stable/inference_algos.html#pyro.infer.svi.SVI)\n    training. See these examples:\n    [mixed_hmm](examples/mixed_hmm/model.py) and\n    [bart forecasting](https://github.com/pyro-ppl/sandbox/blob/master/2019-08-time-series/bart/forecast.py).\n-   [funsor.pyro](https://funsor.readthedocs.io/en/latest/pyro.html) provides a\n    number of Pyro-compatible (and PyTorch-compatible) distribution classes\n    that use funsors under the hood, as well\n    [utilities](https://funsor.readthedocs.io/en/latest/pyro.html#module-funsor.pyro.convert)\n    to convert between funsors and distributions.\n-   [funsor.minipyro](https://funsor.readthedocs.io/en/latest/minipyro.html)\n    provides a limited alternate backend for the Pyro probabilistic programming\n    language, and can perform some ELBO computations exactly.\n\n## Design\n\nSee [design doc](https://docs.google.com/document/d/1NVlfQnNQ0Aebg8vfIGcJKsnSqAhB4bbClQrb5dwm2OM). \n\nThe goal of this library is to generalize [Pyro](http://pyro.ai)'s delayed\ninference algorithms from discrete to continuous variables, and to create\nmachinery to enable partially delayed sampling compatible with universality. To\nachieve this goal this library makes three orthogonal design choices:\n\n1.  Open terms are objects. Funsors generalize the tensor interface\n    to also cover arbitrary functions of multiple variables (\"inputs\"), where\n    variables may be integers, real numbers, or real tensors. Function\n    evaluation / substitution is the basic operation, generalizing tensor\n    indexing.  This allows probability distributions to be first-class Funsors\n    and make use of existing tensor machinery, for example we can generalize\n    tensor contraction to computing analytic integrals in conjugate\n    probabilistic models.\n\n2.  Support nonstandard interpretation. Funsors support user-defined\n    interpretations, including, eager, lazy, mixed eager+lazy, memoized (like\n    opt\\_einsum's sharing), and approximate interpretations like Monte Carlo\n    approximations of integration operations (e.g. `.sum()` over a funsor\n    dimension).\n\n3.  Named dimensions. Substitution is the most basic operation of Funsors. To\n    avoid the difficulties of broadcasting and advanced indexing in\n    positionally-indexed tensor libraries, all Funsor dimensions are named.\n    Indexing uses the `.__call__()` method and can be interpreted as\n    substitution (with well-understood semantics).  Funsors are viewed as\n    algebraic expressions with one algebraic free variable per dimension. Each\n    dimension is either covariant (an output) or contravariant (an input).\n\nUsing `funsor` we can easily implement Pyro-style\n[delayed sampling](http://pyro.ai/examples/enumeration.html), roughly:\n\n```py\ntrace_log_prob = 0.\n\ndef pyro_sample(name, dist, obs=None):\n    assert isinstance(dist, Funsor)\n    if obs is not None:\n        value = obs\n    elif lazy:\n        # delayed sampling (like Pyro's parallel enumeration)\n        value = funsor.Variable(name, dist.support)\n    else:\n        value = dist.sample('value')[0]['value']\n\n    # save log_prob in trace\n    trace_log_prob += dist(value)\n\n    return value\n\n# ...later during inference...\nloss = -trace_log_prob.reduce(logaddexp)  # collapses delayed variables\n```\nSee [funsor/minipyro.py](funsor/minipyro.py) for complete implementation.\n\n## Related projects\n\n- Pyro's [ops.packed](https://github.com/uber/pyro/blob/dev/pyro/ops/packed.py),\n  [ops.einsum](https://github.com/uber/pyro/blob/dev/pyro/ops/einsum), and\n  [ops.contract](https://github.com/uber/pyro/blob/dev/pyro/ops/contract.py)\n- [Birch](https://birch-lang.org/)'s [delayed sampling](https://arxiv.org/abs/1708.07787)\n- [autoconj](https://arxiv.org/abs/1811.11926)\n- [dyna](http://www.cs.jhu.edu/~nwf/datalog20-paper.pdf)\n- [PSI solver](https://psisolver.org)\n- [Hakaru](https://hakaru-dev.github.io)\n- [sympy](https://www.sympy.org/en/index.html)\n- [namedtensor](https://github.com/harvardnlp/namedtensor)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pyro-ppl/funsor", "keywords": "probabilistic machine learning bayesian statistics pytorch", "license": "", "maintainer": "", "maintainer_email": "", "name": "funsor", "package_url": "https://pypi.org/project/funsor/", "platform": "", "project_url": "https://pypi.org/project/funsor/", "project_urls": {"Documentation": "https://funsor.pyro.ai", "Homepage": "https://github.com/pyro-ppl/funsor"}, "release_url": "https://pypi.org/project/funsor/0.1.2/", "requires_dist": ["multipledispatch", "numpy (>=1.7)", "opt-einsum (>=2.3.2)", "pyro-ppl (>=0.5)", "pytest (>=4.1)", "torch (>=1.3.0)", "flake8 ; extra == 'dev'", "isort ; extra == 'dev'", "pandas ; extra == 'dev'", "pytest-xdist (==1.27.0) ; extra == 'dev'", "sphinx (>=2.0) ; extra == 'dev'", "sphinx-rtd-theme ; extra == 'dev'", "torchvision (==0.2.1) ; extra == 'dev'", "flake8 ; extra == 'test'", "pandas ; extra == 'test'", "pyro-api (>=0.1) ; extra == 'test'", "pytest-xdist (==1.27.0) ; extra == 'test'", "torchvision (==0.2.1) ; extra == 'test'"], "requires_python": ">=3.6", "summary": "A tensor-like library for functions and distributions", "version": "0.1.2"}, "last_serial": 6020361, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "cce3b1fd1e332f3e33d21f9dfad7a591", "sha256": "6a10d5133482fd764ebd8c172f6dcd885e4a16258590fa433b22bfed7eb99d2e"}, "downloads": -1, "filename": "funsor-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "cce3b1fd1e332f3e33d21f9dfad7a591", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 95084, "upload_time": "2019-10-23T05:39:04", "upload_time_iso_8601": "2019-10-23T05:39:04.530573Z", "url": "https://files.pythonhosted.org/packages/a0/33/6ce0cdb1f63c66687c5cd28d61c5cbba745a53f9330924a9c3f61052f8dc/funsor-0.1.0-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "efdd58b97af3f99caa3bb6584688577d", "sha256": "b01cdfe42976d7012ad9814350c487e40898988520a093d77f598dcd4d8d57a3"}, "downloads": -1, "filename": "funsor-0.1.0.tar.gz", "has_sig": false, "md5_digest": "efdd58b97af3f99caa3bb6584688577d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 115525, "upload_time": "2019-10-23T05:39:07", "upload_time_iso_8601": "2019-10-23T05:39:07.010782Z", "url": "https://files.pythonhosted.org/packages/86/8c/188d09fb911077276597c869be573908d68b8180cb25ed5df3bc2fa44b1e/funsor-0.1.0.tar.gz"}], "0.1.1": [{"comment_text": "", "digests": {"md5": "8e8fb3a95005dd1bf3fec2117171e09b", "sha256": "c32ff4fa06f7810bcbae63f5e2bee2d8e1fedea72206823155866fe92d082473"}, "downloads": -1, "filename": "funsor-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "8e8fb3a95005dd1bf3fec2117171e09b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 95077, "upload_time": "2019-10-23T16:31:05", "upload_time_iso_8601": "2019-10-23T16:31:05.891021Z", "url": "https://files.pythonhosted.org/packages/78/44/67d122f15d17c194e99e3b7d5bc23efe52e401d3bc83ae81f827676cdb78/funsor-0.1.1-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "ac4d4a6f4b5efaf1544026d626a5fa9a", "sha256": "fc94f1ea8ec1e842fbcfa134cc19949e59da26141edcd03eea0eb5afba5367a2"}, "downloads": -1, "filename": "funsor-0.1.1.tar.gz", "has_sig": false, "md5_digest": "ac4d4a6f4b5efaf1544026d626a5fa9a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 115537, "upload_time": "2019-10-23T16:31:07", "upload_time_iso_8601": "2019-10-23T16:31:07.536991Z", "url": "https://files.pythonhosted.org/packages/ea/b1/8131f61b1590b0140e10d1e4ea88d87669e7e27df3b8f14af34880bb0928/funsor-0.1.1.tar.gz"}], "0.1.2": [{"comment_text": "", "digests": {"md5": "3594142ec93f213e104bcfc3ad54ce42", "sha256": "791cc4c06e88b662d647e12a7f6bbac8e07ff32cfd65ae548e3270a9ac247a1d"}, "downloads": -1, "filename": "funsor-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "3594142ec93f213e104bcfc3ad54ce42", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 95083, "upload_time": "2019-10-23T20:10:55", "upload_time_iso_8601": "2019-10-23T20:10:55.410061Z", "url": "https://files.pythonhosted.org/packages/0b/a1/f4af75e8d8972829bacc678bb9ea63d41aaee5ee74147bfcb19ac3886ce9/funsor-0.1.2-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "c18d7a0e6fea22714974030debeb73d0", "sha256": "90cf2e85b8d164d8512d63633ba8a908d9544b80dae07d75b31974c39930abcb"}, "downloads": -1, "filename": "funsor-0.1.2.tar.gz", "has_sig": false, "md5_digest": "c18d7a0e6fea22714974030debeb73d0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 115590, "upload_time": "2019-10-23T20:10:56", "upload_time_iso_8601": "2019-10-23T20:10:56.961694Z", "url": "https://files.pythonhosted.org/packages/65/3c/7409f1cd07797ba0f059127535c5f8288c14acfaf508ef90643b92cb92c0/funsor-0.1.2.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "3594142ec93f213e104bcfc3ad54ce42", "sha256": "791cc4c06e88b662d647e12a7f6bbac8e07ff32cfd65ae548e3270a9ac247a1d"}, "downloads": -1, "filename": "funsor-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "3594142ec93f213e104bcfc3ad54ce42", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 95083, "upload_time": "2019-10-23T20:10:55", "upload_time_iso_8601": "2019-10-23T20:10:55.410061Z", "url": "https://files.pythonhosted.org/packages/0b/a1/f4af75e8d8972829bacc678bb9ea63d41aaee5ee74147bfcb19ac3886ce9/funsor-0.1.2-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "c18d7a0e6fea22714974030debeb73d0", "sha256": "90cf2e85b8d164d8512d63633ba8a908d9544b80dae07d75b31974c39930abcb"}, "downloads": -1, "filename": "funsor-0.1.2.tar.gz", "has_sig": false, "md5_digest": "c18d7a0e6fea22714974030debeb73d0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 115590, "upload_time": "2019-10-23T20:10:56", "upload_time_iso_8601": "2019-10-23T20:10:56.961694Z", "url": "https://files.pythonhosted.org/packages/65/3c/7409f1cd07797ba0f059127535c5f8288c14acfaf508ef90643b92cb92c0/funsor-0.1.2.tar.gz"}]}