{"info": {"author": "Gaming32", "author_email": "gaming32i64@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# Using the Module\n## Converting to a Python `dict` object\nTo convert a Python object to a Python `dict` (Dictionary) object, you use the `convert_to_data` function.\n\n### Usage\n`convert_to_data(obj, _reached=None)`\n\n### Arguments\n\nArgument   | Type       | Description | Default Value\n---------- | ---------- | ----------- | -----------\nobj | Any | The object to convert to a Python `dict` object | required\n_reached | Set | A value passed to the function internally for recursive data structures | None\n\n### Example\n\n```python\n>>> class A:\n...     def __init__(self, obj):\n...         self.obj = obj\n... \n>>> obj1 = A('Hello World!')\n>>> data = convert_to_data(obj1)\n>>> data\n{'version': 1, 'min_version': 1, 'module': '__main__', 'type': 'A', 'attrs': {'obj': {'value': 'Hello World!', 'uuid': 192575949315149374534195982055635280394, 'mode': 'fallback'}}, 'uuid': 192575949235921212021180267458779800074}\n```\n\n## Converting back to a normal Python object\nTo convert a Python mapping back into a normal Python object, you use the `convert_to_obj` function.\n\n### Usage\n`convert_to_obj(data, allow_mode_repr=True, _reached=None)`\n\n### Arguments\n\nArgument   | Type       | Description | Default Value\n---------- | ---------- | ----------- | -----------\ndata | Mapping | The mapping to convert back to a Python object (a `dict` is a mapping) | required\nallow_mode_repr | bool | Whether to enable MODE_REPR; you might want to have this enabled because the deserialization function of MODE_REPR uses `eval` which is insecure | True\n_reached | Set | A value passed to the function internally for recursive data structures | None\n\n### Example\n\n``` python\n>>> data = {'version': 1, 'min_version': 1, 'module': '__main__', 'type': 'A', 'attrs': {'obj': {'value': 'Hello World!', 'uuid': 192575949315149374534195982055635280394, 'mode': 'fallback'}}, 'uuid': 192575949235921212021180267458779800074}\n>>> obj2 = convert_to_obj(data)\n>>> obj2\n<__main__.A at 0x2473cbb88e0>\n```\n\n## Storing and Reading JSON\nTo store and read JSON-serialized objects, you use the `dump`, `dumps`, `load`, and `loads` functions.\n\n### `dump` and `dumps`\nSerializes `obj` and passes `*jargs` and `**jkwargs` to `json.dump` and `json.dumps` respectively.\n\n### `load` and `loads`\nDeserializes the JSON data from `json.dump` or `json.dumps`. It passes `*jargs` and `**jkwargs` to `json.dump` and `json.dumps` respectively.\n\n## Modifying how the serializer serializes specific types\nTo modify how the serializer serializes specific types you use the `type_settings` descriptor.\n\n### Usage\n`@type_settings(serialization_mode=MODE_YES, serialization_function=None, deserialization_function=None)`\n\n### Arguments\n\nArgument   | Type       | Description | Default Value\n---------- | ---------- | ----------- | -----------\nserialization_mode | any of the MODE_* constants | The method used to serialize (and possibly deserialize the type) | MODE_YES\nserialization_function | Union[None, Callable[[object, Set], JsonSupported]] | The function to serialize with (for MODE_FUNCTION); or `None` for others | None\ndeserialization_function | Union[None, Callable[[JsonSupported, bool, Set], object]] | The function to serialize with (for MODE_FUNCTION); or `None` for others | None\n\n### Modes\n#### MODE_YES\nserialize the type\n#### MODE_NO\ndon't serialize the type, always deserializes as `None`\n#### MODE_FALLBACK\nfallback to the JSON module types, the types can be found at https://docs.python.org/3/library/json.html#json.JSONDecoder\n#### MODE_REPR\nserializes with `repr(obj)`, deserializes with `eval(data)`\n#### MODE_FUNCTION\nuses `serialization_function` to serialize, and `deserialization_function` to deserialize\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/gaming32/json-serialize", "keywords": "", "license": "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "maintainer": "", "maintainer_email": "", "name": "JSON-Serialize", "package_url": "https://pypi.org/project/JSON-Serialize/", "platform": "", "project_url": "https://pypi.org/project/JSON-Serialize/", "project_urls": {"Homepage": "https://github.com/gaming32/json-serialize"}, "release_url": "https://pypi.org/project/JSON-Serialize/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "Module that serializes Python objects into JSON", "version": "1.0.0"}, "last_serial": 6441350, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "47e2e660785bd44f3043fe6193df1737", "sha256": "0c2be6bc2b5496277acb5faf38b465ff0ab169f0720ce6df6e2e36b6b51cd804"}, "downloads": -1, "filename": "JSON_Serialize-1.0.0-py2-none-any.whl", "has_sig": false, "md5_digest": "47e2e660785bd44f3043fe6193df1737", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 17619, "upload_time": "2020-01-12T21:53:02", "upload_time_iso_8601": "2020-01-12T21:53:02.987960Z", "url": "https://files.pythonhosted.org/packages/1d/08/87d2dc55a8c4ba062d0596badf959fb1440e1fc0dbaa3f026d2cb98b08ce/JSON_Serialize-1.0.0-py2-none-any.whl"}, {"comment_text": "", "digests": {"md5": "261492cbf37099ffacd7d5818b371580", "sha256": "865752c38ea599a46706f4fcce896cb1b6f53422a64fce1246ef97a19901d95d"}, "downloads": -1, "filename": "JSON_Serialize-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "261492cbf37099ffacd7d5818b371580", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17593, "upload_time": "2020-01-12T21:46:12", "upload_time_iso_8601": "2020-01-12T21:46:12.390877Z", "url": "https://files.pythonhosted.org/packages/db/d0/e05574a48b69e149daea4598ec9a1381ad96c37fe289581c21b397e6a005/JSON_Serialize-1.0.0-py3-none-any.whl"}]}, "urls": [{"comment_text": "", "digests": {"md5": "47e2e660785bd44f3043fe6193df1737", "sha256": "0c2be6bc2b5496277acb5faf38b465ff0ab169f0720ce6df6e2e36b6b51cd804"}, "downloads": -1, "filename": "JSON_Serialize-1.0.0-py2-none-any.whl", "has_sig": false, "md5_digest": "47e2e660785bd44f3043fe6193df1737", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 17619, "upload_time": "2020-01-12T21:53:02", "upload_time_iso_8601": "2020-01-12T21:53:02.987960Z", "url": "https://files.pythonhosted.org/packages/1d/08/87d2dc55a8c4ba062d0596badf959fb1440e1fc0dbaa3f026d2cb98b08ce/JSON_Serialize-1.0.0-py2-none-any.whl"}, {"comment_text": "", "digests": {"md5": "261492cbf37099ffacd7d5818b371580", "sha256": "865752c38ea599a46706f4fcce896cb1b6f53422a64fce1246ef97a19901d95d"}, "downloads": -1, "filename": "JSON_Serialize-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "261492cbf37099ffacd7d5818b371580", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17593, "upload_time": "2020-01-12T21:46:12", "upload_time_iso_8601": "2020-01-12T21:46:12.390877Z", "url": "https://files.pythonhosted.org/packages/db/d0/e05574a48b69e149daea4598ec9a1381ad96c37fe289581c21b397e6a005/JSON_Serialize-1.0.0-py3-none-any.whl"}]}