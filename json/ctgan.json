{"info": {"author": "MIT Data To AI Lab", "author_email": "dailabmit@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "<p align=\"left\">\n<img width=15% src=\"https://dai.lids.mit.edu/wp-content/uploads/2018/06/Logo_DAI_highres.png\" alt=\u201csdv-dev\u201d />\n<i>An open source project from Data to AI Lab at MIT.</i>\n</p>\n\n[![PyPI Shield](https://img.shields.io/pypi/v/ctgan.svg)](https://pypi.python.org/pypi/ctgan)\n[![Travis CI Shield](https://travis-ci.org/sdv-dev/CTGAN.svg?branch=master)](https://travis-ci.org/sdv-dev/CTGAN)\n[![Downloads](https://pepy.tech/badge/ctgan)](https://pepy.tech/project/ctgan)\n[![Coverage Status](https://codecov.io/gh/sdv-dev/CTGAN/branch/master/graph/badge.svg)](https://codecov.io/gh/sdv-dev/CTGAN)\n\n# CTGAN\n\nImplementation of our NeurIPS paper [Modeling Tabular data using Conditional GAN](https://arxiv.org/abs/1907.00503).\n\nCTGAN is a GAN-based data synthesizer that can generate synthetic tabular data with high fidelity.\n\n* License: [MIT](https://github.com/sdv-dev/CTGAN/blob/master/LICENSE)\n* Documentation: https://sdv-dev.github.io/CTGAN\n* Homepage: https://github.com/sdv-dev/CTGAN\n\n## Overview\n\nBased on previous work ([TGAN](https://github.com/sdv-dev/TGAN)) on synthetic data generation,\nwe develop a new model called CTGAN. Several major differences make CTGAN outperform TGAN.\n\n- **Preprocessing**: CTGAN uses more sophisticated Variational Gaussian Mixture Model to detect\n  modes of continuous columns.\n- **Network structure**: TGAN uses LSTM to generate synthetic data column by column. CTGAN uses\n  Fully-connected networks which is more efficient.\n- **Features to prevent mode collapse**: We design a conditional generator and resample the\n  training data to prevent model collapse on discrete columns. We use WGANGP and PacGAN to\n  stabilize the training of GAN.\n\n\n# Install\n\n## Requirements\n\n**CTGAN** has been developed and tested on [Python 3.5, 3.6 and 3.7](https://www.python.org/downloads/)\n\n## Install from PyPI\n\nThe recommended way to installing **CTGAN** is using [pip](https://pip.pypa.io/en/stable/):\n\n```bash\npip install ctgan\n```\n\nThis will pull and install the latest stable release from [PyPI](https://pypi.org/).\n\nIf you want to install from source or contribute to the project please read the\n[Contributing Guide](https://sdv-dev.github.io/CTGAN/contributing.html#get-started).\n\n# Data Format\n\n**CTGAN** expects the input data to be a table given as either a `numpy.ndarray` or a\n`pandas.DataFrame` object with two types of columns:\n\n* **Continuous Columns**: Columns that contain numerical values and which can take any value.\n* **Discrete columns**: Columns that only contain a finite number of possible values, wether\nthese are string values or not.\n\nThis is an example of a table with 4 columns:\n\n* A continuous column with float values\n* A continuous column with integer values\n* A discrete column with string values\n* A discrete column with integer values\n\n|   | A    | B   | C   | D |\n|---|------|-----|-----|---|\n| 0 | 0.1  | 100 | 'a' | 1 |\n| 1 | -1.3 | 28  | 'b' | 2 |\n| 2 | 0.3  | 14  | 'a' | 2 |\n| 3 | 1.4  | 87  | 'a' | 3 |\n| 4 | -0.1 | 69  | 'b' | 2 |\n\n\n**NOTE**: CTGAN does not distinguish between float and integer columns, which means that it will\nsample float values in all cases. If integer values are required, the outputted float values\nmust be rounded to integers in a later step, outside of CTGAN.\n\n# Python Quickstart\n\nIn this short tutorial we will guide you through a series of steps that will help you\ngetting started with **CTGAN**.\n\n## 1. Model the data\n\n### Step 1: Prepare your data\n\nBefore being able to use CTGAN you will need to prepare your data as specified above.\n\nFor this example, we will be loading some data using the `ctgan.load_demo` function.\n\n```python\nfrom ctgan import load_demo\n\ndata = load_demo()\n```\n\nThis will download a copy of the [Adult Census Dataset](https://archive.ics.uci.edu/ml/datasets/adult) as a dataframe:\n\n|   age | workclass        |   fnlwgt | ... |   hours-per-week | native-country   | income   |\n|-------|------------------|----------|-----|------------------|------------------|----------|\n|    39 | State-gov        |    77516 | ... |               40 | United-States    | <=50K    |\n|    50 | Self-emp-not-inc |    83311 | ... |               13 | United-States    | <=50K    |\n|    38 | Private          |   215646 | ... |               40 | United-States    | <=50K    |\n|    53 | Private          |   234721 | ... |               40 | United-States    | <=50K    |\n|    28 | Private          |   338409 | ... |               40 | Cuba             | <=50K    |\n|   ... | ...              |      ... | ... |              ... | ...              | ...      |\n\n\nAside from the table itself, you will need to create a list with the names of the discrete\nvariables.\n\nFor this example:\n\n```python\ndiscrete_columns = [\n    'workclass',\n    'education',\n    'marital-status',\n    'occupation',\n    'relationship',\n    'race',\n    'sex',\n    'native-country',\n    'income'\n]\n```\n\n### Step 2: Fit CTGAN to your data\n\nOnce you have the data ready, you need to import and create an instance of the `CTGANSynthesizer`\nclass and fit it passing your data and the list of discrete columns.\n\n```python\nfrom ctgan import CTGANSynthesizer\n\nctgan = CTGANSynthesizer()\nctgan.fit(data, discrete_columns)\n```\n\nThis process is likely to take a long time to run.\nIf you want to make the process shorter, or longer, you can control the number of training epochs\nthat the model will be performing by adding it to the `fit` call:\n\n```python\nctgan.fit(data, discrete_columns, epochs=5)\n```\n\n## 2. Generate synthetic data\n\nOnce the process has finished, all you need to do is call the `sample` method of your\n`CTGANSynthesizer` instance indicating the number of rows that you want to generate.\n\n```python\nsamples = ctgan.sample(1000)\n```\n\nThe output will be a table with the exact same format as the input and filled with the synthetic\ndata generated by the model.\n\n|     age | workclass    |    fnlwgt | ... |   hours-per-week | native-country   | income   |\n|---------|--------------|-----------|-----|------------------|------------------|----------|\n| 26.3191 | Private      | 124079    | ... |          40.1557 | United-States    | <=50K    |\n| 39.8558 | Private      | 133996    | ... |          40.2507 | United-States    | <=50K    |\n| 38.2477 | Self-emp-inc | 135955    | ... |          40.1124 | Ecuador          | <=50K    |\n| 29.6468 | Private      |   3331.86 | ... |          27.012  | United-States    | <=50K    |\n| 20.9853 | Private      | 120637    | ... |          40.0238 | United-States    | <=50K    |\n|     ... | ...          |       ... | ... |              ... | ...              | ...      |\n\n\n**NOTE**: CTGAN does not distinguish between float and integer columns, which means that it will\nsample float values in all cases. If integer values are required, the outputted float values\nmust be rounded to integers in a later step, outside of CTGAN.\n\n# Join our community\n\n1. If you would like to try more dataset examples, please have a look at the [examples folder](\nhttps://github.com/sdv-dev/CTGAN/tree/master/examples) of the repository. Please contact us\nif you have a usage example that you would want to share with the community.\n2. If you want to contribute to the project code, please head to the [Contributing Guide](\nhttps://sdv-dev.github.io/CTGAN/contributing.html#get-started) for more details about how to do it.\n3. If you have any doubts, feature requests or detect an error, please [open an issue on github](\nhttps://github.com/sdv-dev/CTGAN/issues)\n4. Also do not forget to check the [project documentation site](https://sdv-dev.github.io/CTGAN/)!\n\n\n# Citing TGAN\n\nIf you use CTGAN, please cite the following work:\n\n- *Lei Xu, Maria Skoularidou, Alfredo Cuesta-Infante, Kalyan Veeramachaneni.* **Modeling Tabular data using Conditional GAN**. NeurIPS, 2019.\n\n```LaTeX\n@inproceedings{xu2019modeling,\n  title={Modeling Tabular data using Conditional GAN},\n  author={Xu, Lei and Skoularidou, Maria and Cuesta-Infante, Alfredo and Veeramachaneni, Kalyan},\n  booktitle={Advances in Neural Information Processing Systems},\n  year={2019}\n}\n```\n\n# Related Projects\n\n## R interface for CTGAN\n\nA wrapper around **CTGAN** has been implemented by Kevin Kuo @kevinykuo, bringing the functionalities\nof **CTGAN** to **R** users.\n\nMore details can be found in the corresponding repository: https://github.com/kasaai/ctgan\n\nPlease note that this package is an external contribution and is not maintained nor suporvised by\nthe MIT DAI-Lab team.\n\n\n# History\n\n## v0.2.1 - 2020-01-27\n\nMinor version including changes to ensure the logs are properly printed and\nthe option to disable the log transformation to the discrete column frequencies.\n\nSpecial thanks to @kevinykuo for the contributions!\n\n### Issues Resolved:\n\n* Option to sample from true data frequency instead of logged frequency - [Issue #16](https://github.com/sdv-dev/CTGAN/issues/16) by @kevinykuo\n* Flush stdout buffer for epoch updates - [Issue #14](https://github.com/sdv-dev/CTGAN/issues/14) by @kevinykuo\n\n## v0.2.0 - 2019-12-18\n\nReorganization of the project structure with a new Python API, new Command Line Interface\nand increased data format support.\n\n### Issues Resolved:\n\n* Reorganize the project structure - [Issue #10](https://github.com/sdv-dev/CTGAN/issues/10) by @csala\n* Move epochs to the fit method - [Issue #5](https://github.com/sdv-dev/CTGAN/issues/5) by @csala\n\n## v0.1.0 - 2019-11-07\n\nFirst Release - NeurIPS 2019 Version.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sdv-dev/CTGAN", "keywords": "ctgan CTGAN", "license": "MIT license", "maintainer": "", "maintainer_email": "", "name": "ctgan", "package_url": "https://pypi.org/project/ctgan/", "platform": "", "project_url": "https://pypi.org/project/ctgan/", "project_urls": {"Homepage": "https://github.com/sdv-dev/CTGAN"}, "release_url": "https://pypi.org/project/ctgan/0.2.1/", "requires_dist": ["torch (<2,>=1.0)", "torchvision (<1,>=0.4.2)", "scikit-learn (<0.23,>=0.21)", "numpy (<2,>=1.17.4)", "pandas (<0.26,>=0.24)", "bumpversion (>=0.5.3) ; extra == 'dev'", "pip (>=9.0.1) ; extra == 'dev'", "watchdog (>=0.8.3) ; extra == 'dev'", "m2r (>=0.2.0) ; extra == 'dev'", "Sphinx (>=1.7.1) ; extra == 'dev'", "sphinx-rtd-theme (>=0.2.4) ; extra == 'dev'", "autodocsumm (>=0.1.10) ; extra == 'dev'", "flake8 (>=3.7.7) ; extra == 'dev'", "isort (>=4.3.4) ; extra == 'dev'", "autoflake (>=1.2) ; extra == 'dev'", "autopep8 (>=1.4.3) ; extra == 'dev'", "twine (>=1.10.0) ; extra == 'dev'", "wheel (>=0.30.0) ; extra == 'dev'", "coverage (>=4.5.1) ; extra == 'dev'", "tox (>=2.9.1) ; extra == 'dev'", "pytest (>=3.4.2) ; extra == 'dev'", "pytest-cov (>=2.6.0) ; extra == 'dev'", "pytest (>=3.4.2) ; extra == 'test'", "pytest-cov (>=2.6.0) ; extra == 'test'"], "requires_python": ">=3.5", "summary": "Conditional GAN for Tabular Data", "version": "0.2.1"}, "last_serial": 6526275, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "ecfc6d0fa6f8aea72c72285669482621", "sha256": "9863b1cdadfae52ab9841b1796a20556c523cb147f1735168bf38de27267c75e"}, "downloads": -1, "filename": "ctgan-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ecfc6d0fa6f8aea72c72285669482621", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 10549, "upload_time": "2019-11-08T03:16:10", "upload_time_iso_8601": "2019-11-08T03:16:10.885496Z", "url": "https://files.pythonhosted.org/packages/68/74/ff0773429ee01b593a92a934713b66ffd81f448c6333f5e0ea677d773061/ctgan-0.1.0-py2.py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "c671e70f0da4733e36686c7aca91e233", "sha256": "04375e8af3e75a06c4e92bfed321c9bcf5ce52e18f204ff2f07df465623db520"}, "downloads": -1, "filename": "ctgan-0.1.0.tar.gz", "has_sig": false, "md5_digest": "c671e70f0da4733e36686c7aca91e233", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 54208, "upload_time": "2019-11-08T03:16:12", "upload_time_iso_8601": "2019-11-08T03:16:12.407344Z", "url": "https://files.pythonhosted.org/packages/e3/8a/6f72780354b1476227d304f6ce59c3d794e5489de752f2babcbe5f80c67f/ctgan-0.1.0.tar.gz"}], "0.1.0.dev0": [{"comment_text": "", "digests": {"md5": "1ddd046edaf10f099e2c9f63410303a6", "sha256": "02e94641e48fff0d2120b086c2768b0c5b1a11e2af9243003c2542d2c6267bdd"}, "downloads": -1, "filename": "ctgan-0.1.0.dev0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1ddd046edaf10f099e2c9f63410303a6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 10600, "upload_time": "2019-11-08T03:11:32", "upload_time_iso_8601": "2019-11-08T03:11:32.179132Z", "url": "https://files.pythonhosted.org/packages/f3/71/7adb2cd69b96505c8c77960ec6563795ead1e12474287aba545948ce87be/ctgan-0.1.0.dev0-py2.py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "491468b48c3a16118d73a33d3eb9ff57", "sha256": "817e7367356de271cfebf9532efa5456ec2f4b396da02c0f504a15471e1f1087"}, "downloads": -1, "filename": "ctgan-0.1.0.dev0.tar.gz", "has_sig": false, "md5_digest": "491468b48c3a16118d73a33d3eb9ff57", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 54094, "upload_time": "2019-11-08T03:11:34", "upload_time_iso_8601": "2019-11-08T03:11:34.855772Z", "url": "https://files.pythonhosted.org/packages/5b/02/88a0cec2cd17a3bc13c75ce8b1ee04460da9cb39fc666905c81b1ad56bbd/ctgan-0.1.0.dev0.tar.gz"}], "0.2.0": [{"comment_text": "", "digests": {"md5": "b3a29e995ace7e9e1d43ec272c1ad044", "sha256": "396d698d6561e8b0ebe0438499cdfc233d92b049f6779ca77df7e0be7c86b3f0"}, "downloads": -1, "filename": "ctgan-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b3a29e995ace7e9e1d43ec272c1ad044", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 15075, "upload_time": "2019-12-18T19:44:12", "upload_time_iso_8601": "2019-12-18T19:44:12.877760Z", "url": "https://files.pythonhosted.org/packages/ff/a3/a57b5ab112cb143a10edfe3211b9897c350d93fa7ccc2cd6638c00f258be/ctgan-0.2.0-py2.py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "034241f747a600a513c78e7283778e87", "sha256": "da3bca489bc841954c4c6d956b51fbea78b15045f3d4917b6b1c336b8488ed94"}, "downloads": -1, "filename": "ctgan-0.2.0.tar.gz", "has_sig": false, "md5_digest": "034241f747a600a513c78e7283778e87", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 60416, "upload_time": "2019-12-18T19:44:14", "upload_time_iso_8601": "2019-12-18T19:44:14.423376Z", "url": "https://files.pythonhosted.org/packages/aa/83/7189979b60c88e051f113d141f2230544912a343ca438858d5949d01fcab/ctgan-0.2.0.tar.gz"}], "0.2.0.dev0": [{"comment_text": "", "digests": {"md5": "8d4b966747ddea0a002472e7841b5b06", "sha256": "54bbbd75d98cf7ab260dbb7abe8d87bb4921097b49a6b8d2766913ec79738977"}, "downloads": -1, "filename": "ctgan-0.2.0.dev0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8d4b966747ddea0a002472e7841b5b06", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 15020, "upload_time": "2019-12-18T17:37:22", "upload_time_iso_8601": "2019-12-18T17:37:22.855687Z", "url": "https://files.pythonhosted.org/packages/c1/4b/051adee99337bdd9aeafd934ade251ad34196ef2e5be2fb2bfa5425e4827/ctgan-0.2.0.dev0-py2.py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "012bae2f87a359c17dc6b7729e3b7692", "sha256": "c26964d341ff40df5a57a2278086c4df005b7f7ac27fa5d6c6216c7e7a81dca4"}, "downloads": -1, "filename": "ctgan-0.2.0.dev0.tar.gz", "has_sig": false, "md5_digest": "012bae2f87a359c17dc6b7729e3b7692", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 60019, "upload_time": "2019-12-18T17:37:25", "upload_time_iso_8601": "2019-12-18T17:37:25.010783Z", "url": "https://files.pythonhosted.org/packages/1e/0c/d352b596faad250dd9caf20993b8a93a0b1363293fe316c5f74c61af86f7/ctgan-0.2.0.dev0.tar.gz"}], "0.2.1": [{"comment_text": "", "digests": {"md5": "aaeecbabf5f7407786e70d08ec03c16a", "sha256": "317904ddc293fe94cf9e9fa793d1bfbabe59c3cea7816b1a944c13b8c0b6581a"}, "downloads": -1, "filename": "ctgan-0.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "aaeecbabf5f7407786e70d08ec03c16a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 15564, "upload_time": "2020-01-27T13:03:26", "upload_time_iso_8601": "2020-01-27T13:03:26.970874Z", "url": "https://files.pythonhosted.org/packages/e2/e6/b744b740fb9636f726f0e8272fc25beb3340c6b1cd5385a9dd87f0316c24/ctgan-0.2.1-py2.py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "9c05f7bdb5c4f5edee889b199607e3b2", "sha256": "db1029fa4fe203cb1ec5b4a0b4a1ad17689c9b8be7505740429eea5b1550c6ab"}, "downloads": -1, "filename": "ctgan-0.2.1.tar.gz", "has_sig": false, "md5_digest": "9c05f7bdb5c4f5edee889b199607e3b2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 61612, "upload_time": "2020-01-27T13:03:28", "upload_time_iso_8601": "2020-01-27T13:03:28.753582Z", "url": "https://files.pythonhosted.org/packages/25/19/d65eef97b7173f8073f95b63630a735db954e16f46befa2fc4c4d9a0cd56/ctgan-0.2.1.tar.gz"}], "0.2.1.dev0": [{"comment_text": "", "digests": {"md5": "98a80a4dfbcf82246d7a0b5fa73d2ba2", "sha256": "50c84b8d63ec77c81acb7f773446f0166bb17a929c2febe72376de05d016a73a"}, "downloads": -1, "filename": "ctgan-0.2.1.dev0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "98a80a4dfbcf82246d7a0b5fa73d2ba2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 15649, "upload_time": "2020-01-27T12:56:56", "upload_time_iso_8601": "2020-01-27T12:56:56.497900Z", "url": "https://files.pythonhosted.org/packages/08/56/88accad4ed54755d6fe5dbed4be73df4f21922ee082ed256c60e1785faa1/ctgan-0.2.1.dev0-py2.py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "34acb604dd089431c4180692b55be898", "sha256": "bba1007d95cf0faac993b0b9c0d00a464f683f8eeb0e11f3248ae1d8feb7f2e7"}, "downloads": -1, "filename": "ctgan-0.2.1.dev0.tar.gz", "has_sig": false, "md5_digest": "34acb604dd089431c4180692b55be898", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 61666, "upload_time": "2020-01-27T12:56:57", "upload_time_iso_8601": "2020-01-27T12:56:57.990786Z", "url": "https://files.pythonhosted.org/packages/6a/6b/fd1e3d9a9ba8ae1f4f603ee3b7c88d4a3cd13be2a8db0f5ed66db6452045/ctgan-0.2.1.dev0.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "aaeecbabf5f7407786e70d08ec03c16a", "sha256": "317904ddc293fe94cf9e9fa793d1bfbabe59c3cea7816b1a944c13b8c0b6581a"}, "downloads": -1, "filename": "ctgan-0.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "aaeecbabf5f7407786e70d08ec03c16a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 15564, "upload_time": "2020-01-27T13:03:26", "upload_time_iso_8601": "2020-01-27T13:03:26.970874Z", "url": "https://files.pythonhosted.org/packages/e2/e6/b744b740fb9636f726f0e8272fc25beb3340c6b1cd5385a9dd87f0316c24/ctgan-0.2.1-py2.py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "9c05f7bdb5c4f5edee889b199607e3b2", "sha256": "db1029fa4fe203cb1ec5b4a0b4a1ad17689c9b8be7505740429eea5b1550c6ab"}, "downloads": -1, "filename": "ctgan-0.2.1.tar.gz", "has_sig": false, "md5_digest": "9c05f7bdb5c4f5edee889b199607e3b2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 61612, "upload_time": "2020-01-27T13:03:28", "upload_time_iso_8601": "2020-01-27T13:03:28.753582Z", "url": "https://files.pythonhosted.org/packages/25/19/d65eef97b7173f8073f95b63630a735db954e16f46befa2fc4c4d9a0cd56/ctgan-0.2.1.tar.gz"}]}