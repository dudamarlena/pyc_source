{"info": {"author": "Xavier Dupr\u00e9", "author_email": "xavier.dupre@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Topic :: Education", "Topic :: Scientific/Engineering"], "description": "\n.. image:: https://github.com/sdpython/mlprodict/blob/master/_doc/sphinxdoc/source/phdoc_static/project_ico.png?raw=true\n    :target: https://github.com/sdpython/mlprodict/\n\n.. _l-README:\n\nmlprodict\n=========\n\n.. image:: https://travis-ci.org/sdpython/mlprodict.svg?branch=master\n    :target: https://travis-ci.org/sdpython/mlprodict\n    :alt: Build status\n\n.. image:: https://ci.appveyor.com/api/projects/status/g8chk1ufyk1m8uep?svg=true\n    :target: https://ci.appveyor.com/project/sdpython/mlprodict\n    :alt: Build Status Windows\n\n.. image:: https://circleci.com/gh/sdpython/mlprodict/tree/master.svg?style=svg\n    :target: https://circleci.com/gh/sdpython/mlprodict/tree/master\n\n.. image:: https://dev.azure.com/xavierdupre3/mlprodict3/_apis/build/status/sdpython.mlprodict\n    :target: https://dev.azure.com/xavierdupre3/mlprodict3/\n\n.. image:: https://badge.fury.io/py/mlprodict.svg\n    :target: https://pypi.org/project/mlprodict/\n\n.. image:: https://img.shields.io/badge/license-MIT-blue.svg\n    :alt: MIT License\n    :target: http://opensource.org/licenses/MIT\n\n.. image:: https://requires.io/github/sdpython/mlprodict/requirements.svg?branch=master\n     :target: https://requires.io/github/sdpython/mlprodict/requirements/?branch=master\n     :alt: Requirements Status\n\n.. image:: https://codecov.io/github/sdpython/mlprodict/coverage.svg?branch=master\n    :target: https://codecov.io/github/sdpython/mlprodict?branch=master\n\n.. image:: http://img.shields.io/github/issues/sdpython/mlprodict.png\n    :alt: GitHub Issues\n    :target: https://github.com/sdpython/mlprodict/issues\n\n.. image:: http://www.xavierdupre.fr/app/mlprodict/helpsphinx/_images/nbcov.png\n    :target: http://www.xavierdupre.fr/app/mlprodict/helpsphinx/all_notebooks_coverage.html\n    :alt: Notebook Coverage\n\n.. image:: https://pepy.tech/badge/mlprodict/month\n    :target: https://pepy.tech/project/mlprodict/month\n    :alt: Downloads\n\n.. image:: https://img.shields.io/github/forks/sdpython/mlprodict.svg\n    :target: https://github.com/sdpython/mlprodict/\n    :alt: Forks\n\n.. image:: https://img.shields.io/github/stars/sdpython/mlprodict.svg\n    :target: https://github.com/sdpython/mlprodict/\n    :alt: Stars\n\n.. image:: https://mybinder.org/badge_logo.svg\n    :target: https://mybinder.org/v2/gh/sdpython/mlprodict/master?filepath=_doc%2Fnotebooks\n\nThe packages explores ways to productionize machine learning predictions.\nOne approach uses *ONNX* and tries to implement\na runtime in python / numpy or wraps\n`onnxruntime <https://github.com/Microsoft/onnxruntime>`_\ninto a single class. The package provides tools to compare\npredictions, to benchmark models converted with\n`sklearn-onnx <https://github.com/onnx/sklearn-onnx/tree/master/skl2onnx>`_.\nThe second approach consists in converting\na pipeline directly into C and is not much developed.\n\n::\n\n    from sklearn.linear_model import LinearRegression\n    from sklearn.datasets import load_iris\n    from mlprodict.onnxrt import OnnxInference, measure_relative_difference\n    import numpy\n\n    iris = load_iris()\n    X = iris.data[:, :2]\n    y = iris.target\n    lr = LinearRegression()\n    lr.fit(X, y)\n\n    # Predictions with scikit-learn.\n    expected = lr.predict(X[:5])\n    print(expected)\n\n    # Conversion into ONNX.\n    from mlprodict.onnx_conv import to_onnx\n    model_onnx = to_onnx(lr, X.astype(numpy.float32))\n\n    # Predictions with onnxruntime\n    oinf = OnnxInference(model_onnx, runtime='onnxruntime1')\n    ypred = oinf.run({'X': X[:5]})\n    print(ypred)\n\n    # Measuring the maximum difference.\n    print(measure_relative_difference(expected, ypred))\n\n**Installation**\n\nThe project relies on *sklearn-onnx* which is in active\ndevelopment. Continuous integration relies on a specific\nbranch of this project to benefit from the lastest changes:\n\n::\n\n    pip install git+https://github.com/xadupre/sklearn-onnx.git@jenkins\n\nThe project is currently in active development.\nIt is safer to install the package directly from\ngithub:\n\n::\n\n    pip install git+https://github.com/sdpython/mlprodict.git\n\nOn Linux and Windows, the package must be compiled with\n*openmp*. Full instructions to build the module and run\nthe documentation are described in `config.yml\n<https://github.com/sdpython/mlprodict/blob/master/.circleci/config.yml>`_\nfor Linux. When this project becomes more stable,\nit will changed to be using official releases.\nExperiments with float64 are not supported with\n``sklearn-onnx <= 1.5.0``.\nThe code is available at\n`GitHub/mlprodict <https://github.com/sdpython/mlprodict/>`_\nand has `online documentation <http://www.xavierdupre.fr/app/mlprodict/helpsphinx/index.html>`_.\n\n.. _l-HISTORY:\n\n=======\nHistory\n=======\n\ncurrent - 2020-04-07 - 0.00Mb\n=============================\n\n* `115`: Add a function to replay a benchmark when this one was dumped (more accurate) (2020-04-06)\n* `116`: Makes ZipMapDictionary picklable (2020-03-30)\n* `114`: Add more parameters to specify benchmark time (2020-03-30)\n* `113`: Add operators for opset 12 (2020-03-26)\n* `112`: Number of feature is wrong for problem num-tr-clus (2020-03-20)\n\n0.3.1029 - 2020-03-17 - 0.28Mb\n==============================\n\n* `111`: Reduce the number of allocation in TreeEnsemble when it is parallelized (cache) (2020-03-13)\n* `110`: Implements runtime for operator Constant-12 (2020-03-06)\n* `109`: Generate a benchmark with asv to compare different runtime. Update modules in asv. (2020-03-06)\n* `108`: Add a function to reduce the memory footprint (2020-02-25)\n* `106`: Add operator Neg (2020-02-25)\n* `101`: Fix DecisionTreeClassifier disappearance on the benchmark graph (2020-02-25)\n* `107`: Add operator IsNaN (2020-02-24)\n* `105`: Support string labels for Linear, TreeEnsemble, SVM classifiers. (2020-02-24)\n* `104`: Enable / disable parallelisation in topk (2020-02-23)\n* `103`: Implements plot benchmark ratio depending on two parameters (2020-02-22)\n* `102`: Fix conversion for xgboost 1.0 (2020-02-21)\n\n0.3.975 - 2020-02-19 - 0.28Mb\n=============================\n\n* `100`: add notebook on TreeEnsemble (2020-02-19)\n* `99`: Fixes #93, use same code for TreeEnsembleClassifier and TreeEnsembleRegression (2020-02-19)\n* `93`: Use pointer for TreeClassifier (2020-02-19)\n* `98`: mlprodict i broken after onnxruntime, skl2onnx update (2020-02-15)\n* `97`: Add runtime for operator Conv (2020-01-24)\n* `96`: Fixes #97, add runtime for operator Conv (2020-01-24)\n* `95`: Fix OnnxInference where an output and an operator share the same name (2020-01-15)\n* `94`: Raw scores are always positive for TreeEnsembleClassifier (binary) (2020-01-13)\n* `90`: Implements a C++ runtime for topk (2019-12-17)\n* `86`: Use pointers to replace treeindex in tree ensemble cpp runtime (2019-12-17)\n* `92`: Implements a C++ version of  ArrayFeatureExtractor (2019-12-14)\n* `89`: Implements a function which extracts some informations on the models (2019-12-14)\n* `88`: Fix bug in runtime of GatherElements (2019-12-14)\n\n0.3.853 - 2019-12-13 - 0.24Mb\n=============================\n\n* `87`: Add converter for HistGradientBoostRegressor (2019-12-09)\n* `85`: Implements a precompiled run method in OnnxInference (runtime='python_compiled') (2019-12-07)\n* `84`: Automatically creates files to profile time_predict function in the benchmark with py-spy (2019-12-04)\n* `83`: ONNX: includes experimental operators in the benchmark (2019-12-04)\n* `82`: Function translate_fct2onnx: use of opset_version (2019-12-04)\n* `81`: ONNX benchmark: track_score returns scores equal to 0 or 1 (unexpected) (2019-12-04)\n* `80`: ONNX: extend benchmark to decision_function for some models (2019-12-03)\n* `77`: Improves ONNX benchmark to measure zipmap impact. (2019-12-03)\n* `76`: Implements ArgMax 12, ArgMax 12 (python onnx runtime) (2019-11-27)\n* `75`: ONNX: fix random_state whevever it is available when running benchmark (2019-11-27)\n\n0.3.765 - 2019-11-21 - 0.22Mb\n=============================\n\n* `59`: ONNX: Investigate kmeans and opset availability. (2019-11-21)\n* `66`: ONNX: improves speed of python runtime for decision trees (2019-11-19)\n* `74`: Function _modify_dimension should return the same dataset if called the same parameter (even if it uses random functions) (2019-11-15)\n* `73`: ONNX: fix links on benchmark page (opset is missing) (2019-11-07)\n* `72`: ONNX: support of sparse tensor for a unary and binary python operators (2019-11-06)\n* `71`: ONNX: add operator Constant (2019-11-06)\n* `67`: ONNX: improves speed of svm regressor (2019-11-06)\n* `70`: ONNX: write tools to test convervsion for models in scikit-learn examples (2019-10-29)\n* `65`: ONNX: investigate discrepencies for k-NN (2019-10-28)\n* `69`: ONNX: side by side should work by name and not by positions (2019-10-23)\n* `68`: ONNX: improves speed of SGDClassifier (2019-10-23)\n* `61`: Implements a function to create a benchmark based on asv (ONNX) (2019-10-17)\n* `63`: Export asv results to csv (ONNX) + command line (2019-10-11)\n* `64`: Add an example with lightgbm and categorical variables (ONNX) (2019-10-07)\n* `62`: Implements command line for the asv benchmark (ONNX) (2019-10-04)\n* `60`: Improve lightgbm converter (ONNX) (2019-09-30)\n* `58`: Fix table checking model, merge is wrong in documentation (2019-09-20)\n\n0.2.542 - 2019-09-15 - 0.59Mb\n=============================\n\n* `57`: ONNX: handles dataframe when converting a model (2019-09-15)\n* `56`: ONNX: implements cdist operator (2019-09-12)\n* `54`: ONNX: fix summary, it produces multiple row when model are different when opset is different (2019-09-12)\n* `51`: ONNX: measure the time performance obtained by using optimization (2019-09-11)\n* `52`: ONNC-cli: add a command line to optimize an onnx model (2019-09-10)\n* `49`: ONNX optimization: remove redundant subparts of a graph (2019-09-09)\n* `48`: ONNX optimization: reduce the number of Identity nodes (2019-09-09)\n* `47`: Implements statistics on onnx graph and sklearn models, add them to the documentation (2019-09-06)\n* `46`: Implements KNearestNeibhorsRegressor supporting batch mode (ONNX) (2019-08-31)\n* `45`: KNearestNeighborsRegressor (2019-08-30)\n* `44`: Add an example to look into the performance of every node for a particular dataset (2019-08-30)\n* `43`: LGBMClassifier has wrong shape (2019-08-29)\n\n0.2.452 - 2019-08-28 - 0.13Mb\n=============================\n\n* `42`: Adds a graph which visually summarize the validating benchmark (ONNX). (2019-08-27)\n* `41`: Enables to test multiple number of features at the same time (ONNX) (2019-08-27)\n* `40`: Add a parameter to change the number of featuress when validating a model (ONNX). (2019-08-26)\n* `39`: Add a parameter to dump all models even if they don't produce errors when being validated (ONNX) (2019-08-26)\n* `24`: support double for TreeEnsembleClassifier (python runtime ONNX) (2019-08-23)\n* `38`: See issue on onnxmltools. https://github.com/onnx/onnxmltools/issues/321 (2019-08-19)\n* `35`: Supports parameter time_kwargs in the command line (ONNX) (2019-08-09)\n* `34`: Add intervals when measuring time ratios between scikit-learn and onnx (ONNX) (2019-08-09)\n* `31`: Implements shape inference for the python runtime (ONNX) (2019-08-06)\n* `15`: Tells operator if the execution can be done inplace for unary operators (ONNX). (2019-08-06)\n* `27`: Bug fix (2019-08-02)\n* `23`: support double for TreeEnsembleRegressor (python runtime ONNX) (2019-08-02)\n\n0.2.363 - 2019-08-01 - 0.11Mb\n=============================\n\n* `26`: Tests all converters in separate processeses to make it easier to catch crashes (2019-08-01)\n* `25`: Ensures operator clip returns an array of the same type (ONNX Python Runtime) (2019-07-30)\n* `22`: Implements a function to shake an ONNX model and test float32 conversion (2019-07-28)\n* `21`: Add customized converters (2019-07-28)\n* `20`: Enables support for TreeEnsemble operators in python runtime (ONNX). (2019-07-28)\n* `19`: Enables support for SVM operators in python runtime (ONNX). (2019-07-28)\n* `16`: fix documentation, visual graph are not being rendered in notebooks (2019-07-23)\n* `18`: implements python runtime for SVM (2019-07-20)\n\n0.2.272 - 2019-07-15 - 0.09Mb\n=============================\n\n* `17`: add a mechanism to use ONNX with double computation (2019-07-15)\n* `13`: add automated benchmark of every scikit-learn operator in the documentation (2019-07-05)\n* `12`: implements a way to measure time for each node of the ONNX graph (2019-07-05)\n* `11`: implements a better ZipMap node based on dedicated container (2019-07-05)\n* `8`: implements runtime for decision tree (2019-07-05)\n* `7`: implement python runtime for scaler, pca, knn, kmeans (2019-07-05)\n* `10`: implements full runtime with onnxruntime not node by node (2019-06-16)\n* `9`: implements a onnxruntime runtime (2019-06-16)\n* `6`: first draft of a python runtime for onnx (2019-06-15)\n* `5`: change style highlight-ipython3 (2018-01-05)\n", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/sdpython/mlprodict/", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.xavierdupre.fr/app/mlprodict/helpsphinx/index.html", "keywords": "mlprodict", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "mlprodict", "package_url": "https://pypi.org/project/mlprodict/", "platform": "", "project_url": "https://pypi.org/project/mlprodict/", "project_urls": {"Download": "https://github.com/sdpython/mlprodict/", "Homepage": "http://www.xavierdupre.fr/app/mlprodict/helpsphinx/index.html"}, "release_url": "https://pypi.org/project/mlprodict/0.3.1070/", "requires_dist": null, "requires_python": "", "summary": "Python Runtime for ONNX models, other helpers to convert machine learned models in C++.", "version": "0.3.1070"}, "last_serial": 6971571, "releases": {"0.1.11": [{"comment_text": "", "digests": {"md5": "9de611b395b5e5c7a22256163e474cb1", "sha256": "1c8184acd31b1bbdacb379283749e73d47ab9a3f7559397ccb140159d5ab5841"}, "downloads": -1, "filename": "mlprodict-0.1.11-py3-none-any.whl", "has_sig": false, "md5_digest": "9de611b395b5e5c7a22256163e474cb1", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 26253, "upload_time": "2017-12-04T14:57:03", "upload_time_iso_8601": "2017-12-04T14:57:03.094625Z", "url": "https://files.pythonhosted.org/packages/bc/89/d70fa5c56dc5583e4364422b099047a3df5c6d2554b6b0f05d2196e50cea/mlprodict-0.1.11-py3-none-any.whl"}], "0.2.272": [{"comment_text": "", "digests": {"md5": "e39af9b879627faa28e9620eb6b73cb6", "sha256": "1a71ca358470d820e6a21e3f2e50801799685bcdbb3dbe32a32cfe83d7f7d155"}, "downloads": -1, "filename": "mlprodict-0.2.272.tar.gz", "has_sig": false, "md5_digest": "e39af9b879627faa28e9620eb6b73cb6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 90763, "upload_time": "2019-07-15T12:11:06", "upload_time_iso_8601": "2019-07-15T12:11:06.512599Z", "url": "https://files.pythonhosted.org/packages/2d/a6/3c9e190ad9a33295ee4ca354e1e887e6dfc901940230e8ba32b905afcde1/mlprodict-0.2.272.tar.gz"}], "0.2.363": [{"comment_text": "", "digests": {"md5": "380159e186eb5a38fc4e8aaea09e705a", "sha256": "e2e2d8e714134a6a9ea7bce28dbf469f0d41aa9b9b20b28d53bd618ba2df2336"}, "downloads": -1, "filename": "mlprodict-0.2.363.tar.gz", "has_sig": false, "md5_digest": "380159e186eb5a38fc4e8aaea09e705a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 116129, "upload_time": "2019-08-01T22:56:28", "upload_time_iso_8601": "2019-08-01T22:56:28.931115Z", "url": "https://files.pythonhosted.org/packages/ca/e6/c2f7adcf886bafb0678594545d77f1be36b4fb59f47c5f21ebec4476cabf/mlprodict-0.2.363.tar.gz"}], "0.2.452": [{"comment_text": "", "digests": {"md5": "357c7324be829eba7e68c58b1a2df0e6", "sha256": "b9f07fff8cff5e139a565ad6e1f9917ec87fdc1e29b10566bd0373a87e3412a0"}, "downloads": -1, "filename": "mlprodict-0.2.452.tar.gz", "has_sig": false, "md5_digest": "357c7324be829eba7e68c58b1a2df0e6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 134931, "upload_time": "2019-08-28T13:17:38", "upload_time_iso_8601": "2019-08-28T13:17:38.218995Z", "url": "https://files.pythonhosted.org/packages/d8/0f/adac4339d443b3505bcc382c6bbf9b4b6509426e351236058d9ce3a94618/mlprodict-0.2.452.tar.gz"}], "0.2.542": [{"comment_text": "", "digests": {"md5": "3e7b954df1fc2666a677b4c6f96f4671", "sha256": "f026dc231dafa01d9ca22fdd7ea5ecd2855973c3b005497d9b855cb440237b02"}, "downloads": -1, "filename": "mlprodict-0.2.542-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "3e7b954df1fc2666a677b4c6f96f4671", "packagetype": "bdist_wheel", "python_version": "3.7", "requires_python": null, "size": 620709, "upload_time": "2019-09-15T09:46:34", "upload_time_iso_8601": "2019-09-15T09:46:34.503241Z", "url": "https://files.pythonhosted.org/packages/d9/59/ca5ef1e97a731fc0a2f16d3c8aff20f61da1dba6c91e2ad7b3da0a19809f/mlprodict-0.2.542-cp37-cp37m-win_amd64.whl"}, {"comment_text": "", "digests": {"md5": "a011d24688816524d3728a29b0592a69", "sha256": "9dc0cdbb55a10bf9da6df5272fa96b8f0fd22a4f082645bb779e33df55cdf0ef"}, "downloads": -1, "filename": "mlprodict-0.2.542.tar.gz", "has_sig": false, "md5_digest": "a011d24688816524d3728a29b0592a69", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 196833, "upload_time": "2019-09-15T09:46:06", "upload_time_iso_8601": "2019-09-15T09:46:06.565832Z", "url": "https://files.pythonhosted.org/packages/0d/34/60ec1db6b311fed1dee845c196c4b8d893c3f7be8c6f5d3d67d8c8573f85/mlprodict-0.2.542.tar.gz"}], "0.3.1029": [{"comment_text": "", "digests": {"md5": "f270db50c0629954719eaeea2cfb90c1", "sha256": "a436d417f02b3f8f1161c2c2b0e8ef26dd7166518b7c30f29e9c1334a9aee282"}, "downloads": -1, "filename": "mlprodict-0.3.1029-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "f270db50c0629954719eaeea2cfb90c1", "packagetype": "bdist_wheel", "python_version": "3.7", "requires_python": null, "size": 1123545, "upload_time": "2020-03-17T13:19:45", "upload_time_iso_8601": "2020-03-17T13:19:45.459844Z", "url": "https://files.pythonhosted.org/packages/bd/61/722192f135a7f22536c6ab86813b2b30c293e965a26e6bc82952aee76d64/mlprodict-0.3.1029-cp37-cp37m-win_amd64.whl"}, {"comment_text": "", "digests": {"md5": "6d86b9e61a452712d69ecfba5bd87c20", "sha256": "7333f57314d1ef984a91a6c669d0b4a8c8fcbae91de135f7bb3b5b2919aabef9"}, "downloads": -1, "filename": "mlprodict-0.3.1029.tar.gz", "has_sig": false, "md5_digest": "6d86b9e61a452712d69ecfba5bd87c20", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 297531, "upload_time": "2020-03-17T13:19:48", "upload_time_iso_8601": "2020-03-17T13:19:48.560325Z", "url": "https://files.pythonhosted.org/packages/4a/c7/20b54b9fad90c80990da306f917037b71bba81c4b29f44b6a9172b76f017/mlprodict-0.3.1029.tar.gz"}], "0.3.1070": [{"comment_text": "", "digests": {"md5": "3955ced6b18aee81ae4f7c6ca18a068e", "sha256": "58ad6d72ebcfa8a91f693162a9a547366c33ae4dbca7f450190ca00692c97a7d"}, "downloads": -1, "filename": "mlprodict-0.3.1070.tar.gz", "has_sig": false, "md5_digest": "3955ced6b18aee81ae4f7c6ca18a068e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 301989, "upload_time": "2020-04-07T17:16:58", "upload_time_iso_8601": "2020-04-07T17:16:58.410126Z", "url": "https://files.pythonhosted.org/packages/72/2e/7ec24ff282661c9506de7b06873a45ccf4f28a49fc2f1254464397f8f860/mlprodict-0.3.1070.tar.gz"}], "0.3.765": [{"comment_text": "", "digests": {"md5": "b5137e58bd14223e2f2d51a858d0d0f9", "sha256": "01ff7dd8b100272ce132a80b65e6390ad3d902a1ab5c8668b7031130c27c6e9c"}, "downloads": -1, "filename": "mlprodict-0.3.765.tar.gz", "has_sig": false, "md5_digest": "b5137e58bd14223e2f2d51a858d0d0f9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 234679, "upload_time": "2019-11-21T22:47:21", "upload_time_iso_8601": "2019-11-21T22:47:21.081985Z", "url": "https://files.pythonhosted.org/packages/85/a9/a48b8967c569a416763aa921cf3813437f0c01c19fc50e9c0648598cca3d/mlprodict-0.3.765.tar.gz"}], "0.3.853": [{"comment_text": "", "digests": {"md5": "565965802709f7544617bcbf2ef65ea7", "sha256": "0d95e8d3b0ad1ffec3ede7dacb22c08569dfc6aa41325480e985948ecb9a083c"}, "downloads": -1, "filename": "mlprodict-0.3.853.tar.gz", "has_sig": false, "md5_digest": "565965802709f7544617bcbf2ef65ea7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 252130, "upload_time": "2019-12-13T09:46:05", "upload_time_iso_8601": "2019-12-13T09:46:05.327568Z", "url": "https://files.pythonhosted.org/packages/0b/c0/c9aafea588822bfb5f761822d1ec03a96a972012e138a475343d5a1d9315/mlprodict-0.3.853.tar.gz"}], "0.3.975": [{"comment_text": "", "digests": {"md5": "d82fe4f7f4c03294e45d2869262f22e0", "sha256": "56456d3f1f37b991329be1ec8f7e98a7d9e0776030aa1559acd44015548e915b"}, "downloads": -1, "filename": "mlprodict-0.3.975.tar.gz", "has_sig": false, "md5_digest": "d82fe4f7f4c03294e45d2869262f22e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 288970, "upload_time": "2020-02-19T17:21:01", "upload_time_iso_8601": "2020-02-19T17:21:01.049479Z", "url": "https://files.pythonhosted.org/packages/6b/93/28748f3b80a3fd661843e65ffd006e974356c424fb78cba3fe7432d004b6/mlprodict-0.3.975.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "3955ced6b18aee81ae4f7c6ca18a068e", "sha256": "58ad6d72ebcfa8a91f693162a9a547366c33ae4dbca7f450190ca00692c97a7d"}, "downloads": -1, "filename": "mlprodict-0.3.1070.tar.gz", "has_sig": false, "md5_digest": "3955ced6b18aee81ae4f7c6ca18a068e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 301989, "upload_time": "2020-04-07T17:16:58", "upload_time_iso_8601": "2020-04-07T17:16:58.410126Z", "url": "https://files.pythonhosted.org/packages/72/2e/7ec24ff282661c9506de7b06873a45ccf4f28a49fc2f1254464397f8f860/mlprodict-0.3.1070.tar.gz"}]}