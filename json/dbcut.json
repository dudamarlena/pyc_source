{"info": {"author": "Salem Harrache", "author_email": "dev@salem.harrache.info", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "\nDBcut\n=====\n\n.. image:: https://img.shields.io/pypi/v/dbcut.svg\n    :target: https://pypi.python.org/pypi/dbcut\n\n\nExtract a lightweight subset of your relational production database for development and testing purpose.\n\nFeatures\n--------\n\n\n* Extract data from large databases.\n* Reinject data into another base.\n* Target and source databases could be based on different SGBD (i.e., MySQL -> PostgreSQL/SQLite).\n* Extraction queries simplified in YAML.\n* Support nested associations.\n* Json and plain SQL export.\n* Caching of extractions to accelerate future extractions.\n\nUsage\n-----\n\n.. code-block::\n\n   Usage: dbcut [OPTIONS] COMMAND1 [ARGS]... [COMMAND2 [ARGS]...]...\n\n     Extract a lightweight subset of your production DB for development and\n     testing purpose.\n\n   Options:\n     -c, --config PATH    Configuration file\n     --version            Show the version and exit.\n     -y, --force-yes      Never prompts for user intervention\n     -i, --interactive    Prompts for user intervention.\n     --quiet, --no-quiet  Suppresses most warning and diagnostic messages.\n     --debug              Enables debug mode.\n     --verbose            Enables verbose output.\n     -h, --help           Show this message and exit.\n\n   Commands:\n     load        Extract and load data to the target database.\n     flush       Purge cache, remove ALL TABLES from the target database and...\n     inspect     Check databases content.\n     dumpsql     Dump all SQL insert queries.\n     dumpjson    Export data to json.\n     purgecache  Remove all cached queries.\n     clear       Remove all data (only) from the target database\n\nGetting started\n---------------\n\nLet's take the following database example:\n\n\n.. image:: demo/example-simple-db.png\n   :target: demo/example-simple-db.png\n   :alt: Simple Database\n\n\nWe want to extract some users with all related data to our development database.\n\nLet's first edit the extraction file ``dbcut.yaml`` as follows:\n\n.. code-block:: shell\n\n   $ cd myprojet\n   $ vim dbcut.yml\n\n.. code-block:: yaml\n\n   databases:\n     source_uri: mysql://prod:prod@cluster-prod01.mycompagny.com/prod\n     destination_uri: sqlite:///small-dev-database.db\n\n   queries:\n     - from: user\n       limit: 2\n   `\n\nThen, let's set the limit to two users, the default limit being 10.\n\nAfter that, let's launch the extraction command with the ``load`` command:\n\n.. code-block:: shell\n\n   $ dbcut load\n    ---> Reflecting database schema from mysql://prod:***@cluster-prod01.mycompagny.com/prod\n    ---> Creating new sqlite:///small-dev-database.db database\n    ---> Creating all tables and relations on sqlite:///small-dev-database.db\n\n   Query 1/1 :\n\n       from: user\n       limit: 2\n       backref_limit: 10\n       backref_depth: 5\n       join_depth: 5\n       exclude: []\n       include: []\n\n\n        \u250c\u2500\u207f\u2500comment\n        \u251c\u2500\u207f\u2500vote\n    user\u2524\n        \u2514\u2500\u207f\u2500user_group\u2510\n                      \u2514\u2500\u00b9\u2500group\u2510\n                               \u2514\u2500\u00b9\u2500role\u2510\n                                       \u2514\u2500\u207f\u2500role_permission\u2510\n                                                          \u2514\u2500\u00b9\u2500permission\n\n\n   8 tables loaded\n\n    ---> Cache key : 4a468c3555074890b7c342c0a575f29d47145821\n    ---> Executing query\n    ---> Fetching objects\n    ---> Inserting 31 rows\n\nWe can check the data on our new database :\n\n.. code-block:: shell\n\n   $ ls\n   dbcut.yml  small-dev-database.db\n\n   $ sqlite3 small-dev-database.db <<<\"SELECT id, login FROM user\"\n   3|jerome\n   4|julien\n\nIn the following example, we are going to retrieve roles with related groups and permissions.\nIn order to obtain the best extraction graph possible, we are going to use the keyword ``include``\\ , which indicated to dbcut that\nwe want to minimize the number of associated tables (Nested associations).\n\n.. code-block:: yaml\n\n   queries:\n     - from: user\n       limit: 2\n\n     - from: role\n       include:\n         - group\n         - permission\n\nIt is possible to empty the content of the local database before beginning the extraction with the ``clear`` command.\n\n.. code-block:: shell\n\n   $ dbcut -y clear load\n    ---> Removing all data from sqlite:///small-dev-database.db database\n    ---> Reflecting database schema from mysql://prod:***@cluster-prod01.mycompagny.com/prod?charset=utf8\n    ---> Creating all tables and relations on sqlite:///small-dev-database.db\n\n   Query 1/2 :\n\n       from: user\n       limit: 2\n       backref_limit: 10\n       backref_depth: 5\n       join_depth: 5\n       exclude: []\n       include: []\n\n\n        \u250c\u2500\u207f\u2500comment\n        \u251c\u2500\u207f\u2500vote\n    user\u2524\n        \u2514\u2500\u207f\u2500user_group\u2510\n                      \u2514\u2500\u00b9\u2500group\u2510\n                               \u2514\u2500\u00b9\u2500role\u2510\n                                       \u2514\u2500\u207f\u2500role_permission\u2510\n                                                          \u2514\u2500\u00b9\u2500permission\n\n\n   8 tables loaded\n\n    ---> Cache key : 4a468c3555074890b7c342c0a575f29d47145821\n    ---> Using cache (2 elements)\n    ---> Fetching objects\n    ---> Inserting 31 rows\n\n   Query 2/2 :\n\n       from: role\n       limit: 10\n       backref_limit: 10\n       backref_depth: null\n       join_depth: null\n       exclude: []\n       include:\n       - group\n       - permission\n\n\n        \u250c\u2500\u207f\u2500group\n    role\u2524\n        \u2514\u2500\u207f\u2500role_permission\u2510\n                           \u2514\u2500\u00b9\u2500permission\n\n\n   4 tables loaded\n\n    ---> Cache key : 5029d84dbb2bc75a7df898dd94df93b395e91e44\n    ---> Executing query\n    ---> Fetching objects\n    ---> Inserting 22 rows\n\nAs you can see in the first query, the cache was used and there was thus no interaction with the source database.\n\nThis query allowed the extraction of all roles:\n\n.. code-block::\n\n   $ sqlite3 small-dev-database.db  <<<\"SELECT * from role\"\n   1|admin\n   2|moderator\n   3|user\n\nIf we had not used the ``include`` keyword, all tables would have been extracted:\n\n.. code-block::\n\n        \u250c\u2500\u207f\u2500role_permission\u2510\n        \u2502                  \u2514\u2500\u00b9\u2500permission\n    role\u2524\n        \u2514\u2500\u207f\u2500group\u2510\n                 \u2514\u2500\u207f\u2500user_group\u2510\n                               \u2502       \u250c\u2500\u207f\u2500comment\n                               \u2514\u2500\u00b9\u2500user\u2524\n                                       \u2514\u2500\u207f\u2500vote\n\nTo narrow more precisely our extraction, we are now going to limit to roles that can delete a user.\n\n.. code-block::\n\n   queries:\n     - from: user\n       limit: 2\n\n     - from: role\n       include:\n         - group\n         - permission\n       where:\n         permission.codename: 'delete_user'\n\n Only the last extraction rule is relaunched with the ``--last-only`` option.\n\n.. code-block::\n\n   $ dbcut -y clear load --last-only\n   ...\n    ---> Cache key : ffb664a2e69c88fa48db2680daf71d30408bd207\n    ---> Executing query\n    ---> Fetching objects\n    ---> Inserting 14 rows\n\nThis time, only the 'admin' role is retrieved:\n\n.. code-block:: shell\n\n   $ sqlite3 small-dev-database.db  <<<\"SELECT * FROM role\"\n   1|admin\n\nPlease note that the filter only applies here to the role table (\\ ``from``\\ ) and not to the permission table.\n\n.. code-block:: shell\n\n   $ sqlite3 small-dev-database.db  <<<\"SELECT * FROM permission\"\n   1|delete_comment\n   2|delete_vote\n   3|delete_user\n   4|create_comment\n   5|create_vote\n   6|create_user\n\nIndeed, we filter the roles based on a value from the permission table, but we do retrieved all permissions associated to this role.\n\nIn the above example, it makes sense that the admin role has all permissions.\n\n\nCHANGELOG\n=========\n\nVersion 0.1.3\n-------------\n\nReleased on November 27th 2019\n\nBug fixes:\n\n- Determistic cache key generation.\n- `clear` cmd delete only existing table.  \n\nFirst release on PyPI.\n\n\nVersion 0.1.2\n-------------\n\nReleased on November 15th 2019\n\n\n* Removed SAWarning about loading declaratives classes twice\n* Fixed syntax error on sql truncate queries\n* Fixed query parsing when mixing attributes in the same query\n\nVersion 0.1.1\n-------------\n\nReleased on November 14th 2019\n\n\n* Removed universal wheel package, only python3 is supported\n\nVersion 0.1.0\n-------------\n\nReleased on November 14th 2019\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/itsolutionsfactory/dbcut", "keywords": "dbcut", "license": "MIT license", "maintainer": "", "maintainer_email": "", "name": "dbcut", "package_url": "https://pypi.org/project/dbcut/", "platform": "", "project_url": "https://pypi.org/project/dbcut/", "project_urls": {"Homepage": "https://github.com/itsolutionsfactory/dbcut"}, "release_url": "https://pypi.org/project/dbcut/0.1.3/", "requires_dist": null, "requires_python": "", "summary": "Extract a lightweight subset of your relational production database for development and testing purpose.", "version": "0.1.3"}, "last_serial": 6911690, "releases": {"0.1.3": [{"comment_text": "", "digests": {"md5": "daf285423d35cf9a25280da477395934", "sha256": "4050b4ddf9adb8aecfda372db4425ff4bd5a8827bb825b99db776e1395de1e66"}, "downloads": -1, "filename": "dbcut-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "daf285423d35cf9a25280da477395934", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 34814, "upload_time": "2019-11-27T23:05:52", "upload_time_iso_8601": "2019-11-27T23:05:52.598789Z", "url": "https://files.pythonhosted.org/packages/54/87/ae1d971a6e262150691feb98de141df9679eb50bb86584dafe3da2e288fe/dbcut-0.1.3-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "1ace13551f1e7f601a39b7586c90f830", "sha256": "c5237797b4d798d197c2064d8878de7adbb017962792e5483d677a52f90c26a3"}, "downloads": -1, "filename": "dbcut-0.1.3.tar.gz", "has_sig": false, "md5_digest": "1ace13551f1e7f601a39b7586c90f830", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30057, "upload_time": "2019-11-27T23:05:48", "upload_time_iso_8601": "2019-11-27T23:05:48.692471Z", "url": "https://files.pythonhosted.org/packages/d1/03/46ae22f95cd950790b423849e2a268133f7680b4700abfa2f207830e76f9/dbcut-0.1.3.tar.gz"}], "0.2.0.dev0": [{"comment_text": "", "digests": {"md5": "7b5e2d667fc780c744992dbbef994b75", "sha256": "bc51c0c7e72f2191129ce35f733c378aa0ca45fbfe54e6c9ceb057874b43619b"}, "downloads": -1, "filename": "dbcut-0.2.0.dev0-py3-none-any.whl", "has_sig": false, "md5_digest": "7b5e2d667fc780c744992dbbef994b75", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 34402, "upload_time": "2019-11-28T12:29:34", "upload_time_iso_8601": "2019-11-28T12:29:34.936907Z", "url": "https://files.pythonhosted.org/packages/a1/b6/fb189566ac5f014f9b18dadbb43c2d87dec28861a91c3a47600e25ec84d6/dbcut-0.2.0.dev0-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "16901961b9109eb16e93e0fddd46b5db", "sha256": "3472b93705ceed1d9eaea9c14cda324f2d88140dc25b7fc11a8b41b09ac746a0"}, "downloads": -1, "filename": "dbcut-0.2.0.dev0.tar.gz", "has_sig": false, "md5_digest": "16901961b9109eb16e93e0fddd46b5db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30159, "upload_time": "2019-11-28T12:29:31", "upload_time_iso_8601": "2019-11-28T12:29:31.953363Z", "url": "https://files.pythonhosted.org/packages/54/09/3dd9b3613eac12f4b1b3052e50cf0d5d83523402f8540c842661fcb7d63e/dbcut-0.2.0.dev0.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "daf285423d35cf9a25280da477395934", "sha256": "4050b4ddf9adb8aecfda372db4425ff4bd5a8827bb825b99db776e1395de1e66"}, "downloads": -1, "filename": "dbcut-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "daf285423d35cf9a25280da477395934", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 34814, "upload_time": "2019-11-27T23:05:52", "upload_time_iso_8601": "2019-11-27T23:05:52.598789Z", "url": "https://files.pythonhosted.org/packages/54/87/ae1d971a6e262150691feb98de141df9679eb50bb86584dafe3da2e288fe/dbcut-0.1.3-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "1ace13551f1e7f601a39b7586c90f830", "sha256": "c5237797b4d798d197c2064d8878de7adbb017962792e5483d677a52f90c26a3"}, "downloads": -1, "filename": "dbcut-0.1.3.tar.gz", "has_sig": false, "md5_digest": "1ace13551f1e7f601a39b7586c90f830", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30057, "upload_time": "2019-11-27T23:05:48", "upload_time_iso_8601": "2019-11-27T23:05:48.692471Z", "url": "https://files.pythonhosted.org/packages/d1/03/46ae22f95cd950790b423849e2a268133f7680b4700abfa2f207830e76f9/dbcut-0.1.3.tar.gz"}]}