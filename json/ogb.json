{"info": {"author": "OGB Team", "author_email": "ogb@cs.stanford.edu", "bugtrack_url": null, "classifiers": ["Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering :: Artificial Intelligence"], "description": "<p align=\"center\">\n  <img width=\"40%\" src=\"https://snap-stanford.github.io/ogb-web/assets/img/OGB_rectangle.png\" />\n</p>\n\n--------------------------------------------------------------------------------\n\n[![PyPI](https://img.shields.io/pypi/v/ogb)](https://pypi.org/project/ogb/)\n[![License](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/snap-stanford/ogb/blob/master/LICENSE)\n\n## Overview\n\nThe Open Graph Benchmark (OGB) is a collection of benchmark datasets, data loaders, and evaluators for graph machine learning. Datasets cover a variety of graph machine learning tasks and real-world applications.\nThe OGB data loaders are fully compatible with popular graph deep learning frameworks, including [PyTorch Geometric](https://pytorch-geometric.readthedocs.io/en/latest/) and [Deep Graph Library (DGL)](https://www.dgl.ai/). They provide automatic dataset downloading, standardized dataset splits, and unified performance evaluation.\n\n<p align=\"center\">\n  <img width=\"80%\" src=\"https://snap-stanford.github.io/ogb-web/assets/img/ogb_overview.png\" />\n</p>\n\nOGB aims to provide graph datasets that cover important graph machine learning tasks, diverse dataset scale, and rich domains.\n\n**Graph ML Tasks:** We cover three fundamental graph machine learning tasks: prediction at the level of nodes, links, and graphs.\n\n**Diverse scale:** Small-scale graph datasets can be processed within a single GPU, while medium- and large-scale graphs might require multiple GPUs or clever sampling/partition techniques.\n\n**Rich domains:** Graph datasets come from diverse domains ranging from scientific ones to social/information networks, and also include heterogeneous knowledge graphs. \n\n<p align=\"center\">\n  <img width=\"70%\" src=\"https://snap-stanford.github.io/ogb-web/assets/img/dataset_overview.png\" />\n</p>\n\nOGB is an on-going effort, and we are planning to increase our coverage in the future.\n\n## Installation\nYou can install OGB using Python's package manager `pip`.\n\n#### Requirements\n - Python>=3.5\n - PyTorch>=1.2\n - DGL>=0.4.1 or torch-geometric>=1.3.1\n - Numpy>=1.16.0\n - pandas>=0.24.0\n - urllib3>=1.24.0\n - scikit-learn>=0.20.0\n\n#### Pip install\nThe recommended way to install OGB is using Python's package manager pip:\n```bash\npip install ogb\n```\n\n#### From source\nYou can also install OGB from source. This is recommended if you want to contribute to OGB.\n```bash\ngit clone https://github.com/snap-stanford/ogb\ncd ogb\npython setup.py install\n```\n\n## Example\nWe highlight two key features of OGB, namely, (1) easy-to-use data loaders, and (2) standardized evaluators.\n#### (1) Data loaders\nWe prepare easy-to-use PyTorch Geometric and DGL data loaders. We handle dataset downloading as well as standardized dataset splitting.\nBelow, on PyTorch Geometric, we see that a few lines of code is sufficient to prepare and split the dataset! Needless to say, you can enjoy the same convenience for DGL!\n```python\nfrom ogb.graphproppred import PygGraphPropPredDataset\nfrom torch_geometric.data import DataLoader\n\ndataset = PygGraphPropPredDataset(name = \"ogbg-mol-hiv\")\n\nsplitted_idx = dataset.get_idx_split() \ntrain_loader = DataLoader(dataset[splitted_idx[\"train\"]], batch_size=32, shuffle=True)\nvalid_loader = DataLoader(dataset[splitted_idx[\"valid\"]], batch_size=32, shuffle=False)\ntest_loader = DataLoader(dataset[splitted_idx[\"test\"]], batch_size=32, shuffle=False)\n```\n\n#### (2) Evaluators\nWe also prepare standardized evaluators for easy evaluation and comparison of different methods. The evaluator takes `input_dict` (a dictionary whose format is specified in `evaluator.expected_input_format`) as input, and returns a dictionary storing the performance metric appropriate for the given dataset.\nThe standardized evaluation protocol allows researchers to reliably compare their methods.\n```python\nfrom ogb.graphproppred import Evaluator\n\nevaluator = Evaluator(name = \"ogbg-mol-hiv\")\n# You can learn the input and output format specification of the evaluator as follows.\n# print(evaluator.expected_input_format) \n# print(evaluator.expected_output_format) \ninput_dict = {\"y_true\": y_true, \"y_pred\": y_pred}\nresult_dict = evaluator.eval(input_dict) # E.g., {\"rocauc\": 0.7321}\n```\n\n## Citing OGB\nComing soon.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/snap-stanford/ogb", "keywords": "pytorch,graph machine learning,graph representation learning,graph neural networks", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "ogb", "package_url": "https://pypi.org/project/ogb/", "platform": "", "project_url": "https://pypi.org/project/ogb/", "project_urls": {"Homepage": "https://github.com/snap-stanford/ogb"}, "release_url": "https://pypi.org/project/ogb/1.0.1/", "requires_dist": null, "requires_python": "", "summary": "Open Graph Benchmark", "version": "1.0.1"}, "last_serial": 6864306, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "bbbc93d1c11f6406b87bd27bbb8392d2", "sha256": "7ad98096caca88e9814ff4bc5d913b16f50121e2c4a6021d52ead5efce4e3d93"}, "downloads": -1, "filename": "ogb-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "bbbc93d1c11f6406b87bd27bbb8392d2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 26344, "upload_time": "2019-12-13T09:28:51", "upload_time_iso_8601": "2019-12-13T09:28:51.674210Z", "url": "https://files.pythonhosted.org/packages/fd/c3/7ac364366134044f518b96ff4b2a3f49f050430faff6c188a4322abd86f5/ogb-0.1.0-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "6f06491c262c377ae0389ba2b6cfe113", "sha256": "44fbe7d4a4e7b0ddf03789749cd43848b3b6c26024d1b505512c40ab14381c47"}, "downloads": -1, "filename": "ogb-0.1.0.tar.gz", "has_sig": false, "md5_digest": "6f06491c262c377ae0389ba2b6cfe113", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14605, "upload_time": "2019-12-13T09:28:54", "upload_time_iso_8601": "2019-12-13T09:28:54.442628Z", "url": "https://files.pythonhosted.org/packages/d6/fa/30cdd69d2059b11ebd260e5e2722c20f38c2f88f7c62ca69230c21ff3244/ogb-0.1.0.tar.gz"}], "1.0.0": [{"comment_text": "", "digests": {"md5": "879042398c85b7908e4b6d31b67e0192", "sha256": "bb70b7b28206d6791968493051c9b3c5f4972d34cc1463b8afb3d13bfd741788"}, "downloads": -1, "filename": "ogb-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "879042398c85b7908e4b6d31b67e0192", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 34561, "upload_time": "2020-03-15T03:34:48", "upload_time_iso_8601": "2020-03-15T03:34:48.700427Z", "url": "https://files.pythonhosted.org/packages/9e/24/af060a35d581f1bf4d8b6a6be028e52647803b761177aeef5f1b66672a25/ogb-1.0.0-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "767610e4278c995c42d765b2e8b70057", "sha256": "6796f14ddf729f2dd772f470420294849f0064e13a3cb68552f3e957ef6d19b1"}, "downloads": -1, "filename": "ogb-1.0.0.tar.gz", "has_sig": false, "md5_digest": "767610e4278c995c42d765b2e8b70057", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19969, "upload_time": "2020-03-15T03:34:50", "upload_time_iso_8601": "2020-03-15T03:34:50.097441Z", "url": "https://files.pythonhosted.org/packages/92/cb/0e713a45a7f0635ed98066629b4117247cad09af89320ae029ce293f9ae1/ogb-1.0.0.tar.gz"}], "1.0.1": [{"comment_text": "", "digests": {"md5": "8f20e7cfc95c63eb4435f6f2ae3ca7fb", "sha256": "17b9f4bf4d33e553794eec7ba48cb3611da7f15541f9b9acf9f62fb82362868f"}, "downloads": -1, "filename": "ogb-1.0.1.tar.gz", "has_sig": false, "md5_digest": "8f20e7cfc95c63eb4435f6f2ae3ca7fb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19891, "upload_time": "2020-03-23T09:21:03", "upload_time_iso_8601": "2020-03-23T09:21:03.308730Z", "url": "https://files.pythonhosted.org/packages/85/7e/ffda5d9089200fd5a003f814fdad4c33834983e46fd4ef39336b50419a6f/ogb-1.0.1.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "8f20e7cfc95c63eb4435f6f2ae3ca7fb", "sha256": "17b9f4bf4d33e553794eec7ba48cb3611da7f15541f9b9acf9f62fb82362868f"}, "downloads": -1, "filename": "ogb-1.0.1.tar.gz", "has_sig": false, "md5_digest": "8f20e7cfc95c63eb4435f6f2ae3ca7fb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19891, "upload_time": "2020-03-23T09:21:03", "upload_time_iso_8601": "2020-03-23T09:21:03.308730Z", "url": "https://files.pythonhosted.org/packages/85/7e/ffda5d9089200fd5a003f814fdad4c33834983e46fd4ef39336b50419a6f/ogb-1.0.1.tar.gz"}]}