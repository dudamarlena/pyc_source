{"info": {"author": "Exley McCormick", "author_email": "exleym@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# Flask-Filter\nFiltering Extension for Flask / SQLAlchemy\n\n[![Build Status](https://travis-ci.org/exleym/Flask-Filter.svg?branch=master)](https://travis-ci.org/exleym/Flask-Filter)\n[![Coverage Status](https://coveralls.io/repos/github/exleym/Flask-Filter/badge.svg?branch=master)](https://coveralls.io/github/exleym/Flask-Filter?branch=master)\n\n# Introduction\nFlask-Filter is a simple [Flask](http://flask.pocoo.org/) extension for\nstandardizing behavior of REST API resource search endpoints. It is\ndesigned to integrate with the [Flask-SQLAlchemy](http://flask-sqlalchemy.pocoo.org/2.3/)\nextension and [Marshmallow](https://marshmallow.readthedocs.io/en/3.0/),\na popular serialization library. Check out our\n[GitHub Pages site](https://exleym.github.io/Flask-Filter/) for the\nfull documentation.\n\nOut-of-the-box, Flask-Filter provides search functionality on top-level\nobject fields via an array of filter objects provided in the JSON body\nof a POST request. For configuring filtering on derived or nested fields\nsee the \"Filtering on Nested Fields\" section of the documentation.\n\n# Default Filters\nFlask-Filter supports searching resources based on an array of filters,\nJSON objects with the following structure:\n\n```json\n{\"field\": \"<field_name>\", \"op\": \"<operator>\", \"value\": \"<some_value>\"}\n```\n\nThe built-in filters support the following operators:\n\n| symbol   | operator                     | python filter class   |\n|----------|------------------------------|-----------------------|\n| <        | less-than                    | `LTFilter`            |\n| <=       | less-than or equal to        | `LTEFilter`           |\n| =        | equal to                     | `EqualsFilter`        |\n| >        | greater-than                 | `GTFilter`            |\n| >=       | greater-than or equal to     | `GTEFilter`           |\n| in       | in                           | `InFilter`            |\n| !=       | not equal to                 | `NotEqualsFilter`     |\n| like     | like                         | `LikeFilter`          |\n\nNote: Be careful with typing around comparator operators. This version\ndoes not provide rigorous type-checking, which could cause problems for\na user who submits a search like \"find Pets with name greater than\n'Fido'\"\n\n# Examples\nThis section demonstrates simplified use-cases for Flask-Filter. For\na complete example app (a Pet Store API), see the `/example` folder.\n\nNote: examples in this readme define simple `/search` endpoints that\nassume a working Flask app has already been initialized, and other\nrequired classes have been defined in a `pet_store` directory. To see\na full implementation, go to `/examples/pet_store`\n\n### Example 1: Manually implementing filters in a flask view\nUsing the `FilterSchema` class directly, you can deserialize an\narray of JSON filters into a list of `flask_filter.Filter` objects\nand directly apply the filters using `Filter.apply` to craft a\nSQLAlchemy query with a complex set of filters.\n\n```python\nfilter_schema = FilterSchema()\npet_schema = PetSchema()\n\n@app.route('/api/v1/pets/search', methods=['POST'])\ndef pet_search():\n    filters = filter_schema.load(request.json.get(\"filters\"), many=True)\n    query = Pet.query\n    for f in filters:\n        query = f.apply(query, Pet, PetSchema)\n    return jsonify(pet_schema.dump(query.all())), 200\n```\n\n### Example 2: Automatically filtering using the `query_with_filters` function\n\n```python\nfrom flask_filter import query_with_filters\npet_schema = PetSchema()\n\n@app.route('/api/v1/pets/search', methods=['POST']\ndef pet_search():\n    pets = query_with_filters(Pet, request.json.get(\"filters\"), PetSchema)\n    return jsonify(pet_schema.dump(pets)), 200\n```\n\n\n### Example 3: Initializing and using the Flask extension object\n\n```python\nfrom flask import Flask\n\nfrom pet_store import Pet, PetSchema  # Model defined as subclass of `db.Model`\nfrom pet_store.extensions import db, filtr  # SQLAlchemy and FlaskFilter objects\n\napp = Flask(__name__)\ndb.init_app(app)\nfiltr.init_app(app)\n\n\n@app.route('/api/v1/pets/search', methods=['POST']\ndef pet_search():\n    pets = filtr.search(Pet, request.json.get(\"filters\"), PetSchema)\n    return jsonify(pet_schema.dump(pets)), 200\n```\n\nor alternatively, if you pre-register the Model and Schema with the\n`FlaskFilter` object you do not need to pass the `Schema` directly to\nthe `search` method:\n\n```python\nfiltr.register_model(Dog, DogSchema)  # Register in the app factory\n```\n\nfollowed by the search execution (without an explicitly-defined schema):\n\n```python\npets = filtr.search(Pet, request.json.get(\"filters\"))\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/exleym/Flask-Filter", "keywords": "", "license": "Creative Commons Attribution-Noncommercial-Share Alike license", "maintainer": "", "maintainer_email": "", "name": "Flask-Filter", "package_url": "https://pypi.org/project/Flask-Filter/", "platform": "", "project_url": "https://pypi.org/project/Flask-Filter/", "project_urls": {"Homepage": "https://github.com/exleym/Flask-Filter"}, "release_url": "https://pypi.org/project/Flask-Filter/0.1.0.dev2/", "requires_dist": null, "requires_python": "", "summary": "A Flask extension for creating standard resource searches", "version": "0.1.0.dev2"}, "last_serial": 6026563, "releases": {"0.1.0.dev1": [{"comment_text": "", "digests": {"md5": "96d27bfc82ca2a2b9e3207d00656c9bd", "sha256": "ddffca3eb542dcdafd9c7fa1122168cb5ad7d1e5ce10c06e9d32d33e8230c2a7"}, "downloads": -1, "filename": "Flask_Filter-0.1.0.dev1-py3-none-any.whl", "has_sig": false, "md5_digest": "96d27bfc82ca2a2b9e3207d00656c9bd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7394, "upload_time": "2019-10-24T22:22:08", "upload_time_iso_8601": "2019-10-24T22:22:08.589785Z", "url": "https://files.pythonhosted.org/packages/8c/d9/74df8573c7b3182d63f3332499a687aee35c8dde49d94396d31295dd7945/Flask_Filter-0.1.0.dev1-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "82fcca12c3dda29162d4471bb03f0e10", "sha256": "d468e4aaead10569db4c031a639c825d0e09e545ad3ed70ee32ce7c9a2727bb2"}, "downloads": -1, "filename": "Flask-Filter-0.1.0.dev1.tar.gz", "has_sig": false, "md5_digest": "82fcca12c3dda29162d4471bb03f0e10", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5207, "upload_time": "2019-10-24T22:22:10", "upload_time_iso_8601": "2019-10-24T22:22:10.639659Z", "url": "https://files.pythonhosted.org/packages/18/f3/948791ddb1875972539a3e0d2a553cae7750ea849737432929047c8e532c/Flask-Filter-0.1.0.dev1.tar.gz"}], "0.1.0.dev2": [{"comment_text": "", "digests": {"md5": "fcb73e37b44f2aa84d6257bab24421f1", "sha256": "4217fb443353e9152edd6ebea05bd85935909cffc362bd6c585d93076f30ae33"}, "downloads": -1, "filename": "Flask_Filter-0.1.0.dev2-py3-none-any.whl", "has_sig": false, "md5_digest": "fcb73e37b44f2aa84d6257bab24421f1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7407, "upload_time": "2019-10-24T23:38:06", "upload_time_iso_8601": "2019-10-24T23:38:06.013253Z", "url": "https://files.pythonhosted.org/packages/03/64/2f10b293f72841850372ffd4d544d47e387081aa31b568193ce34c48f8be/Flask_Filter-0.1.0.dev2-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "0f477f1f73072a9fb85b095ff356356a", "sha256": "af13d7f09e0b6005eef134a000bf0afae75c103c0f3efc536d56d15024c9ad44"}, "downloads": -1, "filename": "Flask-Filter-0.1.0.dev2.tar.gz", "has_sig": false, "md5_digest": "0f477f1f73072a9fb85b095ff356356a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5262, "upload_time": "2019-10-24T23:38:07", "upload_time_iso_8601": "2019-10-24T23:38:07.187982Z", "url": "https://files.pythonhosted.org/packages/56/53/c2d03ca31a96c01b175c22333222319a6b948c191a0e72a1ec1af18ef22d/Flask-Filter-0.1.0.dev2.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "fcb73e37b44f2aa84d6257bab24421f1", "sha256": "4217fb443353e9152edd6ebea05bd85935909cffc362bd6c585d93076f30ae33"}, "downloads": -1, "filename": "Flask_Filter-0.1.0.dev2-py3-none-any.whl", "has_sig": false, "md5_digest": "fcb73e37b44f2aa84d6257bab24421f1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7407, "upload_time": "2019-10-24T23:38:06", "upload_time_iso_8601": "2019-10-24T23:38:06.013253Z", "url": "https://files.pythonhosted.org/packages/03/64/2f10b293f72841850372ffd4d544d47e387081aa31b568193ce34c48f8be/Flask_Filter-0.1.0.dev2-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "0f477f1f73072a9fb85b095ff356356a", "sha256": "af13d7f09e0b6005eef134a000bf0afae75c103c0f3efc536d56d15024c9ad44"}, "downloads": -1, "filename": "Flask-Filter-0.1.0.dev2.tar.gz", "has_sig": false, "md5_digest": "0f477f1f73072a9fb85b095ff356356a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5262, "upload_time": "2019-10-24T23:38:07", "upload_time_iso_8601": "2019-10-24T23:38:07.187982Z", "url": "https://files.pythonhosted.org/packages/56/53/c2d03ca31a96c01b175c22333222319a6b948c191a0e72a1ec1af18ef22d/Flask-Filter-0.1.0.dev2.tar.gz"}]}