{"info": {"author": "medSpaCy", "author_email": "medspacy.dev@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# Clinical Sectionizer\nThis package offers a component for tagging clinical section titles in docs. There are two different flavors of the sectionizer:\n- `Sectionizer`: A spaCy component which is run on a `Doc` object and adds attributes to spaCy objects. This can be added\nto an NLP pipeline and be executed as part of `nlp(text)`\n- `TextSectionizer`: A stand-alone object, independent of spaCy which takes a text and returns a list of tuples, where\neach tuple corresponds to a section in the text.\n\nThe `sectionizer` takes a list of \npatterns for section titles and searches for matches in a `doc`. When a section is found, it generates three outputs:\n1. `section_title`: The normalized name of a section, a `string`\n2. `section_header`: The span of the doc containing the header, a `Span`\n3. `section_span`: The entire span of the doc containing the section, a `Span`\n\nWhen using the spaCy `Sectionizer`, calling `sectionizer(doc)` adds the \nfollowing extensions to spaCy objects:\n\n- `Doc.sections`: A list of 3-tuples of (`name`, `header`, `section`)\n- `Token.section_span`: The `span` of the entire section which the token occurs in\n- `Token.section_header`: The `span` of the section header of the section a token occurs in\n- `Token.section_title`: The name of the section header defined by a pattern\n- `Span` attributes corresponding `section_span`, `section_header`, and `section_title` to the first token in a span\n\nWhen using `TextSectionizer`, calling `sectionizer(text)` returns a list of 3-tuples which correspond to the outputs \ndescribed above, but each as texts rather than spaCy objects: `(section_title, section_header, section_text)`\n\n# Example\nSee `notebooks/`for more detailed examples.\n\n```python\n>>> text = \"\"\"Family History:\n    Diabetes\n    \n    Past Medical History:\n    Pneumonia\n    \n    Assessment and Plan:\n    Atrial fibrillation. There is no evidence of pneumonia.\n    \"\"\"\n>>> import spacy\n>>> nlp = spacy.load(...) # Load a model which will match clinical concepts\n\n>>> from clinical_sectionizer import Sectionizer\n>>> sectionizer = nlp.add_pipe(Sectionizer(nlp))\n\n\n>>> section_patterns = [\n        {\"section_title\": \"family_history\", \"pattern\": \"Family History:\"},\n        {\"section_title\": \"past_medical_history\", \n            \"pattern\": [\n                {\"LOWER\": \"past\", \"OP\": \"?\"}, \n                {\"LOWER\": \"medical\"},\n                {\"LOWER\": \"history\"}, \n                {\"LOWER\": \":\"},\n            ]\n            \n        },\n        {\"section_title\": \"assessment_and_plan\", \"pattern\": \"Assessment and Plan:\"},\n    ]\n>>> sectionizer.add(section_patterns)\n\n>>> nlp.add_pipe(sectionizer)\n>>> doc = nlp(text)\n>>> print(nlp.ents)\n(Diabetes, Pneumonia, Atrial fibrillation, pneumonia)\n\n\n\n>>> for (section_name, section_header, section) in doc._.sections:\n        print(section_name, section_header, section, sep=\"\\n\")\n\nfamily_history\nFamily History:\nFamily History:\nDiabetes\n\npast_medical_history\nPast Medical History:\nPast Medical History:\nPneumonia\n\nassessment_and_plan\nAssessment and Plan:\nAssessment and Plan:\nAtrial fibrillation. There is no evidence of pneumonia.\n\n>>> for ent in doc.ents:\n        print(ent, ent._.section_title)\n    \nDiabetes family_history\nPneumonia past_medical_history\nAtrial fibrillation assessment_and_plan\npneumonia assessment_and_plan\n```\n\nUsing [cycontext](https://github.com/medspacy/cycontext), you can also use a visualizer which shows section headers, along with any extracted entities and \noptionally cycontext modifiers, in an NER-style visualization.\n```python\nfrom cycontext.viz import visualize_ent\nvisualize_ent(doc, sections=True, context=False)\n``` \n<p align=\"center\"><img width=\"50%\" height=\"50%\" src=\"img/viz_ent.png\" /></p>", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "clinical-sectionizer", "package_url": "https://pypi.org/project/clinical-sectionizer/", "platform": "", "project_url": "https://pypi.org/project/clinical-sectionizer/", "project_urls": null, "release_url": "https://pypi.org/project/clinical-sectionizer/0.1.0/", "requires_dist": null, "requires_python": "", "summary": "Document section detector using spaCy for clinical NLP", "version": "0.1.0"}, "last_serial": 6931424, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "d5e5d78c5f8543f164f2330888f73d81", "sha256": "20fb10fa15e607505faba930cad7c00f7dd6aeccc1fa71f785f0a2e5e6450b6c"}, "downloads": -1, "filename": "clinical_sectionizer-0.0.1-py3.6.egg", "has_sig": false, "md5_digest": "d5e5d78c5f8543f164f2330888f73d81", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 34032, "upload_time": "2020-04-01T21:28:59", "upload_time_iso_8601": "2020-04-01T21:28:59.744831Z", "url": "https://files.pythonhosted.org/packages/23/88/c3d30132e0e128d54431aaf6de713c005aab94b2e6884445befac6a2fb65/clinical_sectionizer-0.0.1-py3.6.egg"}, {"comment_text": "", "digests": {"md5": "b3bd9fdc9dde237682ccfae7138fe706", "sha256": "2bfca6106bf0bf1710360cd9b87451b163f507d7f0f3e323b329e965b6cd0d16"}, "downloads": -1, "filename": "clinical_sectionizer-0.0.1-py3.7.egg", "has_sig": false, "md5_digest": "b3bd9fdc9dde237682ccfae7138fe706", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 41024, "upload_time": "2020-04-01T21:29:02", "upload_time_iso_8601": "2020-04-01T21:29:02.242065Z", "url": "https://files.pythonhosted.org/packages/d0/c0/7dc925ee1f3f86cb52d32c95d46ab82a8567ca323aa44cd26ff8ebf1b788/clinical_sectionizer-0.0.1-py3.7.egg"}, {"comment_text": "", "digests": {"md5": "4a46d279a7c61c5533ead04a5bafd444", "sha256": "90c201d1ff3084655260cc879650747f2217b83b2b3d6e4bfbefcf9882258bfa"}, "downloads": -1, "filename": "clinical_sectionizer-0.0.1.tar.gz", "has_sig": false, "md5_digest": "4a46d279a7c61c5533ead04a5bafd444", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17384, "upload_time": "2020-04-01T21:29:03", "upload_time_iso_8601": "2020-04-01T21:29:03.493640Z", "url": "https://files.pythonhosted.org/packages/4b/60/7a9ac4a4f0f369664b2497cb7dca403c2778fc552c52a0103f27d83f3283/clinical_sectionizer-0.0.1.tar.gz"}], "0.1.0": [{"comment_text": "", "digests": {"md5": "d2b6a80f011df56cbb4721f0a9e3a487", "sha256": "bf210e1988ccb29efc0006880817b45065e760b9eb8ccd08391744e8728ca708"}, "downloads": -1, "filename": "clinical_sectionizer-0.1.0.tar.gz", "has_sig": false, "md5_digest": "d2b6a80f011df56cbb4721f0a9e3a487", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17384, "upload_time": "2020-04-01T21:33:51", "upload_time_iso_8601": "2020-04-01T21:33:51.204799Z", "url": "https://files.pythonhosted.org/packages/70/cb/9f0e705f3a522b766c4056c6ff5d722fee8a01148ac4bb320bb1294f2040/clinical_sectionizer-0.1.0.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "d2b6a80f011df56cbb4721f0a9e3a487", "sha256": "bf210e1988ccb29efc0006880817b45065e760b9eb8ccd08391744e8728ca708"}, "downloads": -1, "filename": "clinical_sectionizer-0.1.0.tar.gz", "has_sig": false, "md5_digest": "d2b6a80f011df56cbb4721f0a9e3a487", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17384, "upload_time": "2020-04-01T21:33:51", "upload_time_iso_8601": "2020-04-01T21:33:51.204799Z", "url": "https://files.pythonhosted.org/packages/70/cb/9f0e705f3a522b766c4056c6ff5d722fee8a01148ac4bb320bb1294f2040/clinical_sectionizer-0.1.0.tar.gz"}]}