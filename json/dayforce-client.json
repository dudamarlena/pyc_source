{"info": {"author": "David Wallace", "author_email": "david.wallace@goodeggs.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only", "Topic :: Software Development"], "description": "# dayforce-client\n[![PyPI version](https://badge.fury.io/py/dayforce-client.svg)](https://badge.fury.io/py/dayforce-client)\n![PyPI - Status](https://img.shields.io/pypi/status/dayforce-client)\n[![Build Status](https://travis-ci.com/goodeggs/dayforce-client.svg?branch=master)](https://travis-ci.com/goodeggs/dayforce-client.svg?branch=master)\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/dayforce-client)\n![PyPI - License](https://img.shields.io/pypi/l/dayforce-client)\n\ndayforce-client is a python SDK for interfacing with the Dayforce REST API and SFTP server.\n\n## Installation\n\n```bash\n$ pip3 install dayforce-client\n```\n\n## Basic Usage (Rest API)\n\nThe main interface to the Dayforce REST API is the `Dayforce` class. You can instantiate the `Dayforce` class by supplying a few authentication and configuration arguments:\n\n```python\nimport os\n\nfrom dayforce_client.client import Dayforce\n\nDAYFORCE_USERNAME = os.environ[\"DAYFORCE_USERNAME\"]\nDAYFORCE_PASSWORD = os.environ[\"DAYFORCE_PASSWORD\"]\nDAYFORCE_CLIENT_NAMESPACE = os.environ[\"DAYFORCE_CLIENT_NAMESPACE\"]\n\ndf = Dayforce(username=DAYFORCE_USERNAME,\n              password=DAYFORCE_PASSWORD,\n              client_namespace=DAYFORCE_CLIENT_NAMESPACE)\n```\n\nAll `get_` methods on the `Dayforce` class will return a `DayforceReponse` object. A `DayforceReponse` object contains the `Dayforce` instance used to make the call, the parameters used in the request, and the response received from the API:\n\n```python\nresp = df.get_employee_details(xrefcode='12345')\nprint(resp.client)\nprint(type(resp.client))\nprint(resp.params)\nprint(type(resp.resp))\nprint(resp.resp.url)\nprint(resp.resp.status_code)\nprint(resp.resp.ok)\nprint(resp.resp.elapsed)\n\n...\n\n\nDayforce(username='your-username', client_namespace='your-client-namespace', dayforce_release=57, api_version='V1', url='https://usr57-services.dayforcehcm.com/Api/your-client-namespace/V1')\n<class 'dayforce_client.client.Dayforce'>\n{}\n<class 'requests.models.Response'>\nhttps://usr57-services.dayforcehcm.com/Api/your-client-namespace/V1/Employees/12345\n200\nTrue\n0:00:00.550066\n```\n\n### Query Parameters\n\nCertain methods also accept keyword arguments that will be used as query parameters for the request:\n\n```python\nresp = df.get_employee_details(xrefcode='12345', expand='WorkAssignments')\nprint(resp.resp.url)\n```\n\nOutput:\n```\nhttps://usr57-services.dayforcehcm.com/Api/your-client-namespace/V1/Employees/12345?expand=WorkAssignments\n```\n\n### Accessing Response Content\n\nResponse contents can accessed using `.get()` syntax:\n\n```python\nresp = df.get_employee_details(xrefcode='12345')\nprint(resp.get(\"Data\"))\n```\n\n### Pagination\n\nResponses can also optionally be paginated using iteration syntax:\n\n```python\nfor page in df.get_employee_raw_punches():\n  for raw_punch in page.get(\"Data\"):\n    print(raw_punch)\n```\n\n### Yielding Resource Records\n\nOptionally, you can use the `DayforceResponse` `.yield_records()` method to handle response pagination and yieliding resource records. The method will paginate the response and iterate through response content to yield single resource records for the given resource and the corresponding `DayforceResponse` instance:\n\n```python\nfor page, employee in df.get_employees().yield_records():\n    print(employee)\n    print(page)\n\n...\n\n{'XRefCode': '12345'}\nDayforceResponse(client=Dayforce(username='your-username', client_namespace='your-client-namespace', dayforce_release=57, api_version='V1', url='https://usr57-services.dayforcehcm.com/Api/your-client-namespace/V1'), params={}, resp=<Response [200]>)\n{'XRefCode': '67891'}\nDayforceResponse(client=Dayforce(username='your-username', client_namespace='your-client-namespace', dayforce_release=57, api_version='V1', url='https://usr57-services.dayforcehcm.com/Api/your-client-namespace/V1'), params={}, resp=<Response [200]>)\n```\n\n## Basic Usage (SFTP client)\n\n```python\nclient = DayforceSFTP(\n  hostname='foo01.dayforcehcm.com',\n  username='mycompany',\n  password='sekret',\n  disable_host_key_checking=True,\n)\nclient.connect()\n```\n\nUsing `disable_host_key_checking` is discouraged, however. Instead, use `ssh-keyscan` to retrieve a known-good key (better yet, see if Dayforce will provide it to you!) and pass it in to the construtor.\n\n```shell\nssh-keyscan foo01.dayforcehcm.com\n# foo01.dayforcehcm.com:22 SSH-2.0-9.99 FlowSsh: Bitvise SSH Server (WinSSHD)\nfoo01.dayforcehcm.com ssh-rsa AAAAB3...snip...XYZ\n```\n\n```python\nclient = DayforceSFTP(\n  hostname='foo01.dayforcehcm.com',\n  username='mycompany',\n  password='sekret',\n  host_key='AAAAB3...snip...XYZ',\n)\nclient.connect()\n```\n\n### Batch Imports\n\nDayforce provides the ability to batch import data via SFTP. This client wraps up most of the business logic around this process, and exposes a simple, high-level API.\n\n```python\nfrom dayforce import DayforceSFTP, ImportError, ImportPending\n\nclient = DayforceSFTP(hostname=...)\nwith client.connect():\n  batch_token = client.put_import('./local/path/to/batch-20191225T000000.csv', type='KpiTargetImport')\n  while True:\n    try:\n      client.raise_for_import_status(batch_token)\n      print('batch import succeeded')\n      break\n    except ImportPending e:\n      sleep 10\n      continue\n    except ImportError e:\n      print('batch import failed')\n      break\n```\n\n## Development\n\n```shell\npython3 -m venv install .venv\nsource .venv/bin/activate\nmake dev_install\nmake test\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/goodeggs/dayforce_client", "keywords": "dayforce python", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "dayforce-client", "package_url": "https://pypi.org/project/dayforce-client/", "platform": "", "project_url": "https://pypi.org/project/dayforce-client/", "project_urls": {"Homepage": "https://github.com/goodeggs/dayforce_client"}, "release_url": "https://pypi.org/project/dayforce-client/0.2.1/", "requires_dist": ["requests (==2.22.0)", "attrs (==19.3.0)", "pysftp (==0.2.9)", "paramiko (==2.7.1)"], "requires_python": ">=3.6", "summary": "A python client for typed interactions with the Dayforce API.", "version": "0.2.1"}, "last_serial": 6995795, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "9d80a814ee42bfe33314f87f78bf4978", "sha256": "809f25a83bc44a9d3f28be16cf55e4ed2c36a593cd8ea974cc9f9429e72cc070"}, "downloads": -1, "filename": "dayforce_client-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9d80a814ee42bfe33314f87f78bf4978", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6963, "upload_time": "2020-01-07T17:35:56", "upload_time_iso_8601": "2020-01-07T17:35:56.904861Z", "url": "https://files.pythonhosted.org/packages/f4/e8/284c91d763d3e059dc2d89a06c8e44f4ca59689e54d0f16c1c138a4ae03e/dayforce_client-0.1.0-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "3cb9761e7c1e9cefe159d904c581f9af", "sha256": "7e314aacc731ff3d0e4eb50ae2c1aa39fcbe2da1215a90df4de12762a5edf4e0"}, "downloads": -1, "filename": "dayforce_client-0.1.0.tar.gz", "has_sig": false, "md5_digest": "3cb9761e7c1e9cefe159d904c581f9af", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5493, "upload_time": "2020-01-07T17:35:58", "upload_time_iso_8601": "2020-01-07T17:35:58.623564Z", "url": "https://files.pythonhosted.org/packages/69/fb/0d4e2374c7c77c9144e456a97b13b2ce65bddacda3ff421645c543ec6e6d/dayforce_client-0.1.0.tar.gz"}], "0.1.0a1": [{"comment_text": "", "digests": {"md5": "610dda7296436fad992d09c9a4c80703", "sha256": "63f3c5afd048eec9f89a3a759a6864eec7edbde267424f93125c4ec80d1ef855"}, "downloads": -1, "filename": "dayforce_client-0.1.0a1-py3-none-any.whl", "has_sig": false, "md5_digest": "610dda7296436fad992d09c9a4c80703", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6054, "upload_time": "2019-12-20T17:44:40", "upload_time_iso_8601": "2019-12-20T17:44:40.399480Z", "url": "https://files.pythonhosted.org/packages/36/db/a44a39d490a8289b5628e64fcf15fcbb56ff7dbb74a5e675efefdfd053a3/dayforce_client-0.1.0a1-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "2eda54cccc6c13420ffdd1a19e647b2c", "sha256": "761d3ab8e35d2f7f08d7633ada50022aa83353707e4449af023c11bcc4246673"}, "downloads": -1, "filename": "dayforce_client-0.1.0a1.tar.gz", "has_sig": false, "md5_digest": "2eda54cccc6c13420ffdd1a19e647b2c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4477, "upload_time": "2019-12-20T17:44:42", "upload_time_iso_8601": "2019-12-20T17:44:42.629172Z", "url": "https://files.pythonhosted.org/packages/5a/68/7749cbb02f05aefde8bdff771271a55b33f5921dc73e7183922afb7c6d46/dayforce_client-0.1.0a1.tar.gz"}], "0.2.0": [{"comment_text": "", "digests": {"md5": "4bcbe6f4cd9cf9fab052784a7e5250a3", "sha256": "db39464e783a7b5e88adeb81ae65b42f28b91f35fe6667697cca3d9fd70777af"}, "downloads": -1, "filename": "dayforce_client-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4bcbe6f4cd9cf9fab052784a7e5250a3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7952, "upload_time": "2020-02-03T19:10:21", "upload_time_iso_8601": "2020-02-03T19:10:21.138013Z", "url": "https://files.pythonhosted.org/packages/a1/d5/fe5df83986761999e21668e8999d9e6802c66aefc942576689af0932bb99/dayforce_client-0.2.0-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "ba490523aee3a856f3d4cc35f4b2bbc6", "sha256": "7a78ad0a450bd4e84bf41d3642a3a36d778222e45b3a67340cf8c0f2c70cbcf8"}, "downloads": -1, "filename": "dayforce_client-0.2.0.tar.gz", "has_sig": false, "md5_digest": "ba490523aee3a856f3d4cc35f4b2bbc6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6505, "upload_time": "2020-02-03T19:10:22", "upload_time_iso_8601": "2020-02-03T19:10:22.917048Z", "url": "https://files.pythonhosted.org/packages/79/76/5e75d6dc9c598727763bcd49f0d4a093d0023681758c7a1b86b7efc34069/dayforce_client-0.2.0.tar.gz"}], "0.2.1": [{"comment_text": "", "digests": {"md5": "774a48db310579013a208516794b20c2", "sha256": "69fdac700a9341ee3a9f68f16faf1a23986041701a30001b097f6ed818f9377b"}, "downloads": -1, "filename": "dayforce_client-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "774a48db310579013a208516794b20c2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7981, "upload_time": "2020-04-10T18:54:41", "upload_time_iso_8601": "2020-04-10T18:54:41.828646Z", "url": "https://files.pythonhosted.org/packages/5d/ab/461cc7587b07a4d63b66348ef14f9521928ee10e2d9a1208e77b4b942447/dayforce_client-0.2.1-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "da4acf4a59ff2410621b4ce860db64af", "sha256": "278ec9b38b88ff27a3484d042f1ccf9ef8881d867677060eebbd5e467efe2f07"}, "downloads": -1, "filename": "dayforce_client-0.2.1.tar.gz", "has_sig": false, "md5_digest": "da4acf4a59ff2410621b4ce860db64af", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6533, "upload_time": "2020-04-10T18:54:43", "upload_time_iso_8601": "2020-04-10T18:54:43.371854Z", "url": "https://files.pythonhosted.org/packages/59/09/26b7675c18de771aa7998c854eccc41f00a1bd31d8230f5af7f993cadcc4/dayforce_client-0.2.1.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "774a48db310579013a208516794b20c2", "sha256": "69fdac700a9341ee3a9f68f16faf1a23986041701a30001b097f6ed818f9377b"}, "downloads": -1, "filename": "dayforce_client-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "774a48db310579013a208516794b20c2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7981, "upload_time": "2020-04-10T18:54:41", "upload_time_iso_8601": "2020-04-10T18:54:41.828646Z", "url": "https://files.pythonhosted.org/packages/5d/ab/461cc7587b07a4d63b66348ef14f9521928ee10e2d9a1208e77b4b942447/dayforce_client-0.2.1-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "da4acf4a59ff2410621b4ce860db64af", "sha256": "278ec9b38b88ff27a3484d042f1ccf9ef8881d867677060eebbd5e467efe2f07"}, "downloads": -1, "filename": "dayforce_client-0.2.1.tar.gz", "has_sig": false, "md5_digest": "da4acf4a59ff2410621b4ce860db64af", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6533, "upload_time": "2020-04-10T18:54:43", "upload_time_iso_8601": "2020-04-10T18:54:43.371854Z", "url": "https://files.pythonhosted.org/packages/59/09/26b7675c18de771aa7998c854eccc41f00a1bd31d8230f5af7f993cadcc4/dayforce_client-0.2.1.tar.gz"}]}