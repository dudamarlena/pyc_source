{"info": {"author": "J. Kevin Bay", "author_email": "seregon@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "# Django Slack Events\n\nA light, Python 3 (only) reimplementation of\n[python-slack-events-api](https://github.com/slackapi/python-slack-events-api)\nin pure Django leveraging [Signals](https://docs.djangoproject.com/en/dev/topics/signals/).\n\n## Installation\n\n```bash\npip install django_slack_events\n```\n\n## Getting Started\n\nYou should be able to follow along with the\n[app setup](https://github.com/slackapi/python-slack-events-api#--app-setup)\nand [development workflow](https://github.com/slackapi/python-slack-events-api#--development-workflow) portions of the original package directions to get things going on the Slack side. When you reach the [Flask instructions](https://github.com/slackapi/python-slack-events-api#create-a-slack-event-adapter-for-receiving-actions-via-the-events-api), \njump back over here to see how to proceed with Django.\n\n### Quick Start\n\nOnce you've installed the package, you add it to your `INSTALLED_APPS`\nas you might expect:\n\n```python\n    INSTALLED_APPS = [\n        ...\n        'django_slack_events',\n    ]\n```\n\nThen in your project's URLs you can set your endpoint name. Following the\n`/slack/events` convention, that looks like:\n\n```python\n    from django_slack_events import SlackEventHandler\n\n    urlpatterns = [\n        ...\n        path('slack/events/', SlackEventHandler.as_view()),\n        ...\n    ]\n```\n\nIn order to properly verify incoming requests from Slack, the last thing you\nwill need to do is set an environment variable pointing to the\n[signing secret](https://api.slack.com/docs/verifying-requests-from-slack)\ncorresponding to your Slack app. If you're only running app, this is\n`DJANGO_SLACK_EVENT_SIGNING_SECRET`. Otherwise, see [Multiple Apps](#multiple-apps)\nbelow.\n\nThat's it! Your Django project is ready to handle incoming events from Slack.\n\n## Listening to Events\n\nEvents are handled as [Django Signals](https://docs.djangoproject.com/en/3.0/topics/signals/#listening-to-signals), like so:\n\n```python\n    from django.dispatch import receiver\n\n    from django_slack_events import SlackEvent\n\n    @receiver(SlackEvent)\n    def my_callback(slack_payload, **kw):\n        ...\n```\n\nThe sender is helpfully set to the event type for you, so you can leverage\nDjango's built-in filtering to listen to specific events:\n\n```python\n    from django.dispatch import receiver\n\n    from django_slack_events import SlackEvent, SlackEventType\n\n    @receiver(SlackEvent, sender=SlackEventType.REACTION_ADDED)\n    def reaction_added(slack_payload, **kw):\n        payload = kw['slack_payload']\n        ...\n```\n\nIf you like this pattern of naming module-level functions after the Slack\nevents they serve, it's encapsulated in the `@slackevent` decorator for you.\nThus, the above can be rewritten:\n\n```python\n    from django_slack_events.decorators import slackevent\n\n    @slackevent\n    def reaction_added(slack_payload, **kw):\n        ...\n```\n\nNote that the more useful Slack `payload` comes in place of `sender` as your\nfirst positional argument in this case.\n\n### Full Example\n\nPut this code in any file available in your app's \n[ready context](https://docs.djangoproject.com/en/3.0/ref/applications/#django.apps.AppConfig.ready)\nand set the appropriate environment variables, et voila!\n\n```python\n    import os\n\n    from django_slack_events.decorators import slackevent\n    import slack\n\n\n    slack_client = slack.WebClient(token=os.environ['SLACK_API_TOKEN'])\n\n\n    @slackevent\n    def app_home_opened(slack_payload, **kw):\n        response = slack_client.views_publish(view={\n            \"type\": \"home\",\n            \"blocks\": [{\n                \"type\": \"section\",\n                \"text\": {\n                    \"type\": \"mrkdwn\",\n                    \"text\": \"[GENERAL KENOBI VOICE] Hello, there! ;)\"\n                }\n            }]\n        }, user_id=slack_payload['event']['user'])\n        assert response['ok']\n```\n\n# BUT WAIT, THERE'S MORE\n\nSlack [Interactions](https://api.slack.com/interactivity) are extremely similar\nto events, in that they have a type, a payload, and can be handled in many\ncases by a simple function with access to the Slack API client.\n\nHere's the above example extended to provide and handle a button:\n\n```python\n    import os\n\n    from django.dispatch import receiver\n    from django_slack_events import SlackEvent, SlackInteractionType\n    from django_slack_events.decorators import slackevent\n    import slack\n\n\n    slack_client = slack.WebClient(token=os.environ['SLACK_API_TOKEN'])\n\n\n    @slackevent\n    def app_home_opened(slack_payload, **kw):\n        payload = kw['slack_payload']\n        response = slack_client.views_publish(view={\n            \"type\": \"home\",\n            \"blocks\": [{\n                \"type\": \"section\",\n                \"text\": {\n                    \"type\": \"mrkdwn\",\n                    \"text\": \"You can add a button alongside text in your message. \"\n                },\n                \"accessory\": {\n                    \"action_id\": \"click_me_123\",\n                    \"type\": \"button\",\n                    \"text\": {\n                            \"type\": \"plain_text\",\n                            \"text\": \"Button\",\n                            \"emoji\": True\n                    },\n                    \"value\": \"click_me_123\"\n                }\n            }]\n        }, user_id=slack_payload['event']['user'])\n        assert response['ok']\n\n\n    @receiver(SlackEvent, sender=SlackInteractionType.BLOCK_ACTIONS)\n    def block_actions(slack_payload, **kw):\n        response = slack_client.views_publish(view={\n            \"type\": \"home\",\n            \"blocks\": [{\n                \"type\": \"section\",\n                \"text\": {\n                    \"type\": \"mrkdwn\",\n                    \"text\": \"[GENERAL KENOBI VOICE] Hello there!\",\n                },\n            }]\n        }, user_id=slack_payload['user']['id'])\n        assert response['ok']\n```\n\n> **Note:** As of version 0.16, all documented\n> [interaction types](https://api.slack.com/interactivity/handling#payloads)\n> are supported.\n\nThe problem with registering `BLOCK_ACTIONS` and many other interactive signals\nthis way is that you would end up with a giant function with many `if`/`else`\nbranches trying to handle all the buttons and knobs in your app. Slack lets\nyou set an `action_id` on your payloads, so we can reuse our `@slackevent`\npattern by using `@slackaction` instead and naming the function after the\naction ID.\n\nThe `block_actions` function above could then be rewritten:\n\n```python\n    from django_slack_events.decorators import slackaction\n\n    ...\n\n    @slackaction\n    def click_me_123(slack_payload, **kw):\n        response = slack_client.views_publish(view={\n            \"type\": \"home\",\n            \"blocks\": [{\n                \"type\": \"section\",\n                \"text\": {\n                    \"type\": \"mrkdwn\",\n                    \"text\": \"[GENERAL KENOBI VOICE] Hello there!\",\n                },\n            }]\n        }, user_id=slack_payload['user']['id'])\n        assert response['ok']\n```\n\n\n## Multiple Apps\n\nYou can support multiple Django apps in the same project having Slack\nfunctionality by defining app-specific environment variables like\n`DJANGO_SLACK_EVENT_<YOURBOT>_SIGNING_SECRET`, where `<YOURBOT>` is your\napp's name in all uppercase. Each of these should point to the\n[signing secret](https://api.slack.com/docs/verifying-requests-from-slack)\nfor the corresponding Slack app.\n\nThe project name can be determined in one of two ways:\n\n  - Your events/interactions URL can append `?for=<botname>`\n  - It can be read from the first \"directory\" in your URL, like `/botname/slack/events`\n\nIn all cases, you must change this both in your project (your environment variables)\nand in Slack (your event and interaction URLs for each supported app). Some\nreserved names (currently `slack` and `event(s)`) are not valid for bots and\nare therefore ignored.\n\n### Shared events\n\nSome events like `app_home_opened` may be used by many of your apps. In order\nto distinguish cleanly, pass the app name as derived above as your first\nargument to `slackevent`, like so:\n\n```python\n    @slackevent('my_bot')\n    def reaction_added(payload, **kw):\n        ...\n```\n\nThe `@slackaction` decorator can also be made app-specific in this way, an\nadvisable precaution if you are not 100% sure you can keep your action IDs\nunique across all your apps.\n\n## Options Load URL\n\nSlack offers the ability to\n[dynamically load options](https://api.slack.com/docs/interactive-message-field-guide#options_load_url)\nfor a select menu to give filtered search suggestions as the user types.\n\nTo handle Options Load requests you need to define a new URL just like you\ndid to handle events, except using `SlackOptionsLoadHandler`:\n\n```python\n    from django_slack_events import SlackEventHandler, SlackOptionsLoadHandler\n\n\n    urlpatterns = [\n        ...\n        path('slack/events/', SlackEventHandler.as_view()),\n        path('slack/options/', SlackOptionsLoadHandler.as_view()),\n        ...\n    ]\n```\n\nThese use `action_id`s so you can just use `@slackaction` to handle them. Here's\na sample handler that returns the\n[example from the docs](https://api.slack.com/reference/block-kit/block-elements#external_select):\n\n```python\n    @slackaction\n    def search_glossary_term(payload, **kw):\n        return {\n          \"options\": [\n            {\n              \"text\": {\n                \"type\": \"plain_text\",\n                \"text\": \"*this is plain_text text*\"\n              },\n              \"value\": \"value-0\"\n            },\n            {\n              \"text\": {\n                \"type\": \"plain_text\",\n                \"text\": \"*this is plain_text text*\"\n              },\n              \"value\": \"value-1\"\n            },\n            {\n              \"text\": {\n                \"type\": \"plain_text\",\n                \"text\": \"*this is plain_text text*\"\n              },\n              \"value\": \"value-2\"\n            }\n          ]\n        }\n```\n\nAnd here is the button handler to open a modal with this dynamic select:\n\n```python\n    @slackaction\n    def search_glossary(payload, **kw):\n        slack_client.views_open(view={\n            \"type\": \"modal\",\n            \"title\": {\n                \"type\": \"plain_text\",\n                \"text\": \"Search the Glossary\",\n            },\n            \"submit\": {\n                    \"type\": \"plain_text\",\n                    \"text\": \"Search\",\n            },\n            \"close\": {\n                    \"type\": \"plain_text\",\n                    \"text\": \"Cancel\",\n            },\n            \"blocks\": [{\n                \"type\": \"input\",\n                \"element\": {\n                    \"type\": \"external_select\",\n                    \"action_id\": \"search_glossary_term\",\n                    \"placeholder\": {\n                            \"type\": \"plain_text\",\n                            \"text\": \"Search for term\",\n                    }\n                },\n                \"label\": {\n                    \"type\": \"plain_text\",\n                    \"text\": \"Search Terms\",\n                }\n            }]\n        }, trigger_id=payload['trigger_id'])\n```\n\n> **Note:** Only the BlockKit type (`external_select`) is currently supported.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/TwoBitAlchemist/django-slack-events", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "django-slack-events", "package_url": "https://pypi.org/project/django-slack-events/", "platform": "", "project_url": "https://pypi.org/project/django-slack-events/", "project_urls": {"Homepage": "https://github.com/TwoBitAlchemist/django-slack-events"}, "release_url": "https://pypi.org/project/django-slack-events/1.0/", "requires_dist": null, "requires_python": "", "summary": "A Python 3 port of python-slack-events-api to pure Django.", "version": "1.0"}, "last_serial": 7007158, "releases": {"0.10": [{"comment_text": "", "digests": {"md5": "2354ece5f69ead9fb4b234abfa3d88ed", "sha256": "abef681e1a99487d25928c3f8170a7b8ed389f6abc7f4f6016d435f620460d6d"}, "downloads": -1, "filename": "django-slack-events-0.10.tar.gz", "has_sig": false, "md5_digest": "2354ece5f69ead9fb4b234abfa3d88ed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5697, "upload_time": "2020-03-22T18:44:45", "upload_time_iso_8601": "2020-03-22T18:44:45.804517Z", "url": "https://files.pythonhosted.org/packages/40/a5/edc096dd3d6a8ab7c7672dc0617f8f94b0003ff80a15e0fcf13ea047d74e/django-slack-events-0.10.tar.gz"}], "0.11.1": [{"comment_text": "", "digests": {"md5": "c5606f60797fc0303b818d2be0270dbc", "sha256": "0e7e5c6bd6a53cae06f580150f295b8381ab0dd99168dc93f3619e17df00a889"}, "downloads": -1, "filename": "django-slack-events-0.11.1.tar.gz", "has_sig": false, "md5_digest": "c5606f60797fc0303b818d2be0270dbc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6401, "upload_time": "2020-03-23T00:58:51", "upload_time_iso_8601": "2020-03-23T00:58:51.644251Z", "url": "https://files.pythonhosted.org/packages/b8/4d/645f4331b7a01c74f9247c52079dc42b2bfe92e96165f637fd94e6d1ad28/django-slack-events-0.11.1.tar.gz"}], "0.12.4": [{"comment_text": "", "digests": {"md5": "3715b8cbe3a1b66654b542b758dbca10", "sha256": "131ebece4d5903f4e941277fb0a7ad8ce07bed12a2897ee39b007694052db3cf"}, "downloads": -1, "filename": "django-slack-events-0.12.4.tar.gz", "has_sig": false, "md5_digest": "3715b8cbe3a1b66654b542b758dbca10", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7182, "upload_time": "2020-03-24T12:04:01", "upload_time_iso_8601": "2020-03-24T12:04:01.446588Z", "url": "https://files.pythonhosted.org/packages/d1/aa/a4d497c12ff6da9896b0f3a210f6e89030c0cc3aa46c46ca5ce1bf2dce19/django-slack-events-0.12.4.tar.gz"}], "0.14.3": [{"comment_text": "", "digests": {"md5": "709baa8f7b7db0f6864b12a43ebc4a82", "sha256": "fbf520f1076cc136c0bc6ddaa7ea9bdf20564b205c22f15c4b0f8e55a14fadd3"}, "downloads": -1, "filename": "django-slack-events-0.14.3.tar.gz", "has_sig": false, "md5_digest": "709baa8f7b7db0f6864b12a43ebc4a82", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7993, "upload_time": "2020-03-28T21:34:51", "upload_time_iso_8601": "2020-03-28T21:34:51.553853Z", "url": "https://files.pythonhosted.org/packages/5f/02/dcaf8a8a88a00c3fcdb63c8420c19ad262875f244528e3fa37f2611f25b8/django-slack-events-0.14.3.tar.gz"}], "0.14.4": [{"comment_text": "", "digests": {"md5": "935de3feb2342bdb62c3d54520cc958b", "sha256": "53279b335f1b225d8c5b36722bab02d57760d1f1147f5ed33165997291acc1a9"}, "downloads": -1, "filename": "django-slack-events-0.14.4.tar.gz", "has_sig": false, "md5_digest": "935de3feb2342bdb62c3d54520cc958b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8116, "upload_time": "2020-03-28T22:04:59", "upload_time_iso_8601": "2020-03-28T22:04:59.533065Z", "url": "https://files.pythonhosted.org/packages/ad/99/647c24daa2ba210bb56f915104631d502479f5723a2d7e39fab3ae90a84c/django-slack-events-0.14.4.tar.gz"}], "0.14.5": [{"comment_text": "", "digests": {"md5": "8745c061e2b935f70240242bb30cabe2", "sha256": "5c1815150a1511728092ff977b67ac62db962a5a78f23f27979c4e68f11f3df5"}, "downloads": -1, "filename": "django-slack-events-0.14.5.tar.gz", "has_sig": false, "md5_digest": "8745c061e2b935f70240242bb30cabe2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8113, "upload_time": "2020-03-28T22:09:05", "upload_time_iso_8601": "2020-03-28T22:09:05.122900Z", "url": "https://files.pythonhosted.org/packages/d0/33/87965511ec96043551b7dafbef0ce6bf40a21820b07246214158b35fbae9/django-slack-events-0.14.5.tar.gz"}], "0.14.6": [{"comment_text": "", "digests": {"md5": "58187b108fab98d60ce4e2e924976058", "sha256": "217373ea32182c205312e538f37faa49cb5c79740f5941ebcc93725270a2f3db"}, "downloads": -1, "filename": "django-slack-events-0.14.6.tar.gz", "has_sig": false, "md5_digest": "58187b108fab98d60ce4e2e924976058", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8220, "upload_time": "2020-03-28T22:15:22", "upload_time_iso_8601": "2020-03-28T22:15:22.550438Z", "url": "https://files.pythonhosted.org/packages/09/c2/9ad570d78a07da974b91be5d62c44c69c13582213595cd66b20a74484edc/django-slack-events-0.14.6.tar.gz"}], "0.14.7": [{"comment_text": "", "digests": {"md5": "521b1a46f4336033f8d7fa6393cc6bdd", "sha256": "956246a6b80c3bc7c38135817b1c71f47ab09db8e891f7ac83ff967ea55cb144"}, "downloads": -1, "filename": "django-slack-events-0.14.7.tar.gz", "has_sig": false, "md5_digest": "521b1a46f4336033f8d7fa6393cc6bdd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8221, "upload_time": "2020-03-28T22:22:41", "upload_time_iso_8601": "2020-03-28T22:22:41.984105Z", "url": "https://files.pythonhosted.org/packages/c8/3a/b242ae1f2f075b8d60e77f0d39275cacd464cf1cdc6cae8165f427b32ea4/django-slack-events-0.14.7.tar.gz"}], "0.15.10": [{"comment_text": "", "digests": {"md5": "dafa107abb2699964b2c0164bdbda9f5", "sha256": "5025843998873c253d3d3b05570e2f7853c77c6f2b90d8d76b95046283f1f59d"}, "downloads": -1, "filename": "django-slack-events-0.15.10.tar.gz", "has_sig": false, "md5_digest": "dafa107abb2699964b2c0164bdbda9f5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9386, "upload_time": "2020-03-29T03:27:31", "upload_time_iso_8601": "2020-03-29T03:27:31.582905Z", "url": "https://files.pythonhosted.org/packages/e4/56/085aa10ca0a39d48a06a79f71ddb1e6c0b059aba3ac67a4180c340ba7893/django-slack-events-0.15.10.tar.gz"}], "0.15.11": [{"comment_text": "", "digests": {"md5": "3766de264a13209d6169245b9eace877", "sha256": "d8363ddee4d9151062e876605ce3cc998ca3ac6a73f06dfc7804fb8a10dfd5d9"}, "downloads": -1, "filename": "django-slack-events-0.15.11.tar.gz", "has_sig": false, "md5_digest": "3766de264a13209d6169245b9eace877", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9392, "upload_time": "2020-04-04T18:17:34", "upload_time_iso_8601": "2020-04-04T18:17:34.399933Z", "url": "https://files.pythonhosted.org/packages/b8/01/94a134fe0cefb24bf0bf87ba33ac862ff66b8036db06b2f71d8e2b361a46/django-slack-events-0.15.11.tar.gz"}], "0.15.12": [{"comment_text": "", "digests": {"md5": "3ce500e3fb7946c02c7bf5a2a138a5f3", "sha256": "cbde5e670a299754e55bd9ab624594049f1dcef7b72ea4b7bc55a3636f6601ca"}, "downloads": -1, "filename": "django-slack-events-0.15.12.tar.gz", "has_sig": false, "md5_digest": "3ce500e3fb7946c02c7bf5a2a138a5f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9451, "upload_time": "2020-04-04T18:46:21", "upload_time_iso_8601": "2020-04-04T18:46:21.078758Z", "url": "https://files.pythonhosted.org/packages/49/42/9999f789013405268baa046f8677c4e32b313139bc4180fec4fb9d1aed8f/django-slack-events-0.15.12.tar.gz"}], "0.15.13": [{"comment_text": "", "digests": {"md5": "85c95db0f898d708832b6315cf49fd03", "sha256": "abadf359d439b70e033a9f119a98116ea73ec0e70fc78ddb24d949b562d70b83"}, "downloads": -1, "filename": "django-slack-events-0.15.13.tar.gz", "has_sig": false, "md5_digest": "85c95db0f898d708832b6315cf49fd03", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9460, "upload_time": "2020-04-04T19:49:39", "upload_time_iso_8601": "2020-04-04T19:49:39.031094Z", "url": "https://files.pythonhosted.org/packages/b4/8b/e59c24120d3eeb8475a844fb110bbf16e360c73ab0a8a4332882f71fcb9f/django-slack-events-0.15.13.tar.gz"}], "0.15.14": [{"comment_text": "", "digests": {"md5": "dc0c382f9435db53fc886405f63995a0", "sha256": "444b34af9dd402343824847d3ec605b5e087f79199c30b06c3f8b5abdcb2985a"}, "downloads": -1, "filename": "django-slack-events-0.15.14.tar.gz", "has_sig": false, "md5_digest": "dc0c382f9435db53fc886405f63995a0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9417, "upload_time": "2020-04-04T21:43:21", "upload_time_iso_8601": "2020-04-04T21:43:21.600593Z", "url": "https://files.pythonhosted.org/packages/73/76/7966b4ba7ebfbe4d59db2f818fb3dd68625fb0ecbda3fc8457721eaf4d14/django-slack-events-0.15.14.tar.gz"}], "0.15.15": [{"comment_text": "", "digests": {"md5": "f797b962c0a1d9f2245842775cfe4ebd", "sha256": "38497a2926b3b1bbc3e00c0086b662f91fa54707559eac760eedf9d06c46609c"}, "downloads": -1, "filename": "django-slack-events-0.15.15.tar.gz", "has_sig": false, "md5_digest": "f797b962c0a1d9f2245842775cfe4ebd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9437, "upload_time": "2020-04-04T22:02:29", "upload_time_iso_8601": "2020-04-04T22:02:29.872590Z", "url": "https://files.pythonhosted.org/packages/f5/6d/344b385d3e9919f61fb19bc726fb1a414872123d928862706d5f28f19689/django-slack-events-0.15.15.tar.gz"}], "0.15.16": [{"comment_text": "", "digests": {"md5": "b209aa87a8c73f6bc14adbacfc79328c", "sha256": "30fb23ed7aade3b121b7f00c703844368a8be02b36de785fbbb174bc44c62f4f"}, "downloads": -1, "filename": "django-slack-events-0.15.16.tar.gz", "has_sig": false, "md5_digest": "b209aa87a8c73f6bc14adbacfc79328c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9533, "upload_time": "2020-04-04T22:51:18", "upload_time_iso_8601": "2020-04-04T22:51:18.943653Z", "url": "https://files.pythonhosted.org/packages/9c/a2/9aef6a29814ff64e8ad0a9bf9bf161122513f26ce4c89aae6ef404c1ff28/django-slack-events-0.15.16.tar.gz"}], "0.15.6": [{"comment_text": "", "digests": {"md5": "bbdb1879a0e9e78c48c23bf0c2daa342", "sha256": "39166432011a584c49209f0014485921c068fe23195839c7c352be58965c96f8"}, "downloads": -1, "filename": "django-slack-events-0.15.6.tar.gz", "has_sig": false, "md5_digest": "bbdb1879a0e9e78c48c23bf0c2daa342", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8498, "upload_time": "2020-03-29T02:00:22", "upload_time_iso_8601": "2020-03-29T02:00:22.934812Z", "url": "https://files.pythonhosted.org/packages/9e/6e/61a323a7bbfcbbc0b73afccd6a986ec57e6780337f1015b9c9df75557869/django-slack-events-0.15.6.tar.gz"}], "0.15.7": [{"comment_text": "", "digests": {"md5": "baa3757acf0e535a06e6303f1f872796", "sha256": "b3acaf0a5e67941b7ef4505a88f086814bff7af8ab78bc30a012953d496edb2c"}, "downloads": -1, "filename": "django-slack-events-0.15.7.tar.gz", "has_sig": false, "md5_digest": "baa3757acf0e535a06e6303f1f872796", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9344, "upload_time": "2020-03-29T02:26:17", "upload_time_iso_8601": "2020-03-29T02:26:17.315079Z", "url": "https://files.pythonhosted.org/packages/e3/f2/438058817aca78c4072d2b32fa6e8832c49a1a3ccde759b0f051473a8b68/django-slack-events-0.15.7.tar.gz"}], "0.15.8": [{"comment_text": "", "digests": {"md5": "cac153a57c9efde5db156dea371a2be8", "sha256": "e62ad9e61998fcce3fad13cc93db8b7ba24f9fa9bcbb2e8c8910d027499b403a"}, "downloads": -1, "filename": "django-slack-events-0.15.8.tar.gz", "has_sig": false, "md5_digest": "cac153a57c9efde5db156dea371a2be8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9357, "upload_time": "2020-03-29T03:04:32", "upload_time_iso_8601": "2020-03-29T03:04:32.958011Z", "url": "https://files.pythonhosted.org/packages/94/1d/b95ad6a76455e59a7aa9868c6fec1dc42e140022a6d125d490b2b8e143f0/django-slack-events-0.15.8.tar.gz"}], "0.15.9": [{"comment_text": "", "digests": {"md5": "b4772be889e4a5347a993bdb84b3fb11", "sha256": "d36087018104592b3b9e587d10748f44cd6f57912a99a0c1d0a9ffacced1825f"}, "downloads": -1, "filename": "django-slack-events-0.15.9.tar.gz", "has_sig": false, "md5_digest": "b4772be889e4a5347a993bdb84b3fb11", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9367, "upload_time": "2020-03-29T03:10:23", "upload_time_iso_8601": "2020-03-29T03:10:23.945749Z", "url": "https://files.pythonhosted.org/packages/9e/9b/93c17a1b10e6c47d5ce5713b99df91c8bba034cbfd5c63bea2b2d7317513/django-slack-events-0.15.9.tar.gz"}], "0.16": [{"comment_text": "", "digests": {"md5": "abd22d9f516b3e1f2f70322b011b361f", "sha256": "3e684627f6476363e527e89cd735f5257f0868f71fe0a6b8ea8fcbf32f82695f"}, "downloads": -1, "filename": "django-slack-events-0.16.tar.gz", "has_sig": false, "md5_digest": "abd22d9f516b3e1f2f70322b011b361f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9539, "upload_time": "2020-04-13T00:59:45", "upload_time_iso_8601": "2020-04-13T00:59:45.746034Z", "url": "https://files.pythonhosted.org/packages/ed/f1/b218ce720fd35b714bfa784ea94be4c65d116bc16806f9a7a662a7860de0/django-slack-events-0.16.tar.gz"}], "0.16.1": [{"comment_text": "", "digests": {"md5": "57ad07c4dae7dd456636351181115eba", "sha256": "01be8b1040b91dd4826ae45bf6dd6a154352067e06ad4859187ae5334ad2c589"}, "downloads": -1, "filename": "django-slack-events-0.16.1.tar.gz", "has_sig": false, "md5_digest": "57ad07c4dae7dd456636351181115eba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9617, "upload_time": "2020-04-13T01:18:10", "upload_time_iso_8601": "2020-04-13T01:18:10.852463Z", "url": "https://files.pythonhosted.org/packages/15/cc/f277bf407513c4831eecbf779707f5978db4d32fb82190dcd7f0cf05a3f7/django-slack-events-0.16.1.tar.gz"}], "1.0": [{"comment_text": "", "digests": {"md5": "971e2dcd583e98dfc5c0f0ef1ae7ebe7", "sha256": "bcbb840446b75d6b27ec96c4ba6d1a998b1469b2fb8d6eb12fc5d371037756f2"}, "downloads": -1, "filename": "django-slack-events-1.0.tar.gz", "has_sig": false, "md5_digest": "971e2dcd583e98dfc5c0f0ef1ae7ebe7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9535, "upload_time": "2020-04-13T01:50:14", "upload_time_iso_8601": "2020-04-13T01:50:14.789106Z", "url": "https://files.pythonhosted.org/packages/29/42/1f8a7363b40ef860887871b26616ed463b16f3f1ab62e7e7f741d0789347/django-slack-events-1.0.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "971e2dcd583e98dfc5c0f0ef1ae7ebe7", "sha256": "bcbb840446b75d6b27ec96c4ba6d1a998b1469b2fb8d6eb12fc5d371037756f2"}, "downloads": -1, "filename": "django-slack-events-1.0.tar.gz", "has_sig": false, "md5_digest": "971e2dcd583e98dfc5c0f0ef1ae7ebe7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9535, "upload_time": "2020-04-13T01:50:14", "upload_time_iso_8601": "2020-04-13T01:50:14.789106Z", "url": "https://files.pythonhosted.org/packages/29/42/1f8a7363b40ef860887871b26616ed463b16f3f1ab62e7e7f741d0789347/django-slack-events-1.0.tar.gz"}]}