{"info": {"author": "sobolevn", "author_email": "mail@sobolevn.me", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Utilities"], "description": "# classes\n\n[![classes logo](https://raw.githubusercontent.com/dry-python/brand/master/logo/classes.png)](https://github.com/dry-python/classes)\n\n-----\n\n[![Build Status](https://travis-ci.org/dry-python/classes.svg?branch=master)](https://travis-ci.org/dry-python/classes)\n[![Coverage Status](https://coveralls.io/repos/github/dry-python/classes/badge.svg?branch=master)](https://coveralls.io/github/dry-python/classes?branch=master)\n[![Documentation Status](https://readthedocs.org/projects/classes/badge/?version=latest)](https://classes.readthedocs.io/en/latest/?badge=latest)\n[![Python Version](https://img.shields.io/pypi/pyversions/classes.svg)](https://pypi.org/project/classes/)\n[![wemake-python-styleguide](https://img.shields.io/badge/style-wemake-000000.svg)](https://github.com/wemake-services/wemake-python-styleguide)\n[![Checked with mypy](http://www.mypy-lang.org/static/mypy_badge.svg)](http://mypy-lang.org/)\n\n-----\n\nSmart, pythonic, ad-hoc, typed polymorphism for Python.\n\n\n## Features\n\n- Provides a bunch of primitives to write declarative business logic\n- Enforces better architecture\n- Fully typed with annotations and checked with `mypy`, [PEP561 compatible](https://www.python.org/dev/peps/pep-0561/)\n- Allows to write a lot of simple code without inheritance or interfaces\n- Pythonic and pleasant to write and to read (!)\n- Easy to start: has lots of docs, tests, and tutorials\n\n\n## Installation\n\n```bash\npip install classes\n```\n\nYou also need to [configure](https://classes.readthedocs.io/en/latest/pages/container.html#type-safety)\n`mypy` correctly and install our plugin\nto fix [this existing issue](https://github.com/python/mypy/issues/3157):\n\n```ini\n# In setup.cfg or mypy.ini:\n[mypy]\nplugins =\n  classes.contrib.mypy.typeclass_plugin\n```\n\n**Without this step**, your project will report type-violations here and there.\n\nWe also recommend to use the same `mypy` settings [we use](https://github.com/wemake-services/wemake-python-styleguide/blob/master/styles/mypy.toml).\n\nMake sure you know how to get started, [check out our docs](https://classes.readthedocs.io/en/latest/)!\n\n\n## Example\n\nImagine, that you want to bound implementation to some particular type.\nLike, strings behave like this, numbers behave like that, and so on.\n\nThe good realworld example is `djangorestframework`.\nIt is build around the idea that different\ndata types should be converted differently to and from `json` format.\n\nWhat is the \"traditional\" (or outdated if you will!) approach?\nTo create tons of classes for different data types and use them.\n\nThat's how we end up with classes like so:\n\n```python\nclass IntField(Field):\n    def from_json(self, value):\n        return value\n\n    def to_json(self, value):\n        return value\n```\n\nIt literally has a lot of problems:\n\n- It is hard to type this code. How can I be sure that my `json` will be parsed by the given schema?\n- It contains a lot of boilerplate\n- It has complex API: there are usually several methods to override, some fields to adjust. Moreover, we use a class, not a callable\n- It is hard to extend the default library for new custom types you will have in your own project\n\nThere should be a better way of solving this problem!\nAnd typeclasses are a better way!\n\nHow would new API look like with this concept?\n\n```python\n>>> from typing import Union\n>>> from classes import typeclass\n>>> @typeclass\n... def to_json(instance) -> str:\n...     \"\"\"This is a typeclass definition to covert things to json.\"\"\"\n...\n>>> @to_json.instance(int)\n... @to_json.instance(float)\n... def _to_json_int(instance: Union[int, float]) -> str:\n...     return str(instance)\n...\n>>> @to_json.instance(bool)\n... def _to_json_bool(instance: bool) -> str:\n...     return 'true' if instance else 'false'\n...\n>>> @to_json.instance(list)\n... def _to_json_list(instance: list) -> str:\n...     return '[{0}]'.format(\n...         ', '.join(to_json(list_item) for list_item in instance),\n...     )\n...\n\n```\n\nSee how easy it is to works with types and implementation?\n\nTypeclass is represented as a regular function, so you can use it like one:\n\n```python\n>>> to_json(True)\n'true'\n>>> to_json(1)\n'1'\n>>> to_json([False, 1, 2])\n'[false, 1, 2]'\n\n```\n\nAnd it easy to extend this typeclass with your own classes as well:\n\n```python\n>>> # Pretending to import the existing library from somewhere:\n>>> # from to_json import to_json\n>>> import datetime as dt\n>>> @to_json.instance(dt.datetime)\n... def _to_json_datetime(instance: dt.datetime) -> str:\n...     return instance.isoformat()\n...\n>>> to_json(dt.datetime(2019, 10, 31, 12, 28, 00))\n'2019-10-31T12:28:00'\n\n```\n\nThat's how simple, safe, and powerful typeclasses are!\nMake sure to [check out our docs](https://github.com/dry-python/classes) to learn more.\n\n\n## License\n\nBSD 2-Clause\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://classes.readthedocs.io", "keywords": "functional programming,fp,type class,typeclass,typeclasses,ad-hoc,composition,type-safety,mypy,stubs", "license": "BSD-2-Clause", "maintainer": "sobolevn", "maintainer_email": "mail@sobolevn.me", "name": "classes", "package_url": "https://pypi.org/project/classes/", "platform": "", "project_url": "https://pypi.org/project/classes/", "project_urls": {"Homepage": "https://classes.readthedocs.io", "Repository": "https://github.com/dry-python/classes"}, "release_url": "https://pypi.org/project/classes/0.1.0/", "requires_dist": ["typing_extensions (>=3.7,<4.0)"], "requires_python": ">=3.6,<4.0", "summary": "Smart, pythonic, ad-hoc, typed polymorphism for Python", "version": "0.1.0"}, "last_serial": 6057469, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "54843b586010ae5df70e926ace8fd653", "sha256": "7929e650d4c4b04b0307fca1edac5dde4f0a07ceaf985f88ef942a2edb6466df"}, "downloads": -1, "filename": "classes-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "54843b586010ae5df70e926ace8fd653", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 3355, "upload_time": "2019-10-25T19:44:25", "upload_time_iso_8601": "2019-10-25T19:44:25.239630Z", "url": "https://files.pythonhosted.org/packages/53/13/e14702cb869f9fea25568a86893d6769bfcb62bee46ade1a49148d00de5d/classes-0.0.1-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "06d77cfccc45610aba26121c7d83bdd5", "sha256": "a5b7dd0a2fa64c89ac65c6309f011d27d3929ee227e8a8241a182a6a7869d207"}, "downloads": -1, "filename": "classes-0.0.1.tar.gz", "has_sig": false, "md5_digest": "06d77cfccc45610aba26121c7d83bdd5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 3025, "upload_time": "2019-10-25T19:44:27", "upload_time_iso_8601": "2019-10-25T19:44:27.918872Z", "url": "https://files.pythonhosted.org/packages/15/a7/082d067a5b42a0549b634096a235d6b98425f40a4c925f2a5240185b3cd4/classes-0.0.1.tar.gz"}], "0.1.0": [{"comment_text": "", "digests": {"md5": "f13a9feb8a1dafbe6a599f96cac659e5", "sha256": "aecf45bb816be9fc68f5ad5a8788e3ac9d5ca3c7d266d20ed1b48f0854e81a6f"}, "downloads": -1, "filename": "classes-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f13a9feb8a1dafbe6a599f96cac659e5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 9474, "upload_time": "2019-10-31T09:51:31", "upload_time_iso_8601": "2019-10-31T09:51:31.220985Z", "url": "https://files.pythonhosted.org/packages/4d/cd/b997f89a687634f150f0ca1070aa2b9789bb02277676de0209cfc8de1a09/classes-0.1.0-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "8c8233434e904cf1e41120f82cde0a19", "sha256": "0cac8e05f7b825ac3de0566a0bf65acc59a3298e751d5da18faad1f3d3f0bc1a"}, "downloads": -1, "filename": "classes-0.1.0.tar.gz", "has_sig": false, "md5_digest": "8c8233434e904cf1e41120f82cde0a19", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 10712, "upload_time": "2019-10-31T09:51:33", "upload_time_iso_8601": "2019-10-31T09:51:33.099026Z", "url": "https://files.pythonhosted.org/packages/e0/65/f28e1db714b3fc64bc9e0f0746b654fc1c5448c211504011ac4b5d89be83/classes-0.1.0.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "f13a9feb8a1dafbe6a599f96cac659e5", "sha256": "aecf45bb816be9fc68f5ad5a8788e3ac9d5ca3c7d266d20ed1b48f0854e81a6f"}, "downloads": -1, "filename": "classes-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f13a9feb8a1dafbe6a599f96cac659e5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 9474, "upload_time": "2019-10-31T09:51:31", "upload_time_iso_8601": "2019-10-31T09:51:31.220985Z", "url": "https://files.pythonhosted.org/packages/4d/cd/b997f89a687634f150f0ca1070aa2b9789bb02277676de0209cfc8de1a09/classes-0.1.0-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "8c8233434e904cf1e41120f82cde0a19", "sha256": "0cac8e05f7b825ac3de0566a0bf65acc59a3298e751d5da18faad1f3d3f0bc1a"}, "downloads": -1, "filename": "classes-0.1.0.tar.gz", "has_sig": false, "md5_digest": "8c8233434e904cf1e41120f82cde0a19", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 10712, "upload_time": "2019-10-31T09:51:33", "upload_time_iso_8601": "2019-10-31T09:51:33.099026Z", "url": "https://files.pythonhosted.org/packages/e0/65/f28e1db714b3fc64bc9e0f0746b654fc1c5448c211504011ac4b5d89be83/classes-0.1.0.tar.gz"}]}