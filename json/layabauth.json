{"info": {"author": "Colin Bounouar", "author_email": "colin.bounouar.dev@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Build Tools"], "description": "<h2 align=\"center\">Handle OAuth2 authentication for REST APIs</h2>\n\n<p align=\"center\">\n<a href=\"https://pypi.org/project/layabauth/\"><img alt=\"pypi version\" src=\"https://img.shields.io/pypi/v/layabauth\"></a>\n<a href=\"https://travis-ci.com/Colin-b/layabauth\"><img alt=\"Build status\" src=\"https://api.travis-ci.com/Colin-b/layabauth.svg?branch=master\"></a>\n<a href=\"https://travis-ci.com/Colin-b/layabauth\"><img alt=\"Coverage\" src=\"https://img.shields.io/badge/coverage-100%25-brightgreen\"></a>\n<a href=\"https://github.com/psf/black\"><img alt=\"Code style: black\" src=\"https://img.shields.io/badge/code%20style-black-000000.svg\"></a>\n<a href=\"https://travis-ci.com/Colin-b/layabauth\"><img alt=\"Number of tests\" src=\"https://img.shields.io/badge/tests-20 passed-blue\"></a>\n<a href=\"https://pypi.org/project/layabauth/\"><img alt=\"Number of downloads\" src=\"https://img.shields.io/pypi/dm/layabauth\"></a>\n</p>\n\nAs expected by the HTTP specification, token is extracted from `Authorization` header and must be prefixed with `Bearer `.\n\nToken will then be validated and in case it is valid, you will be able to access the raw token (as string) and the decoded token body (as dictionary).\n\n## Starlette\n\nProvides a [Starlette authentication backend](https://www.starlette.io/authentication/): `layabauth.starlette.OAuth2IdTokenBackend`.\n\n3 arguments are required:\n* The identity provided URL to validate the token key.\n* A callable to create the [authenticated user](https://www.starlette.io/authentication/#users) based on received token.\n* A callable to returns [authenticated user scopes](https://www.starlette.io/authentication/#permissions) based on received token.\n\nBelow is a sample `Starlette` application with an endpoint requesting a Microsoft issued OAuth2 token.\n\n```python\nimport starlette.applications\nfrom starlette.authentication import SimpleUser, requires\nfrom starlette.middleware import Middleware\nfrom starlette.middleware.authentication import AuthenticationMiddleware\nfrom starlette.responses import PlainTextResponse\n\nimport layabauth.starlette\n\nbackend = layabauth.starlette.OAuth2IdTokenBackend(\n    identity_provider_url=\"https://sts.windows.net/common/discovery/keys\",\n    create_user=lambda token, token_body: SimpleUser(token_body[\"name\"]),\n    scopes=lambda token, token_body: [\"my_scope\"]\n)\napp = starlette.applications.Starlette(middleware=[Middleware(AuthenticationMiddleware, backend=backend)])\n\n@app.route(\"/my_endpoint\")\n@requires('my_scope')\nasync def my_endpoint(request):\n    return PlainTextResponse(request.user.display_name)\n```\n\n## Flask\n\nProvides a decorator `layabauth.flask.requires_authentication` to ensure that, in a context of a `Flask` application, a valid OAuth2 token was received.\n\n1 argument is required:\n* The identity provided URL to validate the token key.\n\nIf validation fails, an `werkzeug.exceptions.Unauthorized` exception is raised.\nOtherwise token is stored in `flask.g.token` and decoded token body is stored in `flask.g.token_body`.\n\nDecorator works fine on `flask-restplus` methods as well.\n\nBelow is a sample `Flask` application with an endpoint requesting a Microsoft issued OAuth2 token.\n\n```python\nimport flask\nimport layabauth.flask\n\napp = flask.Flask(__name__)\n\n@app.route(\"/my_endpoint\")\n@layabauth.flask.requires_authentication(\"https://sts.windows.net/common/discovery/keys\")\ndef my_endpoint():\n    # Return the content of the name entry within the decoded token body.\n    return flask.Response(flask.g.token_body[\"name\"])\n\napp.run()\n```\n\n## OpenAPI\n\nYou can generate OpenAPI 2.0 `security` definition thanks to `layabauth.authorizations`.\n\nYou can generate OpenAPI 2.0 `method security` thanks to `layabauth.method_authorizations`\n\n## Testing\n\nAuthentication can be mocked using `layabauth.testing.auth_mock` `pytest` fixture.\n\n`token_body` `pytest` fixture returning the decoded token body used in tests must be provided.\n\n```python\nfrom layabauth.testing import *\n\n@pytest.fixture\ndef token_body():\n    return {\"name\": \"TEST@email.com\"}\n\n\ndef test_authentication(auth_mock, client):\n    response = client.get(\"/my_endpoint\", headers={\"Authentication\": \"Bearer mocked_token\"})\n    assert response.text == \"TEST@email.com\"\n```\n\n## How to install\n1. [python 3.6+](https://www.python.org/downloads/) must be installed\n2. Use pip to install module:\n```sh\npython -m pip install layabauth\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://pypi.org/project/layabauth/", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://colin-b.github.io/layabauth/", "keywords": "flask,starlette,auth", "license": "MIT", "maintainer": "Colin Bounouar", "maintainer_email": "colin.bounouar.dev@gmail.com", "name": "layabauth", "package_url": "https://pypi.org/project/layabauth/", "platform": "Windows", "project_url": "https://pypi.org/project/layabauth/", "project_urls": {"Changelog": "https://github.com/Colin-b/layabauth/blob/master/CHANGELOG.md", "Download": "https://pypi.org/project/layabauth/", "GitHub": "https://github.com/Colin-b/layabauth", "Homepage": "https://colin-b.github.io/layabauth/", "Issues": "https://github.com/Colin-b/layabauth/issues"}, "release_url": "https://pypi.org/project/layabauth/4.0.0/", "requires_dist": ["oauth2helper (==3.*)", "flask-restx (==0.2.*) ; extra == 'testing'", "pytest-flask (==1.*) ; extra == 'testing'", "starlette (==0.13.*) ; extra == 'testing'", "requests (==2.*) ; extra == 'testing'", "pytest-responses (==0.4.*) ; extra == 'testing'", "pytest-cov (==2.*) ; extra == 'testing'"], "requires_python": ">=3.6", "summary": "Authentication support for layab.", "version": "4.0.0"}, "last_serial": 7059623, "releases": {"3.2.0": [{"comment_text": "", "digests": {"md5": "99772b3dba3328cdea80e2512f238f4a", "sha256": "4997c89b95a601921603709e810bbedfbff6040cf3105aa09bece5b9acfeb037"}, "downloads": -1, "filename": "layabauth-3.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "99772b3dba3328cdea80e2512f238f4a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5392, "upload_time": "2019-12-02T23:24:48", "upload_time_iso_8601": "2019-12-02T23:24:48.388570Z", "url": "https://files.pythonhosted.org/packages/89/73/8114bf4ebb2750ba33faf8ea895eecb52278291db554786d7376324eaed7/layabauth-3.2.0-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "42dea635d74eb44772c95aea92fc1d78", "sha256": "bab3e1cdc32c6e905f7ce2b774381d183edd963e1b18560fc7cb8dbc0143bfa9"}, "downloads": -1, "filename": "layabauth-3.2.0.tar.gz", "has_sig": false, "md5_digest": "42dea635d74eb44772c95aea92fc1d78", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4377, "upload_time": "2019-12-02T23:24:50", "upload_time_iso_8601": "2019-12-02T23:24:50.441859Z", "url": "https://files.pythonhosted.org/packages/19/c6/2b464105fc615b8f64b0bb52c8795dd82f68b29233fd653d8c5d33bca45b/layabauth-3.2.0.tar.gz"}], "4.0.0": [{"comment_text": "", "digests": {"md5": "c395acf6ff6772032af0457975db4a54", "sha256": "ac8e6ba9040e0237498b2339665fcc7f8871df0d67543b5c5fa342208b4d41e5"}, "downloads": -1, "filename": "layabauth-4.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c395acf6ff6772032af0457975db4a54", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7162, "upload_time": "2020-04-20T12:09:20", "upload_time_iso_8601": "2020-04-20T12:09:20.068515Z", "url": "https://files.pythonhosted.org/packages/d6/1d/44496d0557fdd823b25baf7d8f3e6688320b5d9a87b5746db171da6b2785/layabauth-4.0.0-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "872fd02c719ecb0dd5268a6800af9187", "sha256": "883617ee45f32d80e0586a950d721b890c49a5f6aeccee7fba3a34e8dce9e57b"}, "downloads": -1, "filename": "layabauth-4.0.0.tar.gz", "has_sig": false, "md5_digest": "872fd02c719ecb0dd5268a6800af9187", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5223, "upload_time": "2020-04-20T12:09:21", "upload_time_iso_8601": "2020-04-20T12:09:21.293868Z", "url": "https://files.pythonhosted.org/packages/20/b2/df14c07b67f883c43f8f9bef740498b6f981c1bd1dcf49b4c9f59440d82b/layabauth-4.0.0.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "c395acf6ff6772032af0457975db4a54", "sha256": "ac8e6ba9040e0237498b2339665fcc7f8871df0d67543b5c5fa342208b4d41e5"}, "downloads": -1, "filename": "layabauth-4.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c395acf6ff6772032af0457975db4a54", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7162, "upload_time": "2020-04-20T12:09:20", "upload_time_iso_8601": "2020-04-20T12:09:20.068515Z", "url": "https://files.pythonhosted.org/packages/d6/1d/44496d0557fdd823b25baf7d8f3e6688320b5d9a87b5746db171da6b2785/layabauth-4.0.0-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "872fd02c719ecb0dd5268a6800af9187", "sha256": "883617ee45f32d80e0586a950d721b890c49a5f6aeccee7fba3a34e8dce9e57b"}, "downloads": -1, "filename": "layabauth-4.0.0.tar.gz", "has_sig": false, "md5_digest": "872fd02c719ecb0dd5268a6800af9187", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5223, "upload_time": "2020-04-20T12:09:21", "upload_time_iso_8601": "2020-04-20T12:09:21.293868Z", "url": "https://files.pythonhosted.org/packages/20/b2/df14c07b67f883c43f8f9bef740498b6f981c1bd1dcf49b4c9f59440d82b/layabauth-4.0.0.tar.gz"}]}