{"info": {"author": "Bart Thate", "author_email": "bthate@dds.nl", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "License :: Public Domain", "Operating System :: Unix", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Application Frameworks"], "description": "BOTZ is a pure python3 framework to program bots (a botlib), provides IRC and XMPP bots and is extendible  by programming your own commands. \nBasic functionality is a RSS feed fetcher you can use to display feeds into your channel. \nBOTZ uses a timestamped, type in filename, JSON stringified, files on filesystem backend and has timed based logging capabilities. BOTZ has been placed in the Public Domain and contains no copyright or LICENSE.\n\n\nS O U R C E\n\n::\n\n    botz.base                     - base classes.\n    botz.bot                      - event handler.\n    botz.clock                    - timers, repeaters.\n    botz.cmds                     - basic command set.\n    botz.edit                     - json file editor.\n    botz.email                    - email scanning module.\n    botz.entry                    - simple data entry commands.\n    botz.event                    - event handler.\n    botz.fleet                    - list of bots.\n    botz.handler                  - event handler.\n    botz.kernel                   - main select loop.\n    botz.loader                   - module loader.\n    botz.poller                   - polling based handler.\n    botz.rss                      - feed fetcher.\n    botz.shell                    - shell related commands.\n    botz.store                    - timestamped json file backend.\n    botz.tasks                    - botz threads.\n    botz.udp                      - udp to channel relay.\n    botz.users                    - manage users.\n    botz.utils                    - utility functions.\n    botz.xmpp                     - xmpp bot.\n\nP R O G R A M M I N G\n\n\nprogramming your own commands is easy, your can load modules with the -m option.\nif you create a mods directory and put your hello.py module in it, you would use:\n\n > botz -m mods\n\nany command you have coded in hello.py would be available, see the `show cmds` command.\n\n > botz show cmds\n\na command is a function with one argument, the event that was generated on the bot.\n\nexample:\n\n def mycmd(event): \n     <your code here>\n\nyou can use event.reply() to send response back to the user:\n\n def hello(event): \n    event.reply(\"hello %s\" % event.nick)\n\nafter starting botz with -m mods, you see the hello command added to the bot:\n\n > s cmds\n\n ed,find,hello,log,oper,restore,rm,show,todo\n\n\nI N S T A L L\n\n\nyou can fetch BOTZ from the following:\n\n https://pypi.org/project/botz | http://bitbucket.org/bthate/botz \n\n\nif you need botz to have access to your local directory use this: \n\n > export PYTHONPATH=\".\"\n\nthis will add your current directory to the pythonpath so the packages in it \ncan be found by botz.\n\ninstallation is through pypi:\n\n > sudo pip3 install botz\n\nyou can also run the bot from the tarball at pypi and run it directly or \ninstall with setup.py:\n\n > python3 setup.py install --user\n\n\nC O N F I G U R A T I O N\n\n\nbotz includes one program, the botz shell:\n\n > botz [-m mod1,mod2] command\n \nto connect to irc use the -m irc option.\n\n > botz -m irc -s irc.freenode.net -c \\#dunkbots -n botzi -z\n\nto use the xmpp module is almost the same.\n\n > botz -m xmpp -s botz@okdan.home -p <password> -z\n\nto use the bot as a rss feed reader, add a feed url with the rss command:\n\n > botz  rss https://www.reddit.com/r/Python/new/.rss\n\nand start the bot with the rss module loaded\n\n > botz -m rss -z\n\nthis will start a fetcher that will display the feed you have entered on your \nchannel.\n\n\n\nH A V E   F U N\n\n\nbthate@dds.nl | botfather on #dunkbots at irc.freenode.net | xmpp: bart@xmpp.fi\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/bthate/botz.rss", "keywords": "", "license": "Public Domain", "maintainer": "", "maintainer_email": "", "name": "botz.rss", "package_url": "https://pypi.org/project/botz.rss/", "platform": "", "project_url": "https://pypi.org/project/botz.rss/", "project_urls": {"Homepage": "https://bitbucket.org/bthate/botz.rss"}, "release_url": "https://pypi.org/project/botz.rss/7/", "requires_dist": null, "requires_python": "", "summary": "RSS fetcher for BOTZ", "version": "7"}, "last_serial": 4846727, "releases": {"7": [{"comment_text": "", "digests": {"md5": "c51fbb73387749afa5ce6d7e70c5c35a", "sha256": "80746a27ee2570352132d40c6122bde2b54bd86acc44f5b1fb2d604fb46e3a18"}, "downloads": -1, "filename": "botz.rss-7.tar.gz", "has_sig": false, "md5_digest": "c51fbb73387749afa5ce6d7e70c5c35a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4074, "upload_time": "2019-02-20T17:37:05", "upload_time_iso_8601": "2019-02-20T17:37:05.728080Z", "url": "https://files.pythonhosted.org/packages/75/21/3eee673bd297b58259fe037fcb3419164f1b16b144b8c60810a3b66dc0c2/botz.rss-7.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "c51fbb73387749afa5ce6d7e70c5c35a", "sha256": "80746a27ee2570352132d40c6122bde2b54bd86acc44f5b1fb2d604fb46e3a18"}, "downloads": -1, "filename": "botz.rss-7.tar.gz", "has_sig": false, "md5_digest": "c51fbb73387749afa5ce6d7e70c5c35a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4074, "upload_time": "2019-02-20T17:37:05", "upload_time_iso_8601": "2019-02-20T17:37:05.728080Z", "url": "https://files.pythonhosted.org/packages/75/21/3eee673bd297b58259fe037fcb3419164f1b16b144b8c60810a3b66dc0c2/botz.rss-7.tar.gz"}]}