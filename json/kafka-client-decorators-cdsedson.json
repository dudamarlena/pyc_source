{"info": {"author": "Edson Cardoso", "author_email": "edsonsn2@hotmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "\n\nThis module is based on pykafka project (https://github.com/Parsely/pykafka.git) \nand define a class KafkaDecorator and its 4 decorators\n\n@KafkaDecorator.host\nThe first defines the connection parameters\nits parameters are the same of pykafka.KafkaClient  \n\n\n@KafkaDecorator.balanced_consumer\nits parameters are the same of pykafka.topic.get_balanced_consumer function\n\n\n@KafkaDecorator.simple_consumer\nits parameters are the same of pykafka.topic.get_simple_consumer function\n\nits parameters are the same of pykafka.topic.get_producer function\n@KafkaDecorator.producer\n\n\nHow to use\n\nfrom kafka_client_decorators import KafkaDecorator\nfrom kafka_client_decorators.kafka.logging_helper import setDebugLevel\nimport logging\n\n\nkc = KafkaDecorator(  )\n\n#@kc.host(zookeeper_hosts='10.142.0.10:2181' )\n@kc.host(hosts='10.142.0.10:9092' )\nclass A:\n    def __init__(self, testA, cls):\n        self.a = testA\n        self.cls = cls\n        pass\n\n    @kc.balanced_consumer('test1', consumer_group='testgroup3', auto_commit_enable=True, managed=True, consumer_timeout_ms=1000)\n    def get(self, msg):\n        print ( f'{self.a} Receive offset {msg.offset} key {msg.partition_key} message: { msg.value }' )\n        self.send( msg.value )\n\n    @kc.simple_consumer('test2', consumer_group='testgroup4', auto_commit_enable=True, consumer_timeout_ms=1000)\n    def get2(self, msg):\n        print ( f'{self.a} Receive offset {msg.offset}, message: { msg.value }' )\n        self.cls.stop(self)\n\n    @kc.producer('test2')\n    def send(self, msg):\n        pass\n\n    @kc.producer('test1')\n    def sendKey(self, msg, key ):\n        pass\n\nclass B:\n\n    def __init__(self):\n        pass\n\n    def stop(self, conn):\n        conn.stop()\n\na = A('Example', B())\na.start()\n\na.sendKey( 'Hello'.encode('utf-8'), partition_key='world'.encode('utf-8') )\n\na.wait()\n\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/cdsedson/kafka-decorator.git", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "kafka-client-decorators-cdsedson", "package_url": "https://pypi.org/project/kafka-client-decorators-cdsedson/", "platform": "", "project_url": "https://pypi.org/project/kafka-client-decorators-cdsedson/", "project_urls": {"Homepage": "https://github.com/cdsedson/kafka-decorator.git"}, "release_url": "https://pypi.org/project/kafka-client-decorators-cdsedson/0.0.1/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Decorator interface to pykafka", "version": "0.0.1"}, "last_serial": 6963680, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "0a77bde2ae70076bfe204776a3ce84db", "sha256": "c69826bd98520d1306e4d752a77f2d2375d70fb5750d3041a80ff597c6ddb24f"}, "downloads": -1, "filename": "kafka_client_decorators_cdsedson-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "0a77bde2ae70076bfe204776a3ce84db", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8933, "upload_time": "2020-04-06T18:46:26", "upload_time_iso_8601": "2020-04-06T18:46:26.371352Z", "url": "https://files.pythonhosted.org/packages/e8/d4/9554ea563f0a6b87d91744e61123bd7427f638268a21237c1ef511a47272/kafka_client_decorators_cdsedson-0.0.1-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "43a33d988a8916462bb88e5ccbb41c6a", "sha256": "88793058733a4ad8afcc3635a5f2cc920d5134cf164c49568b6fb7992cd2de3f"}, "downloads": -1, "filename": "kafka_client_decorators-cdsedson-0.0.1.tar.gz", "has_sig": false, "md5_digest": "43a33d988a8916462bb88e5ccbb41c6a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5851, "upload_time": "2020-04-06T18:46:30", "upload_time_iso_8601": "2020-04-06T18:46:30.796742Z", "url": "https://files.pythonhosted.org/packages/1e/b1/0d03814ead017c8b06a8d1275a6f94fd2867e15dd46aa3cc800ce0400a15/kafka_client_decorators-cdsedson-0.0.1.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "0a77bde2ae70076bfe204776a3ce84db", "sha256": "c69826bd98520d1306e4d752a77f2d2375d70fb5750d3041a80ff597c6ddb24f"}, "downloads": -1, "filename": "kafka_client_decorators_cdsedson-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "0a77bde2ae70076bfe204776a3ce84db", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8933, "upload_time": "2020-04-06T18:46:26", "upload_time_iso_8601": "2020-04-06T18:46:26.371352Z", "url": "https://files.pythonhosted.org/packages/e8/d4/9554ea563f0a6b87d91744e61123bd7427f638268a21237c1ef511a47272/kafka_client_decorators_cdsedson-0.0.1-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "43a33d988a8916462bb88e5ccbb41c6a", "sha256": "88793058733a4ad8afcc3635a5f2cc920d5134cf164c49568b6fb7992cd2de3f"}, "downloads": -1, "filename": "kafka_client_decorators-cdsedson-0.0.1.tar.gz", "has_sig": false, "md5_digest": "43a33d988a8916462bb88e5ccbb41c6a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5851, "upload_time": "2020-04-06T18:46:30", "upload_time_iso_8601": "2020-04-06T18:46:30.796742Z", "url": "https://files.pythonhosted.org/packages/1e/b1/0d03814ead017c8b06a8d1275a6f94fd2867e15dd46aa3cc800ce0400a15/kafka_client_decorators-cdsedson-0.0.1.tar.gz"}]}