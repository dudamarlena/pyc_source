{"info": {"author": "Simon Willison", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "# geojson-to-sqlite\n\n[![PyPI](https://img.shields.io/pypi/v/geojson-to-sqlite.svg)](https://pypi.org/project/geojson-to-sqlite/)\n[![CircleCI](https://circleci.com/gh/simonw/geojson-to-sqlite.svg?style=svg)](https://circleci.com/gh/simonw/geojson-to-sqlite)\n[![License](https://img.shields.io/badge/license-Apache%202.0-blue.svg)](https://github.com/simonw/geojson-to-sqlite/blob/master/LICENSE)\n\nCLI tool for converting GeoJSON to SQLite (optionally with SpatiaLite)\n\n[RFC 7946: The GeoJSON Format](https://tools.ietf.org/html/rfc7946)\n\n## How to install\n\n    $ pip install geojson-to-sqlite\n\n## How to use\n\nYou can run this tool against a GeoJSON file like so:\n\n    $ geojson-to-sqlite my.db features features.geojson\n\nThis will load all of the features from the `features.geojson` file into a table called `features`.\n\nEach row will have a `geometry` column containing the feature geometry, and columns for each of the keys found in any `properties` attached to those features.\n\nThe table will be created the first time you run the command.\n\nOn subsequent runs you can use the `--alter` option to add any new columns that are missing from the table.\n\nIf your features have an `\"id\"` property it will be used as the primary key for the table. You can also use `--pk=PROPERTY` with the name of a different property to use that as the primary key instead. If you don't want to use the `\"id\"` as the primary key (maybe it contains duplicate values) you can use `--pk ''` to specify no primary key.\n\nIf no primary key is specified, a SQLite `rowid` column will be used.\n\nYou can use `-` as the filename to import from standard input. For example:\n\n    $ curl https://eric.clst.org/assets/wiki/uploads/Stuff/gz_2010_us_040_00_20m.json \\\n        | geojson-to-sqlite my.db states - --pk GEO_ID\n\n## Using with SpatiaLite\n\nBy default, the `geometry` column will contain JSON.\n\nIf you have installed the [SpatiaLite](https://www.gaia-gis.it/fossil/libspatialite/index) module for SQLite you can instead import the geometry into a geospatially indexed column.\n\nYou can do this using the `--spatialite` option, like so:\n\n    $ geojson-to-sqlite my.db features features.geojson --spatialite\n\nThe tool will search for the SpatiaLite module in the following locations:\n\n- `/usr/lib/x86_64-linux-gnu/mod_spatialite.so`\n- `/usr/local/lib/mod_spatialite.dylib`\n\nIf you have installed the module in another location, you can use the `--spatialite_mod=xxx` option to specify where:\n\n    $ geojson-to-sqlite my.db features features.geojson \\\n        --spatialite_mod=/usr/lib/mod_spatialite.dylib\n\n## Using this with Datasette\n\nDatabases created using this tool can be explored and published using [Datasette](https://datasette.readthedocs.io/).\n\nThe Datasette documentation includes a section on [how to use it to browse SpatiaLite databases](https://datasette.readthedocs.io/en/stable/spatialite.html).\n\nThe [datasette-leaflet-geojson](https://github.com/simonw/datasette-leaflet-geojson) plugin can be used to visualize columns containing GeoJSON geometries on a [Leaflet](https://leafletjs.com/) map.\n\nIf you are using SpatiaLite you will need to output the geometry as GeoJSON in order for that plugin to work. You can do that using the SpaitaLite `AsGeoJSON()` function - something like this:\n\n```sql\nselect rowid, AsGeoJSON(geometry) from mytable limit 10\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/simonw/geojson-to-sqlite", "keywords": "", "license": "Apache License, Version 2.0", "maintainer": "", "maintainer_email": "", "name": "geojson-to-sqlite", "package_url": "https://pypi.org/project/geojson-to-sqlite/", "platform": "", "project_url": "https://pypi.org/project/geojson-to-sqlite/", "project_urls": {"Homepage": "https://github.com/simonw/geojson-to-sqlite"}, "release_url": "https://pypi.org/project/geojson-to-sqlite/0.2/", "requires_dist": ["sqlite-utils (>=2.2)", "shapely", "pytest ; extra == 'test'"], "requires_python": "", "summary": "CLI tool for converting GeoJSON to SQLite (optionally with SpatiaLite)", "version": "0.2"}, "last_serial": 6610787, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "dcda08617c4cd4a3f111e629d278d204", "sha256": "f453d4be69706ca8d34c236f85390da7d44ae732a8c302ce2710fa0f5a52523a"}, "downloads": -1, "filename": "geojson_to_sqlite-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "dcda08617c4cd4a3f111e629d278d204", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8470, "upload_time": "2020-01-31T03:10:31", "upload_time_iso_8601": "2020-01-31T03:10:31.523161Z", "url": "https://files.pythonhosted.org/packages/c4/77/ad9fb0ae8fa0d2c236123ce3304f92e519a6418928f94ef5ce284d987be2/geojson_to_sqlite-0.1-py3-none-any.whl"}], "0.1.1": [{"comment_text": "", "digests": {"md5": "7a354c5f16ea83d70f8d77b73ec7d407", "sha256": "10c47cf4647460db820f597252b5f183e47118b29bd889ae27457258daccf991"}, "downloads": -1, "filename": "geojson_to_sqlite-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7a354c5f16ea83d70f8d77b73ec7d407", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8621, "upload_time": "2020-01-31T06:39:15", "upload_time_iso_8601": "2020-01-31T06:39:15.121998Z", "url": "https://files.pythonhosted.org/packages/d8/a4/cab44d17e39e2adeabee975dbcf610d99f00856a9850f45b9298b929eb99/geojson_to_sqlite-0.1.1-py3-none-any.whl"}], "0.1.2": [{"comment_text": "", "digests": {"md5": "e9e1ec63cb47e9ba0cbbe8220090a3b7", "sha256": "85fe54a8032ab59059074f1e33c3929b06b3b781b3929811d3f3cc8f8dbbd4eb"}, "downloads": -1, "filename": "geojson_to_sqlite-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "e9e1ec63cb47e9ba0cbbe8220090a3b7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8594, "upload_time": "2020-02-01T22:06:44", "upload_time_iso_8601": "2020-02-01T22:06:44.921511Z", "url": "https://files.pythonhosted.org/packages/05/8a/a322c00f805025bbdb5f75c625d4023777955d6f4e24e0708d9aeb9e4d54/geojson_to_sqlite-0.1.2-py3-none-any.whl"}], "0.1a0": [{"comment_text": "", "digests": {"md5": "c2f4c72e8d5afb0a745c6fdf3565e796", "sha256": "277ff9286ce24993da4c7f16e4270f1417d56ae3b4047c163d1753790dc7ab73"}, "downloads": -1, "filename": "geojson_to_sqlite-0.1a0-py3-none-any.whl", "has_sig": false, "md5_digest": "c2f4c72e8d5afb0a745c6fdf3565e796", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7804, "upload_time": "2020-01-31T01:00:48", "upload_time_iso_8601": "2020-01-31T01:00:48.354074Z", "url": "https://files.pythonhosted.org/packages/5f/88/9b212d0b197103f45d0632ec7135a05d3576186186a18b05869481a0c11f/geojson_to_sqlite-0.1a0-py3-none-any.whl"}], "0.2": [{"comment_text": "", "digests": {"md5": "780c1bc7ff720a1b82e1c9abba50800a", "sha256": "c43b8b0de28bed17c0df0d4f0b63dd86e3ce5db5959834673df71a06c103b531"}, "downloads": -1, "filename": "geojson_to_sqlite-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "780c1bc7ff720a1b82e1c9abba50800a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9044, "upload_time": "2020-02-11T17:08:12", "upload_time_iso_8601": "2020-02-11T17:08:12.897126Z", "url": "https://files.pythonhosted.org/packages/28/85/6512da921d2d853a96c5a0354576ef5675c5a4d906789876d6dec5a14c4a/geojson_to_sqlite-0.2-py3-none-any.whl"}]}, "urls": [{"comment_text": "", "digests": {"md5": "780c1bc7ff720a1b82e1c9abba50800a", "sha256": "c43b8b0de28bed17c0df0d4f0b63dd86e3ce5db5959834673df71a06c103b531"}, "downloads": -1, "filename": "geojson_to_sqlite-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "780c1bc7ff720a1b82e1c9abba50800a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9044, "upload_time": "2020-02-11T17:08:12", "upload_time_iso_8601": "2020-02-11T17:08:12.897126Z", "url": "https://files.pythonhosted.org/packages/28/85/6512da921d2d853a96c5a0354576ef5675c5a4d906789876d6dec5a14c4a/geojson_to_sqlite-0.2-py3-none-any.whl"}]}