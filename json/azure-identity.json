{"info": {"author": "Microsoft Corporation", "author_email": "azpysdkhelp@microsoft.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# Azure Identity client library for Python\nAzure Identity authenticating with Azure Active Directory for Azure SDK\nlibraries. It provides credentials Azure SDK clients can use to authenticate\ntheir requests.\n\nThis library currently supports:\n  - [Service principal authentication](https://docs.microsoft.com/en-us/azure/active-directory/develop/app-objects-and-service-principals)\n  - [Managed identity authentication](https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/overview)\n  - User authentication\n\n  [Source code](https://github.com/Azure/azure-sdk-for-python/tree/020147d7db7c27a1394ddf7590bca8c0bb5899c2/sdk/identity/azure-identity)\n  | [Package (PyPI)](https://pypi.org/project/azure-identity/)\n  | [API reference documentation][ref_docs]\n  | [Azure Active Directory documentation](https://docs.microsoft.com/en-us/azure/active-directory/)\n\n# Getting started\n## Prerequisites\n- an [Azure subscription](https://azure.microsoft.com/free/)\n- Python 2.7 or 3.5.3+\n\n## Install the package\nInstall Azure Identity with pip:\n```sh\npip install azure-identity\n```\n\n#### Creating a Service Principal with the Azure CLI\nThis library doesn't require a service principal, but Azure applications\ncommonly use them for authentication. If you need to create one, you can use\nthis [Azure CLI](https://docs.microsoft.com/cli/azure) snippet. Before using\nit, replace \"http://my-application\" with a more appropriate name for your\nservice principal.\n\nCreate a service principal:\n```sh\naz ad sp create-for-rbac --name http://my-application --skip-assignment\n```\n\nExample output:\n```json\n{\n    \"appId\": \"generated-app-id\",\n    \"displayName\": \"app-name\",\n    \"name\": \"http://my-application\",\n    \"password\": \"random-password\",\n    \"tenant\": \"tenant-id\"\n}\n```\nAzure Identity can authenticate as this service principal using its tenant id\n(\"tenant\" above), client id (\"appId\" above), and client secret (\"password\" above).\n\n\n# Key concepts\n## Credentials\nA credential is a class which contains or can obtain the data needed for a\nservice client to authenticate requests. Service clients across the Azure SDK\naccept credentials as constructor parameters, as described in their\ndocumentation. The [next steps](#client-library-support) section below contains\na partial list of client libraries accepting Azure Identity credentials.\n\nCredential classes are found in the `azure.identity` namespace. They differ\nin the types of identities they can authenticate as, and in their configuration:\n\n|credential class|identity|configuration\n|-|-|-\n|[DefaultAzureCredential](#defaultazurecredential \"DefaultAzureCredential\")|service principal, managed identity, user|none for managed identity, [environment variables](#environment-variables \"environment variables\") for service principal or user authentication\n|[ManagedIdentityCredential][managed_id_cred_ref]|managed identity|none\n|[EnvironmentCredential][environment_cred_ref]|service principal, user|[environment variables](#environment-variables \"environment variables\")\n|[ClientSecretCredential][client_secret_cred_ref]|service principal|constructor parameters\n|[CertificateCredential][cert_cred_ref]|service principal|constructor parameters\n|[DeviceCodeCredential][device_code_cred_ref]|user|constructor parameters\n|[InteractiveBrowserCredential][interactive_cred_ref]|user|constructor parameters\n|[UsernamePasswordCredential][userpass_cred_ref]|user|constructor parameters\n\nCredentials can be chained together and tried in turn until one succeeds; see\n[chaining credentials](#chaining-credentials \"chaining credentials\") for details.\n\nService principal and managed identity credentials have async equivalents in\nthe [azure.identity.aio][ref_docs_aio] namespace, supported on Python 3.5.3+.\nSee the [async credentials](#async-credentials \"async credentials\") example for\ndetails. Async user credentials will be part of a future release.\n\n## DefaultAzureCredential\n[DefaultAzureCredential][default_cred_ref] is appropriate for most\napplications intended to run in Azure. It can authenticate as a service\nprincipal, managed identity, or user, and can be configured for local\ndevelopment and production environments without code changes.\n\nTo authenticate as a service principal, provide configuration in\n[environment variables](#environment-variables \"environment variables\") as\ndescribed in the next section.\n\nAuthenticating as a managed identity requires no configuration but is only\npossible in a supported hosting environment. See Azure Active Directory's\n[managed identity documentation](https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/services-support-managed-identities)\nfor more information.\n\n#### Single sign-on\nDuring local development on Windows, [DefaultAzureCredential][default_cred_ref]\ncan authenticate using a single sign-on shared with Microsoft applications, for\nexample Visual Studio 2019. This may require additional configuration when\nmultiple identities have signed in. In that case, set the environment variables\n`AZURE_USERNAME` (typically an email address) and `AZURE_TENANT_ID` to select\nthe desired identity. Either, or both, may be set.\n\n## Environment variables\n[DefaultAzureCredential][default_cred_ref] and\n[EnvironmentCredential][environment_cred_ref] can be configured with\nenvironment variables. Each type of authentication requires values for specific\nvariables:\n\n#### Service principal with secret\n>|variable name|value\n>|-|-\n>|`AZURE_CLIENT_ID`|id of an Azure Active Directory application\n>|`AZURE_TENANT_ID`|id of the application's Azure Active Directory tenant\n>|`AZURE_CLIENT_SECRET`|one of the application's client secrets\n\n#### Service principal with certificate\n>|variable name|value\n>|-|-\n>|`AZURE_CLIENT_ID`|id of an Azure Active Directory application\n>|`AZURE_TENANT_ID`|id of the application's Azure Active Directory tenant\n>|`AZURE_CLIENT_CERTIFICATE_PATH`|path to a PEM-encoded certificate file including private key (without password protection)\n\n#### Username and password\n>|variable name|value\n>|-|-\n>|`AZURE_CLIENT_ID`|id of an Azure Active Directory application\n>|`AZURE_USERNAME`|a username (usually an email address)\n>|`AZURE_PASSWORD`|that user's password\n\n> Note: username/password authentication is not supported by the async API\n([azure.identity.aio][ref_docs_aio])\n\nConfiguration is attempted in the above order. For example, if values for a\nclient secret and certificate are both present, the client secret will be used.\n\n# Examples\n## Authenticating with `DefaultAzureCredential`\nThis example demonstrates authenticating the `BlobServiceClient` from the\n[azure-storage-blob][azure_storage_blob] library using\n[DefaultAzureCredential](#defaultazurecredential \"DefaultAzureCredential\").\n\n```py\nfrom azure.identity import DefaultAzureCredential\nfrom azure.storage.blob import BlobServiceClient\n\n# This credential first checks environment variables for configuration as described above.\n# If environment configuration is incomplete, it will try managed identity.\ncredential = DefaultAzureCredential()\n\nclient = BlobServiceClient(account_url, credential=credential)\n```\n\n## Authenticating a service principal with a client secret:\nThis example demonstrates authenticating the `KeyClient` from the\n[azure-keyvault-keys][azure_keyvault_keys] library using\n[ClientSecretCredential][client_secret_cred_ref].\n\n```py\nfrom azure.identity import ClientSecretCredential\nfrom azure.keyvault.keys import KeyClient\n\ncredential = ClientSecretCredential(tenant_id, client_id, client_secret)\n\nclient = KeyClient(\"https://my-vault.vault.azure.net\", credential)\n```\n\n## Authenticating a service principal with a certificate:\nThis example demonstrates authenticating the `SecretClient` from the\n[azure-keyvault-secrets][azure_keyvault_secrets] library using\n[CertificateCredential][cert_cred_ref].\n\n```py\nfrom azure.identity import CertificateCredential\nfrom azure.keyvault.secrets import SecretClient\n\n# requires a PEM-encoded certificate with private key\ncert_path = \"/app/certs/certificate.pem\"\ncredential = CertificateCredential(tenant_id, client_id, cert_path)\n\n# if the private key is password protected, provide a 'password' keyword argument\ncredential = CertificateCredential(tenant_id, client_id, cert_path, password=\"cert-password\")\n\n\nclient = SecretClient(\"https://my-vault.vault.azure.net\", credential)\n```\n\n## Chaining credentials\n[ChainedTokenCredential][chain_cred_ref] links multiple credential instances\nto be tried sequentially when authenticating. It will try each chained\ncredential in turn until one provides a token or fails to authenticate due to\nan error.\n\nThe following example demonstrates creating a credential which will attempt to\nauthenticate using managed identity, and fall back to a service principal when\nmanaged identity is unavailable. This example uses the `EventHubClient` from\nthe [azure-eventhub][azure_eventhub] client library.\n\n```py\nfrom azure.eventhub import EventHubClient\nfrom azure.identity import ChainedTokenCredential, ClientSecretCredential, ManagedIdentityCredential\n\nmanaged_identity = ManagedIdentityCredential()\nservice_principal = ClientSecretCredential(tenant_id, client_id, client_secret)\n\n# when an access token is needed, the chain will try each credential in order,\n# stopping when one provides a token or fails to authenticate due to an error\ncredential_chain = ChainedTokenCredential(managed_identity, service_principal)\n\n# the ChainedTokenCredential can be used anywhere a credential is required\nclient = EventHubClient(host, event_hub_path, credential_chain)\n```\n\n## Async credentials:\nThis library includes an async API supported on Python 3.5+. To use the async\ncredentials in [azure.identity.aio][ref_docs_aio], you must first install an\nasync transport, such as [aiohttp](https://pypi.org/project/aiohttp/). See\n[azure-core documentation](https://github.com/Azure/azure-sdk-for-python/tree/020147d7db7c27a1394ddf7590bca8c0bb5899c2/sdk/core/azure-core/README.md#transport)\nfor more information.\n\nAsync credentials should be closed when they're no longer needed. Each async\ncredential is an async context manager and defines an async `close` method. For\nexample:\n\n```py\nfrom azure.identity.aio import DefaultAzureCredential\n\n# call close when the credential is no longer needed\ncredential = DefaultAzureCredential()\n...\nawait credential.close()\n\n# alternatively, use the credential as an async context manager\ncredential = DefaultAzureCredential()\nasync with credential:\n  ...\n```\n\nThis example demonstrates authenticating the asynchronous `SecretClient` from\n[azure-keyvault-secrets][azure_keyvault_secrets] with an asynchronous\ncredential.\n\n```py\n# most credentials have async equivalents supported on Python 3.5.3+\nfrom azure.identity.aio import DefaultAzureCredential\nfrom azure.keyvault.secrets.aio import SecretClient\n\n# async credentials have the same API and configuration as their synchronous\n# counterparts, and are used with (async) Azure SDK clients in the same way\ndefault_credential = DefaultAzureCredential()\nclient = SecretClient(\"https://my-vault.vault.azure.net\", default_credential)\n```\n\n# Troubleshooting\n## General\nCredentials raise `CredentialUnavailableError` when they're unable to attempt\nauthentication because they lack required data or state. For example,\n[EnvironmentCredential][environment_cred_ref] will raise this exception when\n[its configuration](#environment-variables \"its configuration\") is incomplete.\n\nCredentials raise `azure.core.exceptions.ClientAuthenticationError` when they fail\nto authenticate. `ClientAuthenticationError` has a `message` attribute which\ndescribes why authentication failed. When raised by\n[DefaultAzureCredential](#defaultazurecredential) or `ChainedTokenCredential`,\nthe message collects error messages from each credential in the chain.\n\nFor more details on handling Azure Active Directory errors please refer to the\nAzure Active Directory\n[error code documentation](https://docs.microsoft.com/en-us/azure/active-directory/develop/reference-aadsts-error-codes).\n\n\n# Next steps\n## Client library support\nThis is an incomplete list of client libraries accepting Azure Identity\ncredentials. You can learn more about these libraries, and find additional\ndocumentation of them, at the links below.\n- [azure-appconfiguration](https://github.com/Azure/azure-sdk-for-python/tree/020147d7db7c27a1394ddf7590bca8c0bb5899c2/sdk/appconfiguration/azure-appconfiguration)\n- [azure-eventhub][azure_eventhub]\n- [azure-keyvault-certificates](https://github.com/Azure/azure-sdk-for-python/tree/020147d7db7c27a1394ddf7590bca8c0bb5899c2/sdk/keyvault/azure-keyvault-certificates)\n- [azure-keyvault-keys][azure_keyvault_keys]\n- [azure-keyvault-secrets][azure_keyvault_secrets]\n- [azure-storage-blob][azure_storage_blob]\n- [azure-storage-queue](https://github.com/Azure/azure-sdk-for-python/tree/020147d7db7c27a1394ddf7590bca8c0bb5899c2/sdk/storage/azure-storage-queue)\n\n## Provide Feedback\nIf you encounter bugs or have suggestions, please\n[open an issue](https://github.com/Azure/azure-sdk-for-python/issues).\n\n\n# Contributing\nThis project welcomes contributions and suggestions. Most contributions require\nyou to agree to a Contributor License Agreement (CLA) declaring that you have\nthe right to, and actually do, grant us the rights to use your contribution.\nFor details, visit [https://cla.microsoft.com](https://cla.microsoft.com).\n\nWhen you submit a pull request, a CLA-bot will automatically determine whether\nyou need to provide a CLA and decorate the PR appropriately (e.g., label,\ncomment). Simply follow the instructions provided by the bot. You will only\nneed to do this once across all repos using our CLA.\n\nThis project has adopted the\n[Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/).\nFor more information, see the\n[Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/)\nor contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any\nadditional questions or comments.\n\n[azure_eventhub]: https://github.com/Azure/azure-sdk-for-python/tree/020147d7db7c27a1394ddf7590bca8c0bb5899c2/sdk/eventhub/azure-eventhub\n[azure_keyvault_keys]: https://github.com/Azure/azure-sdk-for-python/tree/020147d7db7c27a1394ddf7590bca8c0bb5899c2/sdk/keyvault/azure-keyvault-keys\n[azure_keyvault_secrets]: https://github.com/Azure/azure-sdk-for-python/tree/020147d7db7c27a1394ddf7590bca8c0bb5899c2/sdk/keyvault/azure-keyvault-secrets\n[azure_storage_blob]: https://github.com/Azure/azure-sdk-for-python/tree/020147d7db7c27a1394ddf7590bca8c0bb5899c2/sdk/storage/azure-storage-blob\n\n[ref_docs]: https://aka.ms/azsdk-python-identity-docs\n[ref_docs_aio]: https://aka.ms/azsdk-python-identity-aio-docs\n[cert_cred_ref]: https://aka.ms/azsdk-python-identity-cert-cred-ref\n[chain_cred_ref]: https://aka.ms/azsdk-python-identity-chain-cred-ref\n[client_secret_cred_ref]: https://aka.ms/azsdk-python-identity-client-secret-cred-ref\n[client_secret_cred_aio_ref]: https://aka.ms/azsdk-python-identity-client-secret-cred-aio-ref\n[default_cred_ref]: https://aka.ms/azsdk-python-identity-default-cred-ref\n[device_code_cred_ref]: https://aka.ms/azsdk-python-identity-device-code-cred-ref\n[environment_cred_ref]: https://aka.ms/azsdk-python-identity-environment-cred-ref\n[interactive_cred_ref]: https://aka.ms/azsdk-python-identity-interactive-cred-ref\n[managed_id_cred_ref]: https://aka.ms/azsdk-python-identity-managed-id-cred-ref\n[userpass_cred_ref]: https://aka.ms/azsdk-python-identity-userpass-cred-ref\n\n![Impressions](https://azure-sdk-impressions.azurewebsites.net/api/impressions/azure-sdk-for-python%2Fsdk%2Fidentity%2Fazure-identity%2FREADME.png)\n\n\n# Release History\n\n## 1.3.1 (2020-03-31)\n\n- `ManagedIdentityCredential` raises `CredentialUnavailableError` when no\nidentity is configured for an IMDS endpoint. This causes\n`ChainedTokenCredential` to correctly try the next credential in the chain.\n([#10488](https://github.com/Azure/azure-sdk-for-python/issues/10488))\n\n\n## 1.3.0 (2020-02-11)\n\n- Correctly parse token expiration time on Windows App Service\n([#9393](https://github.com/Azure/azure-sdk-for-python/issues/9393))\n- Credentials raise `CredentialUnavailableError` when they can't attempt to\nauthenticate due to missing data or state\n([#9372](https://github.com/Azure/azure-sdk-for-python/pull/9372))\n- `CertificateCredential` supports password-protected private keys\n([#9434](https://github.com/Azure/azure-sdk-for-python/pull/9434))\n\n\n## 1.2.0 (2020-01-14)\n\n- All credential pipelines include `ProxyPolicy`\n([#8945](https://github.com/Azure/azure-sdk-for-python/pull/8945))\n- Async credentials are async context managers and have an async `close` method\n([#9090](https://github.com/Azure/azure-sdk-for-python/pull/9090))\n\n\n## 1.1.0 (2019-11-27)\n\n- Constructing `DefaultAzureCredential` no longer raises `ImportError` on Python\n3.8 on Windows ([8294](https://github.com/Azure/azure-sdk-for-python/pull/8294))\n- `InteractiveBrowserCredential` raises when unable to open a web browser\n([8465](https://github.com/Azure/azure-sdk-for-python/pull/8465))\n- `InteractiveBrowserCredential` prompts for account selection\n([8470](https://github.com/Azure/azure-sdk-for-python/pull/8470))\n- The credentials composing `DefaultAzureCredential` are configurable by keyword\narguments ([8514](https://github.com/Azure/azure-sdk-for-python/pull/8514))\n- `SharedTokenCacheCredential` accepts an optional `tenant_id` keyword argument\n([8689](https://github.com/Azure/azure-sdk-for-python/pull/8689))\n\n\n## 1.0.1 (2019-11-05)\n\n- `ClientCertificateCredential` uses application and tenant IDs correctly\n([8315](https://github.com/Azure/azure-sdk-for-python/pull/8315))\n- `InteractiveBrowserCredential` properly caches tokens\n([8352](https://github.com/Azure/azure-sdk-for-python/pull/8352))\n- Adopted msal 1.0.0 and msal-extensions 0.1.3\n([8359](https://github.com/Azure/azure-sdk-for-python/pull/8359))\n\n\n## 1.0.0 (2019-10-29)\n### Breaking changes:\n- Async credentials now default to [`aiohttp`](https://pypi.org/project/aiohttp/)\nfor transport but the library does not require it as a dependency because the\nasync API is optional. To use async credentials, please install\n[`aiohttp`](https://pypi.org/project/aiohttp/) or see\n[azure-core documentation](https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/core/azure-core/README.md#transport)\nfor information about customizing the transport.\n- Renamed `ClientSecretCredential` parameter \"`secret`\" to \"`client_secret`\"\n- All credentials with `tenant_id` and `client_id` positional parameters now accept them in that order\n- Changes to `InteractiveBrowserCredential` parameters\n  - positional parameter `client_id` is now an optional keyword argument. If no value is provided,\nthe Azure CLI's client ID will be used.\n  - Optional keyword argument `tenant` renamed `tenant_id`\n- Changes to `DeviceCodeCredential`\n  - optional positional parameter `prompt_callback` is now a keyword argument\n  - `prompt_callback`'s third argument is now a `datetime` representing the\n  expiration time of the device code\n  - optional keyword argument `tenant` renamed `tenant_id`\n- Changes to `ManagedIdentityCredential`\n  - now accepts no positional arguments, and only one keyword argument:\n  `client_id`\n  - transport configuration is now done through keyword arguments as\n  described in\n  [`azure-core` documentation](https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/core/azure-core/docs/configuration.md)\n\n### Fixes and improvements:\n- Authenticating with a single sign-on shared with other Microsoft applications\nonly requires a username when multiple users have signed in\n([#8095](https://github.com/Azure/azure-sdk-for-python/pull/8095))\n- `DefaultAzureCredential` accepts an `authority` keyword argument, enabling\nits use in national clouds\n([#8154](https://github.com/Azure/azure-sdk-for-python/pull/8154))\n\n### Dependency changes\n- Adopted [`msal_extensions`](https://pypi.org/project/msal-extensions/) 0.1.2\n- Constrained [`msal`](https://pypi.org/project/msal/) requirement to >=0.4.1,\n<1.0.0\n\n\n## 1.0.0b4 (2019-10-07)\n### New features:\n- `AuthorizationCodeCredential` authenticates with a previously obtained\nauthorization code. See Azure Active Directory's\n[authorization code documentation](https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-oauth2-auth-code-flow)\nfor more information about this authentication flow.\n- Multi-cloud support: client credentials accept the authority of an Azure Active\nDirectory authentication endpoint as an `authority` keyword argument. Known\nauthorities are defined in `azure.identity.KnownAuthorities`. The default\nauthority is for Azure Public Cloud, `login.microsoftonline.com`\n(`KnownAuthorities.AZURE_PUBLIC_CLOUD`). An application running in Azure\nGovernment would use `KnownAuthorities.AZURE_GOVERNMENT` instead:\n>```\n>from azure.identity import DefaultAzureCredential, KnownAuthorities\n>credential = DefaultAzureCredential(authority=KnownAuthorities.AZURE_GOVERNMENT)\n>```\n\n### Breaking changes:\n- Removed `client_secret` parameter from `InteractiveBrowserCredential`\n\n### Fixes and improvements:\n- `UsernamePasswordCredential` correctly handles environment configuration with\nno tenant information ([#7260](https://github.com/Azure/azure-sdk-for-python/pull/7260))\n- user realm discovery requests are sent through credential pipelines\n([#7260](https://github.com/Azure/azure-sdk-for-python/pull/7260))\n\n\n## 1.0.0b3 (2019-09-10)\n### New features:\n- `SharedTokenCacheCredential` authenticates with tokens stored in a local\ncache shared by Microsoft applications. This enables Azure SDK clients to\nauthenticate silently after you've signed in to Visual Studio 2019, for\nexample. `DefaultAzureCredential` includes `SharedTokenCacheCredential` when\nthe shared cache is available, and environment variable `AZURE_USERNAME`\nis set. See the\n[README](https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/identity/azure-identity/README.md#single-sign-on)\nfor more information.\n\n### Dependency changes:\n- New dependency: [`msal-extensions`](https://pypi.org/project/msal-extensions/)\n0.1.1\n\n## 1.0.0b2 (2019-08-05)\n### Breaking changes:\n- Removed `azure.core.Configuration` from the public API in preparation for a\nrevamped configuration API. Static `create_config` methods have been renamed\n`_create_config`, and will be removed in a future release.\n\n### Dependency changes:\n- Adopted [azure-core](https://pypi.org/project/azure-core/) 1.0.0b2\n  - If you later want to revert to a version requiring azure-core 1.0.0b1,\n  of this or another Azure SDK library, you must explicitly install azure-core\n  1.0.0b1 as well. For example:\n  `pip install azure-core==1.0.0b1 azure-identity==1.0.0b1`\n- Adopted [MSAL](https://pypi.org/project/msal/) 0.4.1\n- New dependency for Python 2.7: [mock](https://pypi.org/project/mock/)\n\n### New features:\n- Added credentials for authenticating users:\n[`DeviceCodeCredential`](https://azure.github.io/azure-sdk-for-python/ref/azure.identity.html#azure.identity.DeviceCodeCredential),\n[`InteractiveBrowserCredential`](https://azure.github.io/azure-sdk-for-python/ref/azure.identity.html#azure.identity.InteractiveBrowserCredential),\n[`UsernamePasswordCredential`](https://azure.github.io/azure-sdk-for-python/ref/azure.identity.html#azure.identity.UsernamePasswordCredential)\n  - async versions of these credentials will be added in a future release\n\n## 1.0.0b1 (2019-06-28)\nVersion 1.0.0b1 is the first preview of our efforts to create a user-friendly\nand Pythonic authentication API for Azure SDK client libraries. For more\ninformation about preview releases of other Azure SDK libraries, please visit\nhttps://aka.ms/azure-sdk-preview1-python.\n\nThis release supports service principal and managed identity authentication.\nSee the\n[documentation](https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/identity/azure-identity/README.md)\nfor more details. User authentication will be added in an upcoming preview\nrelease.\n\nThis release supports only global Azure Active Directory tenants, i.e. those\nusing the https://login.microsoftonline.com authentication endpoint.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/identity/azure-identity", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "azure-identity", "package_url": "https://pypi.org/project/azure-identity/", "platform": "", "project_url": "https://pypi.org/project/azure-identity/", "project_urls": {"Homepage": "https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/identity/azure-identity"}, "release_url": "https://pypi.org/project/azure-identity/1.3.1/", "requires_dist": ["azure-core (<2.0.0,>=1.0.0)", "cryptography (>=2.1.4)", "msal (<2.0.0,>=1.0.0)", "msal-extensions (~=0.1.3)", "six (>=1.6)", "azure-nspkg ; python_version<'3.0'", "mock ; python_version<'3.3'", "typing ; python_version<'3.5'"], "requires_python": "", "summary": "Microsoft Azure Identity Library for Python", "version": "1.3.1"}, "last_serial": 6970660, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "738c54d81e024013ce96543e388ba3b5", "sha256": "bd230d824923faf6d37fe307b3a7a822785914e3c27deeb364fded5ee7ce5568"}, "downloads": -1, "filename": "azure_identity-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "738c54d81e024013ce96543e388ba3b5", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 52810, "upload_time": "2019-10-30T00:14:01", "upload_time_iso_8601": "2019-10-30T00:14:01.556471Z", "url": "https://files.pythonhosted.org/packages/17/86/1e49c3de666511d42bc0f40fe99701ce59d1d606c6e0697b6a26a1d16122/azure_identity-1.0.0-py2.py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "93e0cfeb884d59c3e1273121bc8ad33b", "sha256": "833d9e4f73f809a1235147e2e89bd605a45341362122214af5039ece32826a6e"}, "downloads": -1, "filename": "azure-identity-1.0.0.zip", "has_sig": false, "md5_digest": "93e0cfeb884d59c3e1273121bc8ad33b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 90677, "upload_time": "2019-10-30T00:14:03", "upload_time_iso_8601": "2019-10-30T00:14:03.532831Z", "url": "https://files.pythonhosted.org/packages/59/87/06c3a8a55a4d15191e553d7c4a97f5e6170f9246e30356e4f66963b5eda1/azure-identity-1.0.0.zip"}], "1.0.0b1": [{"comment_text": "", "digests": {"md5": "a118a41ec3e8b29d35b6c56bac51bb47", "sha256": "1a2f4d5eb3c75b9be115974e9dbb66c3fee218da8592918d86c37324c7d46b89"}, "downloads": -1, "filename": "azure_identity-1.0.0b1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a118a41ec3e8b29d35b6c56bac51bb47", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19239, "upload_time": "2019-06-28T21:57:50", "upload_time_iso_8601": "2019-06-28T21:57:50.381462Z", "url": "https://files.pythonhosted.org/packages/37/c2/cc019e8927150337cb90c92ddb06381c2327da297ac51f6dae5aeb068dce/azure_identity-1.0.0b1-py2.py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "8672efefc3bf5cc67d8ee228bb37e4bd", "sha256": "89445f7eb8763dd57889fae488d85aaa54ffaacb417b49c151a55b9eee3a057c"}, "downloads": -1, "filename": "azure_identity-1.0.0b1-py3-none-any.whl", "has_sig": false, "md5_digest": "8672efefc3bf5cc67d8ee228bb37e4bd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19235, "upload_time": "2019-06-28T17:38:23", "upload_time_iso_8601": "2019-06-28T17:38:23.451301Z", "url": "https://files.pythonhosted.org/packages/6e/ec/c06d6ec847dbb86b6c877ea0d90c98dfa6ddd7b39cc364a28bf4df4c7b0b/azure_identity-1.0.0b1-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "a6f9341fbc6ebc9d6e6f799df8ac61c3", "sha256": "44c843c52a874e05547400165c53fac47726be24943a59f6d3fdd9b3a84db777"}, "downloads": -1, "filename": "azure-identity-1.0.0b1.zip", "has_sig": false, "md5_digest": "a6f9341fbc6ebc9d6e6f799df8ac61c3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27503, "upload_time": "2019-06-28T17:38:25", "upload_time_iso_8601": "2019-06-28T17:38:25.762340Z", "url": "https://files.pythonhosted.org/packages/6a/18/3fc714e98b87f26d7e313577dd24a67fa401cd07eda4df0bea0ab285a81d/azure-identity-1.0.0b1.zip"}], "1.0.0b2": [{"comment_text": "", "digests": {"md5": "8064e22b61831a36f3d95918393e57f4", "sha256": "b2ecd159ee627fd90fd157455707b84509fceb5d99afaf79bde5eefe1e07c141"}, "downloads": -1, "filename": "azure_identity-1.0.0b2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8064e22b61831a36f3d95918393e57f4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 30003, "upload_time": "2019-08-05T23:01:39", "upload_time_iso_8601": "2019-08-05T23:01:39.394259Z", "url": "https://files.pythonhosted.org/packages/87/29/afd08af6bd2ae5fc6fcc70ffec1dacbddbefd53e67528bc3b7bdb27e203a/azure_identity-1.0.0b2-py2.py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "7091741deb18259dd9c231829328041c", "sha256": "3a02008b8d49e38b73df21126ae7e47c295d47099592adea3dce6239c9ecd643"}, "downloads": -1, "filename": "azure-identity-1.0.0b2.zip", "has_sig": false, "md5_digest": "7091741deb18259dd9c231829328041c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41879, "upload_time": "2019-08-05T23:01:41", "upload_time_iso_8601": "2019-08-05T23:01:41.081265Z", "url": "https://files.pythonhosted.org/packages/db/c1/1ae1288ce6f2a95ca5ba4c635dc62e89266717f0a8bd844aeecd33edb348/azure-identity-1.0.0b2.zip"}], "1.0.0b3": [{"comment_text": "", "digests": {"md5": "7502de8f9d79c7b91795ea42d842d2c4", "sha256": "1b70b36559268fcdf8af87b672c6ae9efa728d7db4630718cd146f5f172fb104"}, "downloads": -1, "filename": "azure_identity-1.0.0b3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7502de8f9d79c7b91795ea42d842d2c4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 34900, "upload_time": "2019-09-10T18:09:14", "upload_time_iso_8601": "2019-09-10T18:09:14.288347Z", "url": "https://files.pythonhosted.org/packages/80/d2/6dc4a1b7f2a4478aca221305365a10af0c490659d80106629c4bcff2a028/azure_identity-1.0.0b3-py2.py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "f74c58b21645c0e15158a3e8d3bd57ae", "sha256": "4261c8cafb559a08b7512cf6bbb83cd5bb0f210577c799c7152698df7dd0452c"}, "downloads": -1, "filename": "azure-identity-1.0.0b3.zip", "has_sig": false, "md5_digest": "f74c58b21645c0e15158a3e8d3bd57ae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 47490, "upload_time": "2019-09-10T18:09:15", "upload_time_iso_8601": "2019-09-10T18:09:15.878786Z", "url": "https://files.pythonhosted.org/packages/95/f7/2a4623a0d727eb614bbcedc4c4259e47c84aee8ec3309b5dbeb2c2f4eeb7/azure-identity-1.0.0b3.zip"}], "1.0.0b4": [{"comment_text": "", "digests": {"md5": "bd3b7c3867af0e35ce7e20489a81fd85", "sha256": "eb09db2b0e925fac0072f221e301a41c451bace0f2d8df8abbaffa78b489f596"}, "downloads": -1, "filename": "azure_identity-1.0.0b4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bd3b7c3867af0e35ce7e20489a81fd85", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 49990, "upload_time": "2019-10-07T22:28:57", "upload_time_iso_8601": "2019-10-07T22:28:57.030768Z", "url": "https://files.pythonhosted.org/packages/73/b1/eec80b304e4ba29b7e6d3fe26a87128e2c57b7f3e97708da6658a50e4c14/azure_identity-1.0.0b4-py2.py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "b20026cbe3ea753afcbee86f6461ad45", "sha256": "750a647d9faccf34f101238122e86f1bc68c265b391ca5a0802b61564cbc62ce"}, "downloads": -1, "filename": "azure-identity-1.0.0b4.zip", "has_sig": false, "md5_digest": "b20026cbe3ea753afcbee86f6461ad45", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 65693, "upload_time": "2019-10-07T22:28:58", "upload_time_iso_8601": "2019-10-07T22:28:58.939944Z", "url": "https://files.pythonhosted.org/packages/bd/f7/b90153ba70a13bc7cccbb9170e06195a957c69d588b32f453942ee436c44/azure-identity-1.0.0b4.zip"}], "1.0.1": [{"comment_text": "", "digests": {"md5": "0744a27c17581e2a22c84423e89df800", "sha256": "cdc1a3779a6ec30da04791c221a58fba53dd8e7ea488d0d03e2e0972e1f26e16"}, "downloads": -1, "filename": "azure_identity-1.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0744a27c17581e2a22c84423e89df800", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 53216, "upload_time": "2019-11-05T22:05:33", "upload_time_iso_8601": "2019-11-05T22:05:33.981845Z", "url": "https://files.pythonhosted.org/packages/26/66/69cf9c0e07353efed1325c3b3a4acda21abe00d1d015e9215cb6a80b0ed6/azure_identity-1.0.1-py2.py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "064d109025b2448fefb3d7851a30b1be", "sha256": "eb27e3df4a31f1d66a50682124fc4bddef04a9bb37887ae9d883803f84174752"}, "downloads": -1, "filename": "azure-identity-1.0.1.zip", "has_sig": false, "md5_digest": "064d109025b2448fefb3d7851a30b1be", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 95462, "upload_time": "2019-11-05T22:05:35", "upload_time_iso_8601": "2019-11-05T22:05:35.413783Z", "url": "https://files.pythonhosted.org/packages/0e/c1/acb4daadc1ab3c18d4c3cc61ae718be344f3af1e8748ff4105d337189150/azure-identity-1.0.1.zip"}], "1.1.0": [{"comment_text": "", "digests": {"md5": "ea1b34cee7485aade3e3f99843e1673d", "sha256": "75f4ad9abfd191bd5f3de4c6dc29980b138bf5dfbbef9bca5c548a6048473bde"}, "downloads": -1, "filename": "azure_identity-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ea1b34cee7485aade3e3f99843e1673d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 57437, "upload_time": "2019-12-02T23:36:05", "upload_time_iso_8601": "2019-12-02T23:36:05.433702Z", "url": "https://files.pythonhosted.org/packages/c0/fe/bf726c577da408184e5dd0ff11a89609be66278a8812d7611dcd63bd1ad6/azure_identity-1.1.0-py2.py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "3200d45dcd8dfb69fe9d141427f30f12", "sha256": "0c8e540e1b75d48c54e5cd8d599f7ea5ccf4dae260c35bebb0c8d34d22b7c4f6"}, "downloads": -1, "filename": "azure-identity-1.1.0.zip", "has_sig": false, "md5_digest": "3200d45dcd8dfb69fe9d141427f30f12", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 108744, "upload_time": "2019-12-02T23:36:07", "upload_time_iso_8601": "2019-12-02T23:36:07.441739Z", "url": "https://files.pythonhosted.org/packages/cb/cf/cf8b15d002971c01d72fbd17ac447951ea9ed82aad66a204e6c69c43dd4a/azure-identity-1.1.0.zip"}], "1.2.0": [{"comment_text": "", "digests": {"md5": "b5f1766dc081c7eeb2d8401e42b8818b", "sha256": "4ce65058461c277991763ed3f121efc6b9eb9c2edefb62c414dfa85c814690d3"}, "downloads": -1, "filename": "azure_identity-1.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b5f1766dc081c7eeb2d8401e42b8818b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 58865, "upload_time": "2020-01-14T17:29:06", "upload_time_iso_8601": "2020-01-14T17:29:06.553118Z", "url": "https://files.pythonhosted.org/packages/c4/7a/9372cd51fc3408ede0fab950ef9a6518cad34ef36e199982bb1ddfa18512/azure_identity-1.2.0-py2.py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "f488dfaef609cf7c78814617905f6601", "sha256": "b32acd1cdb6202bfe10d9a0858dc463d8960295da70ae18097eb3b85ab12cb91"}, "downloads": -1, "filename": "azure-identity-1.2.0.zip", "has_sig": false, "md5_digest": "f488dfaef609cf7c78814617905f6601", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 120303, "upload_time": "2020-01-14T17:29:08", "upload_time_iso_8601": "2020-01-14T17:29:08.916734Z", "url": "https://files.pythonhosted.org/packages/b8/6d/8bc6c65d010040204da01c3d2af21ee9abacd28bc3f78faf2886d3be7fe0/azure-identity-1.2.0.zip"}], "1.3.0": [{"comment_text": "", "digests": {"md5": "12caf41bd9919e5fdd375d84611aa941", "sha256": "7e9c85e3f82f1e29e5edfc7beb3030b25e8b8fd02b65d5ea1c67f13cde01da0f"}, "downloads": -1, "filename": "azure_identity-1.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "12caf41bd9919e5fdd375d84611aa941", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 61053, "upload_time": "2020-02-11T16:15:25", "upload_time_iso_8601": "2020-02-11T16:15:25.700089Z", "url": "https://files.pythonhosted.org/packages/9b/c9/3ca9cdb73e72329907348dd1fcd34eb03d4d49f9b14e078b6d0e6f8fabc0/azure_identity-1.3.0-py2.py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "9d0b4a4452bafbe2508c972028d77d99", "sha256": "17fa904e0447fd2a2dc19909379edb769b05656dbaf4863b8c4fdfb2bb54350c"}, "downloads": -1, "filename": "azure-identity-1.3.0.zip", "has_sig": false, "md5_digest": "9d0b4a4452bafbe2508c972028d77d99", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 131410, "upload_time": "2020-02-11T16:15:27", "upload_time_iso_8601": "2020-02-11T16:15:27.485920Z", "url": "https://files.pythonhosted.org/packages/58/bf/69881f875e205039953eb260109b1576c664c4398dc6ba2d3f3a234d0c27/azure-identity-1.3.0.zip"}], "1.3.1": [{"comment_text": "", "digests": {"md5": "46e0bca7ee564ceb2ccd79c0dbc0b316", "sha256": "3775d5d244d65bde19d9ba76b95b1c82484a7a09f8b13140b106bc84df601d35"}, "downloads": -1, "filename": "azure_identity-1.3.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "46e0bca7ee564ceb2ccd79c0dbc0b316", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 61574, "upload_time": "2020-04-01T21:08:55", "upload_time_iso_8601": "2020-04-01T21:08:55.711570Z", "url": "https://files.pythonhosted.org/packages/dc/55/9b89cd436c145bc11cfb5ebabf2d4a7468a996104a2c26f2674eb3a7bb05/azure_identity-1.3.1-py2.py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "ec7c9c348ec6262947c5de6d3569df50", "sha256": "5a59c36b4b05bdaec455c390feda71b6495fc828246593404351b9a41c2e877a"}, "downloads": -1, "filename": "azure-identity-1.3.1.zip", "has_sig": false, "md5_digest": "ec7c9c348ec6262947c5de6d3569df50", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 133375, "upload_time": "2020-04-01T21:08:58", "upload_time_iso_8601": "2020-04-01T21:08:58.104173Z", "url": "https://files.pythonhosted.org/packages/fe/f0/e43371a952774eb2c18dc64ba6cb824bcddebc496aea58514915276e9c41/azure-identity-1.3.1.zip"}], "1.4.0b1": [{"comment_text": "", "digests": {"md5": "d17593cb87e165c62a08f7e21283e0df", "sha256": "ae37255d1543b4b71c9685500b26b266ad597dd027ae60e88eee08d617c6efe4"}, "downloads": -1, "filename": "azure_identity-1.4.0b1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d17593cb87e165c62a08f7e21283e0df", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 64970, "upload_time": "2020-03-10T17:50:19", "upload_time_iso_8601": "2020-03-10T17:50:19.518872Z", "url": "https://files.pythonhosted.org/packages/b5/56/dafe78682b276dc3e258c5c199e877b0ea7fb0665a2d1e7e774f405929ed/azure_identity-1.4.0b1-py2.py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "2985439df94fb3a78a64a8ed6e42b8fc", "sha256": "ad3c42a7d2747a624720fd4e2f48f929aa8a85eb35587972de056a59a5e69d61"}, "downloads": -1, "filename": "azure-identity-1.4.0b1.zip", "has_sig": false, "md5_digest": "2985439df94fb3a78a64a8ed6e42b8fc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 140618, "upload_time": "2020-03-10T17:50:21", "upload_time_iso_8601": "2020-03-10T17:50:21.628320Z", "url": "https://files.pythonhosted.org/packages/06/66/194da3264b093ac27c25e988ee6ed4a1b22aafac30bafd795bc595419eb5/azure-identity-1.4.0b1.zip"}], "1.4.0b2": [{"comment_text": "", "digests": {"md5": "fc624e28ae2d94aa14e3ac8ce7c323cb", "sha256": "5cfee5a0720c33c770fd517e63e56464139c9a4177160c7d29cfe09d8a7c3ba7"}, "downloads": -1, "filename": "azure_identity-1.4.0b2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fc624e28ae2d94aa14e3ac8ce7c323cb", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 66068, "upload_time": "2020-04-07T15:06:10", "upload_time_iso_8601": "2020-04-07T15:06:10.731306Z", "url": "https://files.pythonhosted.org/packages/b7/bb/3a4db636b3cd01ba1970ba2e96ef70e99257be3aedfa61e39c1da7feab23/azure_identity-1.4.0b2-py2.py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "12b7b57f41b6e76786c5659d53e84853", "sha256": "b01d35b102b4229b2adcc7321d7306c1a657178cc894f47d55e00a9548e8a7cb"}, "downloads": -1, "filename": "azure-identity-1.4.0b2.zip", "has_sig": false, "md5_digest": "12b7b57f41b6e76786c5659d53e84853", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 147845, "upload_time": "2020-04-07T15:06:12", "upload_time_iso_8601": "2020-04-07T15:06:12.209187Z", "url": "https://files.pythonhosted.org/packages/fe/15/5577ec5ff8efb7fe2970c84c6c98b1b6093dbe7a6969163495d142890cfe/azure-identity-1.4.0b2.zip"}]}, "urls": [{"comment_text": "", "digests": {"md5": "46e0bca7ee564ceb2ccd79c0dbc0b316", "sha256": "3775d5d244d65bde19d9ba76b95b1c82484a7a09f8b13140b106bc84df601d35"}, "downloads": -1, "filename": "azure_identity-1.3.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "46e0bca7ee564ceb2ccd79c0dbc0b316", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 61574, "upload_time": "2020-04-01T21:08:55", "upload_time_iso_8601": "2020-04-01T21:08:55.711570Z", "url": "https://files.pythonhosted.org/packages/dc/55/9b89cd436c145bc11cfb5ebabf2d4a7468a996104a2c26f2674eb3a7bb05/azure_identity-1.3.1-py2.py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "ec7c9c348ec6262947c5de6d3569df50", "sha256": "5a59c36b4b05bdaec455c390feda71b6495fc828246593404351b9a41c2e877a"}, "downloads": -1, "filename": "azure-identity-1.3.1.zip", "has_sig": false, "md5_digest": "ec7c9c348ec6262947c5de6d3569df50", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 133375, "upload_time": "2020-04-01T21:08:58", "upload_time_iso_8601": "2020-04-01T21:08:58.104173Z", "url": "https://files.pythonhosted.org/packages/fe/f0/e43371a952774eb2c18dc64ba6cb824bcddebc496aea58514915276e9c41/azure-identity-1.3.1.zip"}]}