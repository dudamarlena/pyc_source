{"info": {"author": "Kaggle", "author_email": "support@kaggle.com", "bugtrack_url": null, "classifiers": [], "description": "# [<img src=\"https://kaggle.com/static/images/site-logo.png\" height=\"50\" style=\"margin-bottom:-15px\" />](https://kaggle.com) Environments\n\n```bash\npip install kaggle-environments\n```\n\n# TLDR;\n\n```python\nfrom kaggle_environments import make\n\n# Setup a tictactoe environment.\nenv = make(\"tictactoe\")\n\n# Basic agent which marks the first available cell.\ndef my_agent(obs):\n  return [c for c in range(len(obs.board)) if obs.board[c] == 0][0]\n\n# Run the basic agent against a default agent which chooses a \"random\" move.\nenv.run([my_agent, \"random\"])\n\n# Render an html ipython replay of the tictactoe game.\nenv.render(mode=\"ipython\")\n```\n\n# Overview\n\nKaggle Environments was created to evaluate episodes. While other libraries have set interface precedents (such as Open.ai Gym), the emphasis of this library focuses on:\n\n1. Episode evaluation (compared to training agents).\n2. Configurable environment/agent lifecycles.\n3. Simplified agent and environment creation.\n4. Cross language compatible/transpilable syntax/interfaces.\n\n## Help Documentation\n\n```python\n# Additional documentation (especially interfaces) can be found on all public functions:\nfrom kaggle_environments import make\nhelp(make)\nenv = make(\"tictactoe\")\ndir(env)\nhelp(env.reset)\n```\n\n# Agents\n\n> A function which given an observation generates an action.\n\n## Writing\n\nAgent functions can have observation and configuration parameters and must return a valid action. Details about the observation, configuration, and actions can seen by viewing the specification.\n\n```python\nfrom kaggle_simulations import make\nenv = make(\"connectx\", {rows: 10, columns: 8, inarow: 5})\n\ndef agent(observation, configration):\n  print(observation) # {board: [...], mark: 1}\n  print(configuration) # {rows: 10, columns: 8, inarow: 5}\n  return 3 # Action: always place a mark in the 3rd column.\n\n# Run an episode using the agent above vs the default random agent.\nenv.run([agent, \"random\"])\n\n# Print schemas from the specification.\nprint(env.specification.observation)\nprint(env.specification.configuration)\nprint(env.specification.action)\n```\n\n## Loading Agents\n\nAgents are always functions, however there are some shorthand syntax options to make generating/using them easier.\n\n```python\n# Agent def accepting an observation and returning an action.\ndef agent1(obs):\n  return [c for c in range(len(obs.board)) if obs.board[c] == 0][0]\n\n# Load a default agent called \"random\".\nagent2 = \"random\"\n\n# Load an agent from source.\nagent3 = \"\"\"\ndef act(obs):\n  return [c for c in range(len(obs.board)) if obs.board[c] == 0][0]\n\"\"\"\n\n# Load an agent from a file.\nagent4 = \"C:\\path\\file.py\"\n\n# Return a fixed action.\nagent5 = 3\n\n# Return an action from a url.\nagent6 = \"http://localhost:8000/run/agent\"\n```\n\n## Default Agents\n\nMost environments contain default agents to play against. To see the list of available agents for a specific environment run:\n\n```python\nfrom kaggle_simulations import make\nenv = make(\"tictactoe\")\n\n# The list of available default agents.\nprint(*env.agents)\n\n# Run random agent vs reaction agent.\nenv.run([\"random\", \"reaction\"])\n```\n\n## Training\n\nOpen AI Gym interface is used to assist with training agents. The `None` keyword is used below to denote which agent to train (i.e. train as first or second player of connectx).\n\n```python\nfrom kaggle_environments import make\n\nenv = make(\"connectx\", debug=True)\n\n# Training agent in first position (player 1) against the default random agent.\ntrainer = env.train([None, \"random\"])\n\nobs = trainer.reset()\nfor _ in range(100):\n    env.render()\n    action = 0 # Action for the agent being trained.\n    obs, reward, done, info = trainer.step(action)\n    if done:\n        obs = trainer.reset()\n```\n\n## Debugging\n\nThere are 3 types of errors which can occur from agent execution:\n\n1. **Timeout** - the agent runtime exceeded the allowed limit. There are 2 timeouts:\n   1. `agentTimeout` - Used for initialization of an agent on first \"act\".\n   2. `actTimeout` - Used for obtaining an action.\n2. **Error** - the agent raised and error during execution.\n3. **Invalid** - the agent action response didn't match the action specification or the environment deemed it invalid (i.e. playing twice in the same cell in tictactoe).\n\nTo help debug your agent and why it threw the errors above, add the `debug` flag when setting up the environment.\n\n```python\nfrom kaggle_simulations import make\n\ndef agent():\n  return \"Something Bad\"\n\nenv = make(\"tictactoe\", debug=True)\n\nenv.run([agent, \"random\"])\n# Prints: \"Invalid Action: Something Bad\"\n```\n\n# Environments\n\n> A function which given a state and agent actions generates a new state.\n\n| Name      | Description                          | Make                      |\n| --------- | ------------------------------------ | ------------------------- |\n| connectx  | Connect 4 in a row but configurable. | `env = make(\"connectx\")`  |\n| tictactoe | Classic Tic Tac Toe                  | `env = make(\"tictactoe\")` |\n| identity  | For debugging, action is the reward. | `env = make(\"identity\")`  |\n\n## Making\n\nAn environment instance can be made from an existing specification (such as those listed above).\n\n```python\nfrom kaggle_environments import make\n\n# Create an environment instance.\nenv = make(\n  # Specification or name to registered specification.\n  \"connectx\",\n\n  # Override default and environment configuration.\n  configuration={\"rows\": 9, \"columns\": 10},\n\n  # Initialize the environment from a prior state (episode resume).\n  steps=[],\n\n  # Enable verbose logging.\n  debug=True\n)\n```\n\n## Configuration\n\nThere are two types of configuration: Defaults applying to every environment and those specific to the environment. The following is a list of the default configuration:\n\n| Name         | Description                                                     |\n| ------------ | --------------------------------------------------------------- |\n| episodeSteps | Maximum number of steps in the episode.                         |\n| agentExec    | How the agent is executed alongside the envionment.             |\n| agentTimeout | Maximum runtime (seconds) to initialize an agent.               |\n| actTimeout   | Maximum runtime (seconds) to obtain an action from an agent.    |\n| runTimeout   | Maximum runtime (seconds) of an episode (not necessarily DONE). |\n\n```python\nenv = make(\"connectx\", configuration={\n  \"columns\": 19, # Specific to ConnectX.\n  \"actTimeout\": 10,\n  \"agentExec\": \"LOCAL\"\n})\n```\n\n## Resetting\n\nEnvironments are reset by default after \"make\" (unless starting steps are passed in) as well as when calling \"run\". Reset can be called at anytime to clear the environment.\n\n```python\nnum_agents = 2\nreset_state = env.reset(num_agents)\n```\n\n## Running\n\nExecute an episode against the environment using the passed in agents until they are no longer running (i.e. status != ACTIVE).\n\n```python\nsteps = env.run([agent1, agent2])\nprint(steps)\n```\n\n## Evaluating\n\nEvaluation is used to run an episode (environment + agents) multiple times and just return the rewards.\n\n```python\nfrom kaggle_simulations import evaluate\n\n# Same definitions as \"make\" above.\nenvrionment = \"connectx\"\nconfiguration = {rows: 10, columns: 8, inarow: 5}\nsteps = []\ndebug = False\n\n# Which agents to run repeatedly.  Same as env.run(agents)\nagents = [\"random\", agent1]\n\n# How many times to run them.\nnum_episodes = 10\n\nrewards = evaluate(environment, agents, configuration, steps, num_episodes, debug)\n```\n\n## Stepping\n\nRunning above essentially just steps until no agent is still active. To execute a singular game loop, pass in actions directly for each agent. Note that this is normally used for training agents (most useful in a single agent setup such as using the gym interface).\n\n```python\nagent1_action = agent1(env.state[0].observation)\nagent2_action = agent2(env.state[1].observation)\nstate = env.step(agent1_action, agent2_action)\n```\n\n## Playing\n\nA few environments offer an interactive play against agents within jupyter notebooks. An example of this is using connectx:\n\n```python\nfrom kaggle_simulations import make\n\nenv = make(\"connectx\")\n# None indicates which agent will be manually played.\nenv.play([None, \"random\"])\n```\n\n## Rendering\n\nThe following rendering modes are supported:\n\n- json - Same as doing a json dump of `env.toJSON()`\n- ansi - Ascii character representation of the environment.\n- human - ansi just printed to stdout\n- html - HTML player representation of the environment.\n- ipython - html just printed to the output of a ipython notebook.\n\n```python\nout = env.render(mode=\"ansi\")\nprint(out)\n```\n\n# Command Line\n\n```sh\n> python main.py -h\n```\n\n## List Registered Environments\n\n```sh\n> python main.py list\n```\n\n## Evaluate Episode Rewards\n\n```sh\npython main.py evaluate --environment tictactoe --agents random random --episodes 10\n```\n\n## Run an Episode\n\n```sh\n> python main.py run --environment tictactoe --agents random /pathtomy/agent.py --debug True\n```\n\n## Load an Episode\n\nThis is useful when converting an episode json output into html.\n\n```sh\npython main.py load --environment tictactoe --steps [...] --render '{\"mode\": \"html\"}'\n```\n\n# HTTP Server\n\nThe HTTP server contains the same interface/actions as the CLI above merging both POST body and GET params.\n\n## Setup\n\n```bash\npython main.py http-server --port=8012 --host=0.0.0.0\n```\n\n## Adding Middleware\n\n```python\n# middleware.py\nimport time\n\ndef request(req):\n    time.sleep(30)\n    req.agents = [\"random\", \"random\"]\n    return req\n\ndef response(req, resp):\n    time.sleep(10)\n    return resp\n```\n\n```bash\npython3 main.py http-server --middleware=/path/to/middleware.py\n```\n\n### Running Agents on Separate Servers\n\n```python\n# How to run agent on a separate server.\nimport requests\nimport json\n\npath_to_agent1 = \"/home/ajeffries/git/playground/agent1.py\"\npath_to_agent2 = \"/home/ajeffries/git/playground/agent2.py\"\n\nagent1_url = f\"http://localhost:5001?agents[]={path_to_agent1}\"\nagent2_url = f\"http://localhost:5002?agents[]={path_to_agent2}\"\n\nbody = {\n    \"action\": \"run\",\n    \"environment\": \"tictactoe\",\n    \"agents\": [agent1_url, agent2_url]\n}\nresp = requests.post(url=\"http://localhost:5000\", data=json.dumps(body)).json()\n\n# Inflate the response replay to visualize.\nfrom kaggle_environments import make\nenv = make(\"tictactoe\", steps=resp[\"steps\"], debug=True)\nenv.render(mode=\"ipython\")\nprint(resp)\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Kaggle/kaggle-environments", "keywords": "Kaggle", "license": "Apache 2.0", "maintainer": "", "maintainer_email": "", "name": "kaggle-environments", "package_url": "https://pypi.org/project/kaggle-environments/", "platform": "", "project_url": "https://pypi.org/project/kaggle-environments/", "project_urls": {"Homepage": "https://github.com/Kaggle/kaggle-environments"}, "release_url": "https://pypi.org/project/kaggle-environments/0.2.1/", "requires_dist": ["jsonschema (>=3.0.1)"], "requires_python": ">=3.6", "summary": "Kaggle Environments", "version": "0.2.1"}, "last_serial": 6988021, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "f6418804ee429cb1e931a62d8ec7e8d3", "sha256": "b81bee1259095e2f0e05460fb660666cbeb40743e01990aa33d04711b71525cf"}, "downloads": -1, "filename": "kaggle-environments-0.0.1.tar.gz", "has_sig": false, "md5_digest": "f6418804ee429cb1e931a62d8ec7e8d3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1283, "upload_time": "2019-12-17T21:04:44", "upload_time_iso_8601": "2019-12-17T21:04:44.033237Z", "url": "https://files.pythonhosted.org/packages/96/ba/99456d7d7b1a00ca02edc961647216abae27b9a2dc226f6b95f2e8faf3a9/kaggle-environments-0.0.1.tar.gz"}], "0.1.0": [{"comment_text": "", "digests": {"md5": "3623818cbb662f829f7d859e15a2b688", "sha256": "8f28a9dfbfe27fb66563be3a5c156e8eb25de1cfa25baef1143c652e0d752323"}, "downloads": -1, "filename": "kaggle_environments-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "3623818cbb662f829f7d859e15a2b688", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 17400, "upload_time": "2020-01-03T05:35:55", "upload_time_iso_8601": "2020-01-03T05:35:55.078209Z", "url": "https://files.pythonhosted.org/packages/eb/47/94ecd63f7b743fd794d9e12418203d512662ce8ef2b501e6ada1bead5d90/kaggle_environments-0.1.0-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "5c25326b2209eb96cd6d7e944b50303e", "sha256": "e9f4f021c0d302ce5e3ed7d538cfc3153c440a985e3e5bd74434ab7995bffd55"}, "downloads": -1, "filename": "kaggle-environments-0.1.0.tar.gz", "has_sig": false, "md5_digest": "5c25326b2209eb96cd6d7e944b50303e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 10644, "upload_time": "2020-01-03T05:35:56", "upload_time_iso_8601": "2020-01-03T05:35:56.356759Z", "url": "https://files.pythonhosted.org/packages/c8/15/f4081a92e3eff707122728631ed05ffd1e0d315e588be10bec8e61a2b013/kaggle-environments-0.1.0.tar.gz"}], "0.1.1": [{"comment_text": "", "digests": {"md5": "8f174b1a17ebe375cf4febf8d4d1c632", "sha256": "aac07934df85f4ca5e33bd81e2b0a1e0f256e3834317a5a3864eae2734fd430f"}, "downloads": -1, "filename": "kaggle_environments-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "8f174b1a17ebe375cf4febf8d4d1c632", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 17397, "upload_time": "2020-01-03T06:05:50", "upload_time_iso_8601": "2020-01-03T06:05:50.251363Z", "url": "https://files.pythonhosted.org/packages/cc/04/384c6c366c977f5e38a964fbb7e63b524cd9e69dbc7a6881dbc81fc3cec3/kaggle_environments-0.1.1-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "082d8a39c17cb0e8ba30f9994cbc8226", "sha256": "8913d41192459370738f5e33fdaa8e3aa6bf43a6d959e7c672c46a22653deae9"}, "downloads": -1, "filename": "kaggle-environments-0.1.1.tar.gz", "has_sig": false, "md5_digest": "082d8a39c17cb0e8ba30f9994cbc8226", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10644, "upload_time": "2020-01-03T06:05:51", "upload_time_iso_8601": "2020-01-03T06:05:51.589999Z", "url": "https://files.pythonhosted.org/packages/bf/d6/4fe528243cac841f2c96174b29bcb7492fd91fc7b0f91a81cf92337f355a/kaggle-environments-0.1.1.tar.gz"}], "0.1.2": [{"comment_text": "", "digests": {"md5": "14d9ac2ef02c633797b55ebe498a24cb", "sha256": "df76d79dc30d2c12f2313b12bf1c26faec5748fe53e18803d728c4edf98cadc8"}, "downloads": -1, "filename": "kaggle_environments-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "14d9ac2ef02c633797b55ebe498a24cb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 17399, "upload_time": "2020-01-03T06:15:13", "upload_time_iso_8601": "2020-01-03T06:15:13.854779Z", "url": "https://files.pythonhosted.org/packages/01/4d/83bdbebe6a0978d6893b9a41c0ad5c40c65c0a04eb6c01c6afeaa87ea295/kaggle_environments-0.1.2-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "52d28ce1b8aa52474754d70ee472903e", "sha256": "85c4f9cb614e7b0d161c3a34873816470df6c3d5aa2dbcf1eb34482bb754fc1a"}, "downloads": -1, "filename": "kaggle-environments-0.1.2.tar.gz", "has_sig": false, "md5_digest": "52d28ce1b8aa52474754d70ee472903e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10657, "upload_time": "2020-01-03T06:15:15", "upload_time_iso_8601": "2020-01-03T06:15:15.213318Z", "url": "https://files.pythonhosted.org/packages/d0/39/c32225e2a358e68ff98f6cc597d9417b11d31fd2785b8ab3ea6b21a034c5/kaggle-environments-0.1.2.tar.gz"}], "0.1.3": [{"comment_text": "", "digests": {"md5": "19e097e88adbae1e5042e11337a70523", "sha256": "73b75caef45603de6ae055ad51496c1d9b94b04f81eb67ee89f7d59072cf0f88"}, "downloads": -1, "filename": "kaggle_environments-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "19e097e88adbae1e5042e11337a70523", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 31399, "upload_time": "2020-01-03T06:27:57", "upload_time_iso_8601": "2020-01-03T06:27:57.831515Z", "url": "https://files.pythonhosted.org/packages/d3/d9/dbbd95b343a62c3218941521f5adcc3cd2118548fdc4a872541ed0697388/kaggle_environments-0.1.3-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "ec599312f8f0a0236a000a2708b63d8e", "sha256": "a87666b4b7eb80b923096307147ce69bacf8eb70d8da07ec0eaa475dfdcf9a10"}, "downloads": -1, "filename": "kaggle-environments-0.1.3.tar.gz", "has_sig": false, "md5_digest": "ec599312f8f0a0236a000a2708b63d8e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 24210, "upload_time": "2020-01-03T06:27:59", "upload_time_iso_8601": "2020-01-03T06:27:59.534820Z", "url": "https://files.pythonhosted.org/packages/4e/b7/e0d654dae8cb96cd33288d2130b09ec85185a9efe580538f5a3b95c315d0/kaggle-environments-0.1.3.tar.gz"}], "0.1.4": [{"comment_text": "", "digests": {"md5": "cd3e999e7d5e6626bad8de6ee99ab7ca", "sha256": "40d109c5e7cc0caee6736768d7a8bf0a109fc2f66e536702a015921a5014993f"}, "downloads": -1, "filename": "kaggle_environments-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "cd3e999e7d5e6626bad8de6ee99ab7ca", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 39497, "upload_time": "2020-01-03T19:40:58", "upload_time_iso_8601": "2020-01-03T19:40:58.877661Z", "url": "https://files.pythonhosted.org/packages/f4/93/021043ff2a4d76c7600f5687861ef222990748d1214f363bcee7ab102bce/kaggle_environments-0.1.4-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "11b2415822e9b38cb5f67478fd04359d", "sha256": "22657f7c701161851a4029c6b14129497de8e50f9275633a4face8b1c256118b"}, "downloads": -1, "filename": "kaggle-environments-0.1.4.tar.gz", "has_sig": false, "md5_digest": "11b2415822e9b38cb5f67478fd04359d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 28218, "upload_time": "2020-01-03T19:41:00", "upload_time_iso_8601": "2020-01-03T19:41:00.597741Z", "url": "https://files.pythonhosted.org/packages/c8/ec/4f33c9448cd1e3c2985a1767707e810717ee42941ffcd574267217441385/kaggle-environments-0.1.4.tar.gz"}], "0.1.5": [{"comment_text": "", "digests": {"md5": "1164be95fa86c61067ec5aae250e95be", "sha256": "c7eeac8e418146b982a0d5f2714e8c15c8e85d7c5098a67f782c1540c8680f8c"}, "downloads": -1, "filename": "kaggle_environments-0.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "1164be95fa86c61067ec5aae250e95be", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 40535, "upload_time": "2020-01-09T23:55:12", "upload_time_iso_8601": "2020-01-09T23:55:12.368761Z", "url": "https://files.pythonhosted.org/packages/ef/90/3a8816099e2ca853e1b04efcd0c98fc69ca48d2204ab304a367448e80460/kaggle_environments-0.1.5-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "23c7f2f95ef1264a7190feb8a61bda1c", "sha256": "f4aeb486f449545ab422e36a642e2cae968c8a372c56b1b5a6e866c356403ca7"}, "downloads": -1, "filename": "kaggle-environments-0.1.5.tar.gz", "has_sig": false, "md5_digest": "23c7f2f95ef1264a7190feb8a61bda1c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 29206, "upload_time": "2020-01-09T23:55:15", "upload_time_iso_8601": "2020-01-09T23:55:15.719752Z", "url": "https://files.pythonhosted.org/packages/1d/55/8f72312f4fbd7bba695770313492255551cd45e23e291c22087d4aac62a0/kaggle-environments-0.1.5.tar.gz"}], "0.1.6": [{"comment_text": "", "digests": {"md5": "6050118b8ebc10c6ef46887adab042f7", "sha256": "6a35b760d8d83da488dbd614abcb7fe5f9f8157fbdab46edebd99c0495af036f"}, "downloads": -1, "filename": "kaggle_environments-0.1.6-py3-none-any.whl", "has_sig": false, "md5_digest": "6050118b8ebc10c6ef46887adab042f7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 41714, "upload_time": "2020-01-10T23:11:38", "upload_time_iso_8601": "2020-01-10T23:11:38.184880Z", "url": "https://files.pythonhosted.org/packages/7c/d7/0ea53627a17444f1ea5d5d80bdd20d34e3b1ec2c18e2b34f41196cf020a6/kaggle_environments-0.1.6-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "3075e217cc0b14392ff2882fe1df0ead", "sha256": "8eb040b0f064be0184f6e9dfa3979cd692a7443cc4d56bb62417afdedd861f83"}, "downloads": -1, "filename": "kaggle-environments-0.1.6.tar.gz", "has_sig": false, "md5_digest": "3075e217cc0b14392ff2882fe1df0ead", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 30369, "upload_time": "2020-01-10T23:11:39", "upload_time_iso_8601": "2020-01-10T23:11:39.648953Z", "url": "https://files.pythonhosted.org/packages/b7/f8/5aec30e60fa8a64ca510af756cf5647874fb8b572a2985fbe70f77e17dc3/kaggle-environments-0.1.6.tar.gz"}], "0.2.0": [{"comment_text": "", "digests": {"md5": "4c9807cd6939aab736bd8ac4e9c4eedf", "sha256": "9c2d4a10ccc3679742854f182135ca84c8679c3c4e93da20a84da08850021ac2"}, "downloads": -1, "filename": "kaggle_environments-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4c9807cd6939aab736bd8ac4e9c4eedf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 73466, "upload_time": "2020-04-07T19:36:36", "upload_time_iso_8601": "2020-04-07T19:36:36.143801Z", "url": "https://files.pythonhosted.org/packages/ca/df/745ca018c740f1e93d44e42888a7c9d5c9d788ab8a1bda5bc4fe86a47979/kaggle_environments-0.2.0-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "a668ae16047e74e24851311000a84a39", "sha256": "7b4272d6f5785e89600539e8cd9f82539673f7f34837b0fc9c94c1745b01bcf1"}, "downloads": -1, "filename": "kaggle-environments-0.2.0.tar.gz", "has_sig": false, "md5_digest": "a668ae16047e74e24851311000a84a39", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 64004, "upload_time": "2020-04-07T19:36:37", "upload_time_iso_8601": "2020-04-07T19:36:37.701832Z", "url": "https://files.pythonhosted.org/packages/fc/45/ef2d59e9f29dab66a6f60098ad60a19d8f3e30fe903c2f17a6dd9619e0ea/kaggle-environments-0.2.0.tar.gz"}], "0.2.1": [{"comment_text": "", "digests": {"md5": "5635a41ffd2b35d320da26ab01b7067c", "sha256": "dac2a3a8ad4d0ce1228b2b1ce0bd6e4d03ca0ad35767da4ac29cccec960fefcf"}, "downloads": -1, "filename": "kaggle_environments-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5635a41ffd2b35d320da26ab01b7067c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 71335, "upload_time": "2020-04-07T23:10:13", "upload_time_iso_8601": "2020-04-07T23:10:13.960145Z", "url": "https://files.pythonhosted.org/packages/f6/7d/94a6ecd44247f0eb49d2bb6317528eaef5536a5398b84717fd095a33641b/kaggle_environments-0.2.1-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "e3f17f00d6e192e687f957d65990ab91", "sha256": "d804d55a77a21de9fffc4a07524caf6d9369d5cb90644f0f990f3531caac2bcd"}, "downloads": -1, "filename": "kaggle-environments-0.2.1.tar.gz", "has_sig": false, "md5_digest": "e3f17f00d6e192e687f957d65990ab91", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 64047, "upload_time": "2020-04-07T23:10:15", "upload_time_iso_8601": "2020-04-07T23:10:15.810386Z", "url": "https://files.pythonhosted.org/packages/b6/0c/16a11cb9c2e5dbd3a35e50c030f8fa5c120bb49d9e9604c9d2f8f23d1ae7/kaggle-environments-0.2.1.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "5635a41ffd2b35d320da26ab01b7067c", "sha256": "dac2a3a8ad4d0ce1228b2b1ce0bd6e4d03ca0ad35767da4ac29cccec960fefcf"}, "downloads": -1, "filename": "kaggle_environments-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5635a41ffd2b35d320da26ab01b7067c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 71335, "upload_time": "2020-04-07T23:10:13", "upload_time_iso_8601": "2020-04-07T23:10:13.960145Z", "url": "https://files.pythonhosted.org/packages/f6/7d/94a6ecd44247f0eb49d2bb6317528eaef5536a5398b84717fd095a33641b/kaggle_environments-0.2.1-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "e3f17f00d6e192e687f957d65990ab91", "sha256": "d804d55a77a21de9fffc4a07524caf6d9369d5cb90644f0f990f3531caac2bcd"}, "downloads": -1, "filename": "kaggle-environments-0.2.1.tar.gz", "has_sig": false, "md5_digest": "e3f17f00d6e192e687f957d65990ab91", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 64047, "upload_time": "2020-04-07T23:10:15", "upload_time_iso_8601": "2020-04-07T23:10:15.810386Z", "url": "https://files.pythonhosted.org/packages/b6/0c/16a11cb9c2e5dbd3a35e50c030f8fa5c120bb49d9e9604c9d2f8f23d1ae7/kaggle-environments-0.2.1.tar.gz"}]}