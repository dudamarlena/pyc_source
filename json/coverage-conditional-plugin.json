{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# coverage-conditional-plugin\n\n[![wemake.services](https://img.shields.io/badge/%20-wemake.services-green.svg?label=%20&logo=data%3Aimage%2Fpng%3Bbase64%2CiVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAMAAAAoLQ9TAAAABGdBTUEAALGPC%2FxhBQAAAAFzUkdCAK7OHOkAAAAbUExURQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP%2F%2F%2F5TvxDIAAAAIdFJOUwAjRA8xXANAL%2Bv0SAAAADNJREFUGNNjYCAIOJjRBdBFWMkVQeGzcHAwksJnAPPZGOGAASzPzAEHEGVsLExQwE7YswCb7AFZSF3bbAAAAABJRU5ErkJggg%3D%3D)](https://wemake.services)\n[![Build Status](https://travis-ci.com/wemake-services/coverage-conditional-plugin.svg?branch=master)](https://travis-ci.com/wemake-services/coverage-conditional-plugin)\n[![Python Version](https://img.shields.io/pypi/pyversions/coverage-conditional-plugin.svg)](https://pypi.org/project/coverage-conditional-plugin/)\n[![wemake-python-styleguide](https://img.shields.io/badge/style-wemake-000000.svg)](https://github.com/wemake-services/wemake-python-styleguide)\n\nConditional coverage based on any rules you define!\n\nSome project have different parts that relies on different environments:\n\n- Python version, some code is only executed on specific versions and ignored on others\n- OS version, some code might be Windows, Mac, or Linux only\n- External packages, some code is only executed when some 3rd party package is installed\n\nCurrent best practice is to use `# pragma: no cover` for this places in our project.\nThis project allows to use configurable pragmas \nthat include code to the coverage if some condition evaluates to true, \nand fallback to ignoring this code when condition is false.\n\n\n## Installation\n\n```bash\npip install coverage-conditional-plugin\n```\n\nThen you will need to add to your `setup.cfg` or `.coveragerc` file \nsome extra configuration:\n\n```ini\n[coverage:run]\n# Here we specify plugins for coverage to be used:\nplugins =\n  coverage_conditional_plugin\n\n[coverage:coverage_conditional_plugin]\n# Here we specify our pragma rules:\nrules =\n  \"sys_version_info >= (3, 8)\": py-gte-38\n  \"is_installed('mypy')\": has-mypy\n\n```\n\nAdapt rules to suit your needs!\n\n\n## Example\n\nImagine that we have this code:\n\n```python\ntry:  # pragma: has-django\n    import django\nexcept ImportError:  # pragma: has-no-django\n    django = None\n\ndef run_if_django_is_installed():\n    if django is not None:  # pragma: has-django\n        ...\n```\n\nAnd here's the configuration you might use:\n\n```ini\n[coverage:coverage_conditional_plugin]\nrules =\n  \"is_installed('django')\": has-django\n  \"not is_installed('django')\": has-no-django\n\n```\n\nWhen running tests with and without `django` installed \nyou will have `100%` coverage in both cases.\n\nBut, different lines will be included. \nWith `django` installed it will include \nboth `try:` and `if django is not None:` conditions.\n\nWhen running without `django` installed,\nit will include `except ImportError:` line.\n\n\n## Writting pragma rules\n\nFormat for pragma rules is: \n\n```\n\"pragma-condition\": pragma-name\n```\n\nCode inside `\"pragma-condition\"` is evaluted with `eval`.\nMake sure that the input you pass there is trusted!\n`\"pragma-condition\"` must return `bool` value after evaluation.\n\nWe also provide a bunch of helpers to make writing rules easier:\n\n- `sys_version_info` is the same as [`sys.version_info`](https://docs.python.org/3/library/sys.html#sys.version_info)\n- `os_name` is the same as [`os.name`](https://docs.python.org/3/library/os.html#os.name)\n- `os_environ` is the same as [`os.environ`](https://docs.python.org/3/library/os.html#os.environ)\n- `platform_system` is the same as [`platform.system()`](https://docs.python.org/3/library/platform.html#platform.system)\n- `platform_release` is the same as [`platform.release()`](https://docs.python.org/3/library/platform.html#platform.release)\n- `is_installed` is our custom function that tries to import the passed string, returns `bool` value\n- `package_version` is our custom function that tries to get package version from `pkg_resources` and returns its [parsed version](https://packaging.pypa.io/en/latest/version/#packaging.version.parse)\n\n\n## License\n\n[MIT](https://github.com/wemake.services/coverage-conditional-plugin/blob/master/LICENSE)\n\n\n## Credits\n\nThis project was generated with [`wemake-python-package`](https://github.com/wemake-services/wemake-python-package). Current template version is: [a61725009d8399ae77376b5ad9de354214bc1159](https://github.com/wemake-services/wemake-python-package/tree/a61725009d8399ae77376b5ad9de354214bc1159). See what is [updated](https://github.com/wemake-services/wemake-python-package/compare/a61725009d8399ae77376b5ad9de354214bc1159...master) since then.\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sobolevn/safe-assert", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "coverage-conditional-plugin", "package_url": "https://pypi.org/project/coverage-conditional-plugin/", "platform": "", "project_url": "https://pypi.org/project/coverage-conditional-plugin/", "project_urls": {"Homepage": "https://github.com/sobolevn/safe-assert", "Repository": "https://github.com/sobolevn/safe-assert"}, "release_url": "https://pypi.org/project/coverage-conditional-plugin/0.1.0/", "requires_dist": ["coverage (>=5.0,<6.0)"], "requires_python": ">=3.6,<4.0", "summary": "Conditional coverage based on any rules you define!", "version": "0.1.0"}, "last_serial": 6577457, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "4204258ca39a10cb07b2cabaf74d3542", "sha256": "7e8f0ce79aeb06ca611244f3f379afcb52d972f6bb8911029475477db8cc95c6"}, "downloads": -1, "filename": "coverage_conditional_plugin-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4204258ca39a10cb07b2cabaf74d3542", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 5731, "upload_time": "2020-02-05T18:17:59", "upload_time_iso_8601": "2020-02-05T18:17:59.166598Z", "url": "https://files.pythonhosted.org/packages/10/e9/f0aed456f3c12d396fb3645c9411e0de8cbb461e21e93c65a57954a335c5/coverage_conditional_plugin-0.1.0-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "3bb62b42105388870c246f918f103527", "sha256": "9941bf2005e745190d24a6213ad681cb8884451192c668b4841b00cdc76c5f6e"}, "downloads": -1, "filename": "coverage-conditional-plugin-0.1.0.tar.gz", "has_sig": false, "md5_digest": "3bb62b42105388870c246f918f103527", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 5615, "upload_time": "2020-02-05T18:17:56", "upload_time_iso_8601": "2020-02-05T18:17:56.558001Z", "url": "https://files.pythonhosted.org/packages/a3/8b/981ad2050348a6a31cb90595a671e009c9575221ec6e8a7dedcccef3f92e/coverage-conditional-plugin-0.1.0.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "4204258ca39a10cb07b2cabaf74d3542", "sha256": "7e8f0ce79aeb06ca611244f3f379afcb52d972f6bb8911029475477db8cc95c6"}, "downloads": -1, "filename": "coverage_conditional_plugin-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4204258ca39a10cb07b2cabaf74d3542", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 5731, "upload_time": "2020-02-05T18:17:59", "upload_time_iso_8601": "2020-02-05T18:17:59.166598Z", "url": "https://files.pythonhosted.org/packages/10/e9/f0aed456f3c12d396fb3645c9411e0de8cbb461e21e93c65a57954a335c5/coverage_conditional_plugin-0.1.0-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "3bb62b42105388870c246f918f103527", "sha256": "9941bf2005e745190d24a6213ad681cb8884451192c668b4841b00cdc76c5f6e"}, "downloads": -1, "filename": "coverage-conditional-plugin-0.1.0.tar.gz", "has_sig": false, "md5_digest": "3bb62b42105388870c246f918f103527", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 5615, "upload_time": "2020-02-05T18:17:56", "upload_time_iso_8601": "2020-02-05T18:17:56.558001Z", "url": "https://files.pythonhosted.org/packages/a3/8b/981ad2050348a6a31cb90595a671e009c9575221ec6e8a7dedcccef3f92e/coverage-conditional-plugin-0.1.0.tar.gz"}]}