{"info": {"author": "Darryl Blackport", "author_email": "darryl.blackport@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "[![Build Status](https://travis-ci.org/dblackrun/nba-stats-tracking.svg?branch=master)](https://travis-ci.org/dblackrun/nba-stats-tracking)\n[![PyPI version](https://badge.fury.io/py/nba-stats-tracking.svg)](https://badge.fury.io/py/nba-stats-tracking)\n\nA package to work with NBA player tracking stats using the NBA Stats API.\n\n# Features\n* Works with both tracking stats and tracking shot stats\n* Aggregate stats across multiple seasons\n* Aggregate tracking shot stats across multiple filters (ex Wide Open and 18-22 seconds left on the shot clock)\n* Generate game logs\n\n# Installation\nrequires Python >=3.6\n```\npip install nba_stats_tracking\n```\n\n# Example Usage\n\n## Aggregating Multiple Tracking Shot Stat Filters and/or Seasons\n\n```\nfrom nba_stats_tracking import tracking_shots\n\nseasons = ['2013-14', '2014-15', '2015-16', '2016-17', '2017-18', '2018-19', '2019-20']\nseason_types = ['Regular Season', 'Playoffs']\ndef_distances = ['6+ Feet - Wide Open', '4-6 Feet - Open']\ngeneral_ranges = ['Catch and Shoot']\n\nstats, league_totals = tracking_shots.aggregate_full_season_tracking_shot_stats_for_seasons('player', seasons, season_types, close_def_dists=def_distances, general_ranges=general_ranges)\n\nfor stat in stats:\n    print(stat)\nprint(league_totals)\n```\n\n`tracking_shots.aggregate_full_season_tracking_shot_stats_for_seasons` takes 3 required args `entity_type`, `seasons` and `season_types`\n\nOptions for `entity_type` are 'player', 'team' or 'opponent'\n\n`seasons` is a list of seasons, format ex. '2018-19'\n\n`season_types` is a list of season types. Season types are 'Regular Season' and 'Playoffs'\n\nIt also takes optional kwargs for each tracking shot filter option. The default for each filter is all shots for that filter.\n\n```\nclose_def_dists - list, options are: '', '0-2 Feet - Very Tight','2-4 Feet - Tight','4-6 Feet - Open','6+ Feet - Wide Open'\nshot_clocks - list, options are: '', '24-22', '22-18 Very Early', '18-15 Early', '15-7 Average', '7-4 Late', '4-0 Very Late', 'ShotClock Off'\nshot_dists - list, options are: '', '>=10.0'\ntouch_times - list, options are: '', 'Touch < 2 Seconds', 'Touch 2-6 Seconds', 'Touch 6+ Seconds'\ndribble_ranges - list, options are: '', '0 Dribbles', '1 Dribble', '2 Dribbles', '3-6 Dribbles', '7+ Dribbles'\ngeneral_ranges - list, options are: 'Overall', 'Catch and Shoot', 'Pullups', 'Less Than 10 ft'\nperiods - list of ints\nlocation - string, 'Home' or 'Road'\n```\n\n## Generating Tracking Shot Game Logs\n\n```\nfrom nba_stats_tracking import tracking_shots\n\ndef_distances = ['6+ Feet - Wide Open', '4-6 Feet - Open']\ngeneral_ranges = ['Catch and Shoot']\ndate_from = '02/02/2020'\ndate_to = '02/03/2020'\n\ngame_logs = tracking_shots.generate_tracking_shot_game_logs('player', date_from, date_to, close_def_dists=def_distances, general_ranges=general_ranges)\nfor game_log in game_logs:\n    print(game_log)\n```\n\n`tracking_shots.generate_tracking_shot_game_logs` takes 3 required args `entity_type`, `date_from` and `date_to`\n\nOptions for `entity_type` are 'player', 'team' or 'opponent'\n\n`date_from` and `date_to` are strings formatted MM/DD/YYYY\n\nIt also takes optional kwargs for each tracking shot filter option the same way as above.\n\n## Aggregating Multiple Tracking Shot Stat Filters and Grouping by Season\n\n```\nfrom nba_stats_tracking import tracking_shots\n\nseasons = ['2013-14', '2014-15', '2015-16', '2016-17', '2017-18', '2018-19', '2019-20']\nseason_types = ['Regular Season']\ndef_distances = ['6+ Feet - Wide Open', '4-6 Feet - Open']\ngeneral_ranges = ['Catch and Shoot']\n\nstats = tracking_shots.get_tracking_shot_stats('player', seasons, season_types, close_def_dists=def_distances, general_ranges=general_ranges)\n\nfor stat in stats:\n    print(stat)\n```\n\n`tracking_shots.aggregate_full_season_tracking_shot_stats_for_seasons` takes 3 required args `entity_type`, `seasons` and `season_types`\n\nOptions for `entity_type` are 'player', 'team' or 'opponent'\n\n`seasons` is a list of seasons, format ex. '2018-19'\n\n`season_types` is a list of season types. Season types are 'Regular Season' and 'Playoffs'\n\nIt also takes optional kwargs for each tracking shot filter option the same way as above.\n\n## Aggregating Multiple Seasons of Tracking Stats\n\n```\nfrom nba_stats_tracking import tracking\n\nstat_measure = 'SpeedDistance'\nseasons = ['2018-19', '2019-20']\nseason_types = ['Regular Season']\nentity_type = 'player'\nstats, league_totals = tracking.aggregate_full_season_tracking_stats_for_seasons(stat_measure, seasons, season_types, entity_type)\n\nfor stat in stats:\n    print(stat)\n\nprint('-----------------------')\nprint(league_totals)\n```\n\n`tracking.aggregate_full_season_tracking_stats_for_seasons` takes 4 args `stat_measure`, `seasons`, `season_types` and `entity_type`\n\nOptions for `stat_measure` are 'Drives', 'Defense', 'CatchShoot', 'Passing', 'Possessions', 'PullUpShot', 'Rebounding', 'Efficiency', 'SpeedDistance', 'ElbowTouch', 'PostTouch', 'PaintTouch'\n\n`seasons` is a list of seasons, format ex. '2018-19'\n\n`season_types` is a list of season types. Season types are 'Regular Season' and 'Playoffs'\n\nOptions for `entity_type` are 'player' or 'team'\n\n## Generating Tracking Game Logs\n```\nfrom nba_stats_tracking import tracking\n\nstat_measure = 'CatchShoot'\nentity_type = 'player'\ndate_from = '02/02/2020'\ndate_to = '02/03/2020'\n\ngame_logs = tracking.generate_tracking_game_logs(stat_measure, entity_type, date_from, date_to)\nfor game_log in game_logs:\n    print(game_log)\n```\n\n`tracking.generate_tracking_game_logs` takes 4 args `stat_measure`, `entity_type`, `date_from` and `date_to`\n\nOptions for `stat_measure` are 'Drives', 'Defense', 'CatchShoot', 'Passing', 'Possessions', 'PullUpShot', 'Rebounding', 'Efficiency', 'SpeedDistance', 'ElbowTouch', 'PostTouch', 'PaintTouch'\n\nOptions for `entity_type` are 'player' or 'team'\n\n`date_from` and `date_to` are strings formatted MM/DD/YYYY\n\n## Get Opponent Tracking Stats For An Individual Team\n```\nfrom nba_stats_tracking import tracking\n\nstat_measure = 'CatchShoot'\nseasons = ['2019-20']\nseason_types = ['Regular Season']\nentity_type = 'team'\nopponent_team_id = 1610612738\n\n# stats will be each team's stats against opponent_team_id\n# league_totals will be aggregate opponent stats for opponents of opponent_team_id\nstats, league_totals = tracking.aggregate_full_season_tracking_stats_for_seasons(stat_measure, seasons, season_types, entity_type, opponent_team_id=opponent_team_id)\n\nfor stat in stats:\n    print(stat)\nprint(league_totals)\n```\n\nTo get opponent stats for all teams, just run this for each team id\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dblackrun/nba-stats-tracking", "keywords": "basketball,NBA,player tracking", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "nba-stats-tracking", "package_url": "https://pypi.org/project/nba-stats-tracking/", "platform": "", "project_url": "https://pypi.org/project/nba-stats-tracking/", "project_urls": {"Homepage": "https://github.com/dblackrun/nba-stats-tracking"}, "release_url": "https://pypi.org/project/nba-stats-tracking/0.0.4/", "requires_dist": ["requests", "python-dateutil"], "requires_python": "", "summary": "A package to work with NBA player tracking stats using the NBA Stats API", "version": "0.0.4"}, "last_serial": 6636659, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "496e4f0d793fe0a361132af9a5e6d107", "sha256": "009805a6f401c411702a98c8ae0e59d7257c697a9dd6b2db2f5a717728f56b95"}, "downloads": -1, "filename": "nba_stats_tracking-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "496e4f0d793fe0a361132af9a5e6d107", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10011, "upload_time": "2020-02-07T18:30:30", "upload_time_iso_8601": "2020-02-07T18:30:30.522360Z", "url": "https://files.pythonhosted.org/packages/1c/ee/98e8f18ac42c57f1a8243585f35e316e85628ac00f4b855006f14b1dd034/nba_stats_tracking-0.0.1-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "3e3777df9b8468136ac86de4cd39dfea", "sha256": "0c697b1a71cd004eefd1282ae2a4b57fc73cd34d7e871daa50b52dbf5e0a393f"}, "downloads": -1, "filename": "nba_stats_tracking-0.0.1.tar.gz", "has_sig": false, "md5_digest": "3e3777df9b8468136ac86de4cd39dfea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7521, "upload_time": "2020-02-07T18:30:32", "upload_time_iso_8601": "2020-02-07T18:30:32.767767Z", "url": "https://files.pythonhosted.org/packages/8c/90/1c5363773ea388b69eb381e9ca6d7dd383f321550d34cfd5708908817bf2/nba_stats_tracking-0.0.1.tar.gz"}], "0.0.2": [{"comment_text": "", "digests": {"md5": "8754de8a99f6596dfbe862b5e2bac6e5", "sha256": "1b6649370532b002f8c31608d4ff5e4db99f82234dd2d19cae3c331bb1936d59"}, "downloads": -1, "filename": "nba_stats_tracking-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "8754de8a99f6596dfbe862b5e2bac6e5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10400, "upload_time": "2020-02-10T17:15:24", "upload_time_iso_8601": "2020-02-10T17:15:24.573962Z", "url": "https://files.pythonhosted.org/packages/9d/6a/48ee66abc9b1961d8f02fd47525a1cf53bf97a9d2186d6545bd56e8674af/nba_stats_tracking-0.0.2-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "dfc10d59fb4b9814b50ef14376241d7f", "sha256": "66c553eb038cd98d34aa1da87fbe23fe97d3214f072482bce4fe26fbbb17d21b"}, "downloads": -1, "filename": "nba_stats_tracking-0.0.2.tar.gz", "has_sig": false, "md5_digest": "dfc10d59fb4b9814b50ef14376241d7f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8079, "upload_time": "2020-02-10T17:15:26", "upload_time_iso_8601": "2020-02-10T17:15:26.208823Z", "url": "https://files.pythonhosted.org/packages/e7/cd/765002f3c4ad725ea225ed49836f188ac3bf541af45c7623b3b3ed1eb9e0/nba_stats_tracking-0.0.2.tar.gz"}], "0.0.3": [{"comment_text": "", "digests": {"md5": "a8820bffee11cd17e9426aa5dfd4a784", "sha256": "f4b8332274a1e4fe726ee49a553190abd8daed076229c11cf7c62c73a9bce59a"}, "downloads": -1, "filename": "nba_stats_tracking-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "a8820bffee11cd17e9426aa5dfd4a784", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10531, "upload_time": "2020-02-10T20:56:29", "upload_time_iso_8601": "2020-02-10T20:56:29.169059Z", "url": "https://files.pythonhosted.org/packages/5f/a9/692700ffd56ea3d1acb5943b4fe442992674a7f4c451b66d044f83b4159c/nba_stats_tracking-0.0.3-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "cf4e8fbf8d7b6a59d0704eea443d29a8", "sha256": "74ea8320c3c138d506af70a3bb3c19bc28b060916618c5af35b747989b4dc603"}, "downloads": -1, "filename": "nba_stats_tracking-0.0.3.tar.gz", "has_sig": false, "md5_digest": "cf4e8fbf8d7b6a59d0704eea443d29a8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8294, "upload_time": "2020-02-10T20:56:30", "upload_time_iso_8601": "2020-02-10T20:56:30.718589Z", "url": "https://files.pythonhosted.org/packages/d1/81/e5cb64bf531b5f2dcb04f37c40a7b69cc55b1b6b1ec3ea2ab477c4a9383c/nba_stats_tracking-0.0.3.tar.gz"}], "0.0.4": [{"comment_text": "", "digests": {"md5": "750c7efd017f9f7e3d82b3f7280beb56", "sha256": "c7352a84b4983e489d56e847cf082b82b6c8ac9c4d25161f8d1a10bca8bd37ed"}, "downloads": -1, "filename": "nba_stats_tracking-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "750c7efd017f9f7e3d82b3f7280beb56", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10862, "upload_time": "2020-02-15T15:04:51", "upload_time_iso_8601": "2020-02-15T15:04:51.886918Z", "url": "https://files.pythonhosted.org/packages/de/30/118b1ab44d39fbe6126b33e930ef36916ca49acef281fbaf2c5f72ebfdb7/nba_stats_tracking-0.0.4-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "24760e6f692dc3f6caff1335cfae2b91", "sha256": "72550140fb11ffbe0f589801441ed59448cf3a14a63173915d26fb70d2094ff1"}, "downloads": -1, "filename": "nba_stats_tracking-0.0.4.tar.gz", "has_sig": false, "md5_digest": "24760e6f692dc3f6caff1335cfae2b91", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8774, "upload_time": "2020-02-15T15:04:53", "upload_time_iso_8601": "2020-02-15T15:04:53.092180Z", "url": "https://files.pythonhosted.org/packages/1f/e0/1c971fcfa8bad24b786d08970681c7ea2945c0e7e23eb27484d1cf1e2128/nba_stats_tracking-0.0.4.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "750c7efd017f9f7e3d82b3f7280beb56", "sha256": "c7352a84b4983e489d56e847cf082b82b6c8ac9c4d25161f8d1a10bca8bd37ed"}, "downloads": -1, "filename": "nba_stats_tracking-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "750c7efd017f9f7e3d82b3f7280beb56", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10862, "upload_time": "2020-02-15T15:04:51", "upload_time_iso_8601": "2020-02-15T15:04:51.886918Z", "url": "https://files.pythonhosted.org/packages/de/30/118b1ab44d39fbe6126b33e930ef36916ca49acef281fbaf2c5f72ebfdb7/nba_stats_tracking-0.0.4-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "24760e6f692dc3f6caff1335cfae2b91", "sha256": "72550140fb11ffbe0f589801441ed59448cf3a14a63173915d26fb70d2094ff1"}, "downloads": -1, "filename": "nba_stats_tracking-0.0.4.tar.gz", "has_sig": false, "md5_digest": "24760e6f692dc3f6caff1335cfae2b91", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8774, "upload_time": "2020-02-15T15:04:53", "upload_time_iso_8601": "2020-02-15T15:04:53.092180Z", "url": "https://files.pythonhosted.org/packages/1f/e0/1c971fcfa8bad24b786d08970681c7ea2945c0e7e23eb27484d1cf1e2128/nba_stats_tracking-0.0.4.tar.gz"}]}