{"info": {"author": "Adam Hooper", "author_email": "adam@adamhooper.com", "bugtrack_url": null, "classifiers": [], "description": "Parquet tools for [CJWorkbench](https://github.com/CJWorkbench/cjworkbench).\n\nWorkbench modules may _optionally_ depend on the latest version of this Python\npackage for its `cjwparquet.api.*` functions.\n\nInstallation\n============\n\nThis is meant to be used within a Docker container. It depends on executables\n`/usr/bin/parquet-to-arrow` and `/usr/bin/parquet-to-text-stream`.\n\nYour Dockerfile might look something like this:\n\n```\nFROM workbenchdata/parquet-tools:v2.0.1 AS parquet-tools\nFROM python:3.8.1-buster AS main\n\nCOPY --from=parquet-tools /usr/bin/parquet-to-arrow /usr/bin/parquet-to-arrow\nCOPY --from=parquet-tools /usr/bin/parquet-to-text-stream /usr/bin/parquet-to-text-stream\n\n# And now that these binaries are accessible, you can install cjwparquet...\n```\n\nUsage\n=====\n\n```python\nfrom pathlib import Path\nimport cjwparquet\nimport pyarrow\n\n# Write a Parquet file\ncjwparquet.write(Path(\"test.parquet\"), pyarrow.table({\"A\": [\"foo\", \"bar\"]}))\n\n# Test whether a file looks like a Parquet file\nif cjwparquet.file_has_parquet_magic_number(Path(\"test.parquet\")):\n    # Read a Parquet file\n    with cjwparquet.open_as_mmapped_arrow(Path(\"test.parquet\")) as table:\n        assert table.to_pydict() == {\"A\": [\"foo\", \"bar\"]}\n\n    # Convert to text\n    text = cjwparquet.read_slice_as_text(\n        Path(\"test.parquet\"),\n        format=\"csv\",\n        only_columns=range(0, 20),\n        only_rows=range(0, 200),\n    )\n    assert text == \"A\\nfoo\\nbar\"\n```\n\n\nDeveloping\n==========\n\n1. Run tests: `docker build .`\n2. Write a failing unit test in `tests/`\n3. Make it pass by editing code in `cjwparquet/`\n4. `black cjwparquet tests && isort --recursive cjwparquet tests`\n5. Submit a pull request\n\nBe very, very, very careful to preserve a consistent API. Workbench will\nupgrade this dependency without module authors' explicit consent. Add new\nfeatures; fix bugs. Never change functionality.\n\n\nPublishing\n==========\n\n1. Write a new `version=` to `setup.py`. Adhere to\n   [semver](https://semver.org). (As changes must be backwards-compatible,\n   the version will always start with `1` and look like `1.x.y`.)\n2. Prepend notes to `CHANGELOG.md` about the new version\n3. `git commit`\n4. `git tag v1.x.y`\n5. `git push --tags && git push`\n6. Wait for Travis to push our changes to PyPI", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/CJWorkbench/cjwparquet/", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "cjwparquet", "package_url": "https://pypi.org/project/cjwparquet/", "platform": "", "project_url": "https://pypi.org/project/cjwparquet/", "project_urls": {"Homepage": "http://github.com/CJWorkbench/cjwparquet/"}, "release_url": "https://pypi.org/project/cjwparquet/1.0.2/", "requires_dist": null, "requires_python": "", "summary": "Utilities to help build Workbench modules", "version": "1.0.2"}, "last_serial": 6768754, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "7a12cabca0730fa9c55cb350c17ff286", "sha256": "9a25d7505f76657606c4d68b187165b011e163bb4cf96763360391885634e95e"}, "downloads": -1, "filename": "cjwparquet-1.0.0.tar.gz", "has_sig": false, "md5_digest": "7a12cabca0730fa9c55cb350c17ff286", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5296, "upload_time": "2020-03-05T17:44:01", "upload_time_iso_8601": "2020-03-05T17:44:01.102726Z", "url": "https://files.pythonhosted.org/packages/3e/ad/c6c51572a38c9990f47f8cde7596db36404808a2e6f271a0f76b01cf6922/cjwparquet-1.0.0.tar.gz"}], "1.0.1": [{"comment_text": "", "digests": {"md5": "cc0759c951a7aaaa3093c067bea21b9e", "sha256": "d45bf7c187045fb555549cef8ab4304fd5bf658eaf540f2b83c95710b2ba7488"}, "downloads": -1, "filename": "cjwparquet-1.0.1.tar.gz", "has_sig": false, "md5_digest": "cc0759c951a7aaaa3093c067bea21b9e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5296, "upload_time": "2020-03-05T17:47:41", "upload_time_iso_8601": "2020-03-05T17:47:41.190299Z", "url": "https://files.pythonhosted.org/packages/4e/89/e1e02a4ef9b8fb3bc474ec08802122451a3ac14d8260ccbc2942d1316f41/cjwparquet-1.0.1.tar.gz"}], "1.0.2": [{"comment_text": "", "digests": {"md5": "d8fda4e15ba32ca1c3fc6c0cafa16329", "sha256": "f64192d5c03358289386fdad53ccc6d971b9204a711f015917cbdddf57fee8a4"}, "downloads": -1, "filename": "cjwparquet-1.0.2.tar.gz", "has_sig": false, "md5_digest": "d8fda4e15ba32ca1c3fc6c0cafa16329", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5538, "upload_time": "2020-03-07T17:09:55", "upload_time_iso_8601": "2020-03-07T17:09:55.311274Z", "url": "https://files.pythonhosted.org/packages/13/f9/768657bf50f4a16cb19ad9bc2b2a2062834ee37599233d35a1e8f9224765/cjwparquet-1.0.2.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "d8fda4e15ba32ca1c3fc6c0cafa16329", "sha256": "f64192d5c03358289386fdad53ccc6d971b9204a711f015917cbdddf57fee8a4"}, "downloads": -1, "filename": "cjwparquet-1.0.2.tar.gz", "has_sig": false, "md5_digest": "d8fda4e15ba32ca1c3fc6c0cafa16329", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5538, "upload_time": "2020-03-07T17:09:55", "upload_time_iso_8601": "2020-03-07T17:09:55.311274Z", "url": "https://files.pythonhosted.org/packages/13/f9/768657bf50f4a16cb19ad9bc2b2a2062834ee37599233d35a1e8f9224765/cjwparquet-1.0.2.tar.gz"}]}