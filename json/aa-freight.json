{"info": {"author": "Erik Kalkoken", "author_email": "kaloken87@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 2.2", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "# Freight for Alliance Auth\n\nThis is a plugin app for [Alliance Auth](https://gitlab.com/allianceauth/allianceauth) (AA) that adds a central freight service.\n\n![release](https://img.shields.io/pypi/v/aa-freight?label=release) ![python](https://img.shields.io/pypi/pyversions/aa-freight) ![django](https://img.shields.io/pypi/djversions/aa-freight?label=django) ![pipeline](https://gitlab.com/ErikKalkoken/aa-freight/badges/master/pipeline.svg) ![coverage](https://gitlab.com/ErikKalkoken/aa-freight/badges/master/coverage.svg) ![license](https://img.shields.io/badge/license-MIT-green)\n\n## Contents\n\n- [Overview](#overview)\n- [Key Features](#key-features)\n- [Screenshots](#screenshots)\n- [Installation](#installation)\n- [Updating](#updating)\n- [Settings](#settings)\n- [Operation Mode](#operation-mode)\n- [Permissions](#permissions)\n- [Pricing](#pricing)\n- [Contract Check](#contract-check)\n- [Change Log](CHANGELOG.md)\n\n## Overview\n\nThis app helps running a central freight service for an alliance or corporation. It allows different modes of operation that support the most common approaches a central freight service is setup. (e.g. for alliance members only or run by a corporation outside the alliance)\n\n## Key Features\n\nAlliance Freight offers the following main features:\n\n- Reward calculator allowing members to easily calculate the correct reward for their a courier contract\n- Page showing the list of currently outstanding courier contracts incl. an indicator if the contract is compliant with the pricing for the respective route (\"contract check\")\n- Multiple routes can be defined, each with its own pricing.\n- It's possible to have the same pricing for both directions, or to have different pricings for each direction of the same route.\n- Automatic notifications to alliance pilots on Discord informing them about new courier contracts\n- Automatic notifications to contract issuers on Discord informing them about the developing status of their contract or potentially issues\n- Contract issuer can always check the current status of his courier contracts\n- Statistics page showing key performance metrics for routes, pilots, customers\n\n## Screenshots\n\n### Reward Calculator\n\n![calculator](https://i.imgur.com/h9BZG4D.png)\n\n### Contract List\n\n![contract list](https://i.imgur.com/aJc6dwG.png)\n\n### Discord Notification\n\n![notification](https://i.imgur.com/ynWnW0o.png)\n\n## Installation\n\n### 1. Install app\n\nInstall into your Alliance Auth virtual environment from PyPI:\n\n```bash\npip install aa-freight\n```\n\n### 2 Update Eve Online app\n\nUpdate the Eve Online app used for authentication in your AA installation to include the following scopes:\n\n```plain\nesi-universe.read_structures.v1\nesi-contracts.read_corporation_contracts.v1\n```\n\n### 3. Configure AA settings\n\nConfigure your AA settings (`local.py`) as follows:\n\n- Add `'freight'` to `INSTALLED_APPS`\n- Add these lines add to bottom of your settings file:\n\n   ```python\n   # settings for freight\n   CELERYBEAT_SCHEDULE['freight_run_contracts_sync'] = {\n       'task': 'freight.tasks.run_contracts_sync',\n       'schedule': crontab(minute='*/10'),\n   }\n   ```\n\nIf you want to setup notifications for Discord you can now also add the required settings. Check out section **Settings** for details.\n\n### 3a Celery setup\n\nThis app uses celery for critical functions like refreshing data from ESI. We strongly recommend to enable the following additional settings for celery workers to enable proper logging and to protect against potential memory leaks:\n\n- To enable logging of celery tasks up to info level: `-l info`\n\n- To automatically restart workers that grow above 256 MB: `--max-memory-per-child 262144`\n\nHere is how an example config would look for workers in your supervisor conf:\n\n```plain\ncommand=/home/allianceserver/venv/auth/bin/celery -A myauth worker -l info --max-memory-per-child 262144\n```\n\nOn Ubuntu you can run `systemctl status supervisor` to see where your supervisor config file is located.\n\nNote that you need to restart the supervisor service itself to activate those changes.\n\ne.g. on Ubuntu:\n\n```bash\nsystemctl restart supervisor\n```\n\n### 4. Finalize installation into AA\n\nRun migrations & copy static files\n\n```bash\npython manage.py migrate\npython manage.py collectstatic\n```\n\nRestart your supervisor services for AA\n\n### 5. Setup permissions\n\nNow you can access Alliance Auth and setup permissions for your users. See section **Permissions** below for details.\n\n### 6. Setup contract handler\n\nFinally you need to set the contract handler with the character that will be used for fetching the corporation or alliance contracts and related structures. Just click on \"Set Contract Handler\" and add the requested token. Note that only users with the appropriate permission will be able to see and use this function. However, the respective character does not need any special corporation roles. Any corp member will work.\n\nOnce a contract handler is set the app will start fetching contracts. Wait a minute and then reload the contract list page to see the result.\n\n### 7. Define pricing\n\nFinally go ahead and define the first pricing of a courier route. See section **Pricing** for details.\n\nThat's it. The Alliance Freight app is fully installed and ready to be used.\n\n## Updating\n\nTo update your existing installation of Alliance Freight first enable your virtual environment.\n\nThen run the following commands from your AA project directory (the one that contains `manage.py`).\n\n```bash\npip install -U aa-freight\n```\n\n```bash\npython manage.py migrate\n```\n\n```bash\npython manage.py collectstatic\n```\n\nFinally restart your AA supervisor services.\n\n## Settings\n\nHere is a list of available settings for this app. They can be configured by adding them to your AA settings file (`local.py`). If they are not set the defaults are used.\n\nName | Description | Default\n-- | -- | --\n`FREIGHT_APP_NAME`| Name of this app as shown in the Auth sidebar, page titles and as default avatar name for notifications. | `'Alliance Freight'`\n`FREIGHT_CONTRACT_SYNC_GRACE_MINUTES`| Sets the number minutes until a delayed sync will be recognized as error  | `30`\n`FREIGHT_DISCORD_DISABLE_BRANDING`| Turns off setting the name and avatar url for the webhook. Notifications will be posted by a bot called \"Alliance Freight\" with the logo of your organization as avatar image | `False`\n`FREIGHT_DISCORD_MENTIONS`| Optional mention string put in front of every notification to create pings: Typical values are: `@here` or `@everyone`. You can also mention roles, however you will need to add the role ID for that. The format is: `<@&role_id>` and you can get the role ID by entering `_<@role_name>` in a channel on Discord. See [this link](https://www.reddit.com/r/discordapp/comments/580qib/how_do_i_mention_a_role_with_webhooks/) for details. | `''`\n`FREIGHT_DISCORD_WEBHOOK_URL`| Webhook URL for the Discord channel where contract notifications for pilots should appear. | `None`\n`FREIGHT_DISCORD_CUSTOMERS_WEBHOOK_URL`| Webhook URL for the Discord channel where contract notifications for customers should appear. | `None`\n`FREIGHT_FULL_ROUTE_NAMES`| Show full name of locations in route, e.g on calculator drop down  | `False`\n`FREIGHT_HOURS_UNTIL_STALE_STATUS`| Defines after how many hours the status of a contract is considered to be stale. Customer notifications will not be sent for a contract status that has become stale. This settings also prevents the app from sending out customer notifications for old contracts. | `24`\n`FREIGHT_OPERATION_MODE`| See section [Operation Mode](#operation-mode) for details.<br> Note that switching operation modes requires you to remove the existing contract handler with all its contracts and then setup a new contract handler | `'my_alliance'`\n`FREIGHT_STATISTICS_MAX_DAYS`| Sets the number of days that are considered for creating the statistics  | `90`\n\n## Operation Mode\n\nThe operation mode defines which contracts are processed by the Alliance Freight. For example you can define that only contracts assigned to your alliance are processed. Any courier contract that is  not in scope of the configured operation mode will be ignored by the freight app and e.g. not show up in the contract list or generate notifications.\n\nThe following operation modes are available:\n\nName | Description\n-- | --\n`'my_alliance'`| courier contracts assigned to configured alliance by an alliance member\n`'my_corporation'`| courier contracts assigned to configured corporation by a corp member\n`'corp_in_alliance'`| courier contracts assigned to configured corporation by an alliance member\n`'corp_public'`| any courier contract assigned to the configured corporation\n\n## Permissions\n\nThis is an overview of all permissions used by this app:\n\nName | Purpose | Code\n-- | -- | --\nCan add / update locations | User can add and update Eve Online contract locations, e.g. stations and upwell structures |  `add_location`\nCan access this app |Enabling the app for a user. This permission should be enabled for everyone who is allowed to use the app (e.g. Member state) |  `basic_access`\nCan setup contract handler | Add or updates the character for syncing contracts. This should be limited to users with admins / leadership privileges. |  `setup_contract_handler`\nCan use the calculator | Enables using the calculator page and the \"My Contracts\" page. This permission is usually enabled for every user with the member state. |  `use_calculator`\nCan view the contracts list | Enables viewing the page with all outstanding courier contracts  |  `view_contracts`\nCan see statistics | User with this permission can view the statistics page  |  `view_statistics`\n\n## Pricing\n\nA pricing defines a route and the parameters for calculating the price for that route along with some additional information for the users. You can define multiple pricings if you want, but at least one pricing has to be defined for this app to work.\n\nPricing routes are bidirectional by default. For bidirectional pricings courier contracts in both directions are matched against the same pricing. Alternatively pricings can also be defined individually for each direction.\n\nPricings are defined in the admin section of AA, so you need staff permissions to access it.\n\nMost parameters of a pricing are optional, but you need to define at least one of the four pricing components to create a valid pricing. It's also possible to define a route that does not require a reward by setting \"Price base\" to 0 and not setting any other pricing components.\n\nAll pricing parameters can be found on the admin panel under Pricing, with the exception of the \"price per volume modifier\", which is a global pricing parameter and therefore property of the ContractHandler.\n\nParameter | Description | Pricing Functionality\n-- | -- | --\nStart Location | Starting station or structure for courier route | -\nEnd Location | Destination station or structure for courier route  | -\nIs Active | Non active pricings will not be used or shown | -\nIs Bidirectional | Wether this pricing shall apply to contracts for both directions of the route or only the specified direction | -\nPrice base | Base price in ISK. If this is the only defined pricing component it will be shown as \"Fix price\" in the calculator. | Pricing component\nPrice min | Minimum total price in ISK | Pricing component\nPrice per volume | Add-on price per m3 volume in ISK | Pricing component\nUse price per volume modifier | Switch defining if the global price per volume modifier should be used for pricing | Pricing flag\nPrice per volume modifier | Global modifier for price per volume in percent. When used it will be added to the price per volume. It can be positive and negative, but the resulting price per volume can never be negative.<br>(defined for ContractHandler) | Pricing modifier\nPrice per collateral_percent | Add-on price in % of collateral | Pricing component\nCollateral min | Minimum required collateral in ISK | Validation check\nCollateral max | Maximum allowed collateral in ISK | Validation check\nVolume min | Minimum allowed volume in m3 | Validation check\nVolume max | Maximum allowed volume in m3 | Validation check\nDays to expire | Recommended days for contracts to expire | Info\nDays to complete | Recommended days for contract completion | Info\nDetails | Text with additional instructions for using this pricing | Info\n\n> **How to add new locations**:<br>If you are creating a pricing for a new route you may need to first add the locations (stations and/or structures).<br>The easiest way is to create a courier contract between those locations in game and then run contract sync. Those locations will then be added automatically.<br>Alternatively you can use the \"Add Location\" feature on the main page of the app. This will require you to provide the respective station or structure eve ID.\n\n## Contract Check\n\nThe app will automatically check if a newly issued contract complies with the pricing parameters for the respective route.\n\nCompliant contracts will have a green checkmark (\u2713) in the \"Contract Check\" column on the contract list. Related notifications on Discord will be colored in green.\n\nNon-compliant contracts will have a red warning sign in the \"Contract Check\" column on the contract list. And related notifications on Discord will be colored in red. In addition the first customer notification will inform the customer about the issues and ask him to correct the issues.\n\nThe following parameters will be checked (if they have been defined):\n\n- reward in contract >= calculated reward\n- volume min <= volume in contract <= volume max\n- collateral min <= collateral in contract <= collateral max\n\nDeviations on \"Days to expire\" and \"Days to complete\" are currently not part of the contract check and only used to show the recommended contract parameters in the calculator.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/ErikKalkoken/aa-freight", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "aa-freight", "package_url": "https://pypi.org/project/aa-freight/", "platform": "", "project_url": "https://pypi.org/project/aa-freight/", "project_urls": {"Homepage": "https://gitlab.com/ErikKalkoken/aa-freight"}, "release_url": "https://pypi.org/project/aa-freight/1.1.0/", "requires_dist": null, "requires_python": "~=3.6", "summary": "Alliance Auth plugin app for running an alliance freight service", "version": "1.1.0"}, "last_serial": 7055660, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "8ac8c4b42f65aafdb0240dfcd1c4073f", "sha256": "365b1b1ef9180992f1addc32ba1e73431c68838838e3a327e1452fa0a4c0d0d0"}, "downloads": -1, "filename": "aa-freight-1.0.0.tar.gz", "has_sig": false, "md5_digest": "8ac8c4b42f65aafdb0240dfcd1c4073f", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 127616, "upload_time": "2020-04-09T21:36:50", "upload_time_iso_8601": "2020-04-09T21:36:50.720321Z", "url": "https://files.pythonhosted.org/packages/98/f9/b251dc7c05718b854bcfc090059ab26aadd89e9e4a9b297ceb7aa0e13ef6/aa-freight-1.0.0.tar.gz"}], "1.0.0a1": [{"comment_text": "", "digests": {"md5": "bb0bc6fd1bfa97c8dfa9452f331b4e2c", "sha256": "12edead0547871fe6fd4aa04beb4929767926dafa0c40f473d2477aa5678ab4f"}, "downloads": -1, "filename": "aa-freight-1.0.0a1.tar.gz", "has_sig": false, "md5_digest": "bb0bc6fd1bfa97c8dfa9452f331b4e2c", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 127600, "upload_time": "2020-04-08T23:32:49", "upload_time_iso_8601": "2020-04-08T23:32:49.204632Z", "url": "https://files.pythonhosted.org/packages/2c/60/acb866f72737953c3ac06f72b27358d163a11a019f455fa809ed13e740f5/aa-freight-1.0.0a1.tar.gz"}], "1.1.0": [{"comment_text": "", "digests": {"md5": "3a42e146e36df2c3c99b06ce6d4b56f1", "sha256": "9e92e443f23644f08b7832203a1f9639dfefed970959428ed18cb5e5ac581fbf"}, "downloads": -1, "filename": "aa-freight-1.1.0.tar.gz", "has_sig": false, "md5_digest": "3a42e146e36df2c3c99b06ce6d4b56f1", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 129367, "upload_time": "2020-04-19T20:02:34", "upload_time_iso_8601": "2020-04-19T20:02:34.464686Z", "url": "https://files.pythonhosted.org/packages/ab/c7/07a2585243f06973f1ad0b3db044d4b82e068204f381e630e0adc348c194/aa-freight-1.1.0.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "3a42e146e36df2c3c99b06ce6d4b56f1", "sha256": "9e92e443f23644f08b7832203a1f9639dfefed970959428ed18cb5e5ac581fbf"}, "downloads": -1, "filename": "aa-freight-1.1.0.tar.gz", "has_sig": false, "md5_digest": "3a42e146e36df2c3c99b06ce6d4b56f1", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 129367, "upload_time": "2020-04-19T20:02:34", "upload_time_iso_8601": "2020-04-19T20:02:34.464686Z", "url": "https://files.pythonhosted.org/packages/ab/c7/07a2585243f06973f1ad0b3db044d4b82e068204f381e630e0adc348c194/aa-freight-1.1.0.tar.gz"}]}