{"info": {"author": "Daniel Malachov", "author_email": "malachovd@seznam.cz", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Other Environment", "Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Scientific/Engineering :: Artificial Intelligence", "Topic :: Software Development :: Libraries :: Application Frameworks", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# predictit\nLibrary/framework for making predictions. Choose best of 20 models (ARIMA, regressions, LSTM...) from libraries like statsmodels, sci-kit, tensorflow and some own models. Library also automatically preprocess data and chose optimal parameters of predictions.\n\n## Output\nMost common output is plotly interactive graph, numpy array of results or deploying to database.\n\n<p align=\"center\">\n<img src=\"https://raw.githubusercontent.com/Malachov/predictit/master/output_example.png\" width=\"620\" alt=\"Table of results\"/>\n</p>\n\nIt will also print the table of models errors.\n\n<p align=\"center\">\n<img src=\"https://raw.githubusercontent.com/Malachov/predictit/master/table_of_results.png\" width=\"700\" alt=\"Table of results\"/>\n</p>\n\n## Oficial repo and documentation links\n\n[Repo on github](https://github.com/Malachov/predictit)\n\n[Official readthedocs documentation](https://predictit.readthedocs.io)\n\n## Installation\n    pip install predictit\n\nSometime you can have issues with installing some libraries from requirements (e.g. numpy because not BLAS / LAPACK). There are also two libraries - Tensorflow and pyodbc not in requirements, because not necessary, but troublesome. If library not installed with pip, check which library don't work, install manually with stackoverflow and repeat...\n\n## How to\nSoftware can be used in three ways. As a python library or with command line arguments or as normal python scripts.\nMain function is predict in main.py script.\nThere is also predict_multiple_columns if you want to predict more at once (columns or time frequentions) and also compare_models function that evaluate test data and can tell you which models are best. Then you can use only such a models. It's recommended also to use arguments optimization just once, change initial parameters in config and turn optimization off for performance reasons.\n\nCommand line arguments as well as functions arguments overwrite default config.py values. Not all the config options are in function arguments or command line arguments.\n\n### Simple example of predict function with Pypi and function arguments\n```Python\nimport predictit\nimport numpy as np\n\npredictions = predictit.main.predict(np.random.randn(1, 100), predicts=3, plot=1)\n```\n\n### Simple example of using main.py script\nOpen config.py (only script you need to edit (very simple)), do the setup. Mainly used_function and data or data_source and path. Then just run main.py.\n\n### Simple example of using command line arguments\nRun code below in terminal in predictit folder and change csv path (test data are not included in library because of size!). Use main.py --help for more parameters info.\n\n```\npython main.py --function predict --data_source 'csv' --csv_path 'test_data/daily-minimum-temperatures.csv' --predicted_column 1\n```\n\n### Example of using as a library as a pro with editting config.py\n```Python\n\nimport predictit\n\nconfig = predictit.config.config\n\nconfig.update({\n    'predicts': 7,  # Create 12 predictions\n    'data_source': 'test',  # Define that we load data from CSV\n    'datalength': 1000,  # Consider only last 1000 data points\n    'predicted_column': 'Temp',  # Column name that we want to predict\n    'compareit': 6,  # Visualize 6 best models\n    'repeatit': 30,  # Repeat calculation times on shifted data to evaluate error criterion\n    'other_columns': 0,  # Whether use other columns or not\n    'debug': 1,  # Whether use other columns or not\n\n    # Chose models that will be computed\n    'used_models': {\n        \"AR (Autoregression)\": predictit.models.statsmodels_autoregressive,\n\n        \"ARIMA (Autoregression integrated moving average)\": predictit.models.statsmodels_autoregressive,\n\n        \"Autoregressive Linear neural unit\": predictit.models.autoreg_LNU,\n        \"Conjugate gradient\": predictit.models.conjugate_gradient,\n\n        \"Sklearn regression\": predictit.models.sklearn_regression,\n    },\n\n    # Define parameters of models\n\n    'n_steps_in': 20,  # How many lagged values in models\n    'output_shape': 'batch',  # Whether batch or one-step models\n\n    'models_parameters': {\n\n        'AR (Autoregression)': {'model': 'ar', 'method': 'cmle', 'ic': 'aic', 'trend': 'nc', 'solver': 'lbfgs'},\n        'ARIMA (Autoregression integrated moving average)': {'model': 'arima', 'p': 3, 'd': 0, 'q': 0, 'method': 'css', 'ic': 'aic', 'trend': 'nc', 'solver': 'nm'},\n\n        'Autoregressive Linear neural unit': {'plot': 0, 'mi': 1, 'mi_multiple': 1, 'epochs': 20, 'w_predict': 0, 'minormit': 1, 'damping': 1},\n        'Conjugate gradient': {'epochs': 5},\n\n        'Bayes ridge regression': {'regressor': 'bayesianridge', 'n_iter': 300, 'alpha_1': 1.e-6, 'alpha_2': 1.e-6, 'lambda_1': 1.e-6, 'lambda_2': 1.e-6},\n        'Sklearn regression': {'regressor': 'linear', 'alpha': 0.0001, 'n_iter': 100, 'epsilon': 1.35, 'alphas': [0.1, 0.5, 1], 'gcv_mode': 'auto', 'solver': 'auto', 'alpha_1': 1.e-6, 'alpha_2': 1.e-6, 'lambda_1': 1.e-6, 'lambda_2': 1.e-6, 'n_hidden': 20, 'rbf_width': 0, 'activation_func': 'selu'},\n    }\n\n})\n\npredictions = predictit.main.predict()\n```\n\nOr if you downloaded it from github and not via pypi, just edit config as you need and run main.py\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Malachov/predictit", "keywords": "", "license": "mit", "maintainer": "", "maintainer_email": "", "name": "predictit", "package_url": "https://pypi.org/project/predictit/", "platform": "any", "project_url": "https://pypi.org/project/predictit/", "project_urls": {"Homepage": "https://github.com/Malachov/predictit"}, "release_url": "https://pypi.org/project/predictit/1.22/", "requires_dist": ["numpy", "pandas", "matplotlib", "SQLAlchemy", "sklearn-extensions", "cufflinks", "plotly", "prettytable", "scipy", "seaborn", "statsmodels", "scikit-learn", "m2r"], "requires_python": "", "summary": "Library/framework for making predictions.", "version": "1.22"}, "last_serial": 7052703, "releases": {"0.822": [{"comment_text": "", "digests": {"md5": "2724e74d999fba980e27e7bdedc83ba4", "sha256": "3019fdb82abfe4b222ce8175538d37c6e4fc4cf5a8fa9e0bbb9a60456d931f75"}, "downloads": -1, "filename": "predictit-0.822-py3-none-any.whl", "has_sig": false, "md5_digest": "2724e74d999fba980e27e7bdedc83ba4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 56740, "upload_time": "2020-01-18T18:05:22", "upload_time_iso_8601": "2020-01-18T18:05:22.890780Z", "url": "https://files.pythonhosted.org/packages/77/b3/d333c6bcc7a743d7555d63454c10a67f91c8e17fce4819df8ba847f5ef28/predictit-0.822-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "70ddbfefa59f911ff6dc07c06919138e", "sha256": "c0db465ad865693ee4eca3862e128761372b4f64f0c5e10ed2dcfb2c8bf78310"}, "downloads": -1, "filename": "predictit-0.822.tar.gz", "has_sig": false, "md5_digest": "70ddbfefa59f911ff6dc07c06919138e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40662, "upload_time": "2020-01-18T18:05:25", "upload_time_iso_8601": "2020-01-18T18:05:25.545941Z", "url": "https://files.pythonhosted.org/packages/fc/e9/525dcd3b4a308feb2d77953cc18d87b34d9b0d1df98a43b4124cc442a10c/predictit-0.822.tar.gz"}], "1.1": [{"comment_text": "", "digests": {"md5": "697a32dff6673783d49786b42bae3954", "sha256": "e9ffbf2e6bc1269d0bf0282b797fbfe6d4227e65c7f486bf809bdf152e974ba8"}, "downloads": -1, "filename": "predictit-1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "697a32dff6673783d49786b42bae3954", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 56541, "upload_time": "2020-01-20T11:43:03", "upload_time_iso_8601": "2020-01-20T11:43:03.705956Z", "url": "https://files.pythonhosted.org/packages/29/fd/cd2f3c1292cf107152678da44ee3dbcf77148779787ac21c3f2cff0409f3/predictit-1.1-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "70bdcd64173ee4297039c9147146ab70", "sha256": "ba7f4d117f3503e3672d69b98fae0ca7a9f3a0efed9da8ab98196272e742a686"}, "downloads": -1, "filename": "predictit-1.1.tar.gz", "has_sig": false, "md5_digest": "70bdcd64173ee4297039c9147146ab70", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40834, "upload_time": "2020-01-20T11:43:05", "upload_time_iso_8601": "2020-01-20T11:43:05.972102Z", "url": "https://files.pythonhosted.org/packages/5b/a5/92ee5434ae67c0ca6f435a635b864c10bfd187daa7d5bd7d3c583ec42e5f/predictit-1.1.tar.gz"}], "1.22": [{"comment_text": "", "digests": {"md5": "4e892552422cd6f30a0e835df59a49ac", "sha256": "ca6b67a7de6c088a762e3090668ed7f147e9823285309544ccc16a19ea6b23ca"}, "downloads": -1, "filename": "predictit-1.22-py3-none-any.whl", "has_sig": false, "md5_digest": "4e892552422cd6f30a0e835df59a49ac", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 51230, "upload_time": "2020-04-19T11:32:10", "upload_time_iso_8601": "2020-04-19T11:32:10.928140Z", "url": "https://files.pythonhosted.org/packages/8a/23/b3aff85ab733d3e06c87b297d1268c1d62f851c5f808986cd8d395daf20b/predictit-1.22-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "3d1325baca1796769e2c0663a64130e0", "sha256": "6a153bed675576610c225bc1ba2ae169760789d3bc26b156fbad89ef0078fc1c"}, "downloads": -1, "filename": "predictit-1.22.tar.gz", "has_sig": false, "md5_digest": "3d1325baca1796769e2c0663a64130e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42893, "upload_time": "2020-04-19T11:32:12", "upload_time_iso_8601": "2020-04-19T11:32:12.656887Z", "url": "https://files.pythonhosted.org/packages/49/4b/0c91ea6ada888d9e74952fcab36c611e2ab7d5b43788d1efbb79c9fe89f7/predictit-1.22.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "4e892552422cd6f30a0e835df59a49ac", "sha256": "ca6b67a7de6c088a762e3090668ed7f147e9823285309544ccc16a19ea6b23ca"}, "downloads": -1, "filename": "predictit-1.22-py3-none-any.whl", "has_sig": false, "md5_digest": "4e892552422cd6f30a0e835df59a49ac", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 51230, "upload_time": "2020-04-19T11:32:10", "upload_time_iso_8601": "2020-04-19T11:32:10.928140Z", "url": "https://files.pythonhosted.org/packages/8a/23/b3aff85ab733d3e06c87b297d1268c1d62f851c5f808986cd8d395daf20b/predictit-1.22-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "3d1325baca1796769e2c0663a64130e0", "sha256": "6a153bed675576610c225bc1ba2ae169760789d3bc26b156fbad89ef0078fc1c"}, "downloads": -1, "filename": "predictit-1.22.tar.gz", "has_sig": false, "md5_digest": "3d1325baca1796769e2c0663a64130e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42893, "upload_time": "2020-04-19T11:32:12", "upload_time_iso_8601": "2020-04-19T11:32:12.656887Z", "url": "https://files.pythonhosted.org/packages/49/4b/0c91ea6ada888d9e74952fcab36c611e2ab7d5b43788d1efbb79c9fe89f7/predictit-1.22.tar.gz"}]}