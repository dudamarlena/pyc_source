{"info": {"author": "Gluon CV Toolkit Contributors", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "GluonCV-Torch\n=============\n\nLoad `GluonCV <https://gluon-cv.mxnet.io/>`__ Models in PyTorch. Simply\n``import gluoncvth`` to getting better pretrained model than\n``torchvision``:\n\n.. code:: python\n\n    import gluoncvth as gcv\n    model = gcv.models.resnet50(pretrained=True)\n\n**Installation**:\n\n.. code:: bash\n\n    pip install gluoncv-torch\n\nAvailable Models\n----------------\n\nImageNet\n~~~~~~~~\n\nImageNet models single-crop error rates, comparing to the\n``torchvision`` models:\n\n+---------------------------+---------------+---------------+---------------+---------------+\n|                           | torchvision   |               | gluoncvth     |               |\n+===========================+===============+===============+===============+===============+\n| Model                     | Top-1 error   | Top-5 error   | Top-1 error   | Top-5 error   |\n+---------------------------+---------------+---------------+---------------+---------------+\n| `ResNet18 <#resnet>`__    | 30.24         | 10.92         | 29.06         | 10.17         |\n+---------------------------+---------------+---------------+---------------+---------------+\n| `ResNet34 <#resnet>`__    | 26.70         | 8.58          | 25.35         | 7.92          |\n+---------------------------+---------------+---------------+---------------+---------------+\n| `ResNet50 <#resnet>`__    | 23.85         | 7.13          | 22.33         | 6.18          |\n+---------------------------+---------------+---------------+---------------+---------------+\n| `ResNet101 <#resnet>`__   | 22.63         | 6.44          | 20.80         | 5.39          |\n+---------------------------+---------------+---------------+---------------+---------------+\n| `ResNet152 <#resnet>`__   | 21.69         | 5.94          | 20.56         | 5.39          |\n+---------------------------+---------------+---------------+---------------+---------------+\n| Inception v3              | 22.55         | 6.44          | 21.33         | 5.61          |\n+---------------------------+---------------+---------------+---------------+---------------+\n\nMore models available at `GluonCV Image Classification\nModelZoo <https://gluon-cv.mxnet.io/model_zoo/classification.html#imagenet>`__\n\nSemantic Segmentation\n~~~~~~~~~~~~~~~~~~~~~\n\nResults on Pascal VOC dataset:\n\n+------------------------------+----------------+--------+\n| Model                        | Base Network   | mIoU   |\n+==============================+================+========+\n| `FCN <#fcn>`__               | ResNet101      | 83.6   |\n+------------------------------+----------------+--------+\n| `PSPNet <#pspnet>`__         | ResNet101      | 85.1   |\n+------------------------------+----------------+--------+\n| `DeepLabV3 <#deeplabv3>`__   | ResNet101      | 86.2   |\n+------------------------------+----------------+--------+\n\nResults on ADE20K dataset:\n\n+------------------------------+----------------+----------+--------+\n| Model                        | Base Network   | PixAcc   | mIoU   |\n+==============================+================+==========+========+\n| `FCN <#fcn>`__               | ResNet101      | 80.6     | 41.6   |\n+------------------------------+----------------+----------+--------+\n| `PSPNet <#pspnet>`__         | ResNet101      | 80.8     | 42.9   |\n+------------------------------+----------------+----------+--------+\n| `DeepLabV3 <#deeplabv3>`__   | ResNet101      | 81.1     | 44.1   |\n+------------------------------+----------------+----------+--------+\n\n**Quick Demo**\n\n.. code:: python\n\n    import torch\n    import gluoncvth\n\n    # Get the model\n    model = gluoncvth.models.get_deeplab_resnet101_ade(pretrained=True)\n    model.eval()\n\n    # Prepare the image\n    url = 'https://github.com/zhanghang1989/image-data/blob/master/encoding/' + \\\n        'segmentation/ade20k/ADE_val_00001142.jpg?raw=true'\n    filename = 'example.jpg'\n    img = gluoncvth.utils.load_image(\n        gluoncvth.utils.download(url, filename)).unsqueeze(0)\n\n    # Make prediction\n    output = model.evaluate(img)\n    predict = torch.max(output, 1)[1].cpu().numpy() + 1\n\n    # Get color pallete for visualization\n    mask = gluoncvth.utils.get_mask_pallete(predict, 'ade20k')\n    mask.save('output.png')\n\n.. figure:: ./image/demo_deeplab_ade.png\n   :alt: \n\nMore models available at `GluonCV Semantic Segmentation\nModelZoo <https://gluon-cv.mxnet.io/model_zoo/segmentation.html>`__\n\nAPI Reference\n-------------\n\nResNet\n~~~~~~\n\n-  ``gluoncvth.models.resnet18(pretrained=True)``\n-  ``gluoncvth.models.resnet34(pretrained=True)``\n-  ``gluoncvth.models.resnet50(pretrained=True)``\n-  ``gluoncvth.models.resnet101(pretrained=True)``\n-  ``gluoncvth.models.resnet152(pretrained=True)``\n\nFCN\n~~~\n\n-  ``gluoncvth.models.get_fcn_resnet101_voc(pretrained=True)``\n-  ``gluoncvth.models.get_fcn_resnet101_ade(pretrained=True)``\n\nPSPNet\n~~~~~~\n\n-  ``gluoncvth.models.get_psp_resnet101_voc(pretrained=True)``\n-  ``gluoncvth.models.get_psp_resnet101_ade(pretrained=True)``\n\nDeepLabV3\n~~~~~~~~~\n\n-  ``gluoncvth.models.get_deeplab_resnet101_voc(pretrained=True)``\n-  ``gluoncvth.models.get_deeplab_resnet101_ade(pretrained=True)``\n\nWhy `GluonCV <https://gluon-cv.mxnet.io/>`__?\n---------------------------------------------\n\n**1. State-of-the-art Implementations**\n\n**2. Pretrained Models and Tutorials**\n\n**3. Community Support**\n\nWe expect this PyTorch inference API for GluonCV models will be\nbeneficial to the entire computer vision comunity.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dmlc/gluon-cv", "keywords": "", "license": "Apache-2.0", "maintainer": "", "maintainer_email": "", "name": "gluoncv-torch", "package_url": "https://pypi.org/project/gluoncv-torch/", "platform": "", "project_url": "https://pypi.org/project/gluoncv-torch/", "project_urls": {"Homepage": "https://github.com/dmlc/gluon-cv"}, "release_url": "https://pypi.org/project/gluoncv-torch/0.0.3/", "requires_dist": null, "requires_python": "", "summary": "MXNet Gluon CV Toolkit", "version": "0.0.3"}, "last_serial": 6963833, "releases": {"0.0.0": [{"comment_text": "", "digests": {"md5": "c202c7b2f1287b698cbcc6f567e2b41e", "sha256": "a9b85f645e857306aaec8b9444dfe143ed6436dbdcde2edc783be404099b24ca"}, "downloads": -1, "filename": "gluoncv-torch-0.0.0.tar.gz", "has_sig": false, "md5_digest": "c202c7b2f1287b698cbcc6f567e2b41e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1499, "upload_time": "2018-10-09T22:35:57", "upload_time_iso_8601": "2018-10-09T22:35:57.941223Z", "url": "https://files.pythonhosted.org/packages/dd/bd/c5fc328bb4d608399993025a0aeffdd1c3f67bddd7701838d267aa54be78/gluoncv-torch-0.0.0.tar.gz"}], "0.0.2": [{"comment_text": "", "digests": {"md5": "0c923d9bfe00823c8ef48dbf5de3f8c3", "sha256": "314aff16d1a9fe6b8e9f0d54ce9f9ebf02ffbd90eedabd9615f68f402f9fee7b"}, "downloads": -1, "filename": "gluoncv-torch-0.0.2.tar.gz", "has_sig": false, "md5_digest": "0c923d9bfe00823c8ef48dbf5de3f8c3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15875, "upload_time": "2018-10-12T23:21:42", "upload_time_iso_8601": "2018-10-12T23:21:42.279718Z", "url": "https://files.pythonhosted.org/packages/93/17/ee76d47c8e1256ac4c8c5101812a8eb55c0ee44a52fa03d9da88b3ddc94e/gluoncv-torch-0.0.2.tar.gz"}], "0.0.3": [{"comment_text": "", "digests": {"md5": "6986546ecc3f31e79729ee4b32886430", "sha256": "648182fac244703c02b5853b9f34f5d8afc55fb600c3090a55006e7e2f2c09c5"}, "downloads": -1, "filename": "gluoncv-torch-0.0.3.tar.gz", "has_sig": false, "md5_digest": "6986546ecc3f31e79729ee4b32886430", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15821, "upload_time": "2018-10-16T23:28:56", "upload_time_iso_8601": "2018-10-16T23:28:56.502540Z", "url": "https://files.pythonhosted.org/packages/04/1c/e919d53a5b4d12fc8aeaead5097889eab57a05c92b800d03c0bdded4f220/gluoncv-torch-0.0.3.tar.gz"}], "0.0.4b6042020": [{"comment_text": "", "digests": {"md5": "31ce6d1615a0ecd27acb4d38ded37bae", "sha256": "eab8cace5af1ac93cfad69a0e7ea31dfb43855f8ae11dab64d3bd5627e9d5a89"}, "downloads": -1, "filename": "gluoncv_torch-0.0.4b6042020-py3-none-any.whl", "has_sig": false, "md5_digest": "31ce6d1615a0ecd27acb4d38ded37bae", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20983, "upload_time": "2020-04-06T19:07:59", "upload_time_iso_8601": "2020-04-06T19:07:59.229248Z", "url": "https://files.pythonhosted.org/packages/26/8a/c47700cb366584f95f234bcdbcc3079025bc1d5e9f6884d3a1b967be0ad8/gluoncv_torch-0.0.4b6042020-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "e68efcdb10f98a8aaa4ca0c20e3aa542", "sha256": "5caa00ded7a80cdbb81d3ac458f0af24098d2e53a58a3de4cc80fe81b5c499f7"}, "downloads": -1, "filename": "gluoncv-torch-0.0.4b6042020.tar.gz", "has_sig": false, "md5_digest": "e68efcdb10f98a8aaa4ca0c20e3aa542", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15311, "upload_time": "2020-04-06T19:08:00", "upload_time_iso_8601": "2020-04-06T19:08:00.698388Z", "url": "https://files.pythonhosted.org/packages/b2/df/8e16995b0549e99f86422b08e55b71011983161fcf56801f0681494f35da/gluoncv-torch-0.0.4b6042020.tar.gz"}], "0.0.5b6042020": [{"comment_text": "", "digests": {"md5": "9b1a25ea1e9a188c92a8201b69394cd3", "sha256": "0ae37bd0142dbfdbe420fef398007403309a39562dd5ca5c8f732bc58897b9b6"}, "downloads": -1, "filename": "gluoncv_torch-0.0.5b6042020-py3-none-any.whl", "has_sig": false, "md5_digest": "9b1a25ea1e9a188c92a8201b69394cd3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21161, "upload_time": "2020-04-06T19:18:32", "upload_time_iso_8601": "2020-04-06T19:18:32.635397Z", "url": "https://files.pythonhosted.org/packages/73/f4/94ba4e13d6333c10030c9ad7dd35608823eaf6af2226eef615446203bc9d/gluoncv_torch-0.0.5b6042020-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "eb4a36be729dc1eeb65c4c689254af60", "sha256": "787669963932415ed46e07beec7d818742fd758bdbe27dd6b829c177cbfee818"}, "downloads": -1, "filename": "gluoncv-torch-0.0.5b6042020.tar.gz", "has_sig": false, "md5_digest": "eb4a36be729dc1eeb65c4c689254af60", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15560, "upload_time": "2020-04-06T19:18:33", "upload_time_iso_8601": "2020-04-06T19:18:33.688117Z", "url": "https://files.pythonhosted.org/packages/11/03/44128b151476bdea67555c6e58ab29925a1bc76c7fcffa9e2eb5b72e47c4/gluoncv-torch-0.0.5b6042020.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "6986546ecc3f31e79729ee4b32886430", "sha256": "648182fac244703c02b5853b9f34f5d8afc55fb600c3090a55006e7e2f2c09c5"}, "downloads": -1, "filename": "gluoncv-torch-0.0.3.tar.gz", "has_sig": false, "md5_digest": "6986546ecc3f31e79729ee4b32886430", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15821, "upload_time": "2018-10-16T23:28:56", "upload_time_iso_8601": "2018-10-16T23:28:56.502540Z", "url": "https://files.pythonhosted.org/packages/04/1c/e919d53a5b4d12fc8aeaead5097889eab57a05c92b800d03c0bdded4f220/gluoncv-torch-0.0.3.tar.gz"}]}