{"info": {"author": "Allo-Media", "author_email": "dev@allo-media.fr", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3.7", "Topic :: Software Development"], "description": "![CircleCI](https://img.shields.io/circleci/build/github/allo-media/eventail)\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/eventail)\n![PyPI - License](https://img.shields.io/pypi/l/eventail)\n\n# A python toolkit to develop services within the Allo-Media event-driven architecture, with debug utilities.\n\n## Overview\n\nThe Allo-Media event-driven service architecture is language and framework independent and is described in the following document:\n\n*Blog post coming soon\u2026*\n\n### eventail.async_service\n\nThis package provides base classes for implementating fully asynchronous services conforming to this architecture on RabbitMQ.\nTo develop a service, just inherit one of the class (either `async_service.pika.Service` or `async_service.aio.Service` if you want async/await) and provide a concrete implementation of the abstract methods to code the specific behavior of your service.\n\nAll the burden of communication, message safety, recovery, availability, load balancing and queue/exchange setup is taken care for you by this base class and RabbitMQ. It also provides a kind of supervisor to ensure automatic reconnection after a network failure.\n\nYou just need to focus on the service logic you develop and then you can deploy as many instances of your service as you see fit, anywhere on the network, and the load will be automatically load-balanced between them.\n\n### eventail.sync_publisher\n\nA kombu based synchronous Endpoint for publishing purposes only (events and logs). This is provided to help you port legacy applications to the EDA.\n\n### Command line utilities\n\nThis package also provide some debugging command line tools :\n\n - a logger that can target specific logs (service & criticity) through topic subscription;\n - a utility to send events on the bus;\n - a utility to send a command on the bus, wait for its result and display the outcome;\n - a utility to monitor events and/or commands;\n - a utility to inspect queues;\n - and a utility to resurrect (replay) dead messages.\n\n### Note about dead letters\n\nThe base code  does not create the dead-letters exchange (DLX) for you, nor the dead-letter queues. It's good practice to do it once and configure the queues with a policy :\n\n```\nrabbitmqctl set_policy DLX \".*\\.events|.*\\.commands\" '{\"dead-letter-exchange\":\"am-dlx\"}' --apply-to queues\n```\n\nNote that a policy applies to existing **and future** queues as well, so you don't have to reissue those commands each time a new service appears!\n\n## Usage\n\n\n### API\n\nThe API documentation is on [ReadTheDocs](https://eventail.readthedocs.io/).\n\n\n### Utilities\n\nOnce installed (`pip install -e .`), these commands are in you virtualenv path:\n\n```\nlogger.py --help\nusage: logger.py [-h] [--filter [FILTER [FILTER ...]]] amqp_url\n\nDisplay selected logs in realtime on the given broker\n\npositional arguments:\n  amqp_url              URL of the broker, including credentials\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --filter [FILTER [FILTER ...]]\n                        Log patterns to subscribe to (default to all)\n```\n\n```\nmonitor.py --help\nusage: monitor.py [-h] [--events [EVENTS [EVENTS ...]]]\n                  [--commands [COMMANDS [COMMANDS ...]]]\n                  amqp_url\n\nMonitor selected Events and/or Commands on the given broker\n\npositional arguments:\n  amqp_url              URL of the broker, including credentials\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --events [EVENTS [EVENTS ...]]\n                        Event patterns to subscribe to (default to all)\n  --commands [COMMANDS [COMMANDS ...]]\n                        Command patterns to subscribe to (default to all)\n```\n\n```\npublish_event.py --help\nusage: publish_event.py [-h] amqp_url event payload\n\nPublish an Event and its payload on the given broker\n\npositional arguments:\n  amqp_url    URL of the broker, including credentials\n  event       Event Name\n  payload     The path to the file containing the payload, in JSON\u00a0or\n              CBOR\u00a0format (from file extension).\n\noptional arguments:\n  -h, --help  show this help message and exit\n```\n\n```\nsend_command.py --help\nusage: send_command.py [-h] amqp_url command payload\n\nSend a service command and its payload on the given broker and waits for its result.\n\npositional arguments:\n  amqp_url    URL of the broker, including credentials\n  command     Command in the form service.command\n  payload     The path to the file containing the payload, in JSON\u00a0or\n              CBOR\u00a0format (from file extension).\n\noptional arguments:\n  -h, --help  show this help message and exit\n```\n\n```\ninspect_queue.py --help\nusage: inspect_queue.py [-h] [--count COUNT] amqp_url queue\n\nDump the content of a queue without consuming it.\n\npositional arguments:\n  amqp_url       URL of the broker, including credentials.\n  queue          Name of queue to inspect.\n\noptional arguments:\n  -h, --help     show this help message and exit\n  --count COUNT  Number of message to dump (default is 0 = all).\n  ```\n\n```\nresurrect.py --help\nusage: resurrect.py [-h] [--count COUNT] amqp_url queue\n\nResend dead letters.\n\npositional arguments:\n  amqp_url       URL of the broker, including credentials.\n  queue          Name of dead-letter queue.\n\noptional arguments:\n  -h, --help     show this help message and exit\n  --count COUNT  Number of message to resurrect (default is 0 = all).\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/allo-media/eventail", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "eventail", "package_url": "https://pypi.org/project/eventail/", "platform": "", "project_url": "https://pypi.org/project/eventail/", "project_urls": {"Homepage": "https://github.com/allo-media/eventail"}, "release_url": "https://pypi.org/project/eventail/1.2.0/", "requires_dist": null, "requires_python": ">=3.7", "summary": "A base class and utilities for AM service architecture", "version": "1.2.0"}, "last_serial": 6415814, "releases": {"1.0.5": [{"comment_text": "", "digests": {"md5": "a32c44a6bff4d284155b46131c555651", "sha256": "27da2c7983f736790c367a4f3eed9ca92681e5611294c7aa2baaf06b183031bf"}, "downloads": -1, "filename": "eventail-1.0.5.tar.gz", "has_sig": false, "md5_digest": "a32c44a6bff4d284155b46131c555651", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 24286, "upload_time": "2019-12-05T10:40:22", "upload_time_iso_8601": "2019-12-05T10:40:22.390688Z", "url": "https://files.pythonhosted.org/packages/fe/1e/232257b2cd52664659674a29d8779308408f23f40c1455de61a2cf50ac2a/eventail-1.0.5.tar.gz"}], "1.0.6": [{"comment_text": "", "digests": {"md5": "7dcbb9c666121a35bb2e978bd2ef1fa0", "sha256": "f77f319fc357ddac044e9fa0de36eb2af4bda23738431b3819ce55f00c1ed9ce"}, "downloads": -1, "filename": "eventail-1.0.6.tar.gz", "has_sig": false, "md5_digest": "7dcbb9c666121a35bb2e978bd2ef1fa0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 24292, "upload_time": "2019-12-05T11:35:14", "upload_time_iso_8601": "2019-12-05T11:35:14.055869Z", "url": "https://files.pythonhosted.org/packages/fb/c1/5d53424c31140e41d6c60d4f065a095a48dcbfe9bc6f7c8ebe35d9eb0a14/eventail-1.0.6.tar.gz"}], "1.0.7": [{"comment_text": "", "digests": {"md5": "c784f7fede34e601e96881055e52f50e", "sha256": "a659d978e2799c944964f62a4139ae61c964d46de3def05616d81a3178f7206e"}, "downloads": -1, "filename": "eventail-1.0.7.tar.gz", "has_sig": false, "md5_digest": "c784f7fede34e601e96881055e52f50e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 24276, "upload_time": "2019-12-06T09:47:59", "upload_time_iso_8601": "2019-12-06T09:47:59.074718Z", "url": "https://files.pythonhosted.org/packages/5f/c5/0294995d024ba51098212f6d711ebc2bd284fa925d3cb7b3b287804e2c4e/eventail-1.0.7.tar.gz"}], "1.1.0": [{"comment_text": "", "digests": {"md5": "c3833290b2cc9287915f192d671f4cfc", "sha256": "bc12e6d80c1908f801c1c6a0bc6ab0242fa54214529e8a8431128edf681f19e4"}, "downloads": -1, "filename": "eventail-1.1.0.tar.gz", "has_sig": false, "md5_digest": "c3833290b2cc9287915f192d671f4cfc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 25987, "upload_time": "2019-12-12T15:29:12", "upload_time_iso_8601": "2019-12-12T15:29:12.342795Z", "url": "https://files.pythonhosted.org/packages/fd/ba/8750cd3e1c4a6291a2cda3341a0d04135bbd484910f1d755a3b8d8b25ec9/eventail-1.1.0.tar.gz"}], "1.2.0": [{"comment_text": "", "digests": {"md5": "60385a3d90c0a092a3627f218f874a11", "sha256": "74352c36036c4c09e70b75bc1f4f455aa714e3d013484fa28789763979cda507"}, "downloads": -1, "filename": "eventail-1.2.0.tar.gz", "has_sig": false, "md5_digest": "60385a3d90c0a092a3627f218f874a11", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 26390, "upload_time": "2020-01-08T15:05:42", "upload_time_iso_8601": "2020-01-08T15:05:42.895541Z", "url": "https://files.pythonhosted.org/packages/f7/98/cdedd8956ff44e8802c447f8dc989149cf4b3f57d7938d51c870b661410d/eventail-1.2.0.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "60385a3d90c0a092a3627f218f874a11", "sha256": "74352c36036c4c09e70b75bc1f4f455aa714e3d013484fa28789763979cda507"}, "downloads": -1, "filename": "eventail-1.2.0.tar.gz", "has_sig": false, "md5_digest": "60385a3d90c0a092a3627f218f874a11", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 26390, "upload_time": "2020-01-08T15:05:42", "upload_time_iso_8601": "2020-01-08T15:05:42.895541Z", "url": "https://files.pythonhosted.org/packages/f7/98/cdedd8956ff44e8802c447f8dc989149cf4b3f57d7938d51c870b661410d/eventail-1.2.0.tar.gz"}]}