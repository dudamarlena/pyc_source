{"info": {"author": "M Griffin", "author_email": "m12.griffin@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 3.5", "Topic :: Scientific/Engineering :: Mathematics"], "description": "=========\nBytesFunc\n=========\n\n:Authors:\n    Michael Griffin\n\n:Version: 2.0.0 for 2020-04-03\n:Copyright: 2014 - 2020\n:License: This document may be distributed under the Apache 2.0 License.\n:Language: Python 3.5 or later\n\n---------------------------------------------------------------------\n\nIntroduction\n============\n\nThe BytesFunc module provides high speed array processing functions for use with\nPython 'bytes' and 'bytearray' objects. These functions are patterned after the\nfunctions in the standard Python \"operator\" module together with some additional \nones from other sources.\n\nThe purpose of these functions is to perform mathematical calculations on \n\"bytes\" and \"bytearray\" objects significantly faster than using native Python.\n\n\n---------------------------------------------------------------------\n\nFunction Summary\n================\n\n\nThe compare operators used for 'ball', 'bany', and 'findindex' are examples\nonly, and other compare operations are available. Many functions will accept\nother parameter combinations of sequences and numeric parameters. See the\ndetails for each function for what parameter combinations are valid.\n\nBrief Description\n-----------------\n\n=========== ==================================================\n  Function       Equivalent to\n=========== ==================================================\n      and\\_  Perform a bitwise AND across the sequence.\n       ball  True if all elements of the sequence meet the match criteria.\n       bany  True if any elements of the sequence meet the match criteria.\n       bmax  Return the maximum value in the sequence.\n       bmin  Return the minimum value in the sequence.\n       bsum  Return the sum of the sequence.\n         eq  True if all elements of the sequence equal the compare value.\n  findindex  Returns the index of the first value in an array to meet the\n             specified criteria.\n         ge  True if all elements of the sequence are greater than or equal to \n             the compare value.\n         gt  True if all elements of the sequence are greater than the compare \n             value.\n     invert  Perform a bitwise invert across the sequence.\n         le  True if all elements of the sequence are less than or equal to the \n             compare value.\n     lshift  Perform a bitwise left shift across the sequence.\n         lt  True if all elements of the sequence are less than the compare \n             value.\n         ne  True if all elements of the sequence are not equal the compare \n             value.\n       or\\_  Perform a bitwise OR across the sequence.\n     rshift  Perform a bitwise right shift across the sequence.\n        xor  Perform a bitwise XOR across the sequence.\n=========== ==================================================\n\n\nPython Equivalent\n-----------------\n\n=========== ==================================================\n  Function       Equivalent to\n=========== ==================================================\n      and\\_ [x & param for x in sequence1]\n       ball all([(x > param) for x in array])\n       bany any([(x > param) for x in array])\n       bmax max(sequence)\n       bmin min(sequence)\n       bsum sum(sequence)\n         eq all([x == param for x in sequence])\n  findindex [x for x,y in enumerate(array) if y > param][0]\n         ge all([x >= param for x in sequence])\n         gt all([x > param for x in sequence])\n     invert [~x for x in sequence1]\n         le all([x <= param for x in sequence])\n     lshift [x << param for x in sequence1]\n         lt all([x < param for x in sequence])\n         ne all([x != param for x in sequence])\n       or\\_ [x | param for x in sequence1]\n     rshift [x >> param for x in sequence1]\n        xor [x ^ param for x in sequence1]\n=========== ==================================================\n\n\n\n---------------------------------------------------------------------\n\nSupported Sequence Types\n========================\n\nBytesFunc supports Python native \"bytes\" and \"bytearray\" objects.\n\n\n---------------------------------------------------------------------\n\nPerformance\n===========\n\nAverage performance increase on x86_64 Ubuntu with GCC is 600 times faster \nthan native Python. Performance will vary depending on the function,  \nwith the performance increase ranging from 7 times to 1500 times. \n\nOther platforms show similar improvements.\n\nDetailed performance figures are listed in the full documentation.\n\n\n---------------------------------------------------------------------\n\nPlatform support\n================\n\nBytesFunc is written in 'C' and uses the standard C libraries to implement the \nunderlying math functions. BytesFunc has been tested on the following platforms.\n\n================= ========  ========================== =========================\nOS                   Bits      Compiler                  Python Version Tested\n================= ========  ========================== =========================\nUbuntu 18.04 LTS   64 bit    GCC                         3.6\nUbuntu 19.10       64 bit    GCC                         3.7\nUbuntu 20.04 beta  64 bit    GCC                         3.8\nDebian 10          32 bit    GCC                         3.7\nDebian 10          64 bit    GCC                         3.7\nOpenSuse 15        64 bit    GCC                         3.6\nCentos 8           64 bit    GCC                         3.6\nFreeBSD 12         64 bit    LLVM                        3.7\nOpenBSD 6.5        64 bit    LLVM                        3.6\nMS Windows 10      64 bit    MS Visual Studio C 2015     3.8\nRaspbian (RPi 3)   32 bit    GCC                         3.7\nUbuntu 19.10 ARM   64 bit    GCC                         3.7\n================= ========  ========================== =========================\n\n* The Raspbian (RPi 3) tests were conducted on a Raspberry Pi 3 ARM CPU running\n  in 32 bit mode. \n* The Ubuntu ARM tests were conducted on a Raspberry Pi 3 ARM CPU running in\n  64 bit mode.\n* All others were conducted using VMs running on x86 hardware. \n\n\n---------------------------------------------------------------------\n\nInstallation\n============\n\nPlease note that this is a Python 3 package. To install using Pip, you will \nneed (with Debian package in brackets):\n\n* The appropriate C compiler and header files (gcc and build-essential).\n* The Python3 development headers (python3-dev).\n* Pip3 together with the corresponding Setuptools (python3-pip).\n\nexample::\n\n\t# Install from PyPI.\n\tpip3 install arrayfunc\n\t# Install from a local copy of the source package (Linux).\n\tpip3 install --no-index --find-links=. arrayfunc\n\t# Windows seems to use \"pip\" instead of \"pip3\" for some reason.\n\tpip install arrayfunc\n\n\n---------------------------------------------------------------------\n\nRelease History\n===============\n\n* 2.0.0 - Added SIMD support for ARMv8 AARCH64. This is 64 bit ARM on a\n          Raspberry Pi3 when running 64 bit Ubuntu. Raspbian is 32 bit only\n          and has 64 bit SIMD vectors. 64 bit ARM has 128 bit SIMD vectors\n          and so offers improved performance.\n* 1.0.0 - First release.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/m1griffin/bytesfunc", "keywords": "bytes and bytearray functions", "license": "Apache License V2.0", "maintainer": "", "maintainer_email": "", "name": "bytesfunc", "package_url": "https://pypi.org/project/bytesfunc/", "platform": "", "project_url": "https://pypi.org/project/bytesfunc/", "project_urls": {"Homepage": "https://github.com/m1griffin/bytesfunc"}, "release_url": "https://pypi.org/project/bytesfunc/2.0.0/", "requires_dist": null, "requires_python": "", "summary": "Fast bytes and bytearray processing functions", "version": "2.0.0"}, "last_serial": 6953250, "releases": {"0.0.0": [{"comment_text": "", "digests": {"md5": "ea9fdd0aecab10961cde14fe673f002d", "sha256": "184119338c8a5e78a20e5512e0745cbebbb795b60825e5bd7f8cb536a29cd0a5"}, "downloads": -1, "filename": "bytesfunc-0.0.0.tar.gz", "has_sig": false, "md5_digest": "ea9fdd0aecab10961cde14fe673f002d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7411, "upload_time": "2019-10-30T00:33:57", "upload_time_iso_8601": "2019-10-30T00:33:57.703154Z", "url": "https://files.pythonhosted.org/packages/4c/32/bdabc84ee26a7e2aa8aff818fc058ca32d52561786d2cd3dbe6231b6e14f/bytesfunc-0.0.0.tar.gz"}], "1.0.0": [{"comment_text": "", "digests": {"md5": "a5c1983034040f6b718842cd73cd8d0d", "sha256": "afe565b930e5a54601f93a8410297c6847fb0d21df268b64eac4e5102df3f965"}, "downloads": -1, "filename": "bytesfunc-1.0.0-cp38-cp38-win_amd64.whl", "has_sig": false, "md5_digest": "a5c1983034040f6b718842cd73cd8d0d", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 235698, "upload_time": "2020-02-21T05:07:59", "upload_time_iso_8601": "2020-02-21T05:07:59.834633Z", "url": "https://files.pythonhosted.org/packages/04/70/3d408cb8722c9c0da71a67ce2fe4d9eba95f5f1cc5b5be432594a3b97e5b/bytesfunc-1.0.0-cp38-cp38-win_amd64.whl"}, {"comment_text": "", "digests": {"md5": "d1de46a4a7b1922d640485a5ce50f6b9", "sha256": "9dd74338672783a0cd022034a307a85aeb8733f4d6942a87a6197d1c18b77223"}, "downloads": -1, "filename": "bytesfunc-1.0.0.tar.gz", "has_sig": false, "md5_digest": "d1de46a4a7b1922d640485a5ce50f6b9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 51104, "upload_time": "2020-02-21T04:58:33", "upload_time_iso_8601": "2020-02-21T04:58:33.157789Z", "url": "https://files.pythonhosted.org/packages/3f/97/7a3865a73451f02fc04c05f4212ad59c38c335a33cef9a34856caa948504/bytesfunc-1.0.0.tar.gz"}], "2.0.0": [{"comment_text": "", "digests": {"md5": "87afa2103697472ec9b2ee4ab7495079", "sha256": "560bb108b0e01fb9a350f9e0b4cc8aa2a978d2ae2a4cf5446830f2408e358baa"}, "downloads": -1, "filename": "bytesfunc-2.0.0-cp38-cp38-win_amd64.whl", "has_sig": false, "md5_digest": "87afa2103697472ec9b2ee4ab7495079", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 235830, "upload_time": "2020-04-04T23:39:40", "upload_time_iso_8601": "2020-04-04T23:39:40.826240Z", "url": "https://files.pythonhosted.org/packages/ed/f7/a3921f2828bb2b6c3c7166a48afdef9f913ab9f8ecc55486e8c0e5119504/bytesfunc-2.0.0-cp38-cp38-win_amd64.whl"}, {"comment_text": "", "digests": {"md5": "3f585475f0e69988e768ff9cf6e90328", "sha256": "f16e4fcc7f1fce4956c64116cacb259852fb3e9cdaf6275cfedfd7177f5cb688"}, "downloads": -1, "filename": "bytesfunc-2.0.0.tar.gz", "has_sig": false, "md5_digest": "3f585475f0e69988e768ff9cf6e90328", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 58689, "upload_time": "2020-04-04T23:30:31", "upload_time_iso_8601": "2020-04-04T23:30:31.397184Z", "url": "https://files.pythonhosted.org/packages/5a/95/a053fd0d123e1d89770dbc76ab302e302b252edb06ec5cd389f520409c75/bytesfunc-2.0.0.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "87afa2103697472ec9b2ee4ab7495079", "sha256": "560bb108b0e01fb9a350f9e0b4cc8aa2a978d2ae2a4cf5446830f2408e358baa"}, "downloads": -1, "filename": "bytesfunc-2.0.0-cp38-cp38-win_amd64.whl", "has_sig": false, "md5_digest": "87afa2103697472ec9b2ee4ab7495079", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 235830, "upload_time": "2020-04-04T23:39:40", "upload_time_iso_8601": "2020-04-04T23:39:40.826240Z", "url": "https://files.pythonhosted.org/packages/ed/f7/a3921f2828bb2b6c3c7166a48afdef9f913ab9f8ecc55486e8c0e5119504/bytesfunc-2.0.0-cp38-cp38-win_amd64.whl"}, {"comment_text": "", "digests": {"md5": "3f585475f0e69988e768ff9cf6e90328", "sha256": "f16e4fcc7f1fce4956c64116cacb259852fb3e9cdaf6275cfedfd7177f5cb688"}, "downloads": -1, "filename": "bytesfunc-2.0.0.tar.gz", "has_sig": false, "md5_digest": "3f585475f0e69988e768ff9cf6e90328", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 58689, "upload_time": "2020-04-04T23:30:31", "upload_time_iso_8601": "2020-04-04T23:30:31.397184Z", "url": "https://files.pythonhosted.org/packages/5a/95/a053fd0d123e1d89770dbc76ab302e302b252edb06ec5cd389f520409c75/bytesfunc-2.0.0.tar.gz"}]}