{"info": {"author": "Joe Trollo", "author_email": "joetrollo@asana.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": ".. image:: https://gitlab.com/joetrollo/archie/raw/master/archie.png\n    :alt: Archie\n    :width: 200 px\n\n=============================\nArchie, the Golden Re-triager\n=============================\n\nA framework for automating Asana projects and workflows.\n\n.. image:: https://img.shields.io/pypi/v/asana-archie.svg\n    :target: https://pypi.python.org/pypi/asana-archie\n    :alt: Package version\n\n.. image:: https://gitlab.com/joetrollo/archie/badges/master/pipeline.svg\n    :target: https://gitlab.com/joetrollo/archie/commits/master\n    :alt: Pipeline status\n\n.. image:: https://img.shields.io/pypi/pyversions/asana-archie.svg\n    :target: https://pypi.org/project/asana-archie\n    :alt: Supported Python versions\n\n.. image::https://gitlab.com/joetrollo/archie/badges/master/coverage.svg\n    :target: https://gitlab.com/joetrollo/archie/commits/master\n    :alt: Coverage\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :target: https://github.com/ambv/black\n    :alt: Code style\n\n\nThis repository is canonically hosted on `GitLab`_ and mirrored to `GitHub`_. Please\ndirect all issues and contributions to the GitLab repository.\n\nInstallation\n------------\n\nArchie is published on `PyPI`_ under the name ``asana-archie``, and can be installed\nwith Pip or your favorite package manager: ``python -m pip install asana-archie``.\n\nConfiguration\n-------------\n\nFirst, create a ``Triager`` that will run your rules. You'll need the GID of the Asana\nproject you're working with, as well as a `personal access token`_ for the Asana API.\n\n.. code-block:: python\n\n   from archie import Triager\n   from archie.sources import PollingSource\n\n   project = PollingSource(\"<project-gid>\")\n   archie = Triager(access_token=\"<access-token>\", task_source=project)\n\nTriaging\n--------\n\nWith that, you can begin defining triage rules that will be applied to incomplete tasks\nin the project:\n\n.. code-block:: python\n\n   from archie.predicates import DueWithin, Overdue, Unassigned\n   from archie.actions import AddComment, AddFollower\n\n   @archie.when(Overdue())\n   def comment_on_overdue(task):\n       return [AddComment(\"This task is overdue!\"), AddFollower(\"user1@domain.com\")]\n\n   @archie.when(Unassigned() & DueWithin(\"2d\"))\n   def comment_on_due_soon(task):\n       return [AddComment(\"This is due soon and needs an owner.\"), AssignTo(\"user2@domain.com\")]\n\n   archie.triage()\n\nSorting\n-------\n\nArchie will also sort the tasks in your project on multiple levels. Each section in your\nproject can have different sorts defined.\n\n.. code-block:: python\n\n   from archie.sorters import DueDateSorter, EnumCustomFieldSorter, LikeSorter\n\n   priority = EnumCustomFieldSorter(\"Priority\", [\"High\", \"Medium\", \"Low\"])\n   due_date = DueDateSorter()\n\n   archie.order(\"Backlog\", by=priority.and_then(due_date))\n   archie.order(\"Feature Requests\", by=LikeSorter())\n   archie.sort()\n\nWorkflows\n---------\n\nFor more complex processes, you can define a multi-stage workflow and have the triager\npush tasks through it. Stages are defined by their name, entry criteria, and actions. A\ntask will automatically be moved between sections or have its custom fields changed to\nreflect its stage in the workflow.\n\n.. code-block:: python\n\n   from archie.actions import AddComment, AssignTo\n   from archie.predicates import AlwaysTrue, Assigned, HasComment, IsComplete\n   from archie.workflows import SectionWorkflow, WorkflowStage\n\n   stages = [\n       WorkflowStage(\n         name=\"Inbox\",\n         to_enter=AlwaysTrue(),\n         on_enter=[],\n       ),\n       WorkflowStage(\n         name=\"In Progress\",\n         to_enter=Assigned(),\n         on_enter=[],\n       ),\n       WorkflowStage(\n         name=\"In Review\",\n         to_enter=HasComment(\"github.com/org/repo/pull/\"),\n         on_enter=[AssignTo(\"someone@domain.com\")],\n       ),\n       WorkflowStage(\n         name=\"Done\",\n         to_enter=IsComplete(),\n         on_enter=[AddComment(\"Good work! \ud83c\udf89\")],\n       ),\n   ]\n\n   workflow = SectionWorkflow(\"My process\", stages)\n   triager.apply(workflow)\n\nRunning\n-------\n\nOnce your rules are defined, simply run your file as any other script with ``python``.\n\nCaveats\n-------\n\n* This framework will only operate correctly on projects that can be viewed as a\n  board\u2014it will not work correctly on old-style list projects.\n* Some components of this framework rely on inspecting tasks' stories. Deleting stories\n  on tasks may result in incorrect behavior of the predicates.\n* You may run into issues in projects that have a large number of incomplete tasks. In\n  mild cases, there will be performance issues where it will take a significant amount\n  of time to sort sections and triage tasks. In extreme cases, components may time out\n  and raise exceptions.\n\nDocumentation\n-------------\n\nFull documentation is hosted on `GitLab Pages`_.\n\nFeature requests and bug reports\n--------------------------------\n\nPlease create `issues on GitLab`_ to request features or report bugs. Maintenance and\nimprovements are provided on a best effort basis. Contributions in the form of new\nideas, additional use cases/examples, and merge requests are welcome!\n\n.. _GitLab: https://gitlab.com/joetrollo/archie\n.. _GitHub: https://github.com/Asana/archie\n.. _PyPI: https://pypi.org/project/asana-archie\n.. _personal access token: https://developers.asana.com/docs/#authentication-basics#personal-access-token\n.. _GitLab Pages: https://joetrollo.gitlab.io/archie\n.. _issues on GitLab: https://gitlab.com/joetrollo/archie/issues\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/joetrollo/archie", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "asana-archie", "package_url": "https://pypi.org/project/asana-archie/", "platform": "", "project_url": "https://pypi.org/project/asana-archie/", "project_urls": {"Documentation": "https://joetrollo.gitlab.io/archie", "Homepage": "https://gitlab.com/joetrollo/archie", "Repository": "https://gitlab.com/joetrollo/archie"}, "release_url": "https://pypi.org/project/asana-archie/0.1.0/", "requires_dist": ["cattrs (>=0.9,<0.10)", "asana (>=0.9,<0.10)", "attrs (>=19.1,<20.0)", "typing_extensions (>=3.7,<4.0)"], "requires_python": ">=3.7,<4.0", "summary": "A framework for automating Asana projects and workflows.", "version": "0.1.0"}, "last_serial": 6412487, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "eaf96e9c785ddd62bfa89c0af0787393", "sha256": "c4180901f422b967ea3e0d77b2526017d5894418da253506a9ccae91c5f22246"}, "downloads": -1, "filename": "asana_archie-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "eaf96e9c785ddd62bfa89c0af0787393", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 32563, "upload_time": "2020-01-08T00:34:30", "upload_time_iso_8601": "2020-01-08T00:34:30.426409Z", "url": "https://files.pythonhosted.org/packages/75/9a/96c89733210a0f39af84a0fc87f53657c08f4e0f4f3a452d870cd6cdf6d0/asana_archie-0.1.0-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "2f6a3a482f4975411ec3dcb929810108", "sha256": "46c67953e5ba4c86dfa1d03ceb14ef5d363ed769e6a44d357dd636c3401304a9"}, "downloads": -1, "filename": "asana-archie-0.1.0.tar.gz", "has_sig": false, "md5_digest": "2f6a3a482f4975411ec3dcb929810108", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 28135, "upload_time": "2020-01-08T00:34:28", "upload_time_iso_8601": "2020-01-08T00:34:28.179056Z", "url": "https://files.pythonhosted.org/packages/04/d1/53f6ebcc2a69446387fa43ae5e14aa0414c58e6322185077396cffb76e70/asana-archie-0.1.0.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "eaf96e9c785ddd62bfa89c0af0787393", "sha256": "c4180901f422b967ea3e0d77b2526017d5894418da253506a9ccae91c5f22246"}, "downloads": -1, "filename": "asana_archie-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "eaf96e9c785ddd62bfa89c0af0787393", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 32563, "upload_time": "2020-01-08T00:34:30", "upload_time_iso_8601": "2020-01-08T00:34:30.426409Z", "url": "https://files.pythonhosted.org/packages/75/9a/96c89733210a0f39af84a0fc87f53657c08f4e0f4f3a452d870cd6cdf6d0/asana_archie-0.1.0-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "2f6a3a482f4975411ec3dcb929810108", "sha256": "46c67953e5ba4c86dfa1d03ceb14ef5d363ed769e6a44d357dd636c3401304a9"}, "downloads": -1, "filename": "asana-archie-0.1.0.tar.gz", "has_sig": false, "md5_digest": "2f6a3a482f4975411ec3dcb929810108", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 28135, "upload_time": "2020-01-08T00:34:28", "upload_time_iso_8601": "2020-01-08T00:34:28.179056Z", "url": "https://files.pythonhosted.org/packages/04/d1/53f6ebcc2a69446387fa43ae5e14aa0414c58e6322185077396cffb76e70/asana-archie-0.1.0.tar.gz"}]}