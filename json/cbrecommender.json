{"info": {"author": "Akash S Panickar", "author_email": "akashsabu@ymail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# cbrecommender\n\ncbrecommender is a Python library for implementing a Content-Based Recommendation Engine.\n\n## Installation\n\nUse the package manager [pip](https://pip.pypa.io/en/stable/) to install cbrecommender.\n\n```bash\npip install cbrecommender\n```\n\n## Usage\n\n```python\n# Import the class 'cbr' for Content-Based Recommender.\nfrom cbrecommender import cbr\n\n# Create the object.\nr = cbr()\n\n# OneHotEncode the features\nr.encode_features(features)\n''' \n* features(pandas.DataFrame) can be anything that signifies the user's preferences.\n* For example, movie genres, news topics, post tags etc.\n* Returns a OneHotEncoded dataframe from the features's comma (,) separated values.\n'''\n\n# Extract user's preferences and build the 'User-Profile'.\nr.fit(features, scores)\n''' \n* features(pandas.DataFrame) must be OneHotEncoded and is that of the items of user's choice.\n* scores(list) denote the user's preference to the corresponding items.\n* For example, it can be rating for a movie, song etc. \n* Returns the 'User-Profile', which is the model.\n '''\n# Recommend items based on User-Profile.\nr.recommend(items, features, [score, num])\n''' \n* items(pandas.DataFrame) which denote those items that the user haven't chosen.\n* features(pandas.DataFrame) is that of the items.\n* score(float) is a non-mandatory parameter that specifies the threshold score for recommending items.\n* num(int) is also a non-mandatory parameter that denotes the number of items to be recommended.\n* Returns items along with their expected_score as a pandas.DataFrame object.\n'''\n```\n\n## Example\n```python\nfrom cbrecommender import cbr\nimport pandas\n```\n```python\ndf = pandas.DataFrame(\n{'movie':['Endgame','Avatar','Titanic','Infinity War','Jurassic World','Black Panther',\n          'Harry Potter-II','The Last Jedi'],\n 'genre':['Action,Adventure,Drama','Action,Adventure,Fantasy','Drama,Romance',\n          'Action,Adventure,Sci-Fi','Action,Adventure,Sci-Fi','Action,Adventure,Sci-Fi',\n          'Adventure,Drama,Fantasy','Action,Adventure,Fantasy']\n})\nprint(df)\n```\n| movie | genre |\n--------|--------\n|Endgame|Action,Adventure,Drama|\n|Avatar|Action,Adventure,Fantasy|\n|Titanic|Drama,Romance|\n|Infinity War|Action,Adventure,Sci-Fi|\n|Jurassic World|Action,Adventure,Sci-Fi|\n|Black Panther|Action,Adventure,Sci-Fi|\n|Harry Potter-II|Adventure,Drama,Fantasy|\n|The Last Jedi|Action,Adventure,Fantasy|\n\n```python\nr = cbr()\ngen = r.encode_features(df.genre)\nprint(gen)\n```\n| action | adventure | drama | fantasy | romance | sci-fi |\n-------|-------|--------|---------|------|------|\n|1|1|1|0|0|0|\n|1|1|0|1|0|0|\n|0|0|1|0|1|0|\n|1|1|0|0|0|1|\n|1|1|0|0|0|1|\n|1|1|0|0|0|1|\n|0|1|1|1|0|0|\n|1|1|0|1|0|0|\n\n```python\nrating = [8.5,7.8,7.8,8.5]\nmodel = r.fit(gen.iloc[:4, :], rating)\nprint(r.user_profile)\n```\n| action | adventure | drama | fantasy | romance | sci-fi |\n-------|-------|--------|---------|------|------|\n|0.2755|0.2755|0.1811|0.0866|0.0866|0.0944|\n\n```python\nrecommendations = r.recommend(df[['movie']].iloc[4:,:], gen.iloc[4:,:])\nprint(recommendations)\n```\n| item| expected score |\n--------|--------\n|Jurassic World|6.45|\n|Black Panther|6.45|\n|Harry Potter-II|6.37|\n|The Last Jedi|5.43|\n\n## Contributing\nPull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.\n\n## License\n[MIT License ](https://github.com/mochatek/cbrecommender/blob/master/LICENSE.txt)", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/mochatek/cbrecommender", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "cbrecommender", "package_url": "https://pypi.org/project/cbrecommender/", "platform": "", "project_url": "https://pypi.org/project/cbrecommender/", "project_urls": {"Homepage": "http://github.com/mochatek/cbrecommender"}, "release_url": "https://pypi.org/project/cbrecommender/0.0.2/", "requires_dist": null, "requires_python": "", "summary": "Library for implementing Content-Based Recommendation System", "version": "0.0.2"}, "last_serial": 7014488, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "36df3ccaf6409d66728570204c00698e", "sha256": "abe6eba71a9a7c24397d7d7ec573c4abad8596e4cfb3e696f57c1b9099b20d30"}, "downloads": -1, "filename": "cbrecommender-0.0.1.tar.gz", "has_sig": false, "md5_digest": "36df3ccaf6409d66728570204c00698e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3468, "upload_time": "2020-04-14T03:57:04", "upload_time_iso_8601": "2020-04-14T03:57:04.750301Z", "url": "https://files.pythonhosted.org/packages/19/cb/76c48a081a678fc87b685a286e1a179906c4df92c448dbe682aa2a7626f9/cbrecommender-0.0.1.tar.gz"}], "0.0.2": [{"comment_text": "", "digests": {"md5": "0a60ab41b7a7cc0105645382f2f8680f", "sha256": "0cbb747cca387c3f1ad4e4555c8137df8834d39c0af3a5754b5c74da345544aa"}, "downloads": -1, "filename": "cbrecommender-0.0.2.tar.gz", "has_sig": false, "md5_digest": "0a60ab41b7a7cc0105645382f2f8680f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3454, "upload_time": "2020-04-14T04:03:09", "upload_time_iso_8601": "2020-04-14T04:03:09.246934Z", "url": "https://files.pythonhosted.org/packages/b7/6f/c5726b0c2af723ad4649ea66afad56841e3a8ac6586c532b819665cffa7d/cbrecommender-0.0.2.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "0a60ab41b7a7cc0105645382f2f8680f", "sha256": "0cbb747cca387c3f1ad4e4555c8137df8834d39c0af3a5754b5c74da345544aa"}, "downloads": -1, "filename": "cbrecommender-0.0.2.tar.gz", "has_sig": false, "md5_digest": "0a60ab41b7a7cc0105645382f2f8680f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3454, "upload_time": "2020-04-14T04:03:09", "upload_time_iso_8601": "2020-04-14T04:03:09.246934Z", "url": "https://files.pythonhosted.org/packages/b7/6f/c5726b0c2af723ad4649ea66afad56841e3a8ac6586c532b819665cffa7d/cbrecommender-0.0.2.tar.gz"}]}