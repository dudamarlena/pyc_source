{"info": {"author": "TU Wien", "author_email": "ismn@geo.tuwien.ac.at", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Programming Language :: Python"], "description": "====\nismn\n====\n\n.. image:: https://travis-ci.org/TUW-GEO/ismn.svg?branch=master\n    :target: https://travis-ci.org/TUW-GEO/ismn\n\n.. image:: https://coveralls.io/repos/TUW-GEO/ismn/badge.png?branch=master\n  :target: https://coveralls.io/r/TUW-GEO/ismn?branch=master\n\n.. image:: https://badge.fury.io/py/ismn.svg\n    :target: http://badge.fury.io/py/ismn\n\n.. image:: https://readthedocs.org/projects/ismn/badge/?version=latest\n   :target: http://ismn.readthedocs.org/\n\nReaders for the data from the International Soil Moisture Database (ISMN).\n\nCitation\n========\n\n.. image:: https://zenodo.org/badge/DOI/10.5281/zenodo.855308.svg\n   :target: https://doi.org/10.5281/zenodo.855308\n\nIf you use the software in a publication then please cite it using the Zenodo DOI.\nBe aware that this badge links to the latest package version.\n\nPlease select your specific version at https://doi.org/10.5281/zenodo.855308 to get the DOI of that version.\nYou should normally always use the DOI for the specific version of your record in citations.\nThis is to ensure that other researchers can access the exact research artefact you used for reproducibility.\n\nYou can find additional information regarding DOI versioning at http://help.zenodo.org/#versioning\n\nInstallation\n============\n\nThis package should be installable through pip:\n\n.. code::\n\n    pip install ismn\n\nThe cartopy-package needs to be installed manually by using the following command:\n\n.. code::\n\n    conda install -c conda-forge cartopy\n\nExample installation script\n---------------------------\n\nThe following script will install miniconda and setup the environment on a UNIX\nlike system. Miniconda will be installed into ``$HOME/miniconda``.\n\n.. code::\n\n   wget https://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh\n   bash miniconda.sh -b -p $HOME/miniconda\n   export PATH=\"$HOME/miniconda/bin:$PATH\"\n   git clone git@github.com:TUW-GEO/ismn.git ismn\n   cd ismn\n   conda env create -f environment.yml\n   source activate ismn\n   pip install -r test-requirements.txt\n\nThis script adds ``$HOME/miniconda/bin`` temporarily to the ``PATH`` to do this\npermanently add ``export PATH=\"$HOME/miniconda/bin:$PATH\"`` to your ``.bashrc``\nor ``.zshrc``\n\nThe second to last line in the example activates the ``ismn`` environment.\n\nAfter that you should be able to run:\n\n.. code::\n\n    python setup.py test\n\nto run the test suite.\n\nDescription\n===========\n\nISMN data can be downloaded for free after registration from the `ISMN Website\n<http://ismn.geo.tuwien.ac.at/>`_\n\nIn case of the ISMN, two different formats are provided:\n\n* Variables stored in separate files (CEOP formatted)\n\n\tthis format is supported 100% and should work with all examples\n\n* Variables stored in separate files (Header+values)\n\n\tthis format is supported 100% and should work with all examples\n\nIf you downloaded ISMN data in one of the supported formats in the past it can\nbe that station names are not recognized correctly because they contained the\n'_' character which is supposed to be the separator. If you experience problems\nbecause of this please download new data from the ISMN since this issue should\nbe fixed.\n\nLandcover Classification\n------------------------\nThe ISMN data comes with information about landcover classification from the\nESA CCI land cover project (years 2000, 2005 and 2010) as well as from in-situ\nmeasurements. To use ESA CCI land cover variables for filtering the data in the get_dataset_ids\nfunction, set the keyword parameters (landcover_2000, landcover_2005 or landcover_2010)\nto the corresponding integer values (e.g. 10) in the list below. To get a list of\npossible values for filtering by in-situ values (keyword parameter: \"landcover_insitu\"),\ncall the get_landcover_types method of your ISMN_Interface object and set landcover='landcover_insitu'.\n\n* 10: Cropland, rainfed\n* 11: Cropland, rainfed / Herbaceous cover\n* 12: Cropland, rainfed / Tree or shrub cover,\n* 20: Cropland, irrigated or post-flooding,\n* 30: Mosaic cropland (>50%) / natural vegetation (tree, shrub, herbaceous,\n* 40: Mosaic natural vegetation (tree, shrub, herbaceous cover) (>50%) / cropland (<50%),\n* 50: Tree cover, broadleaved, evergreen, Closed to open (>15%),\n* 60: Tree cover, broadleaved, deciduous, Closed to open (>15%),\n* 61: Tree cover, broadleaved, deciduous, Closed (>40%),\n* 62: Tree cover, broadleaved, deciduous, Open (15-40%),\n* 70: Tree cover, needleleaved, evergreen, closed to open (>15%),\n* 71: Tree cover, needleleaved, evergreen, closed (>40%),\n* 72: Tree cover, needleleaved, evergreen, open (15-40%),\n* 80: Tree cover, needleleaved, deciduous, closed to open (>15%),\n* 81: Tree cover, needleleaved, deciduous, closed (>40%),\n* 82: Tree cover, needleleaved, deciduous, open (15-40%),\n* 90: Tree cover, mixed leaf type (broadleaved and needleleaved),\n* 100: Mosaic tree and shrub (>50%) / herbaceous cover (<50%),\n* 110: Mosaic herbaceous cover (>50%) / tree and shrub (<50%),\n* 120: Shrubland,\n* 121: Shrubland / Evergreen Shrubland,\n* 122: Shrubland / Deciduous Shrubland,\n* 130: Grassland,\n* 140: Lichens and mosses,\n* 150: Sparse vegetation (tree, shrub, herbaceous cover) (<15%),\n* 152: Sparse vegetation (tree, shrub, herbaceous cover) (<15%) / Sparse shrub (<15%),\n* 153: Sparse vegetation (tree, shrub, herbaceous cover) (<15%) / Sparse herbaceous cover (<15%),\n* 160: Tree cover, flooded, fresh or brakish water,\n* 170: Tree cover, flooded, saline water,\n* 180: Shrub or herbaceous cover, flooded, fresh/saline/brakish water,\n* 190: Urban areas,\n* 200: Bare areas,\n* 201: Consolidated bare areas,\n* 202: Unconsolidated bare areas,\n* 210: Water,\n* 220: Permanent snow and ice,\n\nClimate Classification\n----------------------\nThe ISMN data comes with information about climate classification from the Koeppen-Geiger\nClimate Classification (2007) as well as in-situ measurements. To use\nKoeppen-Geiger variable for filtering the data in the get_dataset_ids function, set the\nkeyword parameter \"climate\" to the corresponding keys (e.g. 'Af') in the list below. To get a list of\npossible values for filtering by in-situ values (keyword parameter: \"climate_insitu\"), call the\nget_climate_types method of your ISMN_Interface object and set climate='climate_insitu'.\n\n* Af: Tropical Rainforest\n* Am: Tropical Monsoon\n* As: Tropical Savanna Dry\n* Aw: Tropical Savanna Wet\n* BWk: Arid Desert Cold\n* BWh: Arid Desert Hot\n* BWn: Arid Desert With Frequent Fog\n* BSk: Arid Steppe Cold\n* BSh: Arid Steppe Hot\n* BSn: Arid Steppe With Frequent Fog\n* Csa: Temperate Dry Hot Summer\n* Csb: Temperate Dry Warm Summer\n* Csc: Temperate Dry Cold Summer\n* Cwa: Temperate Dry Winter, Hot Summer\n* Cwb: Temperate Dry Winter, Warm Summer\n* Cwc: Temperate Dry Winter, Cold Summer\n* Cfa: Temperate Without Dry Season, Hot Summer\n* Cfb: Temperate Without Dry Season, Warm Summer\n* Cfc: Temperate Without Dry Season, Cold Summer\n* Dsa: Cold Dry Summer, Hot Summer\n* Dsb: Cold Dry Summer, Warm Summer\n* Dsc: Cold Dry Summer, Cold Summer\n* Dsd: Cold Dry Summer, Very Cold Winter\n* Dwa: Cold Dry Winter, Hot Summer\n* Dwb: Cold Dry Winter, Warm Summer\n* Dwc: Cold Dry Winter, Cold Summer\n* Dwd: Cold Dry Winter, Very Cold Winter\n* Dfa: Cold Dry Without Dry Season, Hot Summer\n* Dfb: Cold Dry Without Dry Season, Warm Summer\n* Dfc: Cold Dry Without Dry Season, Cold Summer\n* Dfd: Cold Dry Without Dry Season, Very Cold Winter\n* ET: Polar Tundra\n* EF: Polar Eternal Winter\n* W: Water\n\nDocumentation\n-------------\nhttps://ismn.readthedocs.io\n\nContribute\n==========\n\nWe are happy if you want to contribute. Please raise an issue explaining what\nis missing or if you find a bug. We will also gladly accept pull requests\nagainst our master branch for new features or bug fixes.\n\nDevelopment setup\n-----------------\n\nFor Development we also recommend a ``conda`` environment. You can create one\nincluding test dependencies and debugger by running\n``conda env create -f environment.yml``. This will create a new\n``ismn`` environment which you can activate by using\n``source activate ismn``.\n\nGuidelines\n----------\n\nIf you want to contribute please follow these steps:\n\n- Fork the ismn repository to your account\n- Clone the repository\n- make a new feature branch from the ismn master branch\n- Add your feature\n- Please include tests for your contributions in one of the test directories.\n  We use py.test so a simple function called test_my_feature is enough\n- submit a pull request to our master branch\n\n\nNote\n====\n\nThis project has been set up using PyScaffold 2.5.7. For details and usage\ninformation on PyScaffold see http://pyscaffold.readthedocs.org/.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://ismn.geo.tuwien.ac.at", "keywords": "", "license": "mit", "maintainer": "", "maintainer_email": "", "name": "ismn", "package_url": "https://pypi.org/project/ismn/", "platform": "", "project_url": "https://pypi.org/project/ismn/", "project_urls": {"Homepage": "http://ismn.geo.tuwien.ac.at"}, "release_url": "https://pypi.org/project/ismn/0.3.2/", "requires_dist": null, "requires_python": "", "summary": "Readers for the data from the International Soil Moisture Database", "version": "0.3.2"}, "last_serial": 6087402, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "1cd8f2033aca8f6a82f69249b414d617", "sha256": "f9ee5ebf5863ece4ddd6bfec0b54a6346e05acfa85f1b76830f5c106687c67ef"}, "downloads": -1, "filename": "ismn-0.1.tar.gz", "has_sig": false, "md5_digest": "1cd8f2033aca8f6a82f69249b414d617", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1184344, "upload_time": "2017-08-31T09:40:20", "upload_time_iso_8601": "2017-08-31T09:40:20.090856Z", "url": "https://files.pythonhosted.org/packages/26/77/91eea4fa8d670d36ec8b08b70766080336e4b2c9b6a61e7d3cdc9cb06668/ismn-0.1.tar.gz"}], "0.2": [{"comment_text": "", "digests": {"md5": "82ab312c4fd4c67b0eb6af1ac80b5d71", "sha256": "63ca9d4f68e93a67f4b9a4472a67df6722caaacefbdc84b24a04ecf6b2b7eb8f"}, "downloads": -1, "filename": "ismn-0.2.tar.gz", "has_sig": false, "md5_digest": "82ab312c4fd4c67b0eb6af1ac80b5d71", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1184455, "upload_time": "2017-08-31T14:33:42", "upload_time_iso_8601": "2017-08-31T14:33:42.823451Z", "url": "https://files.pythonhosted.org/packages/f5/11/46ddcc12199640a6f7f4495cd5473f0e45b87f9b89fed61f81f70a492aa6/ismn-0.2.tar.gz"}], "0.3": [{"comment_text": "", "digests": {"md5": "f09d0f2e244d27911587f4a411792141", "sha256": "40d40ce5cb09ee4846248ebb2acbf760b9f0753ceca0943a656cc9ad6be7a559"}, "downloads": -1, "filename": "ismn-0.3.tar.gz", "has_sig": false, "md5_digest": "f09d0f2e244d27911587f4a411792141", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1338950, "upload_time": "2019-02-21T14:55:42", "upload_time_iso_8601": "2019-02-21T14:55:42.319163Z", "url": "https://files.pythonhosted.org/packages/78/d9/7d11f9dd090d5ac8c0308a82dbc0104045362d9ccdd935093dc79d3338fc/ismn-0.3.tar.gz"}], "0.3.1": [{"comment_text": "", "digests": {"md5": "eb928b030fee20808cc11051acb7c5ed", "sha256": "e5a3a73dfe8295df7ee4f1be2e912b3b0284ffc8e468bfdf192accb2b1c90235"}, "downloads": -1, "filename": "ismn-0.3.1.tar.gz", "has_sig": false, "md5_digest": "eb928b030fee20808cc11051acb7c5ed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1335729, "upload_time": "2019-05-10T13:53:44", "upload_time_iso_8601": "2019-05-10T13:53:44.407274Z", "url": "https://files.pythonhosted.org/packages/d6/17/454b770fd9a84c84e2f13f49bb7a9c3318f747e0cfdc98b34382c2d0ddb8/ismn-0.3.1.tar.gz"}], "0.3.2": [{"comment_text": "", "digests": {"md5": "4437b2bdbd5c5217210a6d2d835551fd", "sha256": "daeb134fb15588a05035478ef5c49ed05f9d78f2901dbeeb7cb10cb8791307ca"}, "downloads": -1, "filename": "ismn-0.3.2.tar.gz", "has_sig": false, "md5_digest": "4437b2bdbd5c5217210a6d2d835551fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1339418, "upload_time": "2019-11-06T13:39:44", "upload_time_iso_8601": "2019-11-06T13:39:44.005834Z", "url": "https://files.pythonhosted.org/packages/4a/72/a9c4027c376c7c532e83123015a2f2e5207a9b68f979c9b139f75587a198/ismn-0.3.2.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "4437b2bdbd5c5217210a6d2d835551fd", "sha256": "daeb134fb15588a05035478ef5c49ed05f9d78f2901dbeeb7cb10cb8791307ca"}, "downloads": -1, "filename": "ismn-0.3.2.tar.gz", "has_sig": false, "md5_digest": "4437b2bdbd5c5217210a6d2d835551fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1339418, "upload_time": "2019-11-06T13:39:44", "upload_time_iso_8601": "2019-11-06T13:39:44.005834Z", "url": "https://files.pythonhosted.org/packages/4a/72/a9c4027c376c7c532e83123015a2f2e5207a9b68f979c9b139f75587a198/ismn-0.3.2.tar.gz"}]}