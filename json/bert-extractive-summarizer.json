{"info": {"author": "Derek Miller", "author_email": "dmmiller612@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# Bert Extractive Summarizer\n\n[![Build Status](https://travis-ci.com/dmmiller612/bert-extractive-summarizer.svg?branch=master)](https://travis-ci.com/github/dmmiller612/bert-extractive-summarizer)\n[![license](https://img.shields.io/github/license/mashape/apistatus.svg?maxAge=2592000)](https://github.com/dmmiller612/bert-extractive-summarizer)\n<img src=\"https://img.shields.io/pypi/v/bert-extractive-summarizer.svg\" />\n\nThis repo is the generalization of the lecture-summarizer repo. This tool utilizes the HuggingFace Pytorch transformers library\nto run extractive summarizations. This works by first embedding the sentences, then running a clustering algorithm, finding \nthe sentences that are closest to the cluster's centroids. This library also uses coreference techniques, utilizing the \nhttps://github.com/huggingface/neuralcoref library to resolve words in summaries that need more context. The greedyness of \nthe neuralcoref library can be tweaked in the CoreferenceHandler class.\n\nPaper: https://arxiv.org/abs/1906.04165\n\n### Try the Online Demo:\n\n[Distill Bert Summarization Demo](https://smrzr.io)\n\n## Install\n\n```bash\npip install bert-extractive-summarizer\n```\n\n#### We use spaCy 2.1.3 by default to support neuralcoref 4.0 (there is currently an issue with Spacy 2.1.4 that produces segmentation faults). If you want to use the latest spaCy, you'll either have to build neuralcoref 4.0 from source ([details](https://github.com/huggingface/neuralcoref/issues/197)) or don't use coreference resolution at all.\n```bash\npip install spacy==2.1.3\npip install transformers==2.2.2\npip install neuralcoref\n```\n\n#### Coreference functionality with neuralcoref requires a spaCy model, which has to be downloaded separately. \nThe default model is small English spaCy model (en_core_web_sm, 11Mb) and is installed automaticaly with this package. To use other model you'll have to install it manually.\n\nExample: installing medium (91 Mb) English model (for more models see [spaCy documentation](https://spacy.io/usage/models)). \n```bash\npython -m spacy download en_core_web_md\n```\n\n## How to Use\n\n#### Simple Example\n```python\nfrom summarizer import Summarizer\n\nbody = 'Text body that you want to summarize with BERT'\nbody2 = 'Something else you want to summarize with BERT'\nmodel = Summarizer()\nmodel(body)\nmodel(body2)\n```\n\n#### Simple Example with coreference\n```python\nfrom summarizer import Summarizer\nfrom summarizer.coreference_handler import CoreferenceHandler\n\nhandler = CoreferenceHandler(greedyness=.4)\n# How coreference works:\n# >>>handler.process('''My sister has a dog. She loves him.''', min_length=2)\n# ['My sister has a dog.', 'My sister loves a dog.']\n\nbody = 'Text body that you want to summarize with BERT'\nbody2 = 'Something else you want to summarize with BERT'\nmodel = Summarizer(sentence_handler=handler)\nmodel(body)\nmodel(body2)\n```\n\n#### Simple Example with custom model (we alwsys have to set output_hidden_states=True in model config)\n```python\nfrom transformers import *\n\n# Load model, model config and tokenizer via Transformers\ncustom_config = AutoConfig.from_pretrained('allenai/scibert_scivocab_uncased')\ncustom_config.output_hidden_states=True\ncustom_tokenizer = AutoTokenizer.from_pretrained('allenai/scibert_scivocab_uncased')\ncustom_model = AutoModel.from_pretrained('allenai/scibert_scivocab_uncased', config=custom_config)\n\nfrom summarizer import Summarizer\n\nbody = 'Text body that you want to summarize with BERT'\nbody2 = 'Something else you want to summarize with BERT'\nmodel = Summarizer(custom_model=custom_model, custom_tokenizer=custom_tokenizer)\nmodel(body)\nmodel(body2)\n```\n\n#### Large Example\n\n```python\nfrom summarizer import Summarizer\n\nbody = '''\nThe Chrysler Building, the famous art deco New York skyscraper, will be sold for a small fraction of its previous sales price.\nThe deal, first reported by The Real Deal, was for $150 million, according to a source familiar with the deal.\nMubadala, an Abu Dhabi investment fund, purchased 90% of the building for $800 million in 2008.\nReal estate firm Tishman Speyer had owned the other 10%.\nThe buyer is RFR Holding, a New York real estate company.\nOfficials with Tishman and RFR did not immediately respond to a request for comments.\nIt's unclear when the deal will close.\nThe building sold fairly quickly after being publicly placed on the market only two months ago.\nThe sale was handled by CBRE Group.\nThe incentive to sell the building at such a huge loss was due to the soaring rent the owners pay to Cooper Union, a New York college, for the land under the building.\nThe rent is rising from $7.75 million last year to $32.5 million this year to $41 million in 2028.\nMeantime, rents in the building itself are not rising nearly that fast.\nWhile the building is an iconic landmark in the New York skyline, it is competing against newer office towers with large floor-to-ceiling windows and all the modern amenities.\nStill the building is among the best known in the city, even to people who have never been to New York.\nIt is famous for its triangle-shaped, vaulted windows worked into the stylized crown, along with its distinctive eagle gargoyles near the top.\nIt has been featured prominently in many films, including Men in Black 3, Spider-Man, Armageddon, Two Weeks Notice and Independence Day.\nThe previous sale took place just before the 2008 financial meltdown led to a plunge in real estate prices.\nStill there have been a number of high profile skyscrapers purchased for top dollar in recent years, including the Waldorf Astoria hotel, which Chinese firm Anbang Insurance purchased in 2016 for nearly $2 billion, and the Willis Tower in Chicago, which was formerly known as Sears Tower, once the world's tallest.\nBlackstone Group (BX) bought it for $1.3 billion 2015.\nThe Chrysler Building was the headquarters of the American automaker until 1953, but it was named for and owned by Chrysler chief Walter Chrysler, not the company itself.\nWalter Chrysler had set out to build the tallest building in the world, a competition at that time with another Manhattan skyscraper under construction at 40 Wall Street at the south end of Manhattan. He kept secret the plans for the spire that would grace the top of the building, building it inside the structure and out of view of the public until 40 Wall Street was complete.\nOnce the competitor could rise no higher, the spire of the Chrysler building was raised into view, giving it the title.\n'''\n\nmodel = Summarizer()\nresult = model(body, min_length=60)\nfull = ''.join(result)\nprint(full)\n\"\"\"\nThe Chrysler Building, the famous art deco New York skyscraper, will be sold for a small fraction of its previous sales price. \nThe building sold fairly quickly after being publicly placed on the market only two months ago.\nThe incentive to sell the building at such a huge loss was due to the soaring rent the owners pay to Cooper Union, a New York college, for the land under the building.'\nStill the building is among the best known in the city, even to people who have never been to New York.\n\"\"\"\n```\n\n## Summarizer Options\n\n```\nmodel = Summarizer(\n    model: str #This gets used by the hugging face bert library to load the model, you can supply a custom trained model here\n    hidden: int # Needs to be negative, but allows you to pick which layer you want the embeddings to come from.\n    custom_model: Custom model can be supplied here,\n    custom_tokenizer: Custom tokenizer can be supplied here,\n    reduce_option: str # It can be 'mean', 'median', or 'max'. This reduces the embedding layer for pooling.\n    greedyness: float # number between 0 and 1. It is used for the coreference model. Anywhere from 0.35 to 0.45 seems to work well.\n    sentence_handler: The handler to process sentences. If want to use coreference, instantiate and pass CoreferenceHandler instance\n)\n\nmodel(\n    body: str # The string body that you want to summarize\n    ratio: float # The ratio of sentences that you want for the final summary\n    min_length: int # Parameter to specify to remove sentences that are less than 40 characters\n    max_length: int # Parameter to specify to remove sentences greater than the max length\n)\n```\n\n## Running the Service\n\nThere is a provided flask service and corresponding Dockerfile. Running the service is simple, and can be done though \nthe Makefile with the two commands:\n\n```\nmake docker-service-build\nmake docker-service-run\n```\n\nThis will use the Bert-base-uncased model, which has a small representation. The docker run also accepts a variety of \narguments for custom and different models. This can be done through a command such as:\n\n```\ndocker build -t summary-service -f Dockerfile.service ./\ndocker run --rm -it -p 5000:5000 summary-service:latest -model bert-large-uncased\n```\n\nOther arguments can also be passed to the server. Below includes the list of available arguments.\n\n* -greediness: Float parameter that determines how greedy nueralcoref should be\n* -reduce: Determines the reduction statistic of the encoding layer (mean, median, max).\n* -hidden: Determines the hidden layer to use for embeddings (default is -2)\n* -port: Determines the port to use.\n* -host: Determines the host to use.\n\nOnce the service is running, you can make a summarization command at the `http://localhost:5000/summarize` endpoint. \nThis endpoint accepts a text/plain input which represents the text that you want to summarize. Parameters can also be \npassed as request arguments. The accepted arguments are:\n\n* ratio: Ratio of sentences to summarize to from the original body. (default to 0.2)\n* min_length: The minimum length to accept as a sentence. (default to 25)\n* max_length: The maximum length to accept as a sentence. (default to 500)\n\nAn example of a request is the following:\n\n```\nPOST http://localhost:5000/summarize?ratio=0.1\n\nContent-type: text/plain\n\nBody:\nThe Chrysler Building, the famous art deco New York skyscraper, will be sold for a small fraction of its previous sales price.\nThe deal, first reported by The Real Deal, was for $150 million, according to a source familiar with the deal.\nMubadala, an Abu Dhabi investment fund, purchased 90% of the building for $800 million in 2008.\nReal estate firm Tishman Speyer had owned the other 10%.\nThe buyer is RFR Holding, a New York real estate company.\nOfficials with Tishman and RFR did not immediately respond to a request for comments.\nIt's unclear when the deal will close.\nThe building sold fairly quickly after being publicly placed on the market only two months ago.\nThe sale was handled by CBRE Group.\nThe incentive to sell the building at such a huge loss was due to the soaring rent the owners pay to Cooper Union, a New York college, for the land under the building.\nThe rent is rising from $7.75 million last year to $32.5 million this year to $41 million in 2028.\nMeantime, rents in the building itself are not rising nearly that fast.\nWhile the building is an iconic landmark in the New York skyline, it is competing against newer office towers with large floor-to-ceiling windows and all the modern amenities.\nStill the building is among the best known in the city, even to people who have never been to New York.\nIt is famous for its triangle-shaped, vaulted windows worked into the stylized crown, along with its distinctive eagle gargoyles near the top.\nIt has been featured prominently in many films, including Men in Black 3, Spider-Man, Armageddon, Two Weeks Notice and Independence Day.\nThe previous sale took place just before the 2008 financial meltdown led to a plunge in real estate prices.\nStill there have been a number of high profile skyscrapers purchased for top dollar in recent years, including the Waldorf Astoria hotel, which Chinese firm Anbang Insurance purchased in 2016 for nearly $2 billion, and the Willis Tower in Chicago, which was formerly known as Sears Tower, once the world's tallest.\nBlackstone Group (BX) bought it for $1.3 billion 2015.\nThe Chrysler Building was the headquarters of the American automaker until 1953, but it was named for and owned by Chrysler chief Walter Chrysler, not the company itself.\nWalter Chrysler had set out to build the tallest building in the world, a competition at that time with another Manhattan skyscraper under construction at 40 Wall Street at the south end of Manhattan. He kept secret the plans for the spire that would grace the top of the building, building it inside the structure and out of view of the public until 40 Wall Street was complete.\nOnce the competitor could rise no higher, the spire of the Chrysler building was raised into view, giving it the title.\n\nResponse:\n\n{\n    \"summary\": \"The Chrysler Building, the famous art deco New York skyscraper, will be sold for a small fraction of its previous sales price. The buyer is RFR Holding, a New York real estate company. The incentive to sell the building at such a huge loss was due to the soaring rent the owners pay to Cooper Union, a New York college, for the land under the building.\"\n}\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/dmmiller612/bert-extractive-summarizer/archive/0.4.2.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dmmiller612/bert-extractive-summarizer", "keywords": "bert,pytorch,machine learning,deep learning,extractive summarization,summary", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "bert-extractive-summarizer", "package_url": "https://pypi.org/project/bert-extractive-summarizer/", "platform": "", "project_url": "https://pypi.org/project/bert-extractive-summarizer/", "project_urls": {"Download": "https://github.com/dmmiller612/bert-extractive-summarizer/archive/0.4.2.tar.gz", "Homepage": "https://github.com/dmmiller612/bert-extractive-summarizer"}, "release_url": "https://pypi.org/project/bert-extractive-summarizer/0.4.2/", "requires_dist": null, "requires_python": "", "summary": "Extractive Text Summarization with BERT", "version": "0.4.2"}, "last_serial": 7013717, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "6d2512b442ea9b5a5446250d69756668", "sha256": "b83f9af70733adfa9ea59e3cd36ea38280a90470eca3949526bc1f224f3599b0"}, "downloads": -1, "filename": "bert-extractive-summarizer-0.1.0.tar.gz", "has_sig": false, "md5_digest": "6d2512b442ea9b5a5446250d69756668", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3143, "upload_time": "2019-05-11T15:41:37", "upload_time_iso_8601": "2019-05-11T15:41:37.443858Z", "url": "https://files.pythonhosted.org/packages/c8/b2/c04991fdc9c9a747cdc93022a1c337e61a6ef0b6f2e90c6b1d9194e1a24b/bert-extractive-summarizer-0.1.0.tar.gz"}], "0.1.1": [{"comment_text": "", "digests": {"md5": "3313a07438b11c4a31ba3854417a6e20", "sha256": "fb2838e56f01437f9e6cb789e23ab9026649d3903dbc16300f52541e52c6cdce"}, "downloads": -1, "filename": "bert-extractive-summarizer-0.1.1.tar.gz", "has_sig": false, "md5_digest": "3313a07438b11c4a31ba3854417a6e20", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3285, "upload_time": "2019-05-11T15:55:26", "upload_time_iso_8601": "2019-05-11T15:55:26.871803Z", "url": "https://files.pythonhosted.org/packages/e4/da/478ee1808e6476eeedcbb4a7d56351c947743be5a5548d2e1226a5f6553f/bert-extractive-summarizer-0.1.1.tar.gz"}], "0.1.2": [{"comment_text": "", "digests": {"md5": "ee75a8046fa3ac2445056ea74444f963", "sha256": "d4d994ec697eb0998501b184a66a482877adac3875cf40f6cee5f497e28f4a01"}, "downloads": -1, "filename": "bert-extractive-summarizer-0.1.2.tar.gz", "has_sig": false, "md5_digest": "ee75a8046fa3ac2445056ea74444f963", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5151, "upload_time": "2019-05-12T13:49:42", "upload_time_iso_8601": "2019-05-12T13:49:42.839660Z", "url": "https://files.pythonhosted.org/packages/8f/10/e32182bb940a81872879bfe7188e5fff16f72e20646b59f24a33613e9029/bert-extractive-summarizer-0.1.2.tar.gz"}], "0.1.3": [{"comment_text": "", "digests": {"md5": "f4e6f27e3d021cbf38a511db53ea743d", "sha256": "c02471a80a424bd1d1a136d1c262677f2bb9e98d4e7639c56a1b896fe9c7743e"}, "downloads": -1, "filename": "bert-extractive-summarizer-0.1.3.tar.gz", "has_sig": false, "md5_digest": "f4e6f27e3d021cbf38a511db53ea743d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5752, "upload_time": "2019-05-14T12:53:58", "upload_time_iso_8601": "2019-05-14T12:53:58.444784Z", "url": "https://files.pythonhosted.org/packages/0b/c7/07c6cc9a196285b094eb52187b68f6c0224aa58e29c522663dd33b7e2cb3/bert-extractive-summarizer-0.1.3.tar.gz"}], "0.1.4": [{"comment_text": "", "digests": {"md5": "f826e5ab4f7b15340e90260a9c5295d0", "sha256": "7cba0f713de9f5759a0ede5b7046c8601bb1e5642603c2cf9ed575be2a262938"}, "downloads": -1, "filename": "bert-extractive-summarizer-0.1.4.tar.gz", "has_sig": false, "md5_digest": "f826e5ab4f7b15340e90260a9c5295d0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5823, "upload_time": "2019-05-14T13:03:00", "upload_time_iso_8601": "2019-05-14T13:03:00.196516Z", "url": "https://files.pythonhosted.org/packages/91/86/2ae612fe167bd90fc2c185159386e19c9e2db41ab41df4bee42c1907ccda/bert-extractive-summarizer-0.1.4.tar.gz"}], "0.1.5": [{"comment_text": "", "digests": {"md5": "c7f798dad6bc8e247db7f762ce989193", "sha256": "08bbecfdb96df6cb27a98a255d6fd747ae16b52d75e87ec102395c80e6195ace"}, "downloads": -1, "filename": "bert-extractive-summarizer-0.1.5.tar.gz", "has_sig": false, "md5_digest": "c7f798dad6bc8e247db7f762ce989193", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5996, "upload_time": "2019-09-28T14:26:53", "upload_time_iso_8601": "2019-09-28T14:26:53.765846Z", "url": "https://files.pythonhosted.org/packages/6d/90/2c6de5c235980787dc5b68aae198bb18ef2a50b9e7d65808f9a407d24ddf/bert-extractive-summarizer-0.1.5.tar.gz"}], "0.1.6": [{"comment_text": "", "digests": {"md5": "561d58443ab27fb7b469bb27fcc7dfbf", "sha256": "aa85ab1505ad42d293f8d9f9e33cf38e763fd991c03f9be630e8bfd295b665ca"}, "downloads": -1, "filename": "bert-extractive-summarizer-0.1.6.tar.gz", "has_sig": false, "md5_digest": "561d58443ab27fb7b469bb27fcc7dfbf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6015, "upload_time": "2019-09-28T14:53:21", "upload_time_iso_8601": "2019-09-28T14:53:21.853119Z", "url": "https://files.pythonhosted.org/packages/c4/b8/095739284426231d841cc3b5a8920c3c8708e816d2c43e411756eb7340d5/bert-extractive-summarizer-0.1.6.tar.gz"}], "0.2.0": [{"comment_text": "", "digests": {"md5": "359be76161061ac077fd5cb0ec0f2e5b", "sha256": "b1115dedcc0b8e154250dc4aafd98281e7bbec9d10a76a42d6f3644ab18e7d06"}, "downloads": -1, "filename": "bert-extractive-summarizer-0.2.0.tar.gz", "has_sig": false, "md5_digest": "359be76161061ac077fd5cb0ec0f2e5b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6026, "upload_time": "2019-09-29T16:57:57", "upload_time_iso_8601": "2019-09-29T16:57:57.846778Z", "url": "https://files.pythonhosted.org/packages/42/0e/3a6e89a8af9bc06a47159a411ea534baad20ba95043d0da9e9e8e68308f0/bert-extractive-summarizer-0.2.0.tar.gz"}], "0.2.1": [{"comment_text": "", "digests": {"md5": "ed5f1bac013e4849e2c2387f3fdaf000", "sha256": "70abcdcef36e4c898ceb3f2bc9d213b990271e05d5eb35b35f1ac19a3fa3b560"}, "downloads": -1, "filename": "bert-extractive-summarizer-0.2.1.tar.gz", "has_sig": false, "md5_digest": "ed5f1bac013e4849e2c2387f3fdaf000", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7098, "upload_time": "2019-10-25T02:28:39", "upload_time_iso_8601": "2019-10-25T02:28:39.211055Z", "url": "https://files.pythonhosted.org/packages/12/0a/985c2147fd01bb095f3df8cedce7f9338644147174f6e8258c6bcfc4bfc1/bert-extractive-summarizer-0.2.1.tar.gz"}], "0.2.2": [{"comment_text": "", "digests": {"md5": "b17f7649eb6a39160dbc44efa3a80444", "sha256": "9db357f368ef0f4e6092d841c9da2d7b8795728de7bbc0ab8f7af451f494dbe9"}, "downloads": -1, "filename": "bert-extractive-summarizer-0.2.2.tar.gz", "has_sig": false, "md5_digest": "b17f7649eb6a39160dbc44efa3a80444", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7132, "upload_time": "2019-11-19T00:06:38", "upload_time_iso_8601": "2019-11-19T00:06:38.130803Z", "url": "https://files.pythonhosted.org/packages/cb/ee/2db102975d9ce3a2c0e975c0f2a93a19f97e8891bbaa17232d49d21f7670/bert-extractive-summarizer-0.2.2.tar.gz"}], "0.3.0": [{"comment_text": "", "digests": {"md5": "32910f0a070d17289ecec98d677aed7e", "sha256": "a14640d4dd4ce5c9c37bd29a072844cbc91ba14f484253175f1af6dee4a07cb6"}, "downloads": -1, "filename": "bert-extractive-summarizer-0.3.0.tar.gz", "has_sig": false, "md5_digest": "32910f0a070d17289ecec98d677aed7e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9095, "upload_time": "2019-12-16T03:34:53", "upload_time_iso_8601": "2019-12-16T03:34:53.167845Z", "url": "https://files.pythonhosted.org/packages/82/27/4e5fea4796002d4c13596a7ca5515fa97851d8142ae0d8d3bbd3d869e67d/bert-extractive-summarizer-0.3.0.tar.gz"}], "0.4.0": [{"comment_text": "", "digests": {"md5": "5c95d738a75a3eef12502c8a570eb7d4", "sha256": "baf8189e04e4435eb8d46a9a0ec62705975351bc2fa62a4eb822133102cbcb36"}, "downloads": -1, "filename": "bert-extractive-summarizer-0.4.0.tar.gz", "has_sig": false, "md5_digest": "5c95d738a75a3eef12502c8a570eb7d4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9874, "upload_time": "2020-03-07T17:22:24", "upload_time_iso_8601": "2020-03-07T17:22:24.778858Z", "url": "https://files.pythonhosted.org/packages/14/0a/c5f1a9b798c51226e17d079e05b127c26df08545211e9f45802ddeca46fe/bert-extractive-summarizer-0.4.0.tar.gz"}], "0.4.1": [{"comment_text": "", "digests": {"md5": "fe5530ca2afd1e1cfcaabb1726a8522a", "sha256": "a4f15fd04dc6c9aa09485d34239d230556673cbe41c5e4e950589b81d9e1b2e9"}, "downloads": -1, "filename": "bert-extractive-summarizer-0.4.1.tar.gz", "has_sig": false, "md5_digest": "fe5530ca2afd1e1cfcaabb1726a8522a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10864, "upload_time": "2020-04-04T19:13:19", "upload_time_iso_8601": "2020-04-04T19:13:19.956143Z", "url": "https://files.pythonhosted.org/packages/6b/7e/92ba0bb227d36b581d8fad98346e8293e9823fb3a858dc4898578d0fbc2c/bert-extractive-summarizer-0.4.1.tar.gz"}], "0.4.2": [{"comment_text": "", "digests": {"md5": "840218381a588b331eb255d55b62dd59", "sha256": "51bdec26f228ffbd2b0f1c79e8182fec9c67c4752a5c248e9c4a00cab52cde01"}, "downloads": -1, "filename": "bert-extractive-summarizer-0.4.2.tar.gz", "has_sig": false, "md5_digest": "840218381a588b331eb255d55b62dd59", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10903, "upload_time": "2020-04-14T00:46:02", "upload_time_iso_8601": "2020-04-14T00:46:02.546682Z", "url": "https://files.pythonhosted.org/packages/23/1d/71f0a5c7f81b1a87d4428a6a935e9ddeb5e662e41512952e11bd10533cd9/bert-extractive-summarizer-0.4.2.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "840218381a588b331eb255d55b62dd59", "sha256": "51bdec26f228ffbd2b0f1c79e8182fec9c67c4752a5c248e9c4a00cab52cde01"}, "downloads": -1, "filename": "bert-extractive-summarizer-0.4.2.tar.gz", "has_sig": false, "md5_digest": "840218381a588b331eb255d55b62dd59", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10903, "upload_time": "2020-04-14T00:46:02", "upload_time_iso_8601": "2020-04-14T00:46:02.546682Z", "url": "https://files.pythonhosted.org/packages/23/1d/71f0a5c7f81b1a87d4428a6a935e9ddeb5e662e41512952e11bd10533cd9/bert-extractive-summarizer-0.4.2.tar.gz"}]}