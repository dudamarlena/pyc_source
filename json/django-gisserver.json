{"info": {"author": "Diederik van der Boor", "author_email": "opensource@edoburu.nl", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 2.2", "Framework :: Django :: 3.0", "Intended Audience :: Developers", "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Software Development :: Libraries :: Application Frameworks", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "[![Travis](https://img.shields.io/travis/amsterdam/django-gisserver.svg)](http://travis-ci.org/amsterdam/django-gisserver)\n[![PyPI](https://img.shields.io/pypi/v/django-gisserver.svg)](https://pypi.python.org/pypi/django-gisserver)\n[![MPL License](https://img.shields.io/badge/license-MPL%202.0-blue.svg)](https://pypi.python.org/pypi/django-gisserver)\n[![Coverage](https://img.shields.io/codecov/c/github/amsterdam/django-gisserver/master.svg)](https://codecov.io/github/amsterdam/django-gisserver?branch=master)\n\n# django-gisserver\n\nDjango speaking WFS 2.0 to expose geo data.\n\n## Features\n\n* WFS 2.0 simple implementation.\n* GML 3.2 output.\n* Standard and spatial filtering (FES 2.0)\n* GeoJSON export support.\n* Extensible view/operations.\n* Uses GeoDjango queries for filtering.\n* Streaming responses for large datasets.\n\n## Usage\n\nCreate a model that exposes a GeoDjango field:\n\n```python\nfrom django.contrib.gis.db.models import PointField\nfrom django.db import models\n\n\nclass Restaurant(models.Model):\n    name = models.CharField(max_length=200)\n    location = PointField(null=True)\n\n    def __str__(self):\n        return self.name\n```\n\nWrite a view that exposes this model as a WFS feature:\n\n```python\nfrom gisserver.features import FeatureType, ServiceDescription\nfrom gisserver.types import CRS, WGS84\nfrom gisserver.views import WFSView\nfrom .models import Restaurant\n\nRD_NEW = CRS.from_string(\"urn:ogc:def:crs:EPSG::28992\")\n\n\nclass PlacesWFSView(WFSView):\n    \"\"\"An simple view that uses the WFSView against our test model.\"\"\"\n\n    xml_namespace = \"http://example.org/gisserver\"\n\n    # The service metadata\n    service_description = ServiceDescription(\n        title=\"Places\",\n        abstract=\"Unittesting\",\n        keywords=[\"django-gisserver\"],\n        provider_name=\"Django\",\n        provider_site=\"https://www.example.com/\",\n        contact_person=\"django-gisserver\",\n    )\n\n    # Each Django model is listed here as a feature.\n    feature_types = [\n        FeatureType(\n            Restaurant.objects.all(),\n            fields=\"__all__\",\n            other_crs=[RD_NEW]\n        ),\n    ]\n```\n\nUse that view in the URLConf:\n\n```python\nfrom django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path(\"/wfs/places/\", views.PlacesWFSView.as_view()),\n]\n```\n\nYou can now use http://localhost:8000/wfs/places/ in your GIS application.\nIt will perform requests such as:\n\n* <http://localhost:8000/wfs/places/?SERVICE=WFS&REQUEST=GetCapabilities&ACCEPTVERSIONS=2.0.0,1.1.0,1.0.0>\n* <http://localhost:8000/wfs/places/?SERVICE=WFS&REQUEST=DescribeFeatureType&VERSION=2.0.0&TYPENAMES=restaurant>\n* <http://localhost:8000/wfs/places/?SERVICE=WFS&REQUEST=GetFeature&VERSION=2.0.0&TYPENAMES=restaurant&STARTINDEX=0&COUNT=1000&SRSNAME=urn:ogc:def:crs:EPSG::28992>\n\nBy adding `&OUTPUTFORMAT=geojson` to the `GetFeature` request, the GeoJSON output is returned.\n\nNOTE: by default, the minimum number of model fields are exposed as WFS attributes.\nUse `FeatureType(..., fields=[...])` parameter to define which fields should be exposed.\n\n## Standards compliance\n\nCurrently, the following 3 methods are implemented:\n\n* `GetCapabilities`\n* `DescribeFeatureType`\n* `GetFeature` with filtering and pagination support.\n\nThis is sufficient to show results in [QGis](https://qgis.org/).\nThe unit tests validate the output against WFS 2.0 XSD schema.\n\nSome parts for conformance to the \"WFS simple\" level are not implemented yet:\n\n* `GetPropertyValue`\n* `ListStoredQueries`\n* `DescribeStoredQueries`\n* Certain parameters:\n  * KVP filters: `resourceID`, `propertyName`, `aliases`.\n  * Remote resolving: `resolve`, `resolveDepth`, `resolveTimeout`.\n  * Output rewriting: `namespaces`.\n  * Some `GetCapabilities` features: `acceptFormats` and `sections`.\n  * Using `GetFeature` with only the `StoredQuery` action.\n  * Temporal filtering (high on todo)\n\n### Low-prio items:\n\nAnything outside WFS simple could be implemented, but is very low on the todo-list:\n\n* The methods for the WFS basic, transactional, locking and inheritance conformance classes.\n* HTTP POST requests.\n* SOAP requests.\n* Other protocols (WMS, WMTS, WCS)\n* Other output formats (shapefile, CSV, KML, GML 3.1) - but easy to add.\n\n## Development\n\nWhen you follow the source of the `WFSView`, `WFSMethod` and `Parameter` classes,\nyou'll find that it's written with extensibility in mind. Extra parameters and operations\ncan easily be added there. You could even do that within your own projects and implementations.\n\nThe `Makefile` gives you all you need to start working on the project.\nTyping `make` gives an overview of all possible shortcut commands.\n\nThe WFS specification and examples be found at:\n\n* <https://www.opengeospatial.org/standards/> (all OGC standards)\n* <https://docs.opengeospatial.org/> (HTML versions)\n\nSome deeplinks:\n\n* <https://www.opengeospatial.org/standards/common> (OGC Web Service Common)\n* <https://www.opengeospatial.org/standards/wfs#downloads> (OGC WFS)\n* <https://portal.opengeospatial.org/files/09-025r2> (WFS 2.0 spec, PDF)\n* <https://portal.opengeospatial.org/files/09-026r1> (OpenGIS Filter Encoding 2.0, PDF)\n* <https://portal.opengeospatial.org/files/?artifact_id=20509> (GML 3.2.1)\n\nOther links:\n\n* <http://schemas.opengis.net/wfs/2.0/> (XSD and examples)\n* <https://cite.opengeospatial.org/teamengine/> (test suite)\n* <https://mapserver.org/development/rfc/ms-rfc-105.html> (more examples)\n\n\n## Why this code is shared\n\nThe \"datapunt\" team of the Municipality of Amsterdam develops software for the municipality.\nMuch of this software is then published as Open Source so that other municipalities,\norganizations and citizens can use the software as a basis and inspiration to develop\nsimilar software themselves. The Municipality of Amsterdam considers it important that\nsoftware developed with public money is also publicly available.\n\nThis package is initially developed by the City of Amsterdam, but the tools\nand concepts created in this project can be used in any city.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/amsterdam/django-gisserver", "keywords": "", "license": "Mozilla Public License 2.0", "maintainer": "", "maintainer_email": "", "name": "django-gisserver", "package_url": "https://pypi.org/project/django-gisserver/", "platform": "", "project_url": "https://pypi.org/project/django-gisserver/", "project_urls": {"Homepage": "https://github.com/amsterdam/django-gisserver"}, "release_url": "https://pypi.org/project/django-gisserver/0.5/", "requires_dist": ["Django (>=2.0)", "defusedxml (>=0.6.0)", "orjson (>=2.4.0)", "dataclasses ; python_version == \"3.6\"", "django-environ (>=0.4.5) ; extra == 'test'", "psycopg2-binary (>=2.8.4) ; extra == 'test'", "lxml (>=4.5.0) ; extra == 'test'", "flake8 (>=3.7.9) ; extra == 'test'", "flake8-blind-except (>=0.1.1) ; extra == 'test'", "flake8-colors (>=0.1.6) ; extra == 'test'", "flake8-debugger (>=3.2.1) ; extra == 'test'", "flake8-raise (>=0.0.5) ; extra == 'test'", "pytest (==5.3.5) ; extra == 'test'", "pytest-django (==3.8.0) ; extra == 'test'", "pytest-cov (==2.8.1) ; extra == 'test'"], "requires_python": ">=3.6", "summary": "Django speaking WFS 2.0 (exposing GeoDjango model fields)", "version": "0.5"}, "last_serial": 6866281, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "3f9557e5c6a6292db9d33f1c46bca03c", "sha256": "c996b04e9d48ca0e185f170327552e3f669ebaa012656ff3def7a548927e930b"}, "downloads": -1, "filename": "django_gisserver-0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3f9557e5c6a6292db9d33f1c46bca03c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 29617, "upload_time": "2020-02-12T14:47:56", "upload_time_iso_8601": "2020-02-12T14:47:56.580182Z", "url": "https://files.pythonhosted.org/packages/f5/40/44f7858190cd9ea77d86e9522d28146aca9a0a67e0c647d2c33cfbb2978f/django_gisserver-0.1-py2.py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "fd81c3544812268b348d5374fb30cd44", "sha256": "1f89139f28cbe2aac80444d8830425c968538a8cd4d50e22c1cc7813fe6551c6"}, "downloads": -1, "filename": "django-gisserver-0.1.tar.gz", "has_sig": false, "md5_digest": "fd81c3544812268b348d5374fb30cd44", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30410, "upload_time": "2020-02-12T14:47:59", "upload_time_iso_8601": "2020-02-12T14:47:59.294018Z", "url": "https://files.pythonhosted.org/packages/72/f3/75e519bb66523e51f5f059332dd8e9186f2d0b7163484f22869671c301cc/django-gisserver-0.1.tar.gz"}], "0.2": [{"comment_text": "", "digests": {"md5": "9d358be993d8c555fe46745bbe43cb8c", "sha256": "ad3e0ba544be3b3a466a260dab19901997c91c8e8fb1df62f9ba9e655c74c7c4"}, "downloads": -1, "filename": "django_gisserver-0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9d358be993d8c555fe46745bbe43cb8c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 31773, "upload_time": "2020-02-24T08:07:19", "upload_time_iso_8601": "2020-02-24T08:07:19.625868Z", "url": "https://files.pythonhosted.org/packages/bd/ae/2fb0389bd8355fbd638c4dc0e1bf0ea2015ca181f348f3796ac2a0d7a7cd/django_gisserver-0.2-py2.py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "3c99f48c52b078664e9afd5f3b726501", "sha256": "e24af5f1af1f14503499692e500816ed64ba95f8fa7877285310653a13474fd5"}, "downloads": -1, "filename": "django-gisserver-0.2.tar.gz", "has_sig": false, "md5_digest": "3c99f48c52b078664e9afd5f3b726501", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 33824, "upload_time": "2020-02-24T08:07:21", "upload_time_iso_8601": "2020-02-24T08:07:21.381968Z", "url": "https://files.pythonhosted.org/packages/d1/91/a5ab24a0934b43408e86b548a7d36bf3b831f51fc567f064a7506d981055/django-gisserver-0.2.tar.gz"}], "0.3": [{"comment_text": "", "digests": {"md5": "0e272bf3e407a8b16b5b9ef5f629211e", "sha256": "4a11e1c46bebbbe5a7a8a2332d2d9ee3f56f703cb37897941bcae7aaef036a23"}, "downloads": -1, "filename": "django_gisserver-0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0e272bf3e407a8b16b5b9ef5f629211e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 48951, "upload_time": "2020-03-10T11:05:44", "upload_time_iso_8601": "2020-03-10T11:05:44.216053Z", "url": "https://files.pythonhosted.org/packages/2b/45/0ea569a9489bacfe11bad46c245b84bdc9de40df1443a1999d2bd69e3eac/django_gisserver-0.3-py2.py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "051df1f88b3cc95ef0628d3273c87516", "sha256": "3e1986837c825162e947a7f815267bc6be71b1da7010eaf7e6285069b287fda0"}, "downloads": -1, "filename": "django-gisserver-0.3.tar.gz", "has_sig": false, "md5_digest": "051df1f88b3cc95ef0628d3273c87516", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 39551, "upload_time": "2020-03-10T11:05:46", "upload_time_iso_8601": "2020-03-10T11:05:46.302094Z", "url": "https://files.pythonhosted.org/packages/fd/a5/df38188d76f2d6da9e452889d46638de108fb3229c01ffe9cd555f86e7ed/django-gisserver-0.3.tar.gz"}], "0.4": [{"comment_text": "", "digests": {"md5": "b9fc19bc5c9bbd81fa3e1455a0ec6b05", "sha256": "61f9530b0f107a7c077fe043758e3430b54d80fa4188f84d97dfd304ab43b958"}, "downloads": -1, "filename": "django_gisserver-0.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b9fc19bc5c9bbd81fa3e1455a0ec6b05", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 53015, "upload_time": "2020-03-11T15:38:05", "upload_time_iso_8601": "2020-03-11T15:38:05.718778Z", "url": "https://files.pythonhosted.org/packages/72/80/bd8e626f2aa9d87c5f0443e75b85879444dddd60e5fff5de219e6e39d448/django_gisserver-0.4-py2.py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "4d044f7dc4f55cee5453593c0083d890", "sha256": "d9e2186caf3e87bac6af2bacceaedef82adb20365e5d16b0c261e9e5db239d7d"}, "downloads": -1, "filename": "django-gisserver-0.4.tar.gz", "has_sig": false, "md5_digest": "4d044f7dc4f55cee5453593c0083d890", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 42825, "upload_time": "2020-03-11T15:38:07", "upload_time_iso_8601": "2020-03-11T15:38:07.466782Z", "url": "https://files.pythonhosted.org/packages/80/00/f62d095fbafa09adf17b782574359f61236c85392d194fbb3e40b4c8a70f/django-gisserver-0.4.tar.gz"}], "0.5": [{"comment_text": "", "digests": {"md5": "027c5bb3bc96643d4d7a99de5275c018", "sha256": "f253a1cfdd4e1072eb209ea6fb01fe6b5efe85d7969d337fe30e81dcddaa2761"}, "downloads": -1, "filename": "django_gisserver-0.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "027c5bb3bc96643d4d7a99de5275c018", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 61833, "upload_time": "2020-03-23T15:38:18", "upload_time_iso_8601": "2020-03-23T15:38:18.406786Z", "url": "https://files.pythonhosted.org/packages/23/66/c6f70f121838b0f625b51a1a4c27bfa59eac89711c3ae65e4e73ec8c11f3/django_gisserver-0.5-py2.py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "9b71bf8a9e564a48cf68d68f0f33a197", "sha256": "0b075c0108d98b8ebcb8186a6c71098e936e1ff3d4bf6732c17e181fce8fa977"}, "downloads": -1, "filename": "django-gisserver-0.5.tar.gz", "has_sig": false, "md5_digest": "9b71bf8a9e564a48cf68d68f0f33a197", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 49603, "upload_time": "2020-03-23T15:38:20", "upload_time_iso_8601": "2020-03-23T15:38:20.147282Z", "url": "https://files.pythonhosted.org/packages/80/9b/a670bd5a451f8c85ae88f64d6015c5ac691380bd8c962ea1ea8828f45e04/django-gisserver-0.5.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "027c5bb3bc96643d4d7a99de5275c018", "sha256": "f253a1cfdd4e1072eb209ea6fb01fe6b5efe85d7969d337fe30e81dcddaa2761"}, "downloads": -1, "filename": "django_gisserver-0.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "027c5bb3bc96643d4d7a99de5275c018", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 61833, "upload_time": "2020-03-23T15:38:18", "upload_time_iso_8601": "2020-03-23T15:38:18.406786Z", "url": "https://files.pythonhosted.org/packages/23/66/c6f70f121838b0f625b51a1a4c27bfa59eac89711c3ae65e4e73ec8c11f3/django_gisserver-0.5-py2.py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "9b71bf8a9e564a48cf68d68f0f33a197", "sha256": "0b075c0108d98b8ebcb8186a6c71098e936e1ff3d4bf6732c17e181fce8fa977"}, "downloads": -1, "filename": "django-gisserver-0.5.tar.gz", "has_sig": false, "md5_digest": "9b71bf8a9e564a48cf68d68f0f33a197", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 49603, "upload_time": "2020-03-23T15:38:20", "upload_time_iso_8601": "2020-03-23T15:38:20.147282Z", "url": "https://files.pythonhosted.org/packages/80/9b/a670bd5a451f8c85ae88f64d6015c5ac691380bd8c962ea1ea8828f45e04/django-gisserver-0.5.tar.gz"}]}