{"info": {"author": "Erik Kalkoken", "author_email": "kalkoken87@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 2.2", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "# Alliance Structures\n\nApp for managing Eve Online structures with\nAlliance Auth.\n\n![release](https://img.shields.io/pypi/v/aa-structures?label=release) ![python](https://img.shields.io/pypi/pyversions/aa-structures) ![django](https://img.shields.io/pypi/djversions/aa-structures?label=django) ![pipeline](https://gitlab.com/ErikKalkoken/aa-structures/badges/master/pipeline.svg) ![coverage](https://gitlab.com/ErikKalkoken/aa-structures/badges/master/coverage.svg) ![license](https://img.shields.io/badge/license-MIT-green)\n\n## Contents\n\n- [Overview](#overview)\n- [Key Features](#key-features)\n- [Screenshots](#screenshots)\n- [Installation](#installation)\n- [Updating](#updating)\n- [Localization](#localization)\n- [Structure tags](#structure-tags)\n- [Settings](#settings)\n- [Permissions](#permissions)\n- [Notifications](#notifications)\n- [Timers](#timers)\n- [Service monitoring](#service-monitoring)\n- [Admin tool](#admin-tools)\n- [Change Log](CHANGELOG.md)\n\n## Overview\n\nThis app is for managing Eve Online structures with [Alliance Auth](https://gitlab.com/allianceauth/allianceauth) (AA). It allows corporations and alliance to see a current list of all their structures in Auth and also get structure related notification on Discord.\n\n## Features\n\nAlliance Structures adds the following main features to Alliance Auth:\n\n- Structure browser with a detailed list of all structures owned by alliances / corporation, automatically synced with the game server\n- Structures include all Upwell structures, Custom Offices and Starbases / POSes\n- Automatically forwards structure notifications to Discord channels as alerts\n- Notification categories include Upwell Structures, Moon Mining, Customs Offices, Starbases and Sovereignty\n- Automatically adds timers from notifications to Alliance Auth timerboard app (if installed)\n- Permissions define which structures are visible to a user based on organization membership\n- Self-defined tags help to better organize structures\n- Interface for 3rd party monitoring of the services status\n- Chinese :cn:, English :us: and German :de: localization\n\n*We are looking for help with translating Alliance Structures for more languages incl. French, Korean, Russian, and Spanish. If you are interested please sign up on our [Transifex project](https://www.transifex.com/kalkoken-apps/aa-structures/).*\n\n## Screenshots\n\nHere is an example for the structure browser:\n\n![StructureList](https://i.imgur.com/WtiRap3.png)\n\nThis is an example for a notification posted on Discord:\n\n![Notification example](https://i.imgur.com/OrJsQfW.png)\n\n## Installation\n\n**Important**: This app is a plugin for Alliance Auth. If you don't have Alliance Auth running already, please install it first before proceeding. (see the official [AA installation guide](https://allianceauth.readthedocs.io/en/latest/installation/auth/allianceauth/) for details)\n\n### Step 1 - Install app\n\nMake sure you are in the virtual environment (venv) of your Alliance Auth installation. Then install the newest release from PyPI:\n\n```bash\npip install aa-structures\n```\n\n### Step 2 - Update Eve Online app\n\nUpdate the Eve Online app used for authentication in your AA installation to include the following scopes:\n\n```plain\nesi-assets.read_corporation_assets.v1\nesi-characters.read_notifications.v1\nesi-corporations.read_starbases.v1\nesi-corporations.read_structures.v1\nesi-planets.read_customs_offices.v1\nesi-universe.read_structures.v1\n```\n\n### Step 3 - Configure AA settings\n\nConfigure your AA settings (`local.py`) as follows:\n\n- Add `'structures'` to `INSTALLED_APPS`\n- Add below lines to your settings file:\n\n```python\nCELERYBEAT_SCHEDULE['structures_update_all_structures'] = {\n    'task': 'structures.tasks.update_all_structures',\n    'schedule': crontab(minute='*/30'),\n}\nCELERYBEAT_SCHEDULE['structures_fetch_all_notifications'] = {\n    'task': 'structures.tasks.fetch_all_notifications',\n    'schedule': crontab(minute='*/5'),\n}\nCELERYBEAT_SCHEDULE['structures_send_all_new_notifications'] = {\n    'task': 'structures.tasks.send_all_new_notifications',\n    'schedule': crontab(minute='*/1'),\n}\n```\n\n- Optional: Add additional settings if you want to change any defaults. See [Settings](#settings) for the full list.\n\n### Step 4 - Celery worker configuration\n\nThis app uses celery for critical functions like refreshing data from ESI. We strongly recommend to enable the following additional settings for celery workers to enable proper logging and to protect against potential memory leaks:\n\n- To enable logging of celery tasks up to info level: `-l info`\n\n- To automatically restart workers that grow above 256 MB: `--max-memory-per-child 262144`\n\nHere is how an example config would look for workers in your `supervisor conf`:\n\n```plain\ncommand=/home/allianceserver/venv/auth/bin/celery -A myauth worker -l info --max-memory-per-child 262144\n```\n\nNote that you need to restart the supervisor service itself to activate these changes.\n\ne.g. on Ubuntu:\n\n```bash\nsystemctl restart supervisor\n```\n\n### Step 5 - Finalize installation into AA\n\nRun migrations & copy static files\n\n```bash\npython manage.py migrate\npython manage.py collectstatic\n```\n\nRestart your supervisor services for AA\n\n### Step 6 - Setup permissions\n\nNow you can setup permissions in Alliance Auth for your users.\n\nSee section [Permissions](#permissions) below for details.\n\n### Step 7 - Setup notifications to Discord\n\nThe setup and configuration for Discord webhooks is done on the admin page under **Structures**.\n\nTo setup notifications you first need to add the Discord webhook that point to the channel you want notifications to appear to **Webhooks**. We would recommend that you also enable `is_default` for your main webhook, so that newly added structure owners automatically use this webhook. Alternatively you need to manually assign webhooks to existing owners after they have been added (see below).\n\nFinally to verify that your webhook is correctly setup you can send a test notification. This is one of the available actions on Webhooks page.\n\n### Step 8 - Add structure owners\n\nNext you need to add your first structure owner with the character that will be used for fetching structures. Just open the Alliance Structures app and click on \"Add Structure Owner\". Note that only users with the appropriate permission will be able to see and use this function and that the character needs to be a director.\n\nOnce a structure owner is set the app will start fetching the corporation structures and related notifications. Wait a minute and then reload the structure list page to see the result.\n\nYou will need to add every corporation as Structure Owner to include their structures and notifications in the app.\n\nNote that as admin you can review all structures and notifications on the admin panel.\n\n## Updating\n\nTo update your existing installation of Alliance Structures first enable your virtual environment.\n\nThen run the following commands from your AA project directory (the one that contains `manage.py`).\n\n```bash\npip install -U aa-structures\n```\n\n```bash\npython manage.py migrate\n```\n\n```bash\npython manage.py collectstatic\n```\n\nFinally restart your AA supervisor services.\n\n## Localization\n\nAlliance Structures has full localization for languages support by Alliance Auth. This chapter describes how to set the language for different parts of the app:\n\n### UI\n\nTo switch the UI to your preferred language simply use the language switcher from Auth.\n\n### Notifications on Discord\n\nThe language for notifications on Discord can be chosen by configuring the language property for the respective Webhook. The default language will be used if no language is configured for a Webhook.\n\n### Default language\n\nThe default language will be used when no specific language have been configured or no language can be determined. The default language can be defined with the setting `STRUCTURES_DEFAULT_LANGUAGE`.\n\nThe following parts of the app will use localization with the default language:\n\n- Timers\n- Name of Custom Offices\n\n## Structure tags\n\nStructure tags are colored text labels that can be attached to individual structures. Their main purpose is to provide an easy way to organize structures. Tags are shown below the name on the structure list and you can filter the structure list by tags.\n\nFor example you might be responsible for fueling structures in your alliance and there are a couple structures that you do not need to care about. With structure tags you can just apply a tag like \"fueling\" to those structures that you need to manage and then filter the structure list to only see those.\n\nThere are two kinds of structure tags: Custom tags and generated tags\n\n### Custom tags\n\nCustom tags are created by users. You can created them on the admin panel under Structure tags, give them any name, color and define its order. Existing structure tags can be assigned to a structure on the structures page within the admin panel.\n\nYou can also define custom tags as default. Default tags are automatically added to every newly added structure. Furthermore you enable default tags to be your default tag filter to be active when opening the structure list (see [Settings](#settings))\n\n### Generated tags\n\nGenerated tags are automatically created by and added to structures by the system. These tags are calculated based on properties of a structure. The purpose of generated tags is to provide additional information and filter options for structures in the structure list.\n\nThere are currently two types of generated tags:\n\n- space type: Shows which space type the structure is in, e.g. null sec or low sec\n- sov: Shows that the owner of that structures has sovereignty in the respective solar system\n\n## Settings\n\nHere is a list of available settings for this app. They can be configured by adding them to your AA settings file (`local.py`).\n\nNote that all settings are optional and the app will use the documented default settings if they are not used.\n\nName | Description | Default\n-- | -- | --\n`STRUCTURES_ADD_TIMERS`| Whether to automatically add timers for certain notifications on the timerboard (will have no effect if [aa-timerboard](https://allianceauth.readthedocs.io/en/latest/features/timerboard/) app is not installed).<br>Will create timers from anchoring, lost shield and lost armor notifications  | True\n`STRUCTURES_ADMIN_NOTIFICATIONS_ENABLED`| whether admins will get notifications about import events like when someone adds a structure owner | True\n`STRUCTURES_DEFAULT_TAGS_FILTER_ENABLED`| Enable default tags filter for structure list as default | False\n`STRUCTURES_DEFAULT_LANGUAGE`| Sets the default language to be used in case no language can be determined. e.g. this language will be used when creating timers. Please use the language codes as defined in the base.py settings file. | en\n`STRUCTURES_FEATURE_CUSTOMS_OFFICES`| Enable / disable custom offices feature | True\n`STRUCTURES_FEATURE_STARBASES`| Enable / disable starbases feature | True\n`STRUCTURES_FORWARDING_SYNC_GRACE_MINUTES`| Max time in minutes since last successful notification forwarding before service is reported as down  | 5\n`STRUCTURES_HOURS_UNTIL_STALE_NOTIFICATION`| Defines after how many hours a notification is regarded as stale. Stale notifications are no longer sent automatically. | 24\n`STRUCTURES_MOON_EXTRACTION_TIMERS_ENABLED`| whether to create / remove timers from moon extraction notifications  | True\n`STRUCTURES_NOTIFICATION_MAX_RETRIES`| Max number of retries after a HTTP error occurred incl. rate limiting  | 3\n`STRUCTURES_NOTIFICATION_SYNC_GRACE_MINUTES`| Max time in minutes since last successful notifications sync before service is reported as down  | 15\n`STRUCTURES_NOTIFICATION_WAIT_SEC`| Default wait time in seconds before retrying after HTTP error (not used for rate limits)  | 5\n`STRUCTURES_REPORT_NPC_ATTACKS`| Enable / disable sending notifications for attacks by NPCs (structure reinforcements are still reported) | True\n`STRUCTURES_SHOW_FUEL_EXPIRES_RELATIVE`| Enable / disable whether fuel expire is shown as relative figure | True\n`STRUCTURES_STRUCTURE_SYNC_GRACE_MINUTES`| Max time in minutes since last successful structures sync before service is reported as down  | 120\n`STRUCTURES_TIMERS_ARE_CORP_RESTRICTED`| whether created timers are corp restricted on the timerboard  | False\n\n## Permissions\n\nThis is an overview of all permissions used by this app:\n\nName | Purpose | Code\n-- | -- | --\nCan access this app and view | User can access the app and see the structure list. He will only be able to see structures belonging to corporations of his characters. We would suggest to enable this permission for the Member state |  `general.basic_access`\nCan view alliance structures | User can view all structures belonging to corporation in the alliance of the user. |  `general.view_alliance_structures`\nCan view all structures | User can see all structures in the system |  `general.view_all_structures`\nCan add new structure owner | User can add a corporation with it's structures |  `general.add_structure_owner`\n\n## Notifications\n\nThe following notifications are currently supported (names are from the API):\n\n### Moon Mining\n\n- MoonminingAutomaticFracture\n- MoonminingExtractionCancelled\n- MoonminingExtractionFinished\n- MoonminingExtractionStarted\n- MoonminingLaserFired\n\n### Upwell Structures\n\n- OwnershipTransferred\n- StructureAnchoring\n- StructureDestroyed\n- StructureFuelAlert\n- StructureLostArmor\n- StructureLostShields\n- StructureOnline\n- StructureServicesOffline\n- StructureUnanchoring\n- StructureUnderAttack\n- StructureWentHighPower\n- StructureWentLowPower\n\n### POCOs\n\n- OrbitalAttacked\n- OrbitalReinforced\n\n### Starbases\n\n- TowerAlertMsg\n- TowerResourceAlertMsg\n\n## Sovereignty\n\n- EntosisCaptureStarted\n- SovAllClaimAquiredMsg\n- SovCommandNodeEventStarted\n- SovStructureReinforced\n- SovStructureDestroyed\n\n## Timers\n\n**Alliance Structures** will automatically create friendly timers from  notifications for Alliance Auth's Structure Timers app. This feature can be configured via [Settings](#settings).\n\nTimers can be created from the following notification types:\n\n- OrbitalReinforced\n- MoonminingExtractionStarted\n- SovStructureReinforced\n- StructureAnchoring (excluding structures anchored in null sec)\n- StructureLostArmor\n- StructureLostShields\n\n## Service monitoring\n\nAlliances may want to rely on getting prompt notifications on Discord to keep their assets save. However, an app like Alliance Structures is fully dependant on external services like the Eve API (ESI) to stay operational.\n\nIn order stay alliance apprised about any potential service outages, this app has a simple HTTP interface that enables monitoring of it's service status by a 3rd party monitoring application. (e.g. [Uptimerobot](https://www.uptimerobot.com)).\n\nThe monitoring route is: `[your AA URL]/structures/service_status/`\n\nStatus | Reporting | Condition\n-- | -- | --\nUp | HTTP 200 and the text `service is up` | Tasks for updating of structures, updating of notifications and forwarding to webhooks have last run within the configured grace period and there are no errors\nDown | HTTP 500 and the text `service is down` | Above condition for \"up\" not met\n\nBy default the status of all existing owners will be included in determining the overall status. However, it's also possible to manually exclude owners by setting the property \"Is included in service status\".\n\n## Admin tools\n\n### Admin site\n\nMost admin tools are accessible on the admin site through actions. e.g. you can sent specific notifications or force a sync with the eve server for an owner.\n\nSee the respective actions list on the admin site for details.\n\n### Management commands\n\nSome admin tools are available only as Django management command:\n\n- **structures_purge_all**: This task will purge ALL data of the structures app. Run this command before trying to reverse migrations (e.g. `migrate structures zero` for de-installation) or you will run into foreign key constraints.\n- **structures_updatesde**: This command will reload all locally stored Eve Online data from the Eve Online server.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/ErikKalkoken/aa-structures", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "aa-structures", "package_url": "https://pypi.org/project/aa-structures/", "platform": "", "project_url": "https://pypi.org/project/aa-structures/", "project_urls": {"Homepage": "https://gitlab.com/ErikKalkoken/aa-structures"}, "release_url": "https://pypi.org/project/aa-structures/1.2.0/", "requires_dist": null, "requires_python": "~=3.5", "summary": "App for managing Eve Online structures with Alliance Auth", "version": "1.2.0"}, "last_serial": 7047874, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "9921d838bcf8db079ea8f97b7848302b", "sha256": "8a7f60bc2f5425cfc6a383c2512ad440ba42eca5edfd70904fca45ec31516c25"}, "downloads": -1, "filename": "aa_structures-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9921d838bcf8db079ea8f97b7848302b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 169837, "upload_time": "2020-02-12T14:18:24", "upload_time_iso_8601": "2020-02-12T14:18:24.993703Z", "url": "https://files.pythonhosted.org/packages/0d/65/04a87379a59f573ae0ed0d194b6f0cc76876de0311c0a2398d69d92549b6/aa_structures-1.0.0-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "905f9cb5fa88806c442794735553557d", "sha256": "ea25e6e58f1ed6dbce65e3e44dac84bf4a585014c773ffbb10ee3c41d1208e0d"}, "downloads": -1, "filename": "aa-structures-1.0.0.tar.gz", "has_sig": false, "md5_digest": "905f9cb5fa88806c442794735553557d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 152395, "upload_time": "2020-02-12T14:18:27", "upload_time_iso_8601": "2020-02-12T14:18:27.806539Z", "url": "https://files.pythonhosted.org/packages/1b/ec/11667eb9676107b98daeeb597cd2258e450eacf122d973b129c1d7472f8b/aa-structures-1.0.0.tar.gz"}], "1.1.0": [{"comment_text": "", "digests": {"md5": "ec5796cb583e12939bf889946f87b92c", "sha256": "8de587e05e6b61112d8b7cd273bd4a4dc08059ef967e031533078f543d105b2f"}, "downloads": -1, "filename": "aa-structures-1.1.0.tar.gz", "has_sig": false, "md5_digest": "ec5796cb583e12939bf889946f87b92c", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 174415, "upload_time": "2020-04-04T20:31:25", "upload_time_iso_8601": "2020-04-04T20:31:25.114376Z", "url": "https://files.pythonhosted.org/packages/00/03/f9f10560a49b2ecd0c800946de11b7772dbd32132136b04511f9e979d177/aa-structures-1.1.0.tar.gz"}], "1.1.1": [{"comment_text": "", "digests": {"md5": "629ac94389aee7328f97e3b5858b8038", "sha256": "36daf2715b499dede2d5ea0f530041d8662cfda7d00e480c3d482ddc1f92c2e4"}, "downloads": -1, "filename": "aa-structures-1.1.1.tar.gz", "has_sig": false, "md5_digest": "629ac94389aee7328f97e3b5858b8038", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 152480, "upload_time": "2020-04-05T11:51:24", "upload_time_iso_8601": "2020-04-05T11:51:24.940305Z", "url": "https://files.pythonhosted.org/packages/50/d0/de4fe20f8ccbbed2b253f4315909eab0323a93cbea699a00cb5a5ca81d0b/aa-structures-1.1.1.tar.gz"}], "1.1.2": [{"comment_text": "", "digests": {"md5": "0cba350e6c938256639a649a49d7ffb2", "sha256": "1166af5e53b7cb48e05cc10e61f406e621b35f126abe1a4b23070febbf3cd9be"}, "downloads": -1, "filename": "aa-structures-1.1.2.tar.gz", "has_sig": false, "md5_digest": "0cba350e6c938256639a649a49d7ffb2", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 152519, "upload_time": "2020-04-06T14:53:46", "upload_time_iso_8601": "2020-04-06T14:53:46.882221Z", "url": "https://files.pythonhosted.org/packages/5c/9f/ceee0fd2f70042e1bb24fe6a58c21461f77aadef53da7262e98d1155fd6a/aa-structures-1.1.2.tar.gz"}], "1.1.3": [{"comment_text": "", "digests": {"md5": "fc8862862163d0c3e72e05c94ab0a6f0", "sha256": "23b65370e06d5b1c261589258797e2b64c4f29913d3b70ba73fe3085ae09a5d9"}, "downloads": -1, "filename": "aa-structures-1.1.3.tar.gz", "has_sig": false, "md5_digest": "fc8862862163d0c3e72e05c94ab0a6f0", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 154093, "upload_time": "2020-04-06T19:34:56", "upload_time_iso_8601": "2020-04-06T19:34:56.642022Z", "url": "https://files.pythonhosted.org/packages/fe/98/079a0d029a53ede3d8daca2f3d99a362f64f1d863d11f7d3f95b527f34c8/aa-structures-1.1.3.tar.gz"}], "1.1.4": [{"comment_text": "", "digests": {"md5": "6f218b9fd09a1bc66bef2e7db9a7e956", "sha256": "1f8515076176dcea0e02da756ceb60bf85c3e65a62a2eeddafc41f7ae9641bc9"}, "downloads": -1, "filename": "aa-structures-1.1.4.tar.gz", "has_sig": false, "md5_digest": "6f218b9fd09a1bc66bef2e7db9a7e956", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 154211, "upload_time": "2020-04-14T21:20:22", "upload_time_iso_8601": "2020-04-14T21:20:22.556246Z", "url": "https://files.pythonhosted.org/packages/9a/25/87346e3d39d08c8dc3684ece6bbc56999dd8a48076df5f2b5d20c2637fee/aa-structures-1.1.4.tar.gz"}], "1.2.0": [{"comment_text": "", "digests": {"md5": "9bd052fde6e658170ad1ff85cf56bc68", "sha256": "a1342adf70e310834f68c505f13fa123b8dcb8391f5234956553b8cfcab7dda9"}, "downloads": -1, "filename": "aa-structures-1.2.0.tar.gz", "has_sig": false, "md5_digest": "9bd052fde6e658170ad1ff85cf56bc68", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 161007, "upload_time": "2020-04-18T13:08:26", "upload_time_iso_8601": "2020-04-18T13:08:26.040106Z", "url": "https://files.pythonhosted.org/packages/3e/29/7186cf764ecb059237095f6838f244c045374d242f964a29b273a6d9bde3/aa-structures-1.2.0.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "9bd052fde6e658170ad1ff85cf56bc68", "sha256": "a1342adf70e310834f68c505f13fa123b8dcb8391f5234956553b8cfcab7dda9"}, "downloads": -1, "filename": "aa-structures-1.2.0.tar.gz", "has_sig": false, "md5_digest": "9bd052fde6e658170ad1ff85cf56bc68", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 161007, "upload_time": "2020-04-18T13:08:26", "upload_time_iso_8601": "2020-04-18T13:08:26.040106Z", "url": "https://files.pythonhosted.org/packages/3e/29/7186cf764ecb059237095f6838f244c045374d242f964a29b273a6d9bde3/aa-structures-1.2.0.tar.gz"}]}