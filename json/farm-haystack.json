{"info": {"author": "Malte Pietsch, Timo Moeller, Branden Chan, Tanay Soni", "author_email": "malte.pietsch@deepset.ai", "bugtrack_url": null, "classifiers": ["Intended Audience :: Science/Research", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: Artificial Intelligence"], "description": "*******************************************************\nHaystack \u2014 Neural Question Answering At Scale\n*******************************************************\n.. image:: https://travis-ci.org/deepset-ai/haystack.svg?branch=master\n\t:target: https://travis-ci.org/deepset-ai/haystack\n\t:alt: Build\n\n.. image:: https://img.shields.io/github/release/deepset-ai/haystack\n\t:target: https://github.com/deepset-ai/haystack/releases\n\t:alt: Release\n\n.. image:: https://img.shields.io/github/license/deepset-ai/haystack\n\t:target: https://github.com/deepset-ai/haystack/blob/master/LICENSE\n\t:alt: License\n\n.. image:: https://img.shields.io/github/last-commit/deepset-ai/haystack\n\t:target: https://github.com/deepset-ai/haystack/commits/master\n\t:alt: Last Commit\n\nIntroduction\n============\n\nThe performance of **modern Question Answering Models** (BERT, ALBERT ...) has seen drastic improvements within the last year enabling many new opportunities for finding information more efficiently. However, those models are usually designed to find answers within rather small text passages. **Haystack let's you scale QA models** to large collections of documents!\n\nHaystack is designed in a modular way and is tightly integrated with the `FARM <https://github.com/deepset-ai/FARM>`_ framework for training QA models.\nSwap your models easily from BERT to roBERTa and scale the database from dev (Sqlite) to production (PostgreSQL, elasticsearch ...).\n\nCore Features\n=============\n- **Most powerful models**: Utilize all the latest transformer based models (BERT, ALBERT roBERTa ...)\n- **Modular & future-proof**: Avoid technical debt. With haystack you can easily switch to newer models once they get published.\n- **Developer friendly**: Easy to debug, extend and modify.\n- **Scalable**: Switch from dev to production within minutes.\n\nComponents\n==========\n\n1. **Retriever**:  Fast, simple model that identify candidate passages from a large collection of documents. Algorithms include TF-IDF, which is similar to what's used in popular search systems like Elasticsearch. The Retriever helps to narrow down the scope for Reader to smaller units of text where a given question could be answered.\n\n2. **Reader**: Powerful neural model that read through texts in detail to find an answer. Use diverse models like BERT, Roberta or XLNet trained via the `FARM <https://github.com/deepset-ai/FARM>`_ Framework on SQuAD like tasks. The Reader takes multiple passages of text as input and returns top-n answers with corresponding confidence scores.\n\n3. **Finder**: Glues together a Reader and a Retriever as a pipeline to provide an easy-to-use question answering interface.\n\n4. **Labeling Tool**: (Coming soon)\n\nResources\n=========\n- Tutorial 1  - Basic QA Pipeline: `Jupyter notebook  <https://github.com/deepset-ai/haystack/blob/master/tutorials/Tutorial1_Basic_QA_Pipeline.ipynb>`_  or `Colab <https://colab.research.google.com/drive/1Gj3JjPPcm8DMmctz66K68cOV53JZKqeX>`_\n\nQuickstart\n==========\n\nInstallation\n------------\nThere are two ways to install:\n\n* (recommended) from source, :code:`git clone <url>` and run :code:`pip install [--editable] .` from the root of the repositry.\n* from PyPI, do a :code:`pip install farm-haystack`\n\n\nUsage\n-----\n.. image:: https://raw.githubusercontent.com/deepset-ai/haystack/master/docs/img/code_snippet_usage.png\n\n\nConfiguration\n-------------\nThe configuration can be supplied in a :code:`qa_config.py` placed in the PYTHONPATH. Alternatively, the :code:`DATABASE_URL` can also be set an an environment variable.\n\n\nDeployment\n==========\n\nSQL Backend\n-----------\nThe database ORM layer is implemented using SQLAlchemy library. By default, it uses the file-based SQLite database. For large scale deployments, the configuration can be changed to use other compatible databases like PostgreSQL or MySQL.\n\nElasticsearch Backend\n----------------------\n(Coming soon)\n\nREST API\n--------\nA Flask based HTTP REST API is included to use the QA Framework with UI or integrating with other systems. To serve the API, run :code:`FLASK_APP=farm_hackstack.api.inference flask run`.", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "https://github.com/deepset-ai/haystack/archive/0.1.0.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/deepset-ai/haystack", "keywords": "QA Question-Answering Reader Retriever BERT roberta albert squad mrc transfer-learning language-model transformer", "license": "Apache", "maintainer": "", "maintainer_email": "", "name": "farm-haystack", "package_url": "https://pypi.org/project/farm-haystack/", "platform": "", "project_url": "https://pypi.org/project/farm-haystack/", "project_urls": {"Download": "https://github.com/deepset-ai/haystack/archive/0.1.0.tar.gz", "Homepage": "https://github.com/deepset-ai/haystack"}, "release_url": "https://pypi.org/project/farm-haystack/0.1.0.post2/", "requires_dist": null, "requires_python": ">=3.6.0", "summary": "Neural Question Answering at Scale. Use modern transformer based models like BERT to find answers in large document collections", "version": "0.1.0.post2"}, "last_serial": 6213410, "releases": {"0.1.0.post2": [{"comment_text": "", "digests": {"md5": "320e4b03c371d37cb14094c2971727fc", "sha256": "813f00e2bef7407448fccb1e486b16c8078f52cc7dca31b4bdf6f3c6d3d928f2"}, "downloads": -1, "filename": "farm-haystack-0.1.0.post2.tar.gz", "has_sig": false, "md5_digest": "320e4b03c371d37cb14094c2971727fc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 14725, "upload_time": "2019-11-28T10:12:50", "upload_time_iso_8601": "2019-11-28T10:12:50.491190Z", "url": "https://files.pythonhosted.org/packages/4f/9c/e43877fda5183cc2adc9539ff6a05ad525051893de3391b5058628e675b4/farm-haystack-0.1.0.post2.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "320e4b03c371d37cb14094c2971727fc", "sha256": "813f00e2bef7407448fccb1e486b16c8078f52cc7dca31b4bdf6f3c6d3d928f2"}, "downloads": -1, "filename": "farm-haystack-0.1.0.post2.tar.gz", "has_sig": false, "md5_digest": "320e4b03c371d37cb14094c2971727fc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 14725, "upload_time": "2019-11-28T10:12:50", "upload_time_iso_8601": "2019-11-28T10:12:50.491190Z", "url": "https://files.pythonhosted.org/packages/4f/9c/e43877fda5183cc2adc9539ff6a05ad525051893de3391b5058628e675b4/farm-haystack-0.1.0.post2.tar.gz"}]}