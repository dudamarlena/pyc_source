{"info": {"author": "Luca Cappelletti", "author_email": "cappelletti.luca94@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3"], "description": "encodeproject\n=========================================================================================\n|travis| |sonar_quality| |sonar_maintainability| |codacy| |code_climate_maintainability| |pip| |downloads|\n\nPython package wrapping some of the encode project APIs.\n\nThere is a `short Notebook with a tutorial available here <https://github.com/LucaCappelletti94/bioinformatics_practice/blob/master/Notebooks/Retrieving%20data%20from%20ENCODE%20-%20Practical%20example.ipynb>`_.\n\nHow do I install this package?\n----------------------------------------------\nAs usual, just download it using pip:\n\n.. code:: shell\n\n    pip install encodeproject\n\nTests Coverage\n----------------------------------------------\nSince some software handling coverages sometimes\nget slightly different results, here's three of them:\n\n|coveralls| |sonar_coverage| |code_climate_coverage|\n\nUsage Examples\n-----------------------------------------------\nThe package contains both methods to run queries on the `Encode Project APIs <https://www.encodeproject.org/help/rest-api/>`_ and\nmethods to filter the responses. Every available method has a comprehensive docstring attached to it, so I welcome you to\nread the source code. \n\nQueries\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nThe library currently offers to query methods that already integrate some filtering properties:\none for the `experiments <https://www.encodeproject.org/experiments/>`_\nand one for the `biosamples <https://www.encodeproject.org/biosamples/>`_.\n\nFor querying the experiments you can run the following:\n\n.. code:: python\n\n    from encodeproject import experiment\n\n    experiments = experiment()\n\nLet's take a look to an in-depth example, showing all the available parameters:\n\n.. code:: python\n\n    from encodeproject import experiment\n\n    experiments = experiment(\n        # The cell line we are interested in.\n        # For example values could be K562 or GM12878.\n        # We use None to specify that we are not\n        # interested in any particular cell line.\n        cell_line = None,\n        # The reference genomic assembly we want.\n        # For example values could be hg19 or GRCh38\n        # We use None to specify that we are not\n        # interested in any particular genomic assembly.\n        assembly = None,\n        # The target (the genes coding for proteins in this context) we want.\n        # For example values could be CTCF or H3K27ac\n        # We use None to specify that we are not\n        # interested in any particular target.\n        target = None,\n        # The status of the data we want.\n        # We only want released data, meaning data that are\n        # neither old (archived) or with errors (revoked).\n        status = 'released',\n        # The organism we are considering.\n        # Since we only want Homo sapiens data,\n        # we specify that organism name.\n        organism = 'Homo sapiens',\n        # The format of the files we are interested in\n        file_type = 'bigWig',\n        # We ask to consider only experiments with replicas\n        replicated = True,\n        # We only want with the signals\n        # expressed as \"fold change over control\"\n        searchTerm = \"fold change over control\",\n        # We do not need to specify any other specific\n        # additional parameters\n        parameters = None,\n        # We want to download all the\n        # available experiments\n        limit = 'all',\n        # We want to drop all the experiments\n        # which have been characterized by significand issues\n        drop_errors = (\n            'extremely low read depth',\n            'missing control alignments',\n            'control extremely low read depth',\n            'extremely low spot score',\n            'extremely low coverage',\n            'extremely low read length',\n            'inconsistent control',\n            'inconsistent read count'\n        )\n    )\n\nAll parameters are optional, they just act as additional filters.\n\nFor querying the biosamples you can run the following:\n\n.. code:: python\n\n    from encodeproject import biosample\n\n    my_biosample_query_response = biosample(\n        accession=\"ENCSR000EDP\", # The accession code for the desired biosample\n    )\n\nAs for the experiments there are a number of filters available:\n\n.. code:: python\n\n    hg19_samples = biosamples(\n        # The list of accessions to retrieve\n        accessions=accession_codes,\n        # Wethever to convert the results in dataframe.\n        # The following filters only apply if dataframes are used\n        to_dataframe = True,\n        # The status of the data we want.\n        # We only want released data, meaning data that are\n        # neither old (archived) or with errors (revoked).\n        status = \"released\",\n        # The organism we want.\n        organism = \"human\",\n        # The genomic assembly we want to use\n        assembly = \"hg19\",\n        # The output type we want.\n        output_type = \"fold change over control\",\n        # And finally the bare minimum amount\n        # of biological replicates\n        min_biological_replicates = 2\n    )\n\n\nFor running multiple queries for biosamples at once you can run the following:\n\n.. code:: python\n\n    from encodeproject import biosamples\n\n    responses = biosamples(\n        accessions=[\"ENCSR000EDP\", \"ENCSR030EDP\", \"ENCSR067EDP\"], # The accessions code for the desired biosamples\n    )\n\nFilters\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nSince the response files can get quite big and hard to read, I've prepared also a couple filter functions.\n\nFor filtering the accessions codes from an experiment response you can use:\n\n.. code:: python\n\n    from encodeproject import accessions\n\n    codes = accessions(my_experiment_query_response)\n\n\nFor filtering the download URLs from a biosample response you can use:\n\n.. code:: python\n\n    from encodeproject import download_urls\n\n    codes = download_urls(my_biosample_query_response)\n\n\nUtilities\n-----------------------------------------\n\nDownload utility\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nI've added also a method to download from a given URL, showing a loading bar, based on `this answer from StackOverflow <https://stackoverflow.com/questions/37573483/progress-bar-while-download-file-over-http-with-requests/37573701#37573701>`_.\n\n.. code:: python\n\n    from encodeproject import download\n\n    download(\"https://encode-public.s3.amazonaws.com/2012/07/01/074e1b37-2be1-4f6a-aa42-6c512fd1834b/ENCFF000XOW.bigWig\")\n\n\nSample to DataFrame instruction\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nUtility to convert a sample to a relatively simple `pandas DataFrame <https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.html>`_.\n\n.. code:: python\n\n    from encodeproject import biosample_to_dataframe\n\n    df = biosample_to_dataframe(my_biosample_query_response)\n\n\nIssues and Feature Requests\n-----------------------------------------\nThis library started out of necessity to script some queries on the encodeproject. If you need some specific feature\nthat isn't currently already offered by the library, please do proceed with a pull request (quickest way: add the feature yourself\nand push it on the library) or alternatively you can open an issue and when I'll get the time I'll see to it.\n\n.. |travis| image:: https://travis-ci.org/LucaCappelletti94/encodeproject.png\n   :target: https://travis-ci.org/LucaCappelletti94/encodeproject\n   :alt: Travis CI build\n\n.. |sonar_quality| image:: https://sonarcloud.io/api/project_badges/measure?project=LucaCappelletti94_encodeproject&metric=alert_status\n    :target: https://sonarcloud.io/dashboard/index/LucaCappelletti94_encodeproject\n    :alt: SonarCloud Quality\n\n.. |sonar_maintainability| image:: https://sonarcloud.io/api/project_badges/measure?project=LucaCappelletti94_encodeproject&metric=sqale_rating\n    :target: https://sonarcloud.io/dashboard/index/LucaCappelletti94_encodeproject\n    :alt: SonarCloud Maintainability\n\n.. |sonar_coverage| image:: https://sonarcloud.io/api/project_badges/measure?project=LucaCappelletti94_encodeproject&metric=coverage\n    :target: https://sonarcloud.io/dashboard/index/LucaCappelletti94_encodeproject\n    :alt: SonarCloud Coverage\n\n.. |coveralls| image:: https://coveralls.io/repos/github/LucaCappelletti94/encodeproject/badge.svg?branch=master\n    :target: https://coveralls.io/github/LucaCappelletti94/encodeproject?branch=master\n    :alt: Coveralls Coverage\n\n.. |pip| image:: https://badge.fury.io/py/encodeproject.svg\n    :target: https://badge.fury.io/py/encodeproject\n    :alt: Pypi project\n\n.. |downloads| image:: https://pepy.tech/badge/encodeproject\n    :target: https://pepy.tech/badge/encodeproject\n    :alt: Pypi total project downloads \n\n.. |codacy| image:: https://api.codacy.com/project/badge/Grade/0f5c4026d3ec4cadb0d4a51f83235a2c\n    :target: https://www.codacy.com/manual/LucaCappelletti94/encodeproject?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=LucaCappelletti94/encodeproject&amp;utm_campaign=Badge_Grade\n    :alt: Codacy Maintainability\n\n.. |code_climate_maintainability| image:: https://api.codeclimate.com/v1/badges/8e5a18a61e3a05f79af0/maintainability\n    :target: https://codeclimate.com/github/LucaCappelletti94/encodeproject/maintainability\n    :alt: Maintainability\n\n.. |code_climate_coverage| image:: https://api.codeclimate.com/v1/badges/8e5a18a61e3a05f79af0/test_coverage\n    :target: https://codeclimate.com/github/LucaCappelletti94/encodeproject/test_coverage\n    :alt: Code Climate Coverate", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/LucaCappelletti94/encodeproject", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "encodeproject", "package_url": "https://pypi.org/project/encodeproject/", "platform": "", "project_url": "https://pypi.org/project/encodeproject/", "project_urls": {"Homepage": "https://github.com/LucaCappelletti94/encodeproject"}, "release_url": "https://pypi.org/project/encodeproject/1.0.17/", "requires_dist": null, "requires_python": "", "summary": "Python package wrapping some of the encode project APIs.", "version": "1.0.17"}, "last_serial": 6963374, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "bf5f6968caccfe4324c2a26f77401684", "sha256": "ea883a51d4f14dd90894f07798663ee0baaff442f98709a39f82c7eb80bedda3"}, "downloads": -1, "filename": "encodeproject-1.0.0.tar.gz", "has_sig": false, "md5_digest": "bf5f6968caccfe4324c2a26f77401684", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5557, "upload_time": "2019-10-23T12:19:16", "upload_time_iso_8601": "2019-10-23T12:19:16.793302Z", "url": "https://files.pythonhosted.org/packages/61/db/61a6e1ea2a8c59f34b1d118ea4a9f69f52f3c51172c2d6661647cc35e46a/encodeproject-1.0.0.tar.gz"}], "1.0.1": [{"comment_text": "", "digests": {"md5": "f85d4501c2a9bd7b1bbdd6c9f6524785", "sha256": "3c75d5544a5302d87e276a63c74449d3eb89a5d91241d72953f63a829c835247"}, "downloads": -1, "filename": "encodeproject-1.0.1.tar.gz", "has_sig": false, "md5_digest": "f85d4501c2a9bd7b1bbdd6c9f6524785", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5791, "upload_time": "2019-10-24T12:02:44", "upload_time_iso_8601": "2019-10-24T12:02:44.595299Z", "url": "https://files.pythonhosted.org/packages/33/40/1d6b0e16216fac943c5b31a78f6ff3d6e982a8690580b5e847414e663628/encodeproject-1.0.1.tar.gz"}], "1.0.10": [{"comment_text": "", "digests": {"md5": "98837ef9230817719609f11c7c64eb28", "sha256": "74817e1c06927cf0f0ec2a5643dac5507be6ce18b978e66b437f1ea9a48d7c82"}, "downloads": -1, "filename": "encodeproject-1.0.10.tar.gz", "has_sig": false, "md5_digest": "98837ef9230817719609f11c7c64eb28", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5981, "upload_time": "2020-03-25T18:41:11", "upload_time_iso_8601": "2020-03-25T18:41:11.146806Z", "url": "https://files.pythonhosted.org/packages/d7/de/c67482e179d94bbc1c22d64702ca5e9464eb525920046cc63ab915b6ff00/encodeproject-1.0.10.tar.gz"}], "1.0.11": [{"comment_text": "", "digests": {"md5": "51ea02ff2cd927948d2c421d22b95a8d", "sha256": "ca9dc52464b83d89f8dce2a58fb1f687b6625064bc82ab7851415bca7266e7d3"}, "downloads": -1, "filename": "encodeproject-1.0.11.tar.gz", "has_sig": false, "md5_digest": "51ea02ff2cd927948d2c421d22b95a8d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5982, "upload_time": "2020-03-25T18:45:21", "upload_time_iso_8601": "2020-03-25T18:45:21.703705Z", "url": "https://files.pythonhosted.org/packages/96/94/a5c9d0b28cefe687808ea7ab9e9d4fa4db3ea165d3327b1b98e3de0cd6cb/encodeproject-1.0.11.tar.gz"}], "1.0.12": [{"comment_text": "", "digests": {"md5": "01d118a1e91772fed321779407645be2", "sha256": "17b289e8d7fb0a593c630e3947c52bedc72da359ee623a4cb06291e98d3077d5"}, "downloads": -1, "filename": "encodeproject-1.0.12.tar.gz", "has_sig": false, "md5_digest": "01d118a1e91772fed321779407645be2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5998, "upload_time": "2020-03-25T19:02:23", "upload_time_iso_8601": "2020-03-25T19:02:23.000775Z", "url": "https://files.pythonhosted.org/packages/ae/8e/9a7266bd1835ca11c89838224168d5633242be80404e28021e6fd863e494/encodeproject-1.0.12.tar.gz"}], "1.0.13": [{"comment_text": "", "digests": {"md5": "ad85a3686562f683152bd14bfd892af7", "sha256": "781c8e91c2b986f6cf0d31b5c04309c65e069e8306597625e065ff14c6a22415"}, "downloads": -1, "filename": "encodeproject-1.0.13.tar.gz", "has_sig": false, "md5_digest": "ad85a3686562f683152bd14bfd892af7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6024, "upload_time": "2020-03-25T19:12:13", "upload_time_iso_8601": "2020-03-25T19:12:13.675056Z", "url": "https://files.pythonhosted.org/packages/e3/85/1aa60e3826aed40dff9e9341488a7ead99227df8fc41915787ed9c062d69/encodeproject-1.0.13.tar.gz"}], "1.0.14": [{"comment_text": "", "digests": {"md5": "e93b0213c753a444203587fde171b201", "sha256": "1899ecb3c9dab419bf46132d814f972732e4c3691874883ee81cf7ed84efff02"}, "downloads": -1, "filename": "encodeproject-1.0.14.tar.gz", "has_sig": false, "md5_digest": "e93b0213c753a444203587fde171b201", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6464, "upload_time": "2020-04-05T13:17:46", "upload_time_iso_8601": "2020-04-05T13:17:46.007310Z", "url": "https://files.pythonhosted.org/packages/ab/1e/ad038899af2113b220207af465e5195e48cabcd4f6bba21fc69c1e7cdf41/encodeproject-1.0.14.tar.gz"}], "1.0.15": [{"comment_text": "", "digests": {"md5": "8b0354b1fc4a0824fcc677f373dcd545", "sha256": "13219ef464ff25a9132cc1be5a365f4089d67d1e4c635e7d9e6783ff6330edc6"}, "downloads": -1, "filename": "encodeproject-1.0.15.tar.gz", "has_sig": false, "md5_digest": "8b0354b1fc4a0824fcc677f373dcd545", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6548, "upload_time": "2020-04-05T17:51:31", "upload_time_iso_8601": "2020-04-05T17:51:31.108243Z", "url": "https://files.pythonhosted.org/packages/65/04/e5cad9030e3fdfe2aec78c45e97af7d0e34de1d0ebac0dbbfe9f1eb15811/encodeproject-1.0.15.tar.gz"}], "1.0.16": [{"comment_text": "", "digests": {"md5": "489e82dd96acfaf1b3c9525be0183c82", "sha256": "d9091b962ca9e0ef62e8c044e9d1825c3b7005fe64522f63aaa7f0b1065a0499"}, "downloads": -1, "filename": "encodeproject-1.0.16.tar.gz", "has_sig": false, "md5_digest": "489e82dd96acfaf1b3c9525be0183c82", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6560, "upload_time": "2020-04-06T08:15:40", "upload_time_iso_8601": "2020-04-06T08:15:40.133185Z", "url": "https://files.pythonhosted.org/packages/12/ec/ddd6ecf54399c680c1879928235065a93c33e5009d735cbb47d5bdaadd0e/encodeproject-1.0.16.tar.gz"}], "1.0.17": [{"comment_text": "", "digests": {"md5": "0e3c959b9228b6c1d472a248d358f2e6", "sha256": "ab5341723d790b2a77a6ae97ebe7450109c10034e125e094127c109ff0f5718c"}, "downloads": -1, "filename": "encodeproject-1.0.17.tar.gz", "has_sig": false, "md5_digest": "0e3c959b9228b6c1d472a248d358f2e6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8095, "upload_time": "2020-04-06T17:49:28", "upload_time_iso_8601": "2020-04-06T17:49:28.251274Z", "url": "https://files.pythonhosted.org/packages/52/a7/74912d5612a62dd516cb8f8b58646d3169144880b61a43d787744af2f3d8/encodeproject-1.0.17.tar.gz"}], "1.0.2": [{"comment_text": "", "digests": {"md5": "71cac5a08d294cffd7533a8f9830b555", "sha256": "0eb0cc097a290bd4da269a4161eb0d0cc058e9ca18922dbf631d062e05163bcc"}, "downloads": -1, "filename": "encodeproject-1.0.2.tar.gz", "has_sig": false, "md5_digest": "71cac5a08d294cffd7533a8f9830b555", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5802, "upload_time": "2019-10-24T12:15:56", "upload_time_iso_8601": "2019-10-24T12:15:56.894225Z", "url": "https://files.pythonhosted.org/packages/4e/22/3d69dc43f9016f4dbef565a2532df432e3de99917eb7902b4f9ca63388ab/encodeproject-1.0.2.tar.gz"}], "1.0.3": [{"comment_text": "", "digests": {"md5": "253c7f4fb85747c6354c3b01fe5537fa", "sha256": "0b28e858dd2e65522b93fcb526192702a3a18d6c5473f6c8c25402993e6b189b"}, "downloads": -1, "filename": "encodeproject-1.0.3.tar.gz", "has_sig": false, "md5_digest": "253c7f4fb85747c6354c3b01fe5537fa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5804, "upload_time": "2019-10-24T12:24:54", "upload_time_iso_8601": "2019-10-24T12:24:54.101040Z", "url": "https://files.pythonhosted.org/packages/07/14/90a933e286e9958f4def677a8b54080df9a9d0f82d16d984c54d3df96c7a/encodeproject-1.0.3.tar.gz"}], "1.0.4": [{"comment_text": "", "digests": {"md5": "371f2f54bcccc491fa2632877977bf0b", "sha256": "3ee0577d2ab33ff796b7b5134a6bfba56e6c6ab2e6561876e947e3abfbdd4012"}, "downloads": -1, "filename": "encodeproject-1.0.4.tar.gz", "has_sig": false, "md5_digest": "371f2f54bcccc491fa2632877977bf0b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5814, "upload_time": "2019-11-02T13:32:54", "upload_time_iso_8601": "2019-11-02T13:32:54.018783Z", "url": "https://files.pythonhosted.org/packages/19/81/614d315dbc6234595d6184187502987be10a1c60d1ebe2355a891bb8df78/encodeproject-1.0.4.tar.gz"}], "1.0.5": [{"comment_text": "", "digests": {"md5": "7c5caabf63d417d457f9520669dbc94c", "sha256": "308ec7fdc5a2dd70358f7bd1cb47763bb77ec2ecb8f1f8f8355249f7772c1a8a"}, "downloads": -1, "filename": "encodeproject-1.0.5.tar.gz", "has_sig": false, "md5_digest": "7c5caabf63d417d457f9520669dbc94c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5842, "upload_time": "2019-11-02T15:12:04", "upload_time_iso_8601": "2019-11-02T15:12:04.514265Z", "url": "https://files.pythonhosted.org/packages/3f/93/a35200178936765aa7c0ab3a4ac46ed29ada70761632b52c20461b86a7e4/encodeproject-1.0.5.tar.gz"}], "1.0.6": [{"comment_text": "", "digests": {"md5": "69b3c8c61fcf5a638e8ba0d0f3b339d9", "sha256": "75217c5ce11bc952c8deabe75f176ae19e4377d4ef4660869b8875d6022f1d6e"}, "downloads": -1, "filename": "encodeproject-1.0.6.tar.gz", "has_sig": false, "md5_digest": "69b3c8c61fcf5a638e8ba0d0f3b339d9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5870, "upload_time": "2019-11-03T10:59:44", "upload_time_iso_8601": "2019-11-03T10:59:44.486482Z", "url": "https://files.pythonhosted.org/packages/ee/f8/e596581d2f3fd849095565d0d18df0bbebb6993e73cad2a4eba7c4ec4bc0/encodeproject-1.0.6.tar.gz"}], "1.0.7": [{"comment_text": "", "digests": {"md5": "66bc551776056437a4656980248ee662", "sha256": "63ba7d86c1439192bbae3a3c78045fa4da5a1a2d482d9ec55be536ee5c118856"}, "downloads": -1, "filename": "encodeproject-1.0.7.tar.gz", "has_sig": false, "md5_digest": "66bc551776056437a4656980248ee662", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5780, "upload_time": "2020-01-07T15:27:18", "upload_time_iso_8601": "2020-01-07T15:27:18.503046Z", "url": "https://files.pythonhosted.org/packages/ea/39/013a6c4300ec92ce7a932f8c38f15426fdfdc65a9c5ede810b3934451b2e/encodeproject-1.0.7.tar.gz"}], "1.0.8": [{"comment_text": "", "digests": {"md5": "43467184c56537b61cbf2e1848b8d119", "sha256": "64c8dfc11b5dc16ccbbf1e13c194195ffa61e0e79f40c788ad0049f548670877"}, "downloads": -1, "filename": "encodeproject-1.0.8.tar.gz", "has_sig": false, "md5_digest": "43467184c56537b61cbf2e1848b8d119", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5783, "upload_time": "2020-02-08T19:32:10", "upload_time_iso_8601": "2020-02-08T19:32:10.427634Z", "url": "https://files.pythonhosted.org/packages/65/92/25dba97e4f6e2e6417f856a88825c7aae464e8abe10ef6abfac14f059216/encodeproject-1.0.8.tar.gz"}], "1.0.9": [{"comment_text": "", "digests": {"md5": "74b999ebe432ef48fbbdeaf7f6bcf30a", "sha256": "a006c060af8d56548c81c701900b4887b24ffab57baeba61775bd13911c20c7d"}, "downloads": -1, "filename": "encodeproject-1.0.9.tar.gz", "has_sig": false, "md5_digest": "74b999ebe432ef48fbbdeaf7f6bcf30a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5898, "upload_time": "2020-03-15T12:41:30", "upload_time_iso_8601": "2020-03-15T12:41:30.049196Z", "url": "https://files.pythonhosted.org/packages/d1/98/1b63b633a8d0ec0eefee264a4d3ce2ffa56c3624c564ba8aff979fd9bb3c/encodeproject-1.0.9.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "0e3c959b9228b6c1d472a248d358f2e6", "sha256": "ab5341723d790b2a77a6ae97ebe7450109c10034e125e094127c109ff0f5718c"}, "downloads": -1, "filename": "encodeproject-1.0.17.tar.gz", "has_sig": false, "md5_digest": "0e3c959b9228b6c1d472a248d358f2e6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8095, "upload_time": "2020-04-06T17:49:28", "upload_time_iso_8601": "2020-04-06T17:49:28.251274Z", "url": "https://files.pythonhosted.org/packages/52/a7/74912d5612a62dd516cb8f8b58646d3169144880b61a43d787744af2f3d8/encodeproject-1.0.17.tar.gz"}]}