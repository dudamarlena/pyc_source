{"info": {"author": "Sondre Lilleb\u00f8 Gundersen", "author_email": "sondrelg@live.no", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 2.2", "Framework :: Django :: 3.0", "Framework :: Pytest", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "License :: Other/Proprietary License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Documentation", "Topic :: Software Development", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Application Frameworks", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Software Development :: Testing", "Topic :: Software Development :: Testing :: Unit"], "description": "#####################\nDjango Swagger Tester\n#####################\n\n.. image:: https://img.shields.io/pypi/v/django-swagger-tester.svg\n    :target: https://pypi.org/project/django-swagger-tester/\n\n.. image:: https://img.shields.io/pypi/pyversions/django-swagger-tester.svg\n    :target: https://pypi.org/project/django-swagger-tester/\n\n.. image:: https://img.shields.io/pypi/djversions/django-swagger-tester.svg\n    :target: https://pypi.python.org/pypi/django-swagger-tester\n\n.. image:: https://readthedocs.org/projects/django-swagger-tester/badge/?version=latest\n    :target: https://django-swagger-tester.readthedocs.io/en/latest/?badge=latest\n    :alt: Documentation Status\n\n.. image:: https://codecov.io/gh/sondrelg/django-swagger-tester/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/sondrelg/django-swagger-tester\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :target: https://pypi.org/project/django-swagger-tester/\n\n.. image:: https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&logoColor=white\n    :target: https://github.com/pre-commit/pre-commit\n\nThis package lets you test the integrity of your OpenAPI/Swagger documentation.\n\nThe package has three main features:\n\n* `Testing response documentation <testing_with_django_swagger_tester.html>`_\n* `Testing input documentation <testing_with_django_swagger_tester.html>`_\n* `Ensuring all documentation complies with a case standard <configuration.html>`_. Available standards include:\n\n    * camelCase\n    * snake_case\n    * kebab-case\n    * PascalCase\n\n\nDjango Swagger Tester is currently compatible with Swagger documentation generated using drf_yasg_, or docs rendered from a schema file (yaml/json). If you're using another method to generate your documentation and would like to use this library, feel free to add an issue, or create a PR - expanding the package is relatively simple.\n\n************\nInstallation\n************\n\nInstall using pip:\n\n.. code:: bash\n\n    pip install django-swagger-tester\n\n*************\nConfiguration\n*************\n\nSettings\n========\n\nTo add Django Swagger Settings in your project, add a ``SWAGGER_TESTER`` object to your ``settings.py``:\n\n.. code-block:: python\n\n    SWAGGER_TESTER = {\n        'CASE': 'camel case',\n        'PATH': BASE_DIR + '/openapi-schema.yml'  # not required for drf_yasg\n    }\n\n\nSetting parameters\n==================\n\n* CASE\n    The case standard you wish to enforce for your documentation.\n\n    Needs to be one of the following:\n\n        * :code:`camel case`\n        * :code:`snake case`\n        * :code:`pascal case`\n        * :code:`kebab case`\n        * :code:`None`\n\n    All documentation is tested to make sure values are correctly cased, unless you specify :code:`None` to skip this feature.\n\n    Example:\n\n    .. code-block:: python\n\n        SWAGGER_TESTER = {\n            'CASE': 'snake case',\n        }\n\n    Default: :code:`camel case`\n\n* PATH\n    The path to your OpenAPI specification.\n\n    Example:\n\n    .. code-block:: python\n\n        SWAGGER_TESTER = {\n            'PATH': BASE_DIR + '/openapi-schema.yml',\n        }\n\n\n    *This setting is not required if your swagger docs are generated.*\n\n**********************************\nTesting with django Swagger Tester\n**********************************\n\nThis document contains an in-depth explanation on how the package works, and how to best implement it.\n\nResponse validation\n===================\n\nAn OpenAPI schema should generally span all APIs you provide. For each API, there may be several methods to document (GET, PUT, POST, DELETE, ...), and for each method you may have several responses (200, 400, 401, 404, 5XX). Seeing that at least parts of the OpenAPI schema used for rendering your swagger docs will need to be maintained manually, it is easy to see how bugs might be introduced in the documentation over time. By testing your response documentation against your actual API responses, you can make sure that errors don't pass silently.\n\nThis functionality is currently compatible with rendered static schema, or generated `drf_yasg`_ swagger docs.\n\n.. _Drf_yasg: https://github.com/axnsan12/drf-yasg\n\nAt the core, the logic for testing an OpenAPI schema is the same, regardless of your Swagger implementation. However, because packages like drf_yasg_ lets you generate documentation on the fly, we need custom logic for extracting the schema. The result is that we need separate implementations for separate documentation implementations, simply for loading schemas.\n\nThe validate_response function\n------------------------------\n\nThe ``validate_response`` function takes three required inputs:\n\n* response\n    description: This should be the response object returned from an API call. Note: Make sure to pass the response object, not the response data, as we need to match both ``status_code`` and ``json`` to the OpenAPI schema.\n    type: Response\n\n* method\n    description: This should be the HTTP method used to get the reponse.\n    type: string\n    example: 'GET'\n\n* endpoint_url\n    description: This should be the resolvable path of your endpoint.\n    type: string\n    example: 'api/v1/test'\n\nIn addition, the function also takes one optional input:\n\n* ignore_case\n    description: List of keys for which we will skip case-validation. This can be useful for when you've made a conscious decision to, e.g., keep an acronym upper-cased although you have camelCase as a general standard.\n    type: list of strings\n    example: ['API',]\n\nDynamically rendered OpenAPI schema with drf_yasg\n-------------------------------------------------\n\nThe drf_yasg_ implementation can be imported from its own project folder:\n\n.. code-block:: python\n\n    from django_swagger_tester.response_validation.drf_yasg import validate_response\n\n\nStatically rendered OpenAPI schema\n----------------------------------\n\nWhen testing a static schema (located locally in your project), make sure to point to the right file in the ``PATH`` setting.\n\nThe static schema implementation can be imported from its own project folder:\n\n.. code-block:: python\n\n    from django_swagger_tester.response_validation.static_schema import validate_response\n\n\nExamples\n--------\n\nA pytest implementation might look like this:\n\n.. code:: python\n\n    def test_response_documentation(client):\n        response = client.get('api/v1/test/')\n\n        assert response.status_code == 200\n        assert response.json() == expected_response\n\n        # Test Swagger documentation\n        validate_response(response=response, method='GET', endpoint_url='api/v1/test/', ignore_case=[])\n\nA Django-test implementation might look like this:\n\n.. code-block:: python\n\n    class MyApiTest(APITestCase):\n\n        def setUp(self) -> None:\n            user, _ = User.objects.update_or_create(username='test_user')\n            self.client.force_authenticate(user=user)\n            self.path = '/api/v1/test/'\n\n        def test_get_200(self) -> None:\n            \"\"\"\n            Verifies that a 200 is returned for a valid GET request to the /test/ endpoint.\n            \"\"\"\n            response = self.client.get(self.path, headers={'Content-Type': 'application/json'})\n            expected_response = [...]\n\n            self.assertEqual(response.status_code, 200)\n            self.assertEqual(response.json(), expected_response)\n\n            # Test Swagger documentation\n            validate_response(response=response, method='GET', endpoint_url=self.path)\n\nYou can also test more than a single response at the time.\n\n.. code:: python\n\n    def test_response_documentation(client):\n        # 201 - Resource created\n        response = client.post('api/v1/test/', data=...)\n        validate_response(response=response, method='POST', endpoint_url='api/v1/test/', ignore_case=[])\n\n        # 200 - Idempotency --> if an object exists, return it with a 200 without creating a new resource\n        response = client.post('api/v1/test/', data=...)\n        validate_response(response=response, method='POST', endpoint_url='api/v1/test/', ignore_case=[])\n\n        # 400 - Bad data\n        response = client.post('api/v1/test/', data=bad_data)\n        validate_response(response=response, method='POST', endpoint_url='api/v1/test/', ignore_case=[])\n\nInput validation\n================\n\nSimilarly to the response documentation, request body examples should be representative of a functioning request body. If you use Django Rest Framework's `Serializer` class for input validation, it is simple to make sure that all your documented request bodies would pass input validation for all endpoints.\n\nThis is currently under development and will be added for v1.0.0\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sondrelg/django-swagger-tester", "keywords": "openapi,swagger,api,testing,django", "license": "BSD-4-Clause", "maintainer": "", "maintainer_email": "", "name": "django-swagger-tester", "package_url": "https://pypi.org/project/django-swagger-tester/", "platform": "", "project_url": "https://pypi.org/project/django-swagger-tester/", "project_urls": {"Documentation": "https://django-swagger-tester.readthedocs.io/en/latest/", "Homepage": "https://github.com/sondrelg/django-swagger-tester", "Repository": "https://github.com/sondrelg/django-swagger-tester"}, "release_url": "https://pypi.org/project/django-swagger-tester/0.2.3/", "requires_dist": ["djangorestframework", "django (>=2.2,<4.0)"], "requires_python": ">=3.5,<4.0", "summary": "Test utility for your Swagger documentation.", "version": "0.2.3"}, "last_serial": 6957201, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "a92daaad6730f78ac9b5a47ab3152a5d", "sha256": "996c0ad88bb3a68daed65b8dea6f8306af93a4e4b77041d61193d4efe24fde48"}, "downloads": -1, "filename": "django_swagger_tester-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a92daaad6730f78ac9b5a47ab3152a5d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 32007, "upload_time": "2020-03-09T21:44:52", "upload_time_iso_8601": "2020-03-09T21:44:52.779686Z", "url": "https://files.pythonhosted.org/packages/09/8d/175578b941efe0840d25d263d3acc053a124db1ce4dcee0f3b31f877cea3/django_swagger_tester-0.1.0-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "fa0d2369b8c09a6c265ce538b3fa5d37", "sha256": "c75366ece12d6b0162bfa08b57f992ef4a0bd112cf2f669cb3714ae53ef950cf"}, "downloads": -1, "filename": "django-swagger-tester-0.1.0.tar.gz", "has_sig": false, "md5_digest": "fa0d2369b8c09a6c265ce538b3fa5d37", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21040, "upload_time": "2020-03-09T21:44:55", "upload_time_iso_8601": "2020-03-09T21:44:55.139405Z", "url": "https://files.pythonhosted.org/packages/da/16/cc347a16e670fab80e177a00b74d13c2a42d22a1413172b20fe5dbb3545e/django-swagger-tester-0.1.0.tar.gz"}], "0.2.1": [{"comment_text": "", "digests": {"md5": "9fa0c8e82168aa7811b747edb5ca80ec", "sha256": "9872ec93961038e05866645e224066c6c5c061f38f768eb229be8fd74271883b"}, "downloads": -1, "filename": "django_swagger_tester-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9fa0c8e82168aa7811b747edb5ca80ec", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5,<4.0", "size": 17083, "upload_time": "2020-04-05T08:29:07", "upload_time_iso_8601": "2020-04-05T08:29:07.399722Z", "url": "https://files.pythonhosted.org/packages/fb/1e/dc5c62ffc01c729c2b811b030f19d75e743467225f8c71a021da6588f022/django_swagger_tester-0.2.1-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "2576eb855324b89298712f5f29ce84c7", "sha256": "5aa0fc8b16d999b64b024eb3d9f4f28c6caca8712b978e7ec8108fd9123345e7"}, "downloads": -1, "filename": "django-swagger-tester-0.2.1.tar.gz", "has_sig": false, "md5_digest": "2576eb855324b89298712f5f29ce84c7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<4.0", "size": 15187, "upload_time": "2020-04-05T08:29:06", "upload_time_iso_8601": "2020-04-05T08:29:06.195926Z", "url": "https://files.pythonhosted.org/packages/1a/fe/a13355dbe0560f59904984fe63aaa35b366f212b4fddd80013a67d62824d/django-swagger-tester-0.2.1.tar.gz"}], "0.2.2": [{"comment_text": "", "digests": {"md5": "fcf9ed60a566e5f128893428e00a06ba", "sha256": "6a15ea471b9296eaf4a421dd7fcc83aff042aae95597ea2010101730e23683b1"}, "downloads": -1, "filename": "django_swagger_tester-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "fcf9ed60a566e5f128893428e00a06ba", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5,<4.0", "size": 17889, "upload_time": "2020-04-05T18:27:48", "upload_time_iso_8601": "2020-04-05T18:27:48.441911Z", "url": "https://files.pythonhosted.org/packages/84/71/24e007b7fc86bcfe020bf259157b9c526a17589ff23a65f1ea9bd4402b3f/django_swagger_tester-0.2.2-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "9f0906989cb33b7fa8d99f7430fe21c8", "sha256": "2f607fad372072429c59e6fa652956c6699fba0945162814a5f2960ae79e0941"}, "downloads": -1, "filename": "django-swagger-tester-0.2.2.tar.gz", "has_sig": false, "md5_digest": "9f0906989cb33b7fa8d99f7430fe21c8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<4.0", "size": 16677, "upload_time": "2020-04-05T18:27:47", "upload_time_iso_8601": "2020-04-05T18:27:47.422998Z", "url": "https://files.pythonhosted.org/packages/d2/1f/35030ba3dd91fb81e909f230e5727f2d53449327866874ee1d0c7deeb427/django-swagger-tester-0.2.2.tar.gz"}], "0.2.3": [{"comment_text": "", "digests": {"md5": "fc99c348f5ea2acabf14ded04bf22d06", "sha256": "95d23ef5510a1cdd02482377e6d8943f9197be798359cc914179c7cbf14d419b"}, "downloads": -1, "filename": "django_swagger_tester-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "fc99c348f5ea2acabf14ded04bf22d06", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5,<4.0", "size": 17904, "upload_time": "2020-04-05T18:48:09", "upload_time_iso_8601": "2020-04-05T18:48:09.350435Z", "url": "https://files.pythonhosted.org/packages/90/d4/549776d8058dbc8cf3143c577d51ab2db1c691b513aea9b436d831e312b0/django_swagger_tester-0.2.3-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "1e816a6f504ce1bc7c6239022994ac5a", "sha256": "0660709152111f75ebd701d62c2303ee0669e72d4a0d1a88765805ef1c057bba"}, "downloads": -1, "filename": "django-swagger-tester-0.2.3.tar.gz", "has_sig": false, "md5_digest": "1e816a6f504ce1bc7c6239022994ac5a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<4.0", "size": 16698, "upload_time": "2020-04-05T18:48:08", "upload_time_iso_8601": "2020-04-05T18:48:08.040192Z", "url": "https://files.pythonhosted.org/packages/2b/19/2a34fa22355dbcee54c21770fdc49086578484be8e7d338234beab7ed022/django-swagger-tester-0.2.3.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "fc99c348f5ea2acabf14ded04bf22d06", "sha256": "95d23ef5510a1cdd02482377e6d8943f9197be798359cc914179c7cbf14d419b"}, "downloads": -1, "filename": "django_swagger_tester-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "fc99c348f5ea2acabf14ded04bf22d06", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5,<4.0", "size": 17904, "upload_time": "2020-04-05T18:48:09", "upload_time_iso_8601": "2020-04-05T18:48:09.350435Z", "url": "https://files.pythonhosted.org/packages/90/d4/549776d8058dbc8cf3143c577d51ab2db1c691b513aea9b436d831e312b0/django_swagger_tester-0.2.3-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "1e816a6f504ce1bc7c6239022994ac5a", "sha256": "0660709152111f75ebd701d62c2303ee0669e72d4a0d1a88765805ef1c057bba"}, "downloads": -1, "filename": "django-swagger-tester-0.2.3.tar.gz", "has_sig": false, "md5_digest": "1e816a6f504ce1bc7c6239022994ac5a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<4.0", "size": 16698, "upload_time": "2020-04-05T18:48:08", "upload_time_iso_8601": "2020-04-05T18:48:08.040192Z", "url": "https://files.pythonhosted.org/packages/2b/19/2a34fa22355dbcee54c21770fdc49086578484be8e7d338234beab7ed022/django-swagger-tester-0.2.3.tar.gz"}]}