{"info": {"author": "Peter J. A. Cock", "author_email": "p.j.a.cock@googlemail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: Flake8", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Software Development :: Quality Assurance"], "description": "flake8-sfs - Python String Formatting Style Plugin\n==================================================\n\n.. image:: https://img.shields.io/pypi/v/flake8-sfs.svg\n   :alt: Released on the Python Package Index (PyPI)\n   :target: https://pypi.org/project/flake8-sfs/\n.. image:: https://img.shields.io/conda/vn/conda-forge/flake8-sfs.svg\n   :alt: Released on Conda\n   :target: https://anaconda.org/conda-forge/flake8-sfs\n.. image:: https://img.shields.io/travis/peterjc/flake8-sfs/master.svg\n   :alt: Testing with TravisCI\n   :target: https://travis-ci.org/peterjc/flake8-sfs/branches\n.. image:: https://img.shields.io/pypi/dm/flake8-sfs.svg\n   :alt: PyPI downloads\n   :target: https://pypistats.org/packages/flake8-sfs\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n   :alt: Code style: black\n   :target: https://github.com/python/black\n\nIntroduction\n------------\n\nThis is an MIT licensed flake8 plugin for enforcing a Python string formatting\npreference. It is available to install from the `Python Package Index (PyPI)\n<https://pypi.org/project/flake8-sfs/>`_.\n\nFor historical reasons, the Python programming language has accumlated multiple\nways to do string formatting. The three main ones are:\n\n* Percent operator (violation codes ``SFS1##``), as in this example:\n\n.. code :: pycon\n\n    >>> name = \"Peter\"\n    >>> price = 1.2\n    >>> print(\"Hello %s, do you have $%0.2f?\" % (name, price))\n    Hello Peter, do you have $1.20?\n\n* Format method (violation codes ``SFS2##``), available since Python 2.6,\n\n.. code :: pycon\n\n    >>> name = \"Peter\"\n    >>> price = 1.2\n    >>> print(\"Hello {}, do you have ${:0.2f}?\".format(name, price))\n    Hello Peter, do you have $1.20?\n\n* f-strings (violation codes ``SFS3##``), available since Python 3.6,\n\n.. code :: pycon\n\n    >>> name = \"Peter\"\n    >>> price = 1.2\n    >>> print(f\"Hello {name}, do you have ${price:0.2f}?\")\n\nWe are spoilt for choice, but quoting the `Zen of Python\n<https://www.python.org/dev/peps/pep-0020/>`_, *There should be one - and\npreferably only one - obvious way to do it*. This flake8 plugin exists to let\nyou define which of these styles your project allows.\n\nBy default this plugin complains about all three styles - we expect you to make\nan explicit choice and configure which codes to ignore. See uses cases below.\n\nFlake8 Validation codes\n-----------------------\n\nEarly versions of flake8 assumed a single character prefix for the validation\ncodes, which became problematic with collisions in the plugin ecosystem. Since\nv3.0, flake8 has supported longer prefixes therefore this plugin uses ``SFS``\nas its prefix (short for String Format Style).\n\nPrefix ``SFS1`` - percent operator:\n\n====== =======================================================================\nCode   Description\n------ -----------------------------------------------------------------------\nSFS101 String literal formatting using percent operator.\nSFS102 Bytes literal formatting using percent operator.\n====== =======================================================================\n\nPrefix ``SFS2`` - format method:\n\n====== =======================================================================\nCode   Description\n------ -----------------------------------------------------------------------\nSFS201 String literal formatting using .format method.\nSFS202 String formatting with str.format('...', ...) directly.\n====== =======================================================================\n\nPrefix ``SFS3`` - f-strings:\n\n====== =======================================================================\nCode   Description\n------ -----------------------------------------------------------------------\nSFS301 String literal formatting using f-string.\n====== =======================================================================\n\nYou can use a partial code like ``SFS1`` in flake8 to ignore all the ``SFS1##``\npercent formatting codes.\n\nUse cases\n=========\n\nIf you accept that f-strings are best, you could run a tool like `flynt\n<https://github.com/ikamensh/flynt>`_ to automatically convert all your code -\nand then use this flake8 plugin to enforce the style by configuring it to\nignore the ``SFS301`` violation.\n\nYou might be maintaining a project which still supports Python 2, where you\nhave a mix of percent and format method string formatting. Here tell flake8 to\nignore the ``SFS1`` and ``SFS2`` prefixes, and complain only about f-strings\nwhich would be a syntax error on Python 2 (i.e. enforce only prefix ``SFS3``).\n\nAlternatively, you might have a large legacy codebase with lots of the percent\nformatting - yet want to move any format methods to f-strings. Here you could\nignore the ``SFS1`` and ``SFS3`` prefixes and enforce only the format method\nchecks (``SFS2`` prefix).\n\nOr you might say the old ways are the best, and configure flake8 to ignore the\npercent formatting but treat either the format method or f-strings as errors\n(by ignoring the ``SFS1`` prefix).\n\nInstallation and usage\n----------------------\n\nPython 3.6 or later is required (as we use need to parse the Python syntax\nwhich may include f-strings), but flake8 and this plugin can still be used on\ncode intended support older versions of Python.\n\nWe recommend installing the plugin using pip, which handles the dependencies::\n\n    $ pip install flake8-sfs\n\nAlternatively, if you are using the Anaconda packaging system, the following\ncommand will install the plugin with its dependencies::\n\n    $ conda install -c conda-forge flake8-sfs\n\nThe new validator should be automatically included when using ``flake8`` which\nmay now report additional validation codes starting with ``SFS`` (as defined\nabove). For example::\n\n    $ flake8 example.py\n\nYou can request only the ``SFS`` codes be shown using::\n\n    $ flake8 --select SFS example.py\n\nYou should add at least some SFS validation codes to your flake8 configuration\nfile's select or ignore list.\n\nConfiguration\n-------------\n\nWe assume you are familiar with `flake8 configuration\n<http://flake8.pycqa.org/en/latest/user/configuration.html>`_.\n\nUnless your code performs no string formatting at all (which would be unusual),\nyou should tell flake8 to ignore at least one of this plugin's violation codes.\nFor example::\n\n    [flake8]\n    extend-ignore =\n        # Ignore f-strings, we like them:\n        SFS301,\n\nNote that flake8 allows splitting comma separated lists over multiple lines,\nand allows including of hash comment lines.\n\n\nVersion History\n---------------\n\n======= ========== ===========================================================\nVersion Released   Changes\n------- ---------- -----------------------------------------------------------\nv0.0.3  2020-01-22 - Updates to documentation and PyPI metadata.\nv0.0.2  2020-01-12 - Codes now have a heirachy (so can ignore whole groups).\n                   - Added ``str.format(\"...\", ...)`` check.\nv0.0.1  2020-01-11 - Initial public release (initial codes later reallocated).\n======= ========== ===========================================================\n\n\nDevelopers\n----------\n\nThis plugin is on GitHub at https://github.com/peterjc/flake8-sfs\n\nTo make a new release once tested locally and on TravisCI::\n\n    $ git tag vX.Y.Z\n    $ python setup.py sdist --formats=gztar\n    $ twine upload dist/flake8-sfs-X.Y.Z.tar.gz\n    $ git push origin master --tags\n\nThe PyPI upload should trigger an automated pull request updating the\n`flake8-sfs conda-forge recipe\n<https://github.com/conda-forge/flake8-sfs-feedstock/blob/master/recipe/meta.yaml>`_.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/peterjc/flake8-sfs", "keywords": "strings,formatting,style,f-string", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "flake8-sfs", "package_url": "https://pypi.org/project/flake8-sfs/", "platform": "", "project_url": "https://pypi.org/project/flake8-sfs/", "project_urls": {"Homepage": "https://github.com/peterjc/flake8-sfs"}, "release_url": "https://pypi.org/project/flake8-sfs/0.0.3/", "requires_dist": null, "requires_python": "", "summary": "Python String Formatting Style (SFS) plugin for flake8", "version": "0.0.3"}, "last_serial": 6499764, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "a95dd91633cd5f340aaf0d8946f6f025", "sha256": "444b839ef76eaaa17c56a362b13f587959836032b57d1f19bacc716d84b78e01"}, "downloads": -1, "filename": "flake8-sfs-0.0.1.tar.gz", "has_sig": false, "md5_digest": "a95dd91633cd5f340aaf0d8946f6f025", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5699, "upload_time": "2020-01-11T23:42:35", "upload_time_iso_8601": "2020-01-11T23:42:35.636708Z", "url": "https://files.pythonhosted.org/packages/ca/2d/b1860b76c0b0d7d83e98688fe5d1b57aaf7907828c6945256c32f499aca4/flake8-sfs-0.0.1.tar.gz"}], "0.0.2": [{"comment_text": "", "digests": {"md5": "98fa68d46d9876df23a7037f732929d4", "sha256": "aeada40b526bf49d443f3f21483705dd8fa958c23809671e2ea8ab8cc1eeb4ab"}, "downloads": -1, "filename": "flake8-sfs-0.0.2.tar.gz", "has_sig": false, "md5_digest": "98fa68d46d9876df23a7037f732929d4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6079, "upload_time": "2020-01-12T11:34:10", "upload_time_iso_8601": "2020-01-12T11:34:10.429476Z", "url": "https://files.pythonhosted.org/packages/77/18/5dfc0e1ab76570a25b18d5f9ba76fb97f459668ec0bfdeb63faf84ad1d34/flake8-sfs-0.0.2.tar.gz"}], "0.0.3": [{"comment_text": "", "digests": {"md5": "dbf1b4d0c46cc6711fad662ddda473dc", "sha256": "43936ce55c18fec8465b9640825dd27da7bb748f1bb899e8954cd9e3cae05a94"}, "downloads": -1, "filename": "flake8-sfs-0.0.3.tar.gz", "has_sig": false, "md5_digest": "dbf1b4d0c46cc6711fad662ddda473dc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6246, "upload_time": "2020-01-22T11:36:22", "upload_time_iso_8601": "2020-01-22T11:36:22.790122Z", "url": "https://files.pythonhosted.org/packages/26/69/3b4c40961230d8e6d13d4da1533da8f2c89d66c4fa058a3ff5700682b685/flake8-sfs-0.0.3.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "dbf1b4d0c46cc6711fad662ddda473dc", "sha256": "43936ce55c18fec8465b9640825dd27da7bb748f1bb899e8954cd9e3cae05a94"}, "downloads": -1, "filename": "flake8-sfs-0.0.3.tar.gz", "has_sig": false, "md5_digest": "dbf1b4d0c46cc6711fad662ddda473dc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6246, "upload_time": "2020-01-22T11:36:22", "upload_time_iso_8601": "2020-01-22T11:36:22.790122Z", "url": "https://files.pythonhosted.org/packages/26/69/3b4c40961230d8e6d13d4da1533da8f2c89d66c4fa058a3ff5700682b685/flake8-sfs-0.0.3.tar.gz"}]}