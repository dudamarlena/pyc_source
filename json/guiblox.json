{"info": {"author": "Martin C Lim", "author_email": "martin.lim@rsa.rohde-schwarz.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: Other/Proprietary License", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering :: Electronic Design Automation (EDA)"], "description": "# Object oriented TKINTER WIDGETS\n\n## Project goals\n\nObject oriented GUI library.  Programatically generate common gui items.\n\n## Installation\n\n```python\nfrom guiblox                    import buttonRow, entryCol, theme, listWindow\n```\n## Getting Started\n\n```python\nfrom guiblox.__main__ import main\n\nmain()\n```\n\n# Documentation\n\n## Entry Column\n\n```python\nfrom guiblox import entryCol\n\nentryDict = {}                                          # Dict for entry column object\nentryDict['Entry1']     = '192.168.1.114'               # Define Label & Default Val\nentryDict['Entry2']     = '192.168.1.114'               # Define Label & Default Val\nentryDict['Entry3']     = 'spaceHolder'                 # Define Label & Default Val\n\nroot = theme().addColor()                               # Create GUI object w/ colors\nroot.entryCol = entryCol(root, entryDict)               # Create column of entry fields\n\n### Assign Functions/Behavior\nroot.entryCol.frame.config(width=100)                   # Chg frame width\nroot.entryCol.chg2Enum('entry2', ['Opt1','Opt2'])       # Chg entry2 to pull down\nroot.entryCol.entry2_enum.set('Opt1')                   # entry2 default value\n```\n\n## Button Row\n\n```python\nfrom guiblox import buttonRow\n\nroot = theme().addColor()                               # Create GUI object w/ colors defined.\nroot.title('GUI Example')\n\n### Create GUI Elements\nroot.buttnRow = buttonRow(root, 3)                      # pylint: disable=unused-variable\n\n### Assign Functions/Behavior\nroot.buttnRow.button0.config(text='foo'  ,command=lambda: buttonfunc1(root))\nroot.buttnRow.button1.config(text='clear',command=lambda: buttonfunc2(root))\nroot.buttnRow.button2.config(text='baz'  ,command=lambda: buttonfunc3(root))\n```\n\n## Output TextBoxes\n\n```python\nfrom guiblox import listWindow\n\nroot = theme().addColor()                               # Create GUI object w/ colors\nroot.title('GUI Example')\n\n### Create GUI Elements\nroot.TextBox = listWindow(root)                        # Create bottom text box\nroot.TextBox.stdOut()                                  # Print --> TextBox\n\n### Assign Functions/Behavior\nroot.TextBox.listWindow.config(height= 5,width=66)\n```\n\nlistWindow Method       | Description\n------------------------|------------------------------------------\nlistWindow.add_Files    | Opens GUI to add files\nlistWindow.clear        | Clears listWindow\nlistWindow.getlist      | returns contents as list\nlistWindow.getstr       | returns contents as string\nlistWindow.stdOut       | Redirects Print statements to listWindow\nlistWindow.writeN       | Prints text to listWindow\nlistWindow.writeH       | Prints text to listWindow w/ Highlight", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mclim9/guiblox", "keywords": "tkinter", "license": "R&S Terms and Conditions for Royalty-Free Products", "maintainer": "", "maintainer_email": "", "name": "guiblox", "package_url": "https://pypi.org/project/guiblox/", "platform": "", "project_url": "https://pypi.org/project/guiblox/", "project_urls": {"Homepage": "https://github.com/mclim9/guiblox"}, "release_url": "https://pypi.org/project/guiblox/2019.5.22/", "requires_dist": null, "requires_python": "", "summary": "GUI Widgets in Frames", "version": "2019.5.22"}, "last_serial": 5304351, "releases": {"2019.5.22": [{"comment_text": "", "digests": {"md5": "7f1bd47579a385776fbd79f1e30589aa", "sha256": "912c8cf28a295c1eda73741b028e5b41cbcbaab3c6743b571205d901045aeec9"}, "downloads": -1, "filename": "guiblox-2019.5.22.tar.gz", "has_sig": false, "md5_digest": "7f1bd47579a385776fbd79f1e30589aa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5933, "upload_time": "2019-05-22T20:11:19", "upload_time_iso_8601": "2019-05-22T20:11:19.702828Z", "url": "https://files.pythonhosted.org/packages/d3/cd/a3c65793fbb4c144c04007ef30f2de43b40ccb2710965b66cb0356ac162f/guiblox-2019.5.22.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "7f1bd47579a385776fbd79f1e30589aa", "sha256": "912c8cf28a295c1eda73741b028e5b41cbcbaab3c6743b571205d901045aeec9"}, "downloads": -1, "filename": "guiblox-2019.5.22.tar.gz", "has_sig": false, "md5_digest": "7f1bd47579a385776fbd79f1e30589aa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5933, "upload_time": "2019-05-22T20:11:19", "upload_time_iso_8601": "2019-05-22T20:11:19.702828Z", "url": "https://files.pythonhosted.org/packages/d3/cd/a3c65793fbb4c144c04007ef30f2de43b40ccb2710965b66cb0356ac162f/guiblox-2019.5.22.tar.gz"}]}