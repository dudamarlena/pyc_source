{"info": {"author": "circius", "author_email": "circius@posteo.de", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Topic :: Utilities"], "description": "[![Build Status](https://travis-ci.org/circius/webdiplomacy-bot.svg?branch=master)](https://travis-ci.org/circius/webdiplomacy-bot)\n\n## summary\n\nThis is a discord bot which scrapes the current status of games at\nwebdiplomacy and announces that information on discord.\n\nIt also incorporates a very rudimentary cli tool which does the same\nthing on the host.\n\n## functionality\n\nFor the moment it only produces one kind of announcement, in the\nfollowing format:\n\n\"It is the [season] of [year].\nWe are awaiting the order of:\n[list of non-ready players with their order statuses]\"\n\nIn a discord channel it will do this in response to the message \"$status\".\n\nrun as a cli app, it will simply output a similar message and terminate.\n\n## configuration\n\ndipbot depends on two environment variables which must be correctly\nset for it to function. \n\nIn order to know which game to parse, the environment variable\nWEBDIP_GAME_ID must be set to the corresponding webdiplomacy.com game\nid. This is the number at the end of the webdiplomacy url for the\ngame; for instance, in the following URL, the id is 111111\n\nhttps://webdiplomacy.net/board.php?gameID=111111\n\nIn addition, to host the discord bot yourself it's necessary to create\na bot account as described\n[here](https://discordpy.readthedocs.io/en/latest/discord.html), and\nto set the environment variable DISCORD_API_KEY to the value of the\nbot's token.\n\n## installation\n\nthe most recent release is available from pip:\n\n``` shell\n$ pip install --user dipbot\n```\n\nafter which, so long as your PATH is properly configured, you should be able to run dipbot directly from the shell:\n\n``` shell\n$ dipbot\n```\n\n## usage\n\nthere are two subcommands available:\n\n``` shell\n$ dipbot report\n```\n\nwhich parses the status of the game and reports it to the shell before quitting, and\n\n``` shell\n$ dipbot daemon\n```\n\nwhich attempts to initialize a discord bot corresponding to the token stored in DISCORD_API_KEY, and which will respond with a report when addressed on discord with the messages \"$status\" and \"!status\".", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/circius/webdiplomacy-bot/archive/0.11.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/circius/webdiplomacy-bot", "keywords": "webdiplomacy,bot,discord", "license": "", "maintainer": "", "maintainer_email": "", "name": "dipbot", "package_url": "https://pypi.org/project/dipbot/", "platform": "", "project_url": "https://pypi.org/project/dipbot/", "project_urls": {"Download": "https://github.com/circius/webdiplomacy-bot/archive/0.11.tar.gz", "Homepage": "https://github.com/circius/webdiplomacy-bot"}, "release_url": "https://pypi.org/project/dipbot/0.11/", "requires_dist": null, "requires_python": ">=3.6", "summary": "webdiplomacy status reporter bot for discord", "version": "0.11"}, "last_serial": 6971837, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "192d6619f5fa9cd0e771a2842adc75bd", "sha256": "d74f61a61edb88e8435531f3ece067822ef336e286eb0c6e2010ae76aeed3b31"}, "downloads": -1, "filename": "dipbot-0.1.tar.gz", "has_sig": false, "md5_digest": "192d6619f5fa9cd0e771a2842adc75bd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5159, "upload_time": "2020-04-04T18:45:08", "upload_time_iso_8601": "2020-04-04T18:45:08.739482Z", "url": "https://files.pythonhosted.org/packages/b2/ec/ef8fcab845f91406d3333346e88aed711c5b8bd6913e01aad6cc91fafc37/dipbot-0.1.tar.gz"}], "0.11": [{"comment_text": "", "digests": {"md5": "9885342e471ed5c67100efec01d490c4", "sha256": "910df45d4f1b3278840ba2181fdf4e02eb7205ac0881ef372e4c92e79a4b1306"}, "downloads": -1, "filename": "dipbot-0.11.tar.gz", "has_sig": false, "md5_digest": "9885342e471ed5c67100efec01d490c4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5378, "upload_time": "2020-04-07T18:00:04", "upload_time_iso_8601": "2020-04-07T18:00:04.447126Z", "url": "https://files.pythonhosted.org/packages/0a/35/b159d933626ca3e2931f69748f137d910ffe1808850016fc1a169cbe0efc/dipbot-0.11.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "9885342e471ed5c67100efec01d490c4", "sha256": "910df45d4f1b3278840ba2181fdf4e02eb7205ac0881ef372e4c92e79a4b1306"}, "downloads": -1, "filename": "dipbot-0.11.tar.gz", "has_sig": false, "md5_digest": "9885342e471ed5c67100efec01d490c4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5378, "upload_time": "2020-04-07T18:00:04", "upload_time_iso_8601": "2020-04-07T18:00:04.447126Z", "url": "https://files.pythonhosted.org/packages/0a/35/b159d933626ca3e2931f69748f137d910ffe1808850016fc1a169cbe0efc/dipbot-0.11.tar.gz"}]}