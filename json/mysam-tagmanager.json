{"info": {"author": "Taha Zerrouki", "author_email": "taha_zerrouki@hotmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Natural Language :: Arabic", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Text Processing :: Linguistic"], "description": "Mysam: Arabic tags manager, \u0645\u064a\u0633\u0645: \u0625\u062f\u0627\u0631\u0629 \u0627\u0644\u0648\u0633\u0648\u0645 \u0627\u0644\u0639\u0631\u0628\u064a\u0629\n======================================================\n\n\u062a\u0633\u064a\u064a\u0631 \u0648\u0633\u0648\u0645 \u0627\u0644\u0643\u0644\u0645\u0627\u062a \u0627\u0644\u0639\u0631\u0628\u064a\u0629\u060c \u062a\u0631\u0645\u064a\u0632 \u0648\u062a\u0641\u0643\u064a\u0643 Manage arabic words tags,\nencode, decode\n\nTagging System description\n--------------------------\n\nYou can look at tagging descripton on `doc/tagset.md <doc/tagset.md>`__\n\nDeveloppers: Taha Zerrouki: http://tahadz.com taha dot zerrouki at gmail\ndot com\n\n+---------------+--------------+\n| Features      | value        |\n+===============+==============+\n| Authors       | Taha         |\n|               | Zerrouki:    |\n|               | http://tahad |\n|               | z.com,       |\n|               | taha dot     |\n|               | zerrouki at  |\n|               | gmail dot    |\n|               | com          |\n+---------------+--------------+\n| Release       | 0.1          |\n+---------------+--------------+\n| License       | `GPL <https: |\n|               | //github.com |\n|               | /linuxscout/ |\n|               | mysam-tagman |\n|               | ager/master/ |\n|               | LICENSE>`__  |\n+---------------+--------------+\n| Tracker       | `linuxscout/ |\n|               | mysam-tagman |\n|               | ager/Issues  |\n|               | <https://git |\n|               | hub.com/linu |\n|               | xscout/mysam |\n|               | -tagmanager/ |\n|               | issues>`__   |\n+---------------+--------------+\n| Website       | https://pypi |\n|               | .python.org/ |\n|               | pypi/mysam-t |\n|               | agmanager    |\n+---------------+--------------+\n| Source        | `Github <htt |\n|               | p://github.c |\n|               | om/linuxscou |\n|               | t/mysam-tagm |\n|               | anager>`__   |\n+---------------+--------------+\n| Feedbacks     | `Comments <h |\n|               | ttps://githu |\n|               | b.com/linuxs |\n|               | cout/mysam-t |\n|               | agmanager/is |\n|               | sues>`__     |\n+---------------+--------------+\n| Accounts      | [@Twitter](h |\n|               | ttps://twitt |\n|               | er.com/linux |\n|               | scout)       |\n|               | [@Sourceforg |\n|               | e](http://so |\n|               | urceforge.ne |\n|               | t/projects/m |\n|               | ysam-tagmana |\n|               | ger/)        |\n+---------------+--------------+\n\n.. raw:: html\n\n   <!--Doc  |[package Documentaion](http://pythonhosted.org/mysam-tagmanager/)-->\n\n.. raw:: html\n\n   <!--Download  |[pypi.python.org](https://pypi.python.org/pypi/mysam-tagmanager)-->\n\n.. raw:: html\n\n   <!--\n   ## Citation\n   If you would cite it in academic work, can you use this citation\n   ```\n   T. Zerrouki\u200f, mysam-tagmanager,  Arabic Word Tagger,\n     https://pypi.python.org/pypi/mysam-tagmanager/, 2018\n   ```\n   or in bibtex format\n\n   ```bibtex\n   @misc{zerrouki2012mysam,\n     title={mysam-tagmanager : Arabic Word Tagger},\n     author={Zerrouki, Taha},\n     url={https://pypi.python.org/pypi/mysam-tagmanager,\n     year={2010}\n   }\n   ```\n   -->\n\n\u0645\u0632\u0627\u064a\u0627\n-----\n\n-  \u062a\u0631\u0645\u064a\u0632 \u0627\u0644\u0645\u0632\u0627\u064a\u0627 \u0625\u0644\u0649 \u0648\u0633\u0645 \u0645\u0648\u062d\u062f \u0645\u062e\u062a\u0635\u0631\n-  \u062a\u0641\u0643\u064a\u0643 \u0627\u0644\u0648\u0633\u0645 \u0625\u0644\u0649 \u062e\u0635\u0627\u0626\u0635\u0647\n-  \u062a\u0648\u0644\u064a\u062f \u0627\u0644\u0625\u0639\u0631\u0627\u0628 \u062d\u0633\u0628 \u0627\u0644\u0637\u0631\u064a\u0642 \u0627\u0644\u062a\u0642\u0644\u064a\u062f\u064a\u0629\n\nFeatures\n--------\n\n-  Encode features to an unified tag string\n-  Encode unified tag string to a list of features\n-  Generate a traditional inflection style\n\nApplications\n------------\n\n-  Text summarizing.\n-  Sentences identification.\n-  Grammar analysis.\n-  Morphological analysis.\n\n\u062a\u0637\u0628\u064a\u0642\u0627\u062a\n-------\n\n-  \u0627\u0644\u062a\u0646\u0642\u064a\u0628 \u0639\u0646 \u0627\u0644\u0645\u0639\u0644\u0648\u0645\u0627\u062a.\n-  \u0627\u0644\u062a\u0639\u0631\u0641 \u0639\u0644\u0649 \u0627\u0644\u062c\u0645\u0644.\n-  \u0627\u0644\u062a\u062d\u0644\u064a\u0644 \u0627\u0644\u0646\u062d\u0648\u064a.\n-  \u062a\u0633\u0631\u064a\u0639 \u0627\u0644\u062a\u062d\u0644\u064a\u0644 \u0627\u0644\u0635\u0631\u0641\u064a.\n\nDemo \u062c\u0631\u0651\u0628\n---------\n\n\u0645\u0643\u0646 \u0627\u0644\u062a\u062c\u0631\u0628\u0629 \u0639\u0644\u0649 `\u0645\u0648\u0642\u0639 \u0645\u0634\u0643\u0627\u0644 <http://tahadz.com/mishkal>`__ \u060c \u0627\u062e\u062a\u0631 \u062a\u0634\u0643\u064a\u0644\u060c\n\u062b\u0645 \u0645\u0631\u0651\u0631 \u0627\u0644\u0641\u0623\u0631\u0629 \u0639\u0644\u0649 \u0627\u0644\u0643\u0644\u0645\u0629 \u0644\u0631\u0624\u064a\u0629 \u0627\u0644\u062a\u0644\u0645\u064a\u062d\n\nYou can test it on `Mishkal Site <http://tahadz.com/mishkal>`__, choose:\nTashkeel, and move mouse over word to get hint. |mysam-tagmanager Demo|\n\n.. raw:: html\n\n   <!--\n   Installation\n   =====\n   ```\n   pip install mysam-tagmanager\n   ```    \n       -->\n\nUsage\n-----\n\n.. code:: python\n\n    import mysam.tagmaker as tagmaker\n\nExample\n-------\n\nTest load configuration\n~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n    import mysam.tagconfig as tagconfig\n    import mysam.tag_const as tag_const\n    import pandas as pd\n    configuer = tagconfig.tagConfig()\n    configuer.load_config()\n    # display\n    df = pd.DataFrame(tag_const.TAGSDICT)\n    print('****tagdict ****')\n    print(df)\n    *****Result *****\n    ****tagdict ****\n              1st person  2nd person  3rd person          Beh          FEH  \\\n    ar_attr          \u0634\u062e\u0635         \u0634\u062e\u0635         \u0634\u062e\u0635           \u062c\u0631          \u0639\u0637\u0641   \n    ar_value       \u0645\u062a\u0643\u0644\u0645       \u0645\u062e\u0627\u0637\u0628        \u063a\u0627\u0626\u0628          \u0628\u0627\u0621        \u0627\u0644\u0641\u0627\u0621   \n    attr          person      person      person  preposition  conjonction   \n    code               I           Y           H            B            F   \n    inflect                                            \u0628\u0627\u0644\u0628\u0627\u0621                \n    part               4           4           4            3            3   \n    pos                4           4           4            2            1   \n    value     1st person  2nd person  3rd person          Beh          FEH   \n    ....\n    ....\n\nTest call tagmaker\n~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n    import mysam.tagmaker as tagmaker\n       \n    taglists = [[u'\u0627\u0633\u0645', u'\u0647\u0627\u0621', u'\u0645\u062c\u0631\u0648\u0631',],\n            u'\u062a\u0639\u0631\u064a\u0641::\u0645\u0631\u0641\u0648\u0639:\u0645\u062a\u062d\u0631\u0643:\u064a\u0646\u0648\u0646:::'.split(\":\"),\n            ]\n    for taglist in taglists:\n    tag_maker = tagmaker.tagMaker()\n    # encode\n    tag_maker.encode(taglist)\n    print(u\"+\".join(taglist).encode('utf8'))\n    tagstr = str(tag_maker)\n    print(tagstr)\n    # decode a unifed tag string\n    print(tag_maker.decode())\n\n    **** result ****\n\n    \u0627\u0633\u0645+\u0647\u0627\u0621+\u0645\u062c\u0631\u0648\u0631\n    N--;--I-;----;----\n    [(u'\u0646\u0648\u0639 \u0627\u0644\u0643\u0644\u0645\u0629', u'\u0627\u0633\u0645'), (u'\u062c\u0646\u0633', u'\u0644\u0627\u0634\u064a\u0621'), (u'\u0639\u062f\u062f', u'\u0644\u0627\u0634\u064a\u0621'), (u'\u0625\u0639\u0631\u0627\u0628', u'\u0645\u062c\u0631\u0648\u0631'), (u'\u0639\u0644\u0627\u0645\u0629', u'\u0644\u0627\u0634\u064a\u0621'), (u'\u0639\u0637\u0641', u'\u0644\u0627\u0634\u064a\u0621'), (u'\u062c\u0631', u'\u0644\u0627\u0634\u064a\u0621'), (u'\u062a\u0639\u0631\u064a\u0641', u'\u0646\u0643\u0631\u0629'), (u'\u0636\u0645\u064a\u0631 \u0645\u062a\u0635\u0644', u'\u0644\u0627\u0634\u064a\u0621'), (u'\u0627\u0633\u062a\u0642\u0628\u0627\u0644', u'\u0644\u0627\u0634\u064a\u0621'), (u'\u0628\u0646\u0627\u0621', u'\u0644\u0627\u0634\u064a\u0621'), (u'\u0632\u0645\u0646', u'\u0644\u0627\u0634\u064a\u0621'), (u'\u0634\u062e\u0635', u'\u0644\u0627\u0634\u064a\u0621')]\n    \u062a\u0639\u0631\u064a\u0641++\u0645\u0631\u0641\u0648\u0639+\u0645\u062a\u062d\u0631\u0643+\u064a\u0646\u0648\u0646+++\n    ---;--U-;--L-;----\n    [(u'\u0646\u0648\u0639 \u0627\u0644\u0643\u0644\u0645\u0629', u'\u0644\u0627\u0634\u064a\u0621'), (u'\u062c\u0646\u0633', u'\u0644\u0627\u0634\u064a\u0621'), (u'\u0639\u062f\u062f', u'\u0644\u0627\u0634\u064a\u0621'), (u'\u0625\u0639\u0631\u0627\u0628', u'\u0645\u0631\u0641\u0648\u0639'), (u'\u0639\u0644\u0627\u0645\u0629', u'\u0644\u0627\u0634\u064a\u0621'), (u'\u0639\u0637\u0641', u'\u0644\u0627\u0634\u064a\u0621'), (u'\u062c\u0631', u'\u0644\u0627\u0634\u064a\u0621'), (u'\u062a\u0639\u0631\u064a\u0641', u'\u0645\u0639\u0631\u0641\u0629'), (u'\u0636\u0645\u064a\u0631 \u0645\u062a\u0635\u0644', u'\u0644\u0627\u0634\u064a\u0621'), (u'\u0627\u0633\u062a\u0642\u0628\u0627\u0644', u'\u0644\u0627\u0634\u064a\u0621'), (u'\u0628\u0646\u0627\u0621', u'\u0644\u0627\u0634\u064a\u0621'), (u'\u0632\u0645\u0646', u'\u0644\u0627\u0634\u064a\u0621'), (u'\u0634\u062e\u0635', u'\u0644\u0627\u0634\u064a\u0621')]\n        \n\nExmaple for inflect\n~~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n    >>> tag_maker = tagmaker.tagMaker()\n    >>> tagcode = 'N--;--I-;----;---'\n    >>> print(tag_maker.inflect(tagcode).encode('utf8'))\n    \u0627\u0633\u0645 \u0645\u062c\u0631\u0648\u0631 \u0648\u0639\u0644\u0627\u0645\u0629 \u062c\u0631\u0651\u0647 \u0627\u0644\u064a\u0627\u0621 \u0644\u0623\u0646\u0647 \u062c\u0645\u0639 \u0645\u0630\u0643\u0631 \u0633\u0627\u0644\u0645 \u0648\u0647\u0648 \u0645\u0636\u0627\u0641\u060c \u0648\u0627\u0644\u0636\u0645\u064a\u0631 \u0627\u0644\u0645\u062a\u0635\u0644 \u0645\u0628\u0646\u064a \u0641\u064a \u0645\u062d\u0644 \u062c\u0631 \u0645\u0636\u0627\u0641 \u0625\u0644\u064a\u0647\n\nExmaple for add tag\n~~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n    >>> tag_maker = tagmaker.tagMaker()\n    >>> tagcode = 'N--;--I-;----;---'\n    >>> tag_new = u\"\u062a\u0639\u0631\u064a\u0641\"\n    >>> tag_maker.add(tag_new)\n    >>> tag_new = u\"\u0627\u0633\u0645\"\n    >>> tag_maker.add(tag_new)\n    >>> print(str(tag_maker).encode('utf8'))\n    N--;----;--L-;----\n\nExmaple for has tag\n~~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n    >>> tag_maker = tagmaker.tagMaker()\n    >>> tagcode = 'N--;--I-;----;---'\n    >>> tag_search = u\"\u0645\u062c\u0631\u0648\u0631\"\n    >>> print(tag_maker.has_tag(tag_search, tagcode))\n    True\n\n.. |mysam-tagmanager Demo| image:: doc/images/mysam_demo.png%20alt=%22mysam-tagmanager", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.com/projects/mysam-tagmanager/", "keywords": "", "license": "GPL", "maintainer": "", "maintainer_email": "", "name": "mysam-tagmanager", "package_url": "https://pypi.org/project/mysam-tagmanager/", "platform": "", "project_url": "https://pypi.org/project/mysam-tagmanager/", "project_urls": {"Homepage": "http://pypi.python.com/projects/mysam-tagmanager/"}, "release_url": "https://pypi.org/project/mysam-tagmanager/0.1/", "requires_dist": null, "requires_python": "", "summary": "Mysam: Arabic tags manager", "version": "0.1"}, "last_serial": 3828293, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "3f119ce31fcb2b0748359b48ed157051", "sha256": "8a9a81397ad1e8d6b3a55a5119817840020194887aecc853120beac49a5adf8e"}, "downloads": -1, "filename": "mysam_tagmanager-0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "3f119ce31fcb2b0748359b48ed157051", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 17422, "upload_time": "2018-05-02T19:50:55", "upload_time_iso_8601": "2018-05-02T19:50:55.127645Z", "url": "https://files.pythonhosted.org/packages/47/fa/000840331f9f46475ee3c0d8d37f2f99703cf48f63f342b2ee11f2c27b9c/mysam_tagmanager-0.1-py2-none-any.whl"}, {"comment_text": "", "digests": {"md5": "70cf456ee51dd018e095073d756f1f0a", "sha256": "5fbaf0ec258a0444d8c09159ec88ade231cd593e8a48503de6ad1a59f5c4163a"}, "downloads": -1, "filename": "mysam_tagmanager-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "70cf456ee51dd018e095073d756f1f0a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17422, "upload_time": "2018-05-02T19:51:06", "upload_time_iso_8601": "2018-05-02T19:51:06.764228Z", "url": "https://files.pythonhosted.org/packages/8b/b7/47f347b7e86f98e322fe7330b89e111ee20c2a97893ea7a3783078f38c58/mysam_tagmanager-0.1-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "88f1c04af4f66447276fb3c822327ef4", "sha256": "daa5eed2af4d43f0cbb17d7caae6ce49a982e2ea22a9cf06185144fcf349c88b"}, "downloads": -1, "filename": "mysam-tagmanager-0.1.tar.gz", "has_sig": false, "md5_digest": "88f1c04af4f66447276fb3c822327ef4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12206, "upload_time": "2018-05-02T19:49:25", "upload_time_iso_8601": "2018-05-02T19:49:25.490798Z", "url": "https://files.pythonhosted.org/packages/0f/de/74a8f1b85472e68470fc86056d4a10e4cb5e6294f20c368b13523aaf6bf1/mysam-tagmanager-0.1.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "3f119ce31fcb2b0748359b48ed157051", "sha256": "8a9a81397ad1e8d6b3a55a5119817840020194887aecc853120beac49a5adf8e"}, "downloads": -1, "filename": "mysam_tagmanager-0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "3f119ce31fcb2b0748359b48ed157051", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 17422, "upload_time": "2018-05-02T19:50:55", "upload_time_iso_8601": "2018-05-02T19:50:55.127645Z", "url": "https://files.pythonhosted.org/packages/47/fa/000840331f9f46475ee3c0d8d37f2f99703cf48f63f342b2ee11f2c27b9c/mysam_tagmanager-0.1-py2-none-any.whl"}, {"comment_text": "", "digests": {"md5": "70cf456ee51dd018e095073d756f1f0a", "sha256": "5fbaf0ec258a0444d8c09159ec88ade231cd593e8a48503de6ad1a59f5c4163a"}, "downloads": -1, "filename": "mysam_tagmanager-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "70cf456ee51dd018e095073d756f1f0a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17422, "upload_time": "2018-05-02T19:51:06", "upload_time_iso_8601": "2018-05-02T19:51:06.764228Z", "url": "https://files.pythonhosted.org/packages/8b/b7/47f347b7e86f98e322fe7330b89e111ee20c2a97893ea7a3783078f38c58/mysam_tagmanager-0.1-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "88f1c04af4f66447276fb3c822327ef4", "sha256": "daa5eed2af4d43f0cbb17d7caae6ce49a982e2ea22a9cf06185144fcf349c88b"}, "downloads": -1, "filename": "mysam-tagmanager-0.1.tar.gz", "has_sig": false, "md5_digest": "88f1c04af4f66447276fb3c822327ef4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12206, "upload_time": "2018-05-02T19:49:25", "upload_time_iso_8601": "2018-05-02T19:49:25.490798Z", "url": "https://files.pythonhosted.org/packages/0f/de/74a8f1b85472e68470fc86056d4a10e4cb5e6294f20c368b13523aaf6bf1/mysam-tagmanager-0.1.tar.gz"}]}