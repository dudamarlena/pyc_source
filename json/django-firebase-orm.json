{"info": {"author": "Tralah M Brian", "author_email": "musyoki.brian@tralahtek.com", "bugtrack_url": null, "classifiers": [], "description": "=======================================\nFirebaseORM Python\n=======================================\n\n|Build Status| |License: MIT| |Organization| |made-with-python|\n|HitCount| |Inline Docs| |PyPI pyversions| |PRs Welcome| |GitHub\npull-requests| |GitHub version|.\n\nDjango like models for NoSQL database Firestore Integrating with django's ORM.\nThis is a fork and improvement of `firebase_orm\n<https://github.com/joewalk102/firebase-orm>`_ project which was initially\nforked from `xavx0z <https://github.com/xavx0z>`_ and stopped maintaining it.\n\nI made a few changes and improvements to suit my liking:\n\n1. Changed the need of creating a second settings.py file in the root of your\n   django project to now only require that you define the neccessary\n   configurations in your project's settings module.\n   *Note that django is now an explicit dependency*\n\n2. Created a new package for this app on pypi under **django-firebase-orm**\n\nIt is my desire to continue the development of this project and thus welcome all\ndevelopers wishing to contribute via improving documentation, bug fixes, test\ncoverage, new features, etc.\n\n\nInstallation\n============\n\n.. code-block:: shell\n\n    $ pip install django-firebase-orm\n\nInitialize\n==========\nIn your project settings add the following configuration variables\n\n    settings.py\n\n    .. code-block:: python\n\n        FIREBASE_ORM_CERTIFICATE = 'path/to/serviceAccountKey.json'\n        FIREBASE_ORM_BUCKET_NAME = '<BUCKET_NAME>.appspot.com'\n\nFIREBASE_ORM_CERTIFICATE\n    Once you have created a `Firebase console <https://console.firebase.google.com/?authuser=0>`_ project and downloaded a JSON file with your service account credentials.\n\nFIREBASE_ORM_BUCKET_NAME\n    The bucket name must not contain gs:// or any other protocol prefixes. For example, if the bucket URL displayed in the `Firebase console <https://console.firebase.google.com/?authuser=0>`_ is gs://bucket-name.appspot.com, pass the string bucket-name.appspot.com\n\nUsage\n======\n\nCreate model:\n\"\"\"\"\"\"\"\"\"\"\"\"\"\n\n.. code-block:: python\n\n    from firebase_orm import models\n\n\n    class Article(models.Model):\n        headline = models.TextField()\n        type_article = models.TextField(db_column='type')\n\n        class Meta:\n            db_table = 'medications'\n\n        def __str__(self):\n            return self.headline\n\nUsing The API:\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n**Creating objects**\n\nTo represent cloud firestore data in Python objects, FirebaseORM uses an intuitive system:\nA *model* *class* represents a *collection*,\nand an *instance* of that class represents a *document* in collection.\n\nTo create an object, instantiate it using keyword arguments to the model class,\nthen call save() to save it to the database.\n\n.. code-block:: pycon\n\n    # Import the models we created\n    >>> from models import Article\n    # Create a new Article.\n    >>> a = Article(headline='Django is cool')\n    # Save the object into the database. You have to call save() explicitly.\n    >>> a.save()\n\n\n**Retrieving all objects**\n\nThe simplest way to retrieve documents from a collections is to get all of them.\nTo do this, use the all() method on a Manager as you would in normal django:\n\n.. code-block:: pycon\n\n    >>> all_Article = Article.objects.all()\n\nThe all() method returns a list instance Article of all the collection in the database.\n\n\n.. code-block:: pycon\n\n    # Now it has an ID.\n    >>> a.id\n    1\n    # Fields are represented as attributes on the Python object.\n    >>> a.headline\n    'Django is cool'\n\n**Saving changes to objects**\n\nTo save changes to an object that\u2019s already in the database, use save().\n\nGiven a Article instance a that has already been saved to the database,\nthis example changes its name and updates its record in the database:\n\n.. code-block:: pycon\n\n    >>> a.headline = 'Django-Firebase-ORM is awesome'\n    >>> a.save()\n\nThis performs an document.update() method behind the scenes.\nFirebaseORM doesn\u2019t hit the database until you explicitly call save().\n\n.. code-block:: pycon\n\n    # Firebase ORM provides a rich database lookup API.\n    >>> Article.objects.get(id=1)\n    <Article: Django-Firebase-ORM is awesome>\n    >>> Article.objects.get(id=2)\n    Traceback (most recent call last):\n        ...\n    DoesNotExist: Article matching query does not exist.\n\n\n\nField options:\n==============\n\nThe following arguments are available to all field types. All are optional.\n\n**Field.db_column**\n\n    If contains characters that aren\u2019t allowed in Python variable names \u2013 use db_column.\n    The name of the firestore key in document to use for this field.\n    If this isn\u2019t given, FirebaseORM will use the field\u2019s name.\n\n\nField types:\n============\n\nAutoField\n\"\"\"\"\"\"\"\"\"\n**class AutoField()**\n\n    By default, FirebaseORM gives each model the following field:\n\n    .. code-block:: python\n\n        id = models.AutoField(primary_key=True)\n\nTextField\n\"\"\"\"\"\"\"\"\"\"\n**class TextField(**options)**\n\n    Text string Up to 1,048,487 bytes (1 MiB - 89 bytes).\n    Only the first 1,500 bytes of the UTF-8 representation are considered by queries.\n\n    TextField has not extra required argument.\n\nDependencies\n============\n1. *firebase-admin*\n2. *grpcio*\n3. *django*\n\nCREDITS\n=======\nThanks to `joewalk102 <https://github.com/joewalk102>`_ for forking the original\nproject without whom this project would not be possible.\n|TralahM| |TralahM1|.\n\n.. |Build Status| image:: https://travis-ci.com/TralahM/django-firebase-orm.svg?branch=master\n   :target: https://travis-ci.com/TralahM/django-firebase-orm\n.. |License: MIT| image:: https://img.shields.io/badge/License-MIT-red.svg\n   :target: https://opensource.org/licenses/MIT\n.. |Organization| image:: https://img.shields.io/badge/Org-TralahTek-blue.svg\n   :target: https://github.com/TralahTek\n.. |made-with-python| image:: https://img.shields.io/badge/Made%20with-Python-1f425f.svg\n   :target: https://www.python.org/\n.. |HitCount| image:: http://hits.dwyl.io/TralahM/django-firebase-orm.svg\n   :target: http://dwyl.io/TralahM/django-firebase-orm\n.. |Inline Docs| image:: http://inch-ci.org/github/TralahM/django-firebase-orm.svg?branch=master\n   :target: http://inch-ci.org/github/TralahM/django-firebase-orm\n.. |PyPI pyversions| image:: https://img.shields.io/pypi/pyversions/ansicolortags.svg\n   :target: https://pypi.python.org/pypi/ansicolortags/\n.. |PRs Welcome| image:: https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square\n   :target: https://github.com/TralahM/pull/\n.. |GitHub pull-requests| image:: https://img.shields.io/github/issues-pr/Naereen/StrapDown.js.svg\n   :target: https://gitHub.com/TralahM/django-firebase-orm/pull/\n.. |GitHub version| image:: https://badge.fury.io/gh/Naereen%2FStrapDown.js.svg\n   :target: https://github.com/TralahM/django-firebase-orm\n.. |TralahM| image:: https://img.shields.io/badge/Engineer-TralahM-blue.svg?style=for-the-badge\n   :target: https://github.com/TralahM\n.. |TralahM1| image:: https://img.shields.io/badge/Maintainer-TralahM-green.svg?style=for-the-badge\n   :target: https://github.com/TralahM\n.. |TralahM2| image:: https://img.shields.io/badge/Engineer-TralahM-blue.svg?style=for-the-badge\n   :target: https://github.com/TralahM\n.. |TralahM3| image:: https://img.shields.io/badge/Maintainer-TralahM-green.svg?style=for-the-badge\n   :target: https://github.com/TralahM\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/TralahM/firebase_orm", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "django-firebase-orm", "package_url": "https://pypi.org/project/django-firebase-orm/", "platform": "", "project_url": "https://pypi.org/project/django-firebase-orm/", "project_urls": {"Homepage": "https://github.com/TralahM/firebase_orm"}, "release_url": "https://pypi.org/project/django-firebase-orm/0.3/", "requires_dist": ["firebase-admin (>=2.9.0)", "grpcio (>=1.9.1)", "django"], "requires_python": "", "summary": "NoSQL object model database for django ORM integration", "version": "0.3"}, "last_serial": 6708623, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "b105a1b83b2316f90610e776ea5771fc", "sha256": "3c8f8df80ecf8251236ef5ca95c783396e4e9a0af639d57949e871406df910a0"}, "downloads": -1, "filename": "django_firebase_orm-0.1-py36-none-any.whl", "has_sig": false, "md5_digest": "b105a1b83b2316f90610e776ea5771fc", "packagetype": "bdist_wheel", "python_version": "py36", "requires_python": null, "size": 8825, "upload_time": "2020-02-26T20:29:16", "upload_time_iso_8601": "2020-02-26T20:29:16.673543Z", "url": "https://files.pythonhosted.org/packages/4a/a8/f5cbe4f5441d00621535ff1543c42195697bb9f55bad29e4526060a827ba/django_firebase_orm-0.1-py36-none-any.whl"}], "0.2": [{"comment_text": "", "digests": {"md5": "3d0391e8f770f84b8d49d1f5e4f58f52", "sha256": "f5c96664a749556b40ef160b106bc4bc58cc41268685658ba7db6dc95c2aa24c"}, "downloads": -1, "filename": "django_firebase_orm-0.2-py36-none-any.whl", "has_sig": false, "md5_digest": "3d0391e8f770f84b8d49d1f5e4f58f52", "packagetype": "bdist_wheel", "python_version": "py36", "requires_python": null, "size": 8837, "upload_time": "2020-02-26T20:39:16", "upload_time_iso_8601": "2020-02-26T20:39:16.713470Z", "url": "https://files.pythonhosted.org/packages/48/c9/4c602dc6d99145874a2c690961b8d90c41fafff7214acf9b6a795dc731c3/django_firebase_orm-0.2-py36-none-any.whl"}], "0.3": [{"comment_text": "", "digests": {"md5": "20e1c71da9a373506bf79b5858953a0b", "sha256": "a4eaba30ca0ceb224a6c1812407e79bc08b76a5866294b0880e312559faba4a8"}, "downloads": -1, "filename": "django_firebase_orm-0.3-py36-none-any.whl", "has_sig": false, "md5_digest": "20e1c71da9a373506bf79b5858953a0b", "packagetype": "bdist_wheel", "python_version": "py36", "requires_python": null, "size": 8846, "upload_time": "2020-02-27T03:16:59", "upload_time_iso_8601": "2020-02-27T03:16:59.285349Z", "url": "https://files.pythonhosted.org/packages/de/39/9fe73987c45b4cc094698f57cd00b48bd62978225d2fafcf100314e88192/django_firebase_orm-0.3-py36-none-any.whl"}]}, "urls": [{"comment_text": "", "digests": {"md5": "20e1c71da9a373506bf79b5858953a0b", "sha256": "a4eaba30ca0ceb224a6c1812407e79bc08b76a5866294b0880e312559faba4a8"}, "downloads": -1, "filename": "django_firebase_orm-0.3-py36-none-any.whl", "has_sig": false, "md5_digest": "20e1c71da9a373506bf79b5858953a0b", "packagetype": "bdist_wheel", "python_version": "py36", "requires_python": null, "size": 8846, "upload_time": "2020-02-27T03:16:59", "upload_time_iso_8601": "2020-02-27T03:16:59.285349Z", "url": "https://files.pythonhosted.org/packages/de/39/9fe73987c45b4cc094698f57cd00b48bd62978225d2fafcf100314e88192/django_firebase_orm-0.3-py36-none-any.whl"}]}