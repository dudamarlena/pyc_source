{"info": {"author": "Team PayPay", "author_email": "", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# Paypay Python Client\n\n[![PyPI Version](https://img.shields.io/pypi/v/paypayopa.svg)](https://pypi.python.org/pypi/paypayopa) [![PyPI](https://img.shields.io/pypi/pyversions/paypayopa.svg)]() [![License](https://img.shields.io/:license-mit-blue.svg)](https://opensource.org/licenses/MIT)\n\nPython bindings for interacting with the Paypay API\n\nThis is primarily meant for merchants who wish to perform interactions with the Paypay API programatically.\n\n## Installation\n\n```sh\n$ pip install paypayopa\n```\n\n## Usage\n\nYou need to setup your key and secret using the following:\n\n```py\nimport paypayopa\nclient = paypayopa.Client(auth=(\"<YOUR_API_KEY>\", \"<YOUR_API_SECRET>\"))\n```\n\n## Dynamic QR Code\n\n### Create a dynamic QR Code to receive payments.\n\n```py\nDATA should contain these keys\nmerchantPaymentId : A unique payment transaction id provided by merchant\namount : amount object with amount and currency type (refer example below)\n\nclient.payload.set_merchant_payment_id(\"cb31bcc0-3b6c-46e0-9002-e5c4bb1e3d5f\") \n\nclient.payload.set_requested_at(datetime.datetime.now().timestamp())\n\nclient.payload.set_code_type(\"ORDER_QR\")\n\namount = {\n    \"amount\": 1,\n    \"currency\": \"JPY\"\n}\nclient.payload.set_amount(amount)\n\norder_items = [\n    {\n        \"name\": \"Carrot cake\",\n        \"category\": \"pasteries\",\n        \"productId\": \"21345\",\n        \"quantity\": 1,\n        \"unitPrice\": {\n            \"amount\": 1,\n            \"currency\": \"JPY\"\n        }\n    },\n    {\n        \"name\": \"Moon Cake\",\n        \"quantity\": 1,\n        \"category\": \"pasteries\",\n        \"productId\": \"67678\",\n        \"unitPrice\": {\n            \"amount\": 1,\n            \"currency\": \"JPY\"\n        }\n    }\n]\n\nclient.payload.set_order_items(order_items)\nclient.payload.set_redirect_type('WEB_LINK')\nclient.payload.set_redirect_url('http://foobar.com')\n\nresp = client.code.create(data=client.payload)\nprint(resp)\n```\n\n    For List of params refer to the API guide :\n    https://www.paypay.ne.jp/opa/doc/v1.0/dynamicqrcode#operation/createQRCode\n\n\n### Delete a particular Dynamic QR Code\n\n```py\nclient.code.deleteCode(\"<CodeID>\")\n```\n\n\n### Fetch a particular OR CODE payment details\n\n```py\nclient.code.getPaymentDetails(\"<merchantPaymentId>\")\n```\n\n\n### Cancel a payment\n\n```py\nclient.code.cancelPayment(\"<merchantPaymentId>\")\n``` \n\n### Capture payment details\n\n```py\nclient.payload.set_merchant_payment_id(\"cb31bcc0-3b6c-46e0-9002-e5c4bb1e3d5f\")\nclient.payload.set_amount(\"1\")\nclient.payload.set_currency(\"JPY\")\nclient.payload.set_merchant_capture_id(\"31bcc0-3b6c-46e0-9002\")\nclient.payload.set_requested_at(\"JPY\")\nclient.payload.set_order_description(\"Example - Mune Cake shop\")\n\nclient.code.capturePayment(client.payload)\n``` \n\n    For List of params refer to the API guide :\n    https://www.paypay.ne.jp/opa/doc/v1.0/dynamicqrcode#operation/capturePaymentAuth\n\n\n### Revert payment\n\n```py\nclient.payload.set_payment_id(\"cb31bcc0-3b6c-46e0-9002-e5c4bb1e3d5f\")\nclient.payload.set_requested_at(\"1585537300\")\nclient.payload.set_reason(\"reason for refund\")\n\nclient.code.revertPayment(client.payload)\n``` \n\n    For List of params refer to the API guide :\n    https://www.paypay.ne.jp/opa/doc/v1.0/dynamicqrcode#operation/revertAuth\n\n\n### Refund payment\n\n```py\n\nclient.payload.set_assume_merchant(\"cb31bcc0-3b6c-46e0-9002-e5c4bb1e3d5f\")\nclient.payload.set_merchant_payment_id(\"3b6c-46e0-9002-e5c4bb1e3d5f\")\nclient.payload.set_reason(\"reason for refund\")\nclient.payload.set_amount(1)\nclient.payload.set_currency(\"JPY\")\nclient.payload.set_order_description(\"Cake\")\nclient.payload.set_order_requested_at(\"456787656\")\n\nclient.code.refundPayment(client.payload)\n``` \n\n    For List of params refer to the API guide :\n    https://www.paypay.ne.jp/opa/doc/v1.0/dynamicqrcode#operation/refundPayment\n\n\n### Fetch refund status and details\n\n```py\nclient.code.refundPayment(\"<merchantRefundId>\")\n```\n\n    For List of params refer to the API guide :\n    https://www.paypay.ne.jp/opa/doc/v1.0/dynamicqrcode#operation/getRefundDetails\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "paypay payment gateway Japan", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "paypayopa", "package_url": "https://pypi.org/project/paypayopa/", "platform": "", "project_url": "https://pypi.org/project/paypayopa/", "project_urls": null, "release_url": "https://pypi.org/project/paypayopa/0.1.8/", "requires_dist": ["requests", "datetime", "uuid"], "requires_python": "", "summary": "PayPay Python Client", "version": "0.1.8"}, "last_serial": 6992352, "releases": {"0.1.8": [{"comment_text": "", "digests": {"md5": "20dfe891886f9f598965c67dfec1fe5d", "sha256": "3abc4ff5cd7fd74bcb2a119aa30202ed9af4f6b2a6f88ec260c9efafb4a95066"}, "downloads": -1, "filename": "paypayopa-0.1.8-py3-none-any.whl", "has_sig": false, "md5_digest": "20dfe891886f9f598965c67dfec1fe5d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7887, "upload_time": "2020-04-10T10:32:05", "upload_time_iso_8601": "2020-04-10T10:32:05.174385Z", "url": "https://files.pythonhosted.org/packages/9a/36/ab778666e8363dee9f1d46bff2a535d03b564462ff014205db6baebb519e/paypayopa-0.1.8-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "12cc3c2e889e947821b51834286f1cb4", "sha256": "26bc111298ef1ba12cf34502241307848ccbc8abeaea3317649a2686e2c246cc"}, "downloads": -1, "filename": "paypayopa-0.1.8.tar.gz", "has_sig": false, "md5_digest": "12cc3c2e889e947821b51834286f1cb4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7904, "upload_time": "2020-04-10T10:32:07", "upload_time_iso_8601": "2020-04-10T10:32:07.122167Z", "url": "https://files.pythonhosted.org/packages/a5/82/2ab11ff9366c6e98bc5449d6d5ab8eb922bb0434040497ed33086fec82c7/paypayopa-0.1.8.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "20dfe891886f9f598965c67dfec1fe5d", "sha256": "3abc4ff5cd7fd74bcb2a119aa30202ed9af4f6b2a6f88ec260c9efafb4a95066"}, "downloads": -1, "filename": "paypayopa-0.1.8-py3-none-any.whl", "has_sig": false, "md5_digest": "20dfe891886f9f598965c67dfec1fe5d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7887, "upload_time": "2020-04-10T10:32:05", "upload_time_iso_8601": "2020-04-10T10:32:05.174385Z", "url": "https://files.pythonhosted.org/packages/9a/36/ab778666e8363dee9f1d46bff2a535d03b564462ff014205db6baebb519e/paypayopa-0.1.8-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "12cc3c2e889e947821b51834286f1cb4", "sha256": "26bc111298ef1ba12cf34502241307848ccbc8abeaea3317649a2686e2c246cc"}, "downloads": -1, "filename": "paypayopa-0.1.8.tar.gz", "has_sig": false, "md5_digest": "12cc3c2e889e947821b51834286f1cb4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7904, "upload_time": "2020-04-10T10:32:07", "upload_time_iso_8601": "2020-04-10T10:32:07.122167Z", "url": "https://files.pythonhosted.org/packages/a5/82/2ab11ff9366c6e98bc5449d6d5ab8eb922bb0434040497ed33086fec82c7/paypayopa-0.1.8.tar.gz"}]}