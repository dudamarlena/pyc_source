{"info": {"author": "Colin Bounouar", "author_email": "colin.bounouar.dev@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Build Tools"], "description": "<h2 align=\"center\">Exceptions handling for layab</h2>\n\n<p align=\"center\">\n<a href=\"https://pypi.org/project/layaberr/\"><img alt=\"pypi version\" src=\"https://img.shields.io/pypi/v/layaberr\"></a>\n<a href=\"https://travis-ci.org/Colin-b/layaberr\"><img alt=\"Build status\" src=\"https://api.travis-ci.org/Colin-b/layaberr.svg?branch=develop\"></a>\n<a href=\"https://travis-ci.org/Colin-b/layaberr\"><img alt=\"Coverage\" src=\"https://img.shields.io/badge/coverage-100%25-brightgreen\"></a>\n<a href=\"https://github.com/psf/black\"><img alt=\"Code style: black\" src=\"https://img.shields.io/badge/code%20style-black-000000.svg\"></a>\n<a href=\"https://travis-ci.org/Colin-b/layaberr\"><img alt=\"Number of tests\" src=\"https://img.shields.io/badge/tests-14 passed-blue\"></a>\n<a href=\"https://pypi.org/project/layaberr/\"><img alt=\"Number of downloads\" src=\"https://img.shields.io/pypi/dm/layaberr\"></a>\n</p>\n\nTo be able to throw exceptions in your code and send a proper HTTP response automatically to your client your need to add error handler(s) to your API and endpoints.\n\n## Add all handlers at once\n\n```python\nfrom flask_restplus import Resource\nimport layaberr\n\napi = None # Your flask-restplus API instance\nerror_responses = layaberr.add_error_handlers(api)\n\n@api.route(\"/your_endpoint\")\n@api.doc(**error_responses)\nclass YourFlaskRestPlusResource(Resource):\n    def get(self):\n        return \"test\"\n```\n\n## Add some handlers\n\n```python\nfrom flask_restplus import Resource\nimport layaberr\n\napi = None # Your flask-restplus API instance\nerror_response = layaberr.add_failed_validation_handler(api)\n\n@api.route(\"/your_endpoint\")\nclass YourFlaskRestPlusResource(Resource):\n    @api.response(error_response)\n    def get(self):\n        return \"test\"\n```\n\n## Supported Exceptions\n\nThe following exceptions are handled:\n\n### ValidationFailed\n\nIn case your endpoint raises ValidationFailed, an HTTP error 400 (Bad Request) will be sent to the client.\n\n#### Error not specific to a field in received data\n\nThis code:\n\n```python\nfrom layaberr import ValidationFailed\n\nreceived_data = None\nraise ValidationFailed(received_data, message=\"This is the error message\")\n```\n\nWill result in the following JSON response sent to the client:\n```json\n{\"fields\":  [{\"item\":  1, \"field_name\":  \"\", \"messages\": [\"This is the error message\"]}]}\n```\n\n#### Error specific to a field in a received dictionary\n\nThis code:\n\n```python\nfrom layaberr import ValidationFailed\n\nreceived_data = {\"field 1\": \"value 1\"}\nraise ValidationFailed(received_data, errors={\"field 1\": [\"Invalid value\"]})\n```\n\nWill result in the following JSON response sent to the client:\n```json\n{\"fields\":  [{\"item\":  1, \"field_name\":  \"field 1\", \"messages\": [\"Invalid value\"]}]}\n```\n\n#### Error specific to a field in a received list of dictionaries\n\nThis code:\n\n```python\nfrom layaberr import ValidationFailed\n\nreceived_data = [{\"field 1\": \"value 1\"}, {\"field 1\": \"value 2\"}]\nraise ValidationFailed(received_data, errors={1: {\"field 1\": [\"Invalid value\"]}})\n```\n\nWill result in the following JSON response sent to the client:\n```json\n{\"fields\":  [{\"item\":  2, \"field_name\":  \"field 1\", \"messages\": [\"Invalid value\"]}]}\n```\n\n### ModelCouldNotBeFound\n\nIn case your endpoint raises ModelCouldNotBeFound, an HTTP error 404 (Not Found) will be sent to the client.\n\nThis code:\n\n```python\nfrom layaberr import ModelCouldNotBeFound\n\nrequested_data = None\nraise ModelCouldNotBeFound(requested_data)\n```\n\nWill result in the following JSON response sent to the client:\n```json\n{\"message\":  \"Corresponding model could not be found.\"}\n```\n\n### BadRequest\n\nIn case your endpoint raises BadRequest, an HTTP error 400 (Bad Request) will be sent to the client.\n\nThis code:\n\n```python\nfrom werkzeug.exceptions import BadRequest\n\nraise BadRequest(\"The exception message\")\n```\n\nWill result in the following JSON response sent to the client:\n```json\n{\"message\":  \"The exception message\"}\n```\n\n### Unauthorized\n\nIn case your endpoint raises Unauthorized, an HTTP error 401 (Unauthorized) will be sent to the client.\n\nThis code:\n\n```python\nfrom werkzeug.exceptions import Unauthorized\n\nraise Unauthorized(\"The exception message\")\n```\n\nWill result in the following JSON response sent to the client:\n```json\n{\"message\":  \"The exception message\"}\n```\n\n### Forbidden\n\nIn case your endpoint raises Forbidden, an HTTP error 403 (Forbidden) will be sent to the client.\n\nThis code:\n\n```python\nfrom werkzeug.exceptions import Forbidden\n\nraise Forbidden(\"The exception message\")\n```\n\nWill result in the following JSON response sent to the client:\n```json\n{\"message\":  \"The exception message\"}\n```\n\n### Exception (this is the default handler)\n\nIn case your endpoint raises an Exception, an HTTP error 500 (Internal Server Error) will be sent to the client.\n\nThis code:\n\n```python\nraise Exception(\"The exception message\")\n```\n\nWill result in the following JSON response sent to the client:\n```json\n{\"message\":  \"The exception message\"}\n```\n\n## How to install\n1. [python 3.6+](https://www.python.org/downloads/) must be installed\n2. Use pip to install module:\n```sh\npython -m pip install layaberr\n```\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://pypi.org/project/layaberr/", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://colin-b.github.io/layaberr/", "keywords": "error,rest,flask", "license": "MIT", "maintainer": "Colin Bounouar", "maintainer_email": "colin.bounouar.dev@gmail.com", "name": "layaberr", "package_url": "https://pypi.org/project/layaberr/", "platform": "Windows", "project_url": "https://pypi.org/project/layaberr/", "project_urls": {"Changelog": "https://github.com/Colin-b/layaberr/blob/master/CHANGELOG.md", "Download": "https://pypi.org/project/layaberr/", "GitHub": "https://github.com/Colin-b/layaberr", "Homepage": "https://colin-b.github.io/layaberr/", "Issues": "https://github.com/Colin-b/layaberr/issues"}, "release_url": "https://pypi.org/project/layaberr/2.2.0/", "requires_dist": ["flask-restplus (==0.13.*)", "pytest-flask (==0.15.*) ; extra == 'testing'", "pytest-cov (==2.*) ; extra == 'testing'"], "requires_python": ">=3.6", "summary": "Thin wrapper for layabase and layab error handling", "version": "2.2.0"}, "last_serial": 6231251, "releases": {"2.2.0": [{"comment_text": "", "digests": {"md5": "853341b2d44b6cad21d8bd5cc2e5904f", "sha256": "4eb7f3484c71d4071fc81e7fd7b6d201ad667454a2c082c3e51fdbfa9eb59b28"}, "downloads": -1, "filename": "layaberr-2.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "853341b2d44b6cad21d8bd5cc2e5904f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7184, "upload_time": "2019-12-02T23:19:09", "upload_time_iso_8601": "2019-12-02T23:19:09.632832Z", "url": "https://files.pythonhosted.org/packages/6b/47/b2ac0f88ae79d2b3b5ff4f122096ef56bc74a09f7b78307ee78eea20972e/layaberr-2.2.0-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "4d00b696e14455cd688f0ff036c87fa4", "sha256": "e9347cbd3e14e1aca4f0480864302bc40ae2d4eae69f9459316b2b6c537ad2a2"}, "downloads": -1, "filename": "layaberr-2.2.0.tar.gz", "has_sig": false, "md5_digest": "4d00b696e14455cd688f0ff036c87fa4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5224, "upload_time": "2019-12-02T23:19:11", "upload_time_iso_8601": "2019-12-02T23:19:11.699971Z", "url": "https://files.pythonhosted.org/packages/c3/c3/cea72d9fdc943cd01a35c14c86f96729bc800d39eef066f00ef8bdb9bfd7/layaberr-2.2.0.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "853341b2d44b6cad21d8bd5cc2e5904f", "sha256": "4eb7f3484c71d4071fc81e7fd7b6d201ad667454a2c082c3e51fdbfa9eb59b28"}, "downloads": -1, "filename": "layaberr-2.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "853341b2d44b6cad21d8bd5cc2e5904f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7184, "upload_time": "2019-12-02T23:19:09", "upload_time_iso_8601": "2019-12-02T23:19:09.632832Z", "url": "https://files.pythonhosted.org/packages/6b/47/b2ac0f88ae79d2b3b5ff4f122096ef56bc74a09f7b78307ee78eea20972e/layaberr-2.2.0-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "4d00b696e14455cd688f0ff036c87fa4", "sha256": "e9347cbd3e14e1aca4f0480864302bc40ae2d4eae69f9459316b2b6c537ad2a2"}, "downloads": -1, "filename": "layaberr-2.2.0.tar.gz", "has_sig": false, "md5_digest": "4d00b696e14455cd688f0ff036c87fa4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5224, "upload_time": "2019-12-02T23:19:11", "upload_time_iso_8601": "2019-12-02T23:19:11.699971Z", "url": "https://files.pythonhosted.org/packages/c3/c3/cea72d9fdc943cd01a35c14c86f96729bc800d39eef066f00ef8bdb9bfd7/layaberr-2.2.0.tar.gz"}]}