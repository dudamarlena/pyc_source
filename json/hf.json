{"info": {"author": "Yang Wu", "author_email": "wuyang@vt.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "![PyPI](https://img.shields.io/pypi/v/HF?logo=pypi&style=plastic) ![pyver](https://img.shields.io/pypi/pyversions/HF?logo=python&style=plastic) ![travis](https://img.shields.io/travis/yangwu91/HF?logo=travis&style=plastic) ![Codecov](https://img.shields.io/codecov/c/gh/yangwu91/HF?logo=codecov&style=plastic) ![docker](https://img.shields.io/docker/cloud/build/yangwu91/hf?logo=docker&style=plastic)\n\n\n\n<div align=center><img src=\"https://raw.githubusercontent.com/yangwu91/HF/master/docs/icon.png\" alt=\"icon\"/></div>\n# HomologFishing\n\n**HomologFishing**, or **HF**, is a Python-based light-weight pipeline to find and assemble target homologous genes in species with poor genome assemblies or even without genome assemblies. Very common personal computers without high-end specs nor tons of sequencing data stored can run it adequately. \n\n## Implementation\n\n### PyPI\n\nThe HF pipeline was written in Python, and it can be installed by one command as follows:\n\n```\npip install HF\n```\n\nBesides, two third-party software packages including [NCBI SRA Toolkit](https://github.com/ncbi/sra-tools) and [Trinity](https://github.com/trinityrnaseq/trinityrnaseq) are required while running. *N.B.* the Trinity software package doesn\u2019t have pre-compiled binary files for Windows users.\n\n### Docker (recommended)\n\nWe also built a docker image with all required software packages installed and\nconfigured, which can be installed by one command as follows:\n\n```\ndocker pull yangwu91/hf:latest\n```\n\nThis is **recommended** as it is compatible with most common operating systems including\nLinux, Windows and macOS.\n\n## Usage\n\nAfter installation, detailed usage will be printed by the command:\n\n```\nHF --help\n```\n\nOr:\n\n```\ndocker run -it --dns 8.8.8.8 -v /dir/to/your/folder:/opt/data yangwu91/hf:latest --help\n```\n\nIn the command, the option `-v /dir/to/your/folder:/opt/data` will mount your folder `/dir/to/your/folder` onto the docker. \n\nDetailed usage:\n\n```\nOptional arguments:\n  -h, --help            show this help message and exit\n  -V, --version         Print the version.\n  -v, --verbose         Print detailed log.\n  -r [INT], --retry [INT]\n                        Number of times to retry, default: 5. Enabling it\n                        without any numbers will force it to keep retrying.\n  -o DIR, --outdir DIR  Specify an output directory.\n\nNCBI options:\n  -s SRA, --sra SRA     Choose SRA accessions (comma-separated without blank\n                        space), usually whose prefix is \"SRX\" (e.g.\n                        SRX4977164).\n  -q SEQUENCE, --query SEQUENCE\n                        Submit either a FASTA file or nucleotide sequences.\n  -p BLAST, --program BLAST\n                        Specify a blast program: blastn, tblastn, or tblastx,\n                        default: blastn.\n  -m INT, --max_num_seq INT\n                        Maximum number of aligned sequences to retrieve (the\n                        actual number of alignments may be greater than this),\n                        default: 1000.\n  -e FLOAT, --evalue FLOAT\n                        Expected number of chance matches in a random model,\n                        default: 1e-3.\n  -c FRAGMENT,OVERLAP, --cut FRAGMENT,OVERLAP\n                        Cut sequences and query them respectively to prevent\n                        weaker matches from being ignored.\n\nTrinity options:\n  -t INT, --CPU INT     Number of CPU threads to use, default: 36.\n  --max_memory RAM      Suggest max Gb of memory to use by Trinity, default: \"\n                        --max_memory 5G\"\n  --min_contig_length INT\n                        Minimum assembled contig length to report, default:\n                        150.\n  -k INT, --KMER_SIZE INT\n                        K-mer size for Trinity, maximum: 32, default: 25.\n  --full_cleanup        Only retain the assembled contig file in FASTA format.\n  --trim [Trimmomatic paramters]\n                        Run Trimmomatic to qualify and trim reads, default:\n                        disabled. Using this option without any parameters\n                        will trigger preset settings in Trinity for\n                        Trimmomatic. See Trinity for more help.\n  --stage {no_trinity,jellyfish,inchworm,chrysalis,butterfly}\n                        Stop Trinity after the stage you chose, default:\n                        butterfly (the final stage)\n```\n\n## An example: finding \"inexistent\" *S6K* gene in a mosquito species\n\nWe applied the HF pipeline to search the gene *S6K* (`AAEL018120` from *Aedes aegypti*) in *Aedes albopictus* SRA experiment `SRX885420` (https://www.ncbi.nlm.nih.gov/sra/SRX885420) using the engine `blastn`. Detailed workflow is described as follows:\n\n###  Picking a \"lure\"\n\nDownload nucleotide/protein sequences of *Aedes aegypti S6K* from VectorBase, Ensembl, NCBI or other online databases, and let\u2019s say it was saved as the file `/opt/data/AAEL018120-RE.S6K.fasta`.\n\n![lure](https://raw.githubusercontent.com/yangwu91/HF/master/docs/20191024163424.png)\n\n### Selecting a \"fishing spot\"\n\nSelect a proper SRA experiment for *Aedes albopictus* (e.g. `SRX885420`). Some genes only express in specific tissues or at specific time. Make sure the gene you are interested in indeed expresses in the SRA experiment(s) you selected.\n\n![fishing spot](https://raw.githubusercontent.com/yangwu91/HF/master/docs/20191024155211.png)\n\n### \"Casting\" and \"Fishing\"\n\nRun the HF pipeline. Here, we chopped the query (`/opt/data/AAEL018120.fa`) into 80-base fragments overlapping 50 bases. The command line is as follows:\n\n```\nHF -o /dir/to/your/S6K_q-aae_s-SRX885420_c-80.50_p-blastn -s SRX885420 -q /dir/to/your/AAEL018120-RE.S6K.fasta --cut 80,50 -p blastn\n```\n\nOr:\n\n```\ndocker run -it --dns 8.8.8.8 -v /dir/to/your/folder:/opt/data yangwu91/hf:latest -o /opt/data/S6K_q-aae_s-SRX885420_c-80.50_p-blastn -s SRX885420 -q /dir/to/your/folder/AAEL018120-RE.S6K.fasta --cut 80,50 -p blastn\n```\n\n### \"Harvesting\"\n\nThe sequence file in FASTA format of the predicted *Aedes albopictus S6K* is in the folder `/dir/to/your/folder/S6K_q-aae_s-SRX885420_c-80.50_p-blastn/`. \n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/yangwu91/HF.git", "keywords": "", "license": "MIT", "maintainer": "Yang Wu", "maintainer_email": "wuyang@vt.edu", "name": "HF", "package_url": "https://pypi.org/project/HF/", "platform": "", "project_url": "https://pypi.org/project/HF/", "project_urls": {"Homepage": "https://github.com/yangwu91/HF.git"}, "release_url": "https://pypi.org/project/HF/1.1.0/", "requires_dist": null, "requires_python": "", "summary": "A light-weight pipeline for searching and assembling homologous genes utilizing the NCBI SRA database.", "version": "1.1.0"}, "last_serial": 6098809, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "4e6b2a233450fe77b4ef990d485a5315", "sha256": "68d114252b46fd35b6a68616a043ba19304902b0e0ebc40c4c14992a29ec19bd"}, "downloads": -1, "filename": "HF-1.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4e6b2a233450fe77b4ef990d485a5315", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 43022, "upload_time": "2019-10-25T11:56:32", "upload_time_iso_8601": "2019-10-25T11:56:32.706623Z", "url": "https://files.pythonhosted.org/packages/c2/90/480e489542ebf21ff79090f5940c908f9db8539f74e7bce9b02032b1a448/HF-1.0.1-py2.py3-none-any.whl"}], "1.1.0": [{"comment_text": "", "digests": {"md5": "cd98b3b1f6d26b08a69ec4846bc296b2", "sha256": "3cc5923ca261c09c5e4da83959f5baf6a1aa6ea66cb834e49b6a1e5161a6844d"}, "downloads": -1, "filename": "HF-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "cd98b3b1f6d26b08a69ec4846bc296b2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 25565, "upload_time": "2019-11-08T12:04:51", "upload_time_iso_8601": "2019-11-08T12:04:51.285342Z", "url": "https://files.pythonhosted.org/packages/cf/84/a1bf0aafb3e0070071cebb49d463c08b7c4c7aa6fff1f2ee334d8b00c488/HF-1.1.0-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "249b9dd724a6f5c4129b6d8ff80c3a57", "sha256": "4287a01875a92885c5c6541c30ff3bac2456fc6612507b5bf76d17453980cc0d"}, "downloads": -1, "filename": "HF-1.1.0.tar.gz", "has_sig": false, "md5_digest": "249b9dd724a6f5c4129b6d8ff80c3a57", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 522583, "upload_time": "2019-11-08T12:04:53", "upload_time_iso_8601": "2019-11-08T12:04:53.302879Z", "url": "https://files.pythonhosted.org/packages/54/9c/c6f6790196ae5beaf041236966b9ea29944b0d10074d0e6df9207e5bb5ca/HF-1.1.0.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "cd98b3b1f6d26b08a69ec4846bc296b2", "sha256": "3cc5923ca261c09c5e4da83959f5baf6a1aa6ea66cb834e49b6a1e5161a6844d"}, "downloads": -1, "filename": "HF-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "cd98b3b1f6d26b08a69ec4846bc296b2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 25565, "upload_time": "2019-11-08T12:04:51", "upload_time_iso_8601": "2019-11-08T12:04:51.285342Z", "url": "https://files.pythonhosted.org/packages/cf/84/a1bf0aafb3e0070071cebb49d463c08b7c4c7aa6fff1f2ee334d8b00c488/HF-1.1.0-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "249b9dd724a6f5c4129b6d8ff80c3a57", "sha256": "4287a01875a92885c5c6541c30ff3bac2456fc6612507b5bf76d17453980cc0d"}, "downloads": -1, "filename": "HF-1.1.0.tar.gz", "has_sig": false, "md5_digest": "249b9dd724a6f5c4129b6d8ff80c3a57", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 522583, "upload_time": "2019-11-08T12:04:53", "upload_time_iso_8601": "2019-11-08T12:04:53.302879Z", "url": "https://files.pythonhosted.org/packages/54/9c/c6f6790196ae5beaf041236966b9ea29944b0d10074d0e6df9207e5bb5ca/HF-1.1.0.tar.gz"}]}