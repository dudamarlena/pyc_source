{"info": {"author": "Thiago Teixeira", "author_email": "me@thiagot.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# htbuilder \u2014 tiny HTML string builder for Python\n\nhtbuilder lets you build HTML strings using a purely functional syntax in Python.\nWhy use templating languages when you can just use functions?\n\n(PS: If you like this, check out [jsbuild](https://github.com/tvst/jsbuild) which\nlets you build JavaScript strings by simply annotating Python functions!)\n\n## Usage\n\nJust import tags like `div` with `from htbuilder import div`, then call them:\n\n```py\n# Import any tag you want from htbuilder, and it just works!\n# (This syntax requires Python 3.7+. See below for an alternate syntax)\nfrom htbuilder import div\n\ndom = div('Hello world!')\n```\n\nThen you can get the string output by calling `str()` on it:\n\n```py\nstr(dom)\n# Returns '<div>Hello world!</div>'\n```\n\n...which means you can also just `print()` to see it in the terminal:\n\n```py\nprint(dom)\n# Prints '<div>Hello world!</div>'\n```\n\nTo specify attributes, call the tag builder with keyword args:\n\n```py\nprint(\n  div(id='sidebar', foo='bar')\n)\n# Prints '<div id=\"sidebar\" foo=\"bar\"></div>'\n```\n\nTo specify both attributes and children, first specify the attributes using\nkeyword args, then pass the children afterwards by passing them **inside a new\nset of parentheses**:\n\n```py\nprint(\n  div(id='sidebar', foo='bar')(\n    \"Hello world!\"\n  )\n)\n# Prints '<div id=\"sidebar\" foo=\"bar\">Hello world!</div>'\n```\n\nThis is required because Python doesn't allow you to pass keyword arguments\n_before_ you pass normal arguments.\n\n\n## Multiple children\n\nWant to output multiple children? Just pass them all as arguments:\n\n```py\nfrom htbuilder import div, ul, li, img\n\ndom = (\n  div(id='container')(\n    ul(_class='greetings')(\n      li('hello'),\n      li('hi'),\n      li('whattup'),\n    )\n  )\n)\n\nprint(dom)\n\n# Prints this (but without added spacing):\n# <div id=\"container\">\n#   <ul class=\"greetings\">\n#     <li>hello</li>\n#     <li>hi</li>\n#     <li>whattup</li>\n#   </ul>\n# </div>\n```\n\n## Programmatically add children\n\nYou can also pass any iterable to specify multiple children, which means you can\nsimply use things like list comprehensions for great awesome:\n\n```py\nfrom htbuilder import div, ul, li, img\n\nimage_paths = [\n  'http://myimages.com/foo1.jpg',\n  'http://myimages.com/foo2.jpg',\n  'http://myimages.com/foo3.jpg',\n]\n\ndom = (\n  div(id='container')(\n    ul(_class='image-list')(\n      li(img(src=image_path, _class='large-image'))\n      for image_path in image_paths\n    )\n  )\n)\n\nprint(dom)\n# Prints:\n# <div id=\"container\">\n#   <ul class=\"image-list\">\n#     <li><img src=\"http://myimages.com/foo1.jpg\" class=\"large-image\"/></li>\n#     <li><img src=\"http://myimages.com/foo2.jpg\" class=\"large-image\"/></li>\n#     <li><img src=\"http://myimages.com/foo3.jpg\" class=\"large-image\"/></li>\n#   </ul>\n# </div>\n```\n\n## Conditionally add elements\n\nAnd because it's just Python, you can use an if/else expression to conditionally\ninsert elements:\n\n```py\nuse_bold = True\n\ndom = (\n  div(\n      b(\"bold text\")\n    if use_bold else\n      \"normal text\"\n  )\n)\n\nprint(dom)\n# Prints: <div><b>bold text</b></div>\n```\n\n## Styling\n\nWe provide helpers to write styles without having to pass huge style strings as\narguments. Instead, just use handy builders like `styles()`, `classes()`,\n`fonts()`, along with helpers you can import from the `units` and `funcs`\nmodules.\n\n```py\n# styles, classes, and fonts are special imports to help build attribute strings.\nfrom htbuilder import div, styles, classes, fonts\n\n# You can import anything from .units and .funcs to make it easier to specify\n# units like \"%\" and \"px\", as well as functions like \"rgba()\" and \"rgba()\".\nfrom htbuilder.units import percent, px\nfrom htbuilder.funcs import rgba, rgb\n\nbottom_margin = 10\nis_big = True\n\ndom = (\n  div(\n    _class=classes('btn', big=is_big)\n    style=styles(\n        color='black',\n        font_family=fonts('Comic Sans', 'sans-serif'),\n        margin=px(0, 0, bottom_margin, 0),\n        padding=(px(10), percent(5))\n        box_shadow=[\n            (0, 0, px(10), rgba(0, 0, 0, 0.1)),\n            (0, 0, '2px', rgb(0, 0, 0)),\n        ],\n    )\n  )\n)\n\n# Prints:\n# <div\n#   class=\"btn big\"\n#   style=\"\n#     color: black;\n#     font-family: \"Comic Sans\", \"sans-serif\";\n#     margin: 0 0 10px 0;\n#     padding: 10px 5%;\n#     box-shadow: 0 0 10px rgba(0, 0, 0, 0.1), 0 0 2px rgb(0, 0, 0);\n#   \"></div>\n```\n\n\n## Working with Python &lt; 3.7\n\nIf using Python &lt; 3.7, the import should look like this instead:\n\n```py\nfrom htbuilder import H\n\ndiv = H.div\nul = H.ul\nli = H.li\nimg = H.img\n# ...etc\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/tvst/htbuilder", "keywords": "", "license": "Apache 2", "maintainer": "", "maintainer_email": "", "name": "htbuilder", "package_url": "https://pypi.org/project/htbuilder/", "platform": "", "project_url": "https://pypi.org/project/htbuilder/", "project_urls": {"Homepage": "https://github.com/tvst/htbuilder"}, "release_url": "https://pypi.org/project/htbuilder/0.0.1/", "requires_dist": null, "requires_python": ">=3.5", "summary": "A purely-functional HTML builder for Python. Think JSX rather than templates.", "version": "0.0.1"}, "last_serial": 6910227, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "4b2df42282bf1fafe72871de7ddeded7", "sha256": "3bb51f5c3a67cef8f5d6f6cecfd5078ba4b5983d998379657846d2d4e42f0b2b"}, "downloads": -1, "filename": "htbuilder-0.0.1.tar.gz", "has_sig": false, "md5_digest": "4b2df42282bf1fafe72871de7ddeded7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 7021, "upload_time": "2020-03-30T04:36:16", "upload_time_iso_8601": "2020-03-30T04:36:16.919591Z", "url": "https://files.pythonhosted.org/packages/b9/55/c5030e28363034500c456193b5958a259af629a43f7be31026d6a1967401/htbuilder-0.0.1.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "4b2df42282bf1fafe72871de7ddeded7", "sha256": "3bb51f5c3a67cef8f5d6f6cecfd5078ba4b5983d998379657846d2d4e42f0b2b"}, "downloads": -1, "filename": "htbuilder-0.0.1.tar.gz", "has_sig": false, "md5_digest": "4b2df42282bf1fafe72871de7ddeded7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 7021, "upload_time": "2020-03-30T04:36:16", "upload_time_iso_8601": "2020-03-30T04:36:16.919591Z", "url": "https://files.pythonhosted.org/packages/b9/55/c5030e28363034500c456193b5958a259af629a43f7be31026d6a1967401/htbuilder-0.0.1.tar.gz"}]}