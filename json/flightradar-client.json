{"info": {"author": "Malte Franken", "author_email": "coding@subspace.de", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# python-flightradar-client\n\n[![Build Status](https://travis-ci.org/exxamalte/python-flightradar-client.svg)](https://travis-ci.org/exxamalte/python-flightradar-client)\n[![Coverage Status](https://coveralls.io/repos/github/exxamalte/python-flightradar-client/badge.svg?branch=master)](https://coveralls.io/github/exxamalte/python-flightradar-client?branch=master)\n\nThis library provides convenient access to a local [Flightradar24](https://www.flightradar24.com/) feed.\n\n\n## Installation\n`pip install flightradar-client`\n\n## Usage\n\nThis library currently support two different flavour of flight data, \nprovided by the `fr24feed` and `dump1090-mutability` services that are\nautomatically installed when building your own \n[Pi24 ADS-B receiver](https://www.flightradar24.com/build-your-own).\n\nFor each flavour the library provides two modes of access. The `*Feed` class\nfetches data once when calling `update` and transforms it into `FeedEntry` \nobjects. The `*FeedAggregator` class keeps a bit of history and with each \nsubsequent `update` call it tries to fill in any gaps (coordinates and callsign \nat the moment) missing in the latest data set fetched.\n\n### Flightradar Feed\n\nThe Flightradar Feed mode uses the JSON data made available by the `fr24feed`\nservice (normally under `http://localhost:8754/flights.json`).\n\n`FlightradarFlightsFeed` and `FlightradarFlightsFeedAggregator` support\nthe same parameters:\n\n| Name               | Type                                                                                                 | Description                                                                                   |\n|--------------------|------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------|\n| `home_coordinates` | required, tuple of latitude and longitude                                                            | Used to calculate the distance to each aircraft.                                              |\n| `filter_radius`    | optional, float value in kilometres, default: don't filter by distance                               | Only aircrafts within this radius around the home coordinates are included in the result set. |\n| `url`              | optional, full url to access the Pi24 ADS-B receiver JSON, default: construct with hostname and port | Define if you have customised access to Pi24 ADS-B receiver or use HTTPS for example.         |\n| `hostname`         | optional, hostname of the Pi24 ADS-B receiver, default: `localhost`                                  | Define if you are not running this library on your Pi24 ADS-B receiver.                       |\n| `port`             | optional, port of the Pi24 ADS-B receiver's flights service, default: `8754`                         | Define if you have configured a different port on your Pi24 ADS-B receiver.                   |\n\n#### Feed\n\n```python\nimport asyncio\nimport aiohttp\nfrom flightradar_client.fr24feed_flights import FlightradarFlightsFeed\nsession = aiohttp.ClientSession()\n# Home Coordinates: Latitude: -33.5, Longitude: 151.5\nfeed = FlightradarFlightsFeed((-33.5, 151.5), session)\nLOOP = asyncio.get_event_loop()\nstatus, entries = LOOP.run_until_complete(feed.update())\n```\n\n#### Feed Aggregator\n\n```python\nimport asyncio\nimport aiohttp\nfrom flightradar_client.fr24feed_flights import FlightradarFlightsFeedAggregator\nsession = aiohttp.ClientSession()\n# Home Coordinates: Latitude: -33.5, Longitude: 151.5\nfeed_aggregator = FlightradarFlightsFeedAggregator((-33.5, 151.5), session)\nLOOP = asyncio.get_event_loop()\nstatus, entries = LOOP.run_until_complete(feed_aggregator.update())\n```\n\n### Dump1090 Feed\n\nThe Dump1090 Feed mode uses the JSON data made available by the `dump1090-mutability` \nservice (normally under `http://localhost:8888/data/aircraft.json`).\n\n`Dump1090AircraftsFeed` and `Dump1090AircraftsFeedAggregator` support\nthe same parameters:\n\n| Name               | Type                                                                                                 | Description                                                                                   |\n|--------------------|------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------|\n| `home_coordinates` | required, tuple of latitude and longitude                                                            | Used to calculate the distance to each aircraft.                                              |\n| `filter_radius`    | optional, float value in kilometres, default: don't filter by distance                               | Only aircrafts within this radius around the home coordinates are included in the result set. |\n| `url`              | optional, full url to access the Pi24 ADS-B receiver JSON, default: construct with hostname and port | Define if you have customised access to Pi24 ADS-B receiver or use HTTPS for example.         |\n| `hostname`         | optional, hostname of the Pi24 ADS-B receiver, default: `localhost`                                  | Define if you are not running this library on your Pi24 ADS-B receiver.                       |\n| `port`             | optional, port of the Pi24 ADS-B receiver's dump1090 service, default: `8888`                        | Define if you have configured a different port on your Pi24 ADS-B receiver.                   |\n\n#### Feed\n\n```python\nimport asyncio\nimport aiohttp\nfrom flightradar_client.dump1090_aircrafts import Dump1090AircraftsFeed\nsession = aiohttp.ClientSession()\n# Home Coordinates: Latitude: -33.5, Longitude: 151.5\nfeed = Dump1090AircraftsFeed((-33.5, 151.5), session)\nLOOP = asyncio.get_event_loop()\nstatus, entries = LOOP.run_until_complete(feed.update())\n```\n\n#### Feed Aggregator\n\n```python\nimport asyncio\nimport aiohttp\nfrom flightradar_client.dump1090_aircrafts import Dump1090AircraftsFeedAggregator\nsession = aiohttp.ClientSession()\n# Home Coordinates: Latitude: -33.5, Longitude: 151.5\nfeed_aggregator = Dump1090AircraftsFeedAggregator((-33.5, 151.5), session)\nLOOP = asyncio.get_event_loop()\nstatus, entries = LOOP.run_until_complete(feed_aggregator.update())\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/exxamalte/python-flightradar-client", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "flightradar-client", "package_url": "https://pypi.org/project/flightradar-client/", "platform": "", "project_url": "https://pypi.org/project/flightradar-client/", "project_urls": {"Homepage": "https://github.com/exxamalte/python-flightradar-client"}, "release_url": "https://pypi.org/project/flightradar-client/0.5/", "requires_dist": ["haversine (>=1.0.1)", "aiohttp", "async-timeout"], "requires_python": "", "summary": "Flightradar client library.", "version": "0.5"}, "last_serial": 4557477, "releases": {"0.5": [{"comment_text": "", "digests": {"md5": "820ae4068be9544b7e57ad14bff4e8a8", "sha256": "5cfc8e22477d6810e7d90a7983fcfc14b848057fce356db5a299cae2b7206cd8"}, "downloads": -1, "filename": "flightradar_client-0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "820ae4068be9544b7e57ad14bff4e8a8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 26192, "upload_time": "2018-12-03T22:04:21", "upload_time_iso_8601": "2018-12-03T22:04:21.116761Z", "url": "https://files.pythonhosted.org/packages/e8/f7/4aac95c2c92eaa4fc99f3cc9ce7ae2cd1b6bd004c9ae2e74ba421628c383/flightradar_client-0.5-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "80f2a93fd2cf1ea862bedb88107ded09", "sha256": "1092ff3741db419911fe03c6d3c706df939b044d5a98832712e630822e5a7b5a"}, "downloads": -1, "filename": "flightradar_client-0.5.tar.gz", "has_sig": false, "md5_digest": "80f2a93fd2cf1ea862bedb88107ded09", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12129, "upload_time": "2018-12-03T22:04:23", "upload_time_iso_8601": "2018-12-03T22:04:23.530246Z", "url": "https://files.pythonhosted.org/packages/13/45/5341d37aa5b52d0b7a20fcd6978898508a9648cdf04e71dc33d55d351ecb/flightradar_client-0.5.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "820ae4068be9544b7e57ad14bff4e8a8", "sha256": "5cfc8e22477d6810e7d90a7983fcfc14b848057fce356db5a299cae2b7206cd8"}, "downloads": -1, "filename": "flightradar_client-0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "820ae4068be9544b7e57ad14bff4e8a8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 26192, "upload_time": "2018-12-03T22:04:21", "upload_time_iso_8601": "2018-12-03T22:04:21.116761Z", "url": "https://files.pythonhosted.org/packages/e8/f7/4aac95c2c92eaa4fc99f3cc9ce7ae2cd1b6bd004c9ae2e74ba421628c383/flightradar_client-0.5-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "80f2a93fd2cf1ea862bedb88107ded09", "sha256": "1092ff3741db419911fe03c6d3c706df939b044d5a98832712e630822e5a7b5a"}, "downloads": -1, "filename": "flightradar_client-0.5.tar.gz", "has_sig": false, "md5_digest": "80f2a93fd2cf1ea862bedb88107ded09", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12129, "upload_time": "2018-12-03T22:04:23", "upload_time_iso_8601": "2018-12-03T22:04:23.530246Z", "url": "https://files.pythonhosted.org/packages/13/45/5341d37aa5b52d0b7a20fcd6978898508a9648cdf04e71dc33d55d351ecb/flightradar_client-0.5.tar.gz"}]}