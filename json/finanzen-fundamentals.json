{"info": {"author": "Joshua Hruzik", "author_email": "joshua.hruzik@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Financial and Insurance Industry", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Office/Business :: Financial", "Topic :: Office/Business :: Financial :: Investment"], "description": "# Finanzen-Fundamentals\nFinanzen-Fundamentals is a Python package that can be used to retrieve fundamentals of stocks. The data is fetched from [finanzen.net](https://www.finanzen.net), a German language financial news site. Note that the api is English but all data will be returned in German.\n\n# Installation\nYou can easily install finanzen-fundamentals via pip: `pip install finanzen-fundamentals`\n\nIf you choose to download the source code, make sure that you have the following dependencies installed:\n* requests\n* BeautifulSoup\n* lxml\n* pandas\n* numpy\n\nYou can install all of them by running: `pip install requests BeautifulSoup lxml pandas numpy`.\n\n# Usage\n## Import\nAfter you successfully installed the package, you can include it in your projects by importing it.\n\n```import finanzen_fundamentals.stocks as ff```\n\n## Retrieve Fundamentals\nYou can retrieve the fundamentals of a single stock by running: \n\n```bmw_fundamentals = ff.get_fundamentals(\"bmw\")```\n\nThis will fetch the fundamentals of BMW and save it into a dictionary called bmw_fundamentals.\nbmw_fundamentals will have the following keys:\n* Quotes\n* Key Ratios\n* Income Statement\n* Balance Sheet\n* Other\n\nThe values for those keys will be variables, holding a year:value dictionary. If no data can be found, the value will be None.\nYou can also fetch estimates for expected values by using:\n\n```bmw_estimates = ff.get_estimates(\"bmw\")```\n\nThis will save estimates for the most important key metrics if available. The resulting dictionary will hold variable names as keys and a year:value dictionary as values.\n\nNote that we use stock names not stock symbols when fetching data. You can search for stock names by using\n\n```ff.search_stock(\"bmw\", limit = 3)```\n\nThis will print the three most matching stock names for your search. You can increase the limit to 30. If you don't give a parameter, all available data will be printed (up to 30).\n\n## Alternative Implementation\nThanks to the contribution of [backster82](https://github.com/backster82), there is also a xml based alternative to the preceeding functions. All of the following functions will return a Pandas DataFrame instead of a dictionary.\n\nYou can obtain fundamentals like so:\n\n```bmw_fundamentals = ff.get_fundamentals_lxml(\"bmw\")```\n\nEstimates can be loaded via:\n\n```bmw_estimates = ff.get_estimates_lxml(\"bmw\")```\n\nAdditionally, you can also load the current stock price for a vast selection of stock exchanges. For example, you can retrieve the current stock prices for BMW by using the following line of code:\n\n```bmw_price = ff.get_current_value_lxml(\"bmw\")```\n\nThis will give you the current price at Tradegate. However, you can change the stock exchange by entering its symbol for the \"exchange\" argument. If you want to obtain the current price of BMW stocks at the Frankfurt Stock Exchange, you can use the following command:\n\n```bmw_price_frankfurt = ff.get_current_value_lxml(\"bmw\", exchange = \"FSE\")```\n\nYou can find all available exchanges by inspecting the StockMarkets dictionary in `finanzen_fundamentals.statics`.\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Jhruzik/Finanzen-Fundamentals", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "finanzen-fundamentals", "package_url": "https://pypi.org/project/finanzen-fundamentals/", "platform": "", "project_url": "https://pypi.org/project/finanzen-fundamentals/", "project_urls": {"Homepage": "https://github.com/Jhruzik/Finanzen-Fundamentals"}, "release_url": "https://pypi.org/project/finanzen-fundamentals/0.0.30/", "requires_dist": ["requests", "bs4", "lxml", "numpy", "pandas"], "requires_python": ">=3.6", "summary": "API to fetch stock data fundamentals from finanzen.net", "version": "0.0.30"}, "last_serial": 6948822, "releases": {"0.0.21": [{"comment_text": "", "digests": {"md5": "4d09dd371f270a6015e1bdb4d723687b", "sha256": "3ebf04f9f303b7f2df5cd4fce4212b3fbc784529b4070d5db3c3616c2ab8f88e"}, "downloads": -1, "filename": "finanzen_fundamentals-0.0.21-py3-none-any.whl", "has_sig": false, "md5_digest": "4d09dd371f270a6015e1bdb4d723687b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5522, "upload_time": "2019-12-16T20:39:21", "upload_time_iso_8601": "2019-12-16T20:39:21.624525Z", "url": "https://files.pythonhosted.org/packages/7e/64/485e05ff5ce0535aad12b7034f74e1f94d95c871be6a7ae99de0c477a248/finanzen_fundamentals-0.0.21-py3-none-any.whl"}], "0.0.30": [{"comment_text": "", "digests": {"md5": "1eee00e937d13854390786c08a383f0f", "sha256": "788fb3611db672a27cbdfd84084eac836ac2a0d0324e60e41dddda4748631d85"}, "downloads": -1, "filename": "finanzen_fundamentals-0.0.30-py3-none-any.whl", "has_sig": false, "md5_digest": "1eee00e937d13854390786c08a383f0f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 9228, "upload_time": "2020-04-04T09:36:18", "upload_time_iso_8601": "2020-04-04T09:36:18.352537Z", "url": "https://files.pythonhosted.org/packages/27/6d/dc26a535363887addf8cf1b14f84c7a69c6961983f6a25485452080c4ef7/finanzen_fundamentals-0.0.30-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "adece9d307cdf31f9c02fa89128dbe72", "sha256": "b0d2195cc51a2d3a296d7d50cd0d051dd84c0447327112d83da10984e04c2eb4"}, "downloads": -1, "filename": "finanzen-fundamentals-0.0.30.tar.gz", "has_sig": false, "md5_digest": "adece9d307cdf31f9c02fa89128dbe72", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9028, "upload_time": "2020-04-04T09:36:19", "upload_time_iso_8601": "2020-04-04T09:36:19.651864Z", "url": "https://files.pythonhosted.org/packages/ce/d0/edcc3d3d389bccf1cd4e067b5e56328200de1ba56e2f08f6e169913ebd12/finanzen-fundamentals-0.0.30.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "1eee00e937d13854390786c08a383f0f", "sha256": "788fb3611db672a27cbdfd84084eac836ac2a0d0324e60e41dddda4748631d85"}, "downloads": -1, "filename": "finanzen_fundamentals-0.0.30-py3-none-any.whl", "has_sig": false, "md5_digest": "1eee00e937d13854390786c08a383f0f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 9228, "upload_time": "2020-04-04T09:36:18", "upload_time_iso_8601": "2020-04-04T09:36:18.352537Z", "url": "https://files.pythonhosted.org/packages/27/6d/dc26a535363887addf8cf1b14f84c7a69c6961983f6a25485452080c4ef7/finanzen_fundamentals-0.0.30-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "adece9d307cdf31f9c02fa89128dbe72", "sha256": "b0d2195cc51a2d3a296d7d50cd0d051dd84c0447327112d83da10984e04c2eb4"}, "downloads": -1, "filename": "finanzen-fundamentals-0.0.30.tar.gz", "has_sig": false, "md5_digest": "adece9d307cdf31f9c02fa89128dbe72", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9028, "upload_time": "2020-04-04T09:36:19", "upload_time_iso_8601": "2020-04-04T09:36:19.651864Z", "url": "https://files.pythonhosted.org/packages/ce/d0/edcc3d3d389bccf1cd4e067b5e56328200de1ba56e2f08f6e169913ebd12/finanzen-fundamentals-0.0.30.tar.gz"}]}