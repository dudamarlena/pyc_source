{"info": {"author": "BlockChyp", "author_email": "support@blockchyp.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Libraries"], "description": "# BlockChyp Python SDK\n\n[![Build Status](https://circleci.com/gh/blockchyp/blockchyp-python/tree/master.svg?style=shield)](https://circleci.com/gh/blockchyp/blockchyp-python/tree/master)\n[![PyPI](https://img.shields.io/pypi/v/blockchyp.svg)](https://pypi.org/project/blockchyp/)\n[![License: MIT](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/blockchyp/blockchyp-python/blob/master/LICENSE)\n\nThe official library for accessing the [BlockChyp] Terminal and Gateway APIs\nfrom Python.\n\n## Installation\n\nBlockChyp can be simply installed by running:\n\n```sh\npip install blockchyp\n```\n\n\n## The Rest APIs\n\nAll BlockChyp SDKs provide a convenient way of accessing the BlockChyp REST APIs.\nYou can checkout the REST API documentation via the links below.\n\n[Terminal REST API Docs](https://docs.blockchyp.com/rest-api/terminal/index.html)\n\n[Gateway REST API Docs](https://docs.blockchyp.com/rest-api/gateway/index.html)\n\n## Other SDKs\n\nBlockChyp has officially supported SDKs for eight different development platforms and counting.\nHere's the full list with links to their GitHub repositories.\n\n[Go SDK](https://github.com/blockchyp/blockchyp-go)\n\n[Node.js/JavaScript SDK](https://github.com/blockchyp/blockchyp-js)\n\n[Java SDK](https://github.com/blockchyp/blockchyp-java)\n\n[.net/C# SDK](https://github.com/blockchyp/blockchyp-csharp)\n\n[Ruby SDK](https://github.com/blockchyp/blockchyp-ruby)\n\n[PHP SDK](https://github.com/blockchyp/blockchyp-php)\n\n[Python SDK](https://github.com/blockchyp/blockchyp-python)\n\n[iOS (Objective-C/Swift) SDK](https://github.com/blockchyp/blockchyp-ios)\n\n## Getting a Developer Kit\n\nIn order to test your integration with real terminals, you'll need a BlockChyp\nDeveloper Kit. Our kits include a fully functioning payment terminal with\ntest pin encryption keys. Every kit includes a comprehensive set of test\ncards with test cards for every major card brand and entry method, including\nContactless and Contact EMV and mag stripe cards. Each kit also includes\ntest gift cards for our blockchain gift card system.\n\nAccess to BlockChyp's developer program is currently invite only, but you\ncan request an invitation by contacting our engineering team at **nerds@blockchyp.com**.\n\nYou can also view a number of long form demos and learn more about us on our [YouTube Channel](https://www.youtube.com/channel/UCE-iIVlJic_XArs_U65ZcJg).\n\n## Transaction Code Examples\n\nYou don't want to read words. You want examples. Here's a quick rundown of the\nstuff you can do with the BlockChyp Python SDK and a few basic examples.\n\n#### Charge\n\nExecutes a standard direct preauth and capture.\n\n\n```python\nimport os\n\nimport blockchyp\n\n# initialize a client.\nclient = blockchyp.Client(\n    api_key=os.environ[\"BC_API_KEY\"],\n    bearer_token=os.environ[\"BC_BEARER_TOKEN\"],\n    signing_key=os.environ[\"BC_SIGNING_KEY\"],\n)\n\n# populate request parameters.\nrequest = {\n    \"test\": True,\n    \"terminalName\": \"Test Terminal\",\n    \"amount\": \"55.00\",\n}\n\n# run the transaction.\nresponse = client.charge(request)\n\nprint(\"Response: %r\" % response)\n\n\n```\n\n#### Preauthorization\n\nExecutes a preauthorization intended to be captured later.\n\n\n```python\nimport os\n\nimport blockchyp\n\n# initialize a client.\nclient = blockchyp.Client(\n    api_key=os.environ[\"BC_API_KEY\"],\n    bearer_token=os.environ[\"BC_BEARER_TOKEN\"],\n    signing_key=os.environ[\"BC_SIGNING_KEY\"],\n)\n\n# populate request parameters.\nrequest = {\n    \"test\": True,\n    \"terminalName\": \"Test Terminal\",\n    \"amount\": \"27.00\",\n}\n\n# run the transaction.\nresponse = client.preauth(request)\n\nprint(\"Response: %r\" % response)\n\n\n```\n\n#### Terminal Ping\n\nTests connectivity with a payment terminal.\n\n\n```python\nimport os\n\nimport blockchyp\n\n# initialize a client.\nclient = blockchyp.Client(\n    api_key=os.environ[\"BC_API_KEY\"],\n    bearer_token=os.environ[\"BC_BEARER_TOKEN\"],\n    signing_key=os.environ[\"BC_SIGNING_KEY\"],\n)\n\n# populate request parameters.\nrequest = {\n    \"terminalName\": \"Test Terminal\",\n}\n\n# run the transaction.\nresponse = client.ping(request)\n\nprint(\"Response: %r\" % response)\n\n\n```\n\n#### Balance\n\nChecks the remaining balance on a payment method.\n\n\n```python\nimport os\n\nimport blockchyp\n\n# initialize a client.\nclient = blockchyp.Client(\n    api_key=os.environ[\"BC_API_KEY\"],\n    bearer_token=os.environ[\"BC_BEARER_TOKEN\"],\n    signing_key=os.environ[\"BC_SIGNING_KEY\"],\n)\n\n# populate request parameters.\nrequest = {\n    \"test\": True,\n    \"terminalName\": \"Test Terminal\",\n    \"cardType\": blockchyp.CardType.EBT,\n}\n\n# run the transaction.\nresponse = client.balance(request)\n\nprint(\"Response: %r\" % response)\n\n\n```\n\n#### Terminal Clear\n\nClears the line item display and any in progress transaction.\n\n\n```python\nimport os\n\nimport blockchyp\n\n# initialize a client.\nclient = blockchyp.Client(\n    api_key=os.environ[\"BC_API_KEY\"],\n    bearer_token=os.environ[\"BC_BEARER_TOKEN\"],\n    signing_key=os.environ[\"BC_SIGNING_KEY\"],\n)\n\n# populate request parameters.\nrequest = {\n    \"test\": True,\n    \"terminalName\": \"Test Terminal\",\n}\n\n# run the transaction.\nresponse = client.clear(request)\n\nprint(\"Response: %r\" % response)\n\n\n```\n\n#### Terms & Conditions Capture\n\nPrompts the user to accept terms and conditions.\n\n\n```python\nimport os\n\nimport blockchyp\n\n# initialize a client.\nclient = blockchyp.Client(\n    api_key=os.environ[\"BC_API_KEY\"],\n    bearer_token=os.environ[\"BC_BEARER_TOKEN\"],\n    signing_key=os.environ[\"BC_SIGNING_KEY\"],\n)\n\n# populate request parameters.\nrequest = {\n    \"test\": True,\n    \"terminalName\": \"Test Terminal\",\n\n    # Alias for a Terms and Conditions template configured in the BlockChyp\n    # dashboard.\n    \"tcAlias\": \"hippa\",\n\n    # Name of the contract or document if not using an alias.\n    \"tcName\": \"HIPPA Disclosure\",\n\n    # Full text of the contract or disclosure if not using an alias.\n    \"tcContent\": \"Full contract text\",\n\n    # File format for the signature image.\n    \"sigFormat\": blockchyp.SignatureFormat.PNG,\n\n    # Width of the signature image in pixels.\n    \"sigWidth\": 200,\n\n    # Whether or not a signature is required. Defaults to true.\n    \"sigRequired\": True,\n}\n\n# run the transaction.\nresponse = client.terms_and_conditions(request)\n\nprint(\"Response: %r\" % response)\n\n\n```\n\n#### Update Transaction Display\n\nAppends items to an existing transaction display.  Subtotal, Tax, and Total are\noverwritten by the request. Items with the same description are combined into\ngroups.\n\n\n```python\nimport os\n\nimport blockchyp\n\n# initialize a client.\nclient = blockchyp.Client(\n    api_key=os.environ[\"BC_API_KEY\"],\n    bearer_token=os.environ[\"BC_BEARER_TOKEN\"],\n    signing_key=os.environ[\"BC_SIGNING_KEY\"],\n)\n\n# populate request parameters.\nrequest = {\n    \"test\": True,\n    \"terminalName\": \"Test Terminal\",\n    \"transaction\": {\n        \"subtotal\": \"60.00\",\n        \"tax\": \"5.00\",\n        \"total\": \"65.00\",\n        \"items\": [\n            {\n                \"description\": \"Leki Trekking Poles\",\n                \"price\": \"35.00\",\n                \"quantity\": 2,\n                \"extended\": \"70.00\",\n                \"discounts\": [\n                    {\n                        \"description\": \"memberDiscount\",\n                        \"amount\": \"10.00\",\n                    },\n                ],\n            },\n        ],\n    },\n}\n\n# run the transaction.\nresponse = client.update_transaction_display(request)\n\nprint(\"Response: %r\" % response)\n\n\n```\n\n#### New Transaction Display\n\nDisplays a new transaction on the terminal.\n\n\n```python\nimport os\n\nimport blockchyp\n\n# initialize a client.\nclient = blockchyp.Client(\n    api_key=os.environ[\"BC_API_KEY\"],\n    bearer_token=os.environ[\"BC_BEARER_TOKEN\"],\n    signing_key=os.environ[\"BC_SIGNING_KEY\"],\n)\n\n# populate request parameters.\nrequest = {\n    \"test\": True,\n    \"terminalName\": \"Test Terminal\",\n    \"transaction\": {\n        \"subtotal\": \"60.00\",\n        \"tax\": \"5.00\",\n        \"total\": \"65.00\",\n        \"items\": [\n            {\n                \"description\": \"Leki Trekking Poles\",\n                \"price\": \"35.00\",\n                \"quantity\": 2,\n                \"extended\": \"70.00\",\n                \"discounts\": [\n                    {\n                        \"description\": \"memberDiscount\",\n                        \"amount\": \"10.00\",\n                    },\n                ],\n            },\n        ],\n    },\n}\n\n# run the transaction.\nresponse = client.new_transaction_display(request)\n\nprint(\"Response: %r\" % response)\n\n\n```\n\n#### Text Prompt\n\nAsks the consumer a text based question.\n\n\n```python\nimport os\n\nimport blockchyp\n\n# initialize a client.\nclient = blockchyp.Client(\n    api_key=os.environ[\"BC_API_KEY\"],\n    bearer_token=os.environ[\"BC_BEARER_TOKEN\"],\n    signing_key=os.environ[\"BC_SIGNING_KEY\"],\n)\n\n# populate request parameters.\nrequest = {\n    \"test\": True,\n    \"terminalName\": \"Test Terminal\",\n\n    # Type of prompt. Can be 'email', 'phone', 'customer-number', or\n    # 'rewards-number'.\n    \"promptType\": blockchyp.PromptType.EMAIL,\n}\n\n# run the transaction.\nresponse = client.text_prompt(request)\n\nprint(\"Response: %r\" % response)\n\n\n```\n\n#### Boolean Prompt\n\nAsks the consumer a yes/no question.\n\n\n```python\nimport os\n\nimport blockchyp\n\n# initialize a client.\nclient = blockchyp.Client(\n    api_key=os.environ[\"BC_API_KEY\"],\n    bearer_token=os.environ[\"BC_BEARER_TOKEN\"],\n    signing_key=os.environ[\"BC_SIGNING_KEY\"],\n)\n\n# populate request parameters.\nrequest = {\n    \"test\": True,\n    \"terminalName\": \"Test Terminal\",\n    \"prompt\": \"Would you like to become a member?\",\n    \"yesCaption\": \"Yes\",\n    \"noCaption\": \"No\",\n}\n\n# run the transaction.\nresponse = client.boolean_prompt(request)\n\nprint(\"Response: %r\" % response)\n\n\n```\n\n#### Display Message\n\nDisplays a short message on the terminal.\n\n\n```python\nimport os\n\nimport blockchyp\n\n# initialize a client.\nclient = blockchyp.Client(\n    api_key=os.environ[\"BC_API_KEY\"],\n    bearer_token=os.environ[\"BC_BEARER_TOKEN\"],\n    signing_key=os.environ[\"BC_SIGNING_KEY\"],\n)\n\n# populate request parameters.\nrequest = {\n    \"test\": True,\n    \"terminalName\": \"Test Terminal\",\n    \"message\": \"Thank you for your business.\",\n}\n\n# run the transaction.\nresponse = client.message(request)\n\nprint(\"Response: %r\" % response)\n\n\n```\n\n#### Refund\n\nExecutes a refund.\n\n\n```python\nimport os\n\nimport blockchyp\n\n# initialize a client.\nclient = blockchyp.Client(\n    api_key=os.environ[\"BC_API_KEY\"],\n    bearer_token=os.environ[\"BC_BEARER_TOKEN\"],\n    signing_key=os.environ[\"BC_SIGNING_KEY\"],\n)\n\n# populate request parameters.\nrequest = {\n    \"terminalName\": \"Test Terminal\",\n    \"transactionId\": \"<PREVIOUS TRANSACTION ID>\",\n\n    # Optional amount for partial refunds.\n    \"amount\": \"5.00\",\n}\n\n# run the transaction.\nresponse = client.refund(request)\n\nprint(\"Response: %r\" % response)\n\n\n```\n\n#### Enroll\n\nAdds a new payment method to the token vault.\n\n\n```python\nimport os\n\nimport blockchyp\n\n# initialize a client.\nclient = blockchyp.Client(\n    api_key=os.environ[\"BC_API_KEY\"],\n    bearer_token=os.environ[\"BC_BEARER_TOKEN\"],\n    signing_key=os.environ[\"BC_SIGNING_KEY\"],\n)\n\n# populate request parameters.\nrequest = {\n    \"test\": True,\n    \"terminalName\": \"Test Terminal\",\n}\n\n# run the transaction.\nresponse = client.enroll(request)\n\nprint(\"Response: %r\" % response)\n\n\n```\n\n#### Gift Card Activation\n\nActivates or recharges a gift card.\n\n\n```python\nimport os\n\nimport blockchyp\n\n# initialize a client.\nclient = blockchyp.Client(\n    api_key=os.environ[\"BC_API_KEY\"],\n    bearer_token=os.environ[\"BC_BEARER_TOKEN\"],\n    signing_key=os.environ[\"BC_SIGNING_KEY\"],\n)\n\n# populate request parameters.\nrequest = {\n    \"test\": True,\n    \"terminalName\": \"Test Terminal\",\n    \"amount\": \"50.00\",\n}\n\n# run the transaction.\nresponse = client.gift_activate(request)\n\nprint(\"Response: %r\" % response)\n\n\n```\n\n#### Time Out Reversal\n\nExecutes a manual time out reversal.\n\nWe love time out reversals. Don't be afraid to use them whenever a request to a\nBlockChyp terminal times out. You have up to two minutes to reverse any\ntransaction. The only caveat is that you must assign transactionRef values when\nyou build the original request. Otherwise, we have no real way of knowing which\ntransaction you're trying to reverse because we may not have assigned it an id\nyet. And if we did assign it an id, you wouldn't know what it is because your\nrequest to the terminal timed out before you got a response.\n\n\n```python\nimport os\n\nimport blockchyp\n\n# initialize a client.\nclient = blockchyp.Client(\n    api_key=os.environ[\"BC_API_KEY\"],\n    bearer_token=os.environ[\"BC_BEARER_TOKEN\"],\n    signing_key=os.environ[\"BC_SIGNING_KEY\"],\n)\n\n# populate request parameters.\nrequest = {\n    \"terminalName\": \"Test Terminal\",\n    \"transactionRef\": \"<LAST TRANSACTION REF>\",\n}\n\n# run the transaction.\nresponse = client.reverse(request)\n\nprint(\"Response: %r\" % response)\n\n\n```\n\n#### Capture Preauthorization\n\nCaptures a preauthorization.\n\n\n```python\nimport os\n\nimport blockchyp\n\n# initialize a client.\nclient = blockchyp.Client(\n    api_key=os.environ[\"BC_API_KEY\"],\n    bearer_token=os.environ[\"BC_BEARER_TOKEN\"],\n    signing_key=os.environ[\"BC_SIGNING_KEY\"],\n)\n\n# populate request parameters.\nrequest = {\n    \"test\": True,\n    \"transactionId\": \"<PREAUTH TRANSACTION ID>\",\n}\n\n# run the transaction.\nresponse = client.capture(request)\n\nprint(\"Response: %r\" % response)\n\n\n```\n\n#### Close Batch\n\nCloses the current credit card batch.\n\n\n```python\nimport os\n\nimport blockchyp\n\n# initialize a client.\nclient = blockchyp.Client(\n    api_key=os.environ[\"BC_API_KEY\"],\n    bearer_token=os.environ[\"BC_BEARER_TOKEN\"],\n    signing_key=os.environ[\"BC_SIGNING_KEY\"],\n)\n\n# populate request parameters.\nrequest = {\n    \"test\": True,\n}\n\n# run the transaction.\nresponse = client.close_batch(request)\n\nprint(\"Response: %r\" % response)\n\n\n```\n\n#### Void Transaction\n\nDiscards a previous preauth transaction.\n\n\n```python\nimport os\n\nimport blockchyp\n\n# initialize a client.\nclient = blockchyp.Client(\n    api_key=os.environ[\"BC_API_KEY\"],\n    bearer_token=os.environ[\"BC_BEARER_TOKEN\"],\n    signing_key=os.environ[\"BC_SIGNING_KEY\"],\n)\n\n# populate request parameters.\nrequest = {\n    \"test\": True,\n    \"transactionId\": \"<PREVIOUS TRANSACTION ID>\",\n}\n\n# run the transaction.\nresponse = client.void(request)\n\nprint(\"Response: %r\" % response)\n\n\n```\n\n#### Terminal Status\n\nReturns the current status of a terminal.\n\n\n```python\nimport os\n\nimport blockchyp\n\n# initialize a client.\nclient = blockchyp.Client(\n    api_key=os.environ[\"BC_API_KEY\"],\n    bearer_token=os.environ[\"BC_BEARER_TOKEN\"],\n    signing_key=os.environ[\"BC_SIGNING_KEY\"],\n)\n\n# populate request parameters.\nrequest = {\n    \"terminalName\": \"Test Terminal\",\n}\n\n# run the transaction.\nresponse = client.terminal_status(request)\n\nprint(\"Response: %r\" % response)\n\n\n```\n\n#### Capture Signature.\n\nCaptures and returns a signature.\n\n\n```python\nimport os\n\nimport blockchyp\n\n# initialize a client.\nclient = blockchyp.Client(\n    api_key=os.environ[\"BC_API_KEY\"],\n    bearer_token=os.environ[\"BC_BEARER_TOKEN\"],\n    signing_key=os.environ[\"BC_SIGNING_KEY\"],\n)\n\n# populate request parameters.\nrequest = {\n    \"terminalName\": \"Test Terminal\",\n\n    # File format for the signature image.\n    \"sigFormat\": blockchyp.SignatureFormat.PNG,\n\n    # Width of the signature image in pixels.\n    \"sigWidth\": 200,\n}\n\n# run the transaction.\nresponse = client.capture_signature(request)\n\nprint(\"Response: %r\" % response)\n\n\n```\n\n#### Update Customer\n\nUpdates or creates a customer record.\n\n\n```python\nimport os\n\nimport blockchyp\n\n# initialize a client.\nclient = blockchyp.Client(\n    api_key=os.environ[\"BC_API_KEY\"],\n    bearer_token=os.environ[\"BC_BEARER_TOKEN\"],\n    signing_key=os.environ[\"BC_SIGNING_KEY\"],\n)\n\n# populate request parameters.\nrequest = {\n    \"customer\": {\n        \"id\": \"ID of the customer to update\",\n        \"customerRef\": \"Customer reference string\",\n        \"firstName\": \"FirstName\",\n        \"lastName\": \"LastName\",\n        \"companyName\": \"Company Name\",\n        \"emailAddress\": \"support@blockchyp.com\",\n        \"smsNumber\": \"(123) 123-1231\",\n    },\n}\n\n# run the transaction.\nresponse = client.update_customer(request)\n\nprint(\"Response: %r\" % response)\n\n\n```\n\n#### Retrieve Customer\n\nRetrieves a customer by id.\n\n\n```python\nimport os\n\nimport blockchyp\n\n# initialize a client.\nclient = blockchyp.Client(\n    api_key=os.environ[\"BC_API_KEY\"],\n    bearer_token=os.environ[\"BC_BEARER_TOKEN\"],\n    signing_key=os.environ[\"BC_SIGNING_KEY\"],\n)\n\n# populate request parameters.\nrequest = {\n    \"customerId\": \"ID of the customer to retrieve\",\n}\n\n# run the transaction.\nresponse = client.customer(request)\n\nprint(\"Response: %r\" % response)\n\n\n```\n\n#### Search Customer\n\nSearches the customer database.\n\n\n```python\nimport os\n\nimport blockchyp\n\n# initialize a client.\nclient = blockchyp.Client(\n    api_key=os.environ[\"BC_API_KEY\"],\n    bearer_token=os.environ[\"BC_BEARER_TOKEN\"],\n    signing_key=os.environ[\"BC_SIGNING_KEY\"],\n)\n\n# populate request parameters.\nrequest = {\n    \"query\": \"(123) 123-1234\",\n}\n\n# run the transaction.\nresponse = client.customer_search(request)\n\nprint(\"Response: %r\" % response)\n\n\n```\n\n#### Transaction Status\n\nRetrieves the current status of a transaction.\n\n\n```python\nimport os\n\nimport blockchyp\n\n# initialize a client.\nclient = blockchyp.Client(\n    api_key=os.environ[\"BC_API_KEY\"],\n    bearer_token=os.environ[\"BC_BEARER_TOKEN\"],\n    signing_key=os.environ[\"BC_SIGNING_KEY\"],\n)\n\n# populate request parameters.\nrequest = {\n    \"transactionId\": \"ID of transaction to retrieve\",\n}\n\n# run the transaction.\nresponse = client.transaction_status(request)\n\nprint(\"Response: %r\" % response)\n\n\n```\n\n#### Send Payment Link\n\nCreates and send a payment link to a customer.\n\n\n```python\nimport os\n\nimport blockchyp\n\n# initialize a client.\nclient = blockchyp.Client(\n    api_key=os.environ[\"BC_API_KEY\"],\n    bearer_token=os.environ[\"BC_BEARER_TOKEN\"],\n    signing_key=os.environ[\"BC_SIGNING_KEY\"],\n)\n\n# populate request parameters.\nrequest = {\n    \"amount\": \"199.99\",\n    \"description\": \"Widget\",\n    \"subject\": \"Widget invoice\",\n    \"transaction\": {\n        \"subtotal\": \"195.00\",\n        \"tax\": \"4.99\",\n        \"total\": \"199.99\",\n        \"items\": [\n            {\n                \"description\": \"Widget\",\n                \"price\": \"195.00\",\n                \"quantity\": 1,\n            },\n        ],\n    },\n    \"autoSend\": True,\n    \"customer\": {\n        \"customerRef\": \"Customer reference string\",\n        \"firstName\": \"FirstName\",\n        \"lastName\": \"LastName\",\n        \"companyName\": \"Company Name\",\n        \"emailAddress\": \"support@blockchyp.com\",\n        \"smsNumber\": \"(123) 123-1231\",\n    },\n}\n\n# run the transaction.\nresponse = client.send_payment_link(request)\n\nprint(\"Response: %r\" % response)\n\n\n```\n\n## Running Integration Tests\n\nIf you'd like to run the integration tests, create a new file on your system\ncalled `sdk-itest-config.json` with the API credentials you'll be using as\nshown in the example below.\n\n```\n{\n \"gatewayHost\": \"https://api.blockchyp.com\",\n \"testGatewayHost\": \"https://test.blockchyp.com\",\n \"apiKey\": \"PZZNEFK7HFULCB3HTLA7HRQDJU\",\n \"bearerToken\": \"QUJCHIKNXOMSPGQ4QLT2UJX5DI\",\n \"signingKey\": \"f88a72d8bc0965f193abc7006bbffa240663c10e4d1dc3ba2f81e0ca10d359f5\"\n}\n```\n\nThis file can be located in a few different places, but is usually located\nat `<USER_HOME>/.config/blockchyp/sdk-itest-config.json`. All BlockChyp SDKs\nuse the same configuration file.\n\nTo run the integration test suite via `make`, type the following command:\n\n`make integration`\n\n[BlockChyp]: https://www.blockchyp.com\n\n## Contributions\n\nBlockChyp welcomes contributions from the open source community, but bear in mind\nthat this repository has been generated by our internal SDK Generator tool. If\nwe choose to accept a PR or contribution, your code will be moved into our SDK\nGenerator project, which is a private repository.\n\n## License\n\nCopyright BlockChyp, Inc., 2019\n\nDistributed under the terms of the [MIT] license, blockchyp-python is free and open source software.\n\n[MIT]: https://github.com/blockchyp/blockchyp-python/blob/master/LICENSE\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/blockchyp/blockchyp-python", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "blockchyp", "package_url": "https://pypi.org/project/blockchyp/", "platform": "", "project_url": "https://pypi.org/project/blockchyp/", "project_urls": {"Homepage": "https://github.com/blockchyp/blockchyp-python"}, "release_url": "https://pypi.org/project/blockchyp/2.2.4.post1/", "requires_dist": ["cryptography", "requests"], "requires_python": ">=3.5", "summary": "The official library for accessing the BlockChyp Terminal and Gateway APIs", "version": "2.2.4.post1"}, "last_serial": 6982210, "releases": {"0.1.0a1.post1": [{"comment_text": "", "digests": {"md5": "2356b36e96e16b66362f1867f08b9e7a", "sha256": "31e4071a940016166fbd88a28e681a8359533c62be628040999b6f9daf030a8e"}, "downloads": -1, "filename": "blockchyp-0.1.0a1.post1.tar.gz", "has_sig": false, "md5_digest": "2356b36e96e16b66362f1867f08b9e7a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 33423, "upload_time": "2020-01-06T18:27:04", "upload_time_iso_8601": "2020-01-06T18:27:04.639533Z", "url": "https://files.pythonhosted.org/packages/9b/15/ca27141d7c0a64021f681319d47d4646414b58354ae03f2ca7b92607fd5b/blockchyp-0.1.0a1.post1.tar.gz"}], "2.0.0a2.post1": [{"comment_text": "", "digests": {"md5": "86cc8f178d4dbc5c3427ac34f0d4bc65", "sha256": "eb03ff88f895f34e6edca8c8cad9a6536249140745500a147bdbad5459811a4d"}, "downloads": -1, "filename": "blockchyp-2.0.0a2.post1.tar.gz", "has_sig": false, "md5_digest": "86cc8f178d4dbc5c3427ac34f0d4bc65", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 9674, "upload_time": "2020-01-06T23:09:47", "upload_time_iso_8601": "2020-01-06T23:09:47.081081Z", "url": "https://files.pythonhosted.org/packages/be/1d/06ec9b9a8f55f04032046a795f7c8be0f2bac1b22b29e55b9f9a9744c858/blockchyp-2.0.0a2.post1.tar.gz"}], "2.0.0a3.post1": [{"comment_text": "", "digests": {"md5": "6782a6bfad57e7e16c9d969613b2baf7", "sha256": "e4e78e56af8a66dadbb487acf7dd4e15491e04de748373772d40f9e66f302332"}, "downloads": -1, "filename": "blockchyp-2.0.0a3.post1.tar.gz", "has_sig": false, "md5_digest": "6782a6bfad57e7e16c9d969613b2baf7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 9671, "upload_time": "2020-01-06T23:20:59", "upload_time_iso_8601": "2020-01-06T23:20:59.076146Z", "url": "https://files.pythonhosted.org/packages/06/e9/8ba2f66c624828cad29e45bff141a002034fc3fa2e940f85d8182d288455/blockchyp-2.0.0a3.post1.tar.gz"}], "2.0.0a4.post1": [{"comment_text": "", "digests": {"md5": "55734b1f830bae676fca50f4bca191b2", "sha256": "7c927bbc7b32d338af59d0024896835788df6847927abf8507a4542994b1ece5"}, "downloads": -1, "filename": "blockchyp-2.0.0a4.post1.tar.gz", "has_sig": false, "md5_digest": "55734b1f830bae676fca50f4bca191b2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 9670, "upload_time": "2020-01-06T23:27:28", "upload_time_iso_8601": "2020-01-06T23:27:28.302011Z", "url": "https://files.pythonhosted.org/packages/a4/23/9cd49fa79dfb4bf64385184521727dcd1ca4182b99bd45340c7092a5b597/blockchyp-2.0.0a4.post1.tar.gz"}], "2.0.0a5.post1": [{"comment_text": "", "digests": {"md5": "b49a43bac96ae330a2858c98fad98f58", "sha256": "ab13140cdc0d6c0fb7e85e3f9886215cf431c23da17fa4cc9a98cd6bad110ed9"}, "downloads": -1, "filename": "blockchyp-2.0.0a5.post1.tar.gz", "has_sig": false, "md5_digest": "b49a43bac96ae330a2858c98fad98f58", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 9677, "upload_time": "2020-01-07T17:46:56", "upload_time_iso_8601": "2020-01-07T17:46:56.254122Z", "url": "https://files.pythonhosted.org/packages/f7/f1/4e476fecee517464f9e1b7879ea4581d10d6935086aa29bbbd2a4fecb126/blockchyp-2.0.0a5.post1.tar.gz"}], "2.0.0a6.post1": [{"comment_text": "", "digests": {"md5": "798e801bfdb621faf353114738d5de9c", "sha256": "a555edd4de7a1eb29fdc1f6838041b39ffde0e5efc024317a5e78b09fab1f00d"}, "downloads": -1, "filename": "blockchyp-2.0.0a6.post1.tar.gz", "has_sig": false, "md5_digest": "798e801bfdb621faf353114738d5de9c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 9670, "upload_time": "2020-01-07T21:55:05", "upload_time_iso_8601": "2020-01-07T21:55:05.155386Z", "url": "https://files.pythonhosted.org/packages/90/d7/58722ea232ceb1951081e2e5898e0a47d7d344359c71c082d27760faca13/blockchyp-2.0.0a6.post1.tar.gz"}], "2.0.0a7.post1": [{"comment_text": "", "digests": {"md5": "3062a1b553c37d7db0c977c2548cd549", "sha256": "5db1b8a6ff5b5b12d761a111601020295dffd2ac7594f8a1043bad6927edef2f"}, "downloads": -1, "filename": "blockchyp-2.0.0a7.post1-py3-none-any.whl", "has_sig": false, "md5_digest": "3062a1b553c37d7db0c977c2548cd549", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 16671, "upload_time": "2020-01-08T00:12:06", "upload_time_iso_8601": "2020-01-08T00:12:06.161996Z", "url": "https://files.pythonhosted.org/packages/65/62/404e46813ee28062715c73eea239fbf0af2a65759104fb882eb2374d2b7c/blockchyp-2.0.0a7.post1-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "ed576a12e8ecc8932763b5821e1e03e4", "sha256": "5aff8dbda039fb8568044cd0c5ae851dbbeddf3b7f305833cc572e0cafa6a301"}, "downloads": -1, "filename": "blockchyp-2.0.0a7.post1.tar.gz", "has_sig": false, "md5_digest": "ed576a12e8ecc8932763b5821e1e03e4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 17926, "upload_time": "2020-01-08T00:12:07", "upload_time_iso_8601": "2020-01-08T00:12:07.795526Z", "url": "https://files.pythonhosted.org/packages/f7/3a/cb6e8bc12bcf8027005fbbce16609f93b591329b67886bd3cc38bc2c64b3/blockchyp-2.0.0a7.post1.tar.gz"}], "2.0.0rc1.post1": [{"comment_text": "", "digests": {"md5": "08ec3f0325bf45dda2ac1f5e5e15322c", "sha256": "8e131755ec36a3ae0437fb2a8989a032a4853375c16f129355e6ac7b7618e7e4"}, "downloads": -1, "filename": "blockchyp-2.0.0rc1.post1-py3-none-any.whl", "has_sig": false, "md5_digest": "08ec3f0325bf45dda2ac1f5e5e15322c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 16929, "upload_time": "2020-01-13T20:25:00", "upload_time_iso_8601": "2020-01-13T20:25:00.035096Z", "url": "https://files.pythonhosted.org/packages/34/dc/af82bee31ddbf3ae191c03831fd491135f4940024bb8214ad2bd0363827a/blockchyp-2.0.0rc1.post1-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "903c706d8643393541ec15276b0aa71e", "sha256": "81c969c0db7dccde0b07b16dce65b8bd9c374a6aeae8b255c2901ca499402251"}, "downloads": -1, "filename": "blockchyp-2.0.0rc1.post1.tar.gz", "has_sig": false, "md5_digest": "903c706d8643393541ec15276b0aa71e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 18170, "upload_time": "2020-01-13T20:25:02", "upload_time_iso_8601": "2020-01-13T20:25:02.085094Z", "url": "https://files.pythonhosted.org/packages/55/d8/15695d800f3b0e686d68602422a6b28ac0fb61140a8c84140d778c421c9e/blockchyp-2.0.0rc1.post1.tar.gz"}], "2.0.0rc2.post1": [{"comment_text": "", "digests": {"md5": "6edbba2e2e2a0427cd5c4790d34d43b5", "sha256": "4714b5293e10f272c5054538884eb045d54b4ee16d3fa3d7554c8ba2a624f91b"}, "downloads": -1, "filename": "blockchyp-2.0.0rc2.post1-py3-none-any.whl", "has_sig": false, "md5_digest": "6edbba2e2e2a0427cd5c4790d34d43b5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 16930, "upload_time": "2020-01-13T20:39:32", "upload_time_iso_8601": "2020-01-13T20:39:32.430727Z", "url": "https://files.pythonhosted.org/packages/b9/61/4e2a8567ba2d2f299c1e7852a8dc70c05525f7c68427b8a08e3b08b7d4bd/blockchyp-2.0.0rc2.post1-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "5a6265f615fbdbd6b5cdf4e1ada768c9", "sha256": "d0596ba6158be4fda6edbcc508c8329776f5d703e6fdf0fe77c8efafcc120b8b"}, "downloads": -1, "filename": "blockchyp-2.0.0rc2.post1.tar.gz", "has_sig": false, "md5_digest": "5a6265f615fbdbd6b5cdf4e1ada768c9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 18170, "upload_time": "2020-01-13T20:39:34", "upload_time_iso_8601": "2020-01-13T20:39:34.222427Z", "url": "https://files.pythonhosted.org/packages/e0/a6/b529b00e9af876989fcbaa42703ce333e0f9f29c2234240984698f3d4bb7/blockchyp-2.0.0rc2.post1.tar.gz"}], "2.0.1.post1": [{"comment_text": "", "digests": {"md5": "dbe998a185fe4ca85510a1d39acba2f7", "sha256": "f213e34209c6a4f6657c8db8c3e6a4578f2eda335054e7c1f9526f592332ee23"}, "downloads": -1, "filename": "blockchyp-2.0.1.post1-py3-none-any.whl", "has_sig": false, "md5_digest": "dbe998a185fe4ca85510a1d39acba2f7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 16959, "upload_time": "2020-02-07T23:28:42", "upload_time_iso_8601": "2020-02-07T23:28:42.670780Z", "url": "https://files.pythonhosted.org/packages/a9/4c/5229ad2cb90658d351f6b26f62d827b955fd5d79e84ecff707403b1f73da/blockchyp-2.0.1.post1-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "28b2ead400f471241d3ad8176d29e319", "sha256": "3bd3f311d9ff71739a92862915d62e6c8d11488bdccda8c79af0e3ac0c010b86"}, "downloads": -1, "filename": "blockchyp-2.0.1.post1.tar.gz", "has_sig": false, "md5_digest": "28b2ead400f471241d3ad8176d29e319", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 18347, "upload_time": "2020-02-07T23:28:43", "upload_time_iso_8601": "2020-02-07T23:28:43.872339Z", "url": "https://files.pythonhosted.org/packages/f9/10/85f4f657027924c0813b7a0e6cafb27c6815f8c74e41d887f47fc9a2fa64/blockchyp-2.0.1.post1.tar.gz"}], "2.0.1rc1.post1": [{"comment_text": "", "digests": {"md5": "45c1b3605ad274c12158b083141546aa", "sha256": "5bb20661e2f48369ca772e99f6ba6e7b2584195bb55f6f6f77d83ceaf5665741"}, "downloads": -1, "filename": "blockchyp-2.0.1rc1.post1-py3-none-any.whl", "has_sig": false, "md5_digest": "45c1b3605ad274c12158b083141546aa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 16999, "upload_time": "2020-01-17T00:53:04", "upload_time_iso_8601": "2020-01-17T00:53:04.614820Z", "url": "https://files.pythonhosted.org/packages/61/b9/c31a03c22abdd84548c95114c72a11ed294327440f5a91caec2a604cb668/blockchyp-2.0.1rc1.post1-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "3bed68171f2d3a2abc3f19eaff869095", "sha256": "93a1f0941a5bab8dfb810df98ed29be360810f4ba53fd37c42f46dc1bf4309a8"}, "downloads": -1, "filename": "blockchyp-2.0.1rc1.post1.tar.gz", "has_sig": false, "md5_digest": "3bed68171f2d3a2abc3f19eaff869095", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 18332, "upload_time": "2020-01-17T00:53:07", "upload_time_iso_8601": "2020-01-17T00:53:07.479696Z", "url": "https://files.pythonhosted.org/packages/7c/e2/822e2b0404843c29bfb3abdf4b1bbbf47193aedd39fb6a6bc66dbd3c8e42/blockchyp-2.0.1rc1.post1.tar.gz"}], "2.0.1rc2.post1": [{"comment_text": "", "digests": {"md5": "65a3b5e4faa1f0052b97b353bb6747af", "sha256": "094936570c567550fe89f9aeec1bd50d9555eca7c9748cda9a9452c652ba061f"}, "downloads": -1, "filename": "blockchyp-2.0.1rc2.post1-py3-none-any.whl", "has_sig": false, "md5_digest": "65a3b5e4faa1f0052b97b353bb6747af", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 17000, "upload_time": "2020-02-06T16:41:31", "upload_time_iso_8601": "2020-02-06T16:41:31.330549Z", "url": "https://files.pythonhosted.org/packages/f9/9f/05dd8c713df3963fc4d904fddba2ea205a4b1e3319873c89fc208f703e9a/blockchyp-2.0.1rc2.post1-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "f53cbf69ad9c4dc5acb55efb17ebcaca", "sha256": "cfcc7451b06c54040c1238d5d178df77ad86fc0f8396044ec241a323c5612169"}, "downloads": -1, "filename": "blockchyp-2.0.1rc2.post1.tar.gz", "has_sig": false, "md5_digest": "f53cbf69ad9c4dc5acb55efb17ebcaca", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 18330, "upload_time": "2020-02-06T16:41:32", "upload_time_iso_8601": "2020-02-06T16:41:32.817080Z", "url": "https://files.pythonhosted.org/packages/82/30/8db2324bbadd70b3babc4f7ec61fc06f63a2e5222222ee756ecdb8e9d4c0/blockchyp-2.0.1rc2.post1.tar.gz"}], "2.0.1rc3.post1": [{"comment_text": "", "digests": {"md5": "3dcb55b64910dd35c05cf8f4372f8169", "sha256": "3e3c92ecf1444af3cf590c53215db1c95789bca9e2caaaa49c94f81cab8b1937"}, "downloads": -1, "filename": "blockchyp-2.0.1rc3.post1-py3-none-any.whl", "has_sig": false, "md5_digest": "3dcb55b64910dd35c05cf8f4372f8169", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 17000, "upload_time": "2020-02-06T17:14:07", "upload_time_iso_8601": "2020-02-06T17:14:07.994258Z", "url": "https://files.pythonhosted.org/packages/f2/b5/f8a29881ec572de397afb91480bb048dcffacc7621da3d6d57b396d38d06/blockchyp-2.0.1rc3.post1-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "5fbf12e44883cfab706529bce288b886", "sha256": "d15dfadfffd6131002bdaa43a6e2c6ae304c2252a8d51057c278a00fa4cb444e"}, "downloads": -1, "filename": "blockchyp-2.0.1rc3.post1.tar.gz", "has_sig": false, "md5_digest": "5fbf12e44883cfab706529bce288b886", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 18330, "upload_time": "2020-02-06T17:14:09", "upload_time_iso_8601": "2020-02-06T17:14:09.887104Z", "url": "https://files.pythonhosted.org/packages/53/5d/211b8cfc695eb55f386acbb1109042acf594e34e1656aa1ec83d95a67f29/blockchyp-2.0.1rc3.post1.tar.gz"}], "2.0.1rc4.post1": [{"comment_text": "", "digests": {"md5": "1c28b9ae1e55d4f65c5c76084051a14a", "sha256": "eec0ba51edaeb79d4b3b658266ef2e321b9d56faf4a639e3f89d865fe1c84968"}, "downloads": -1, "filename": "blockchyp-2.0.1rc4.post1-py3-none-any.whl", "has_sig": false, "md5_digest": "1c28b9ae1e55d4f65c5c76084051a14a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 16998, "upload_time": "2020-02-06T18:04:20", "upload_time_iso_8601": "2020-02-06T18:04:20.307397Z", "url": "https://files.pythonhosted.org/packages/9e/a3/2a7bde9d03ed9e94f28bfe1a43b06733fd44d67817bf1dddbfc00fe7ae29/blockchyp-2.0.1rc4.post1-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "8a9e6d1b3b2dd896d962d495a5368f68", "sha256": "b23596361624f6629f4b5bd8a01ece5d361b0f62cb702f883ea64684cdb43e98"}, "downloads": -1, "filename": "blockchyp-2.0.1rc4.post1.tar.gz", "has_sig": false, "md5_digest": "8a9e6d1b3b2dd896d962d495a5368f68", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 18332, "upload_time": "2020-02-06T18:04:22", "upload_time_iso_8601": "2020-02-06T18:04:22.084758Z", "url": "https://files.pythonhosted.org/packages/2f/27/b53a2705bb758d689cffaae193a2991e6e93fb9e87f433aaea10461160a0/blockchyp-2.0.1rc4.post1.tar.gz"}], "2.0.1rc5.post1": [{"comment_text": "", "digests": {"md5": "29f13c1e6831c44fd77d61faf162b254", "sha256": "855b5cefe1c946bf65ca10fcd840a5c70bc5ef0be31fe63261d0b732b51db7db"}, "downloads": -1, "filename": "blockchyp-2.0.1rc5.post1-py3-none-any.whl", "has_sig": false, "md5_digest": "29f13c1e6831c44fd77d61faf162b254", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 17004, "upload_time": "2020-02-07T22:24:06", "upload_time_iso_8601": "2020-02-07T22:24:06.043866Z", "url": "https://files.pythonhosted.org/packages/c7/fb/90dc1cdd9ce2f671446a5e8f4206a928d25713e6c7a57f30a2427b6c1c9a/blockchyp-2.0.1rc5.post1-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "926cbc59d087ee5b4f1cf49e42745227", "sha256": "3019f294cc8e11f998d20488f388e6578128ce7f6db84ab0bd41b541e839bc6c"}, "downloads": -1, "filename": "blockchyp-2.0.1rc5.post1.tar.gz", "has_sig": false, "md5_digest": "926cbc59d087ee5b4f1cf49e42745227", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 18351, "upload_time": "2020-02-07T22:24:07", "upload_time_iso_8601": "2020-02-07T22:24:07.873114Z", "url": "https://files.pythonhosted.org/packages/6b/cc/7375fc63ccc0a3b577c5ff3cd1aa31b5ff2ab57579f85f5375f4d958e42b/blockchyp-2.0.1rc5.post1.tar.gz"}], "2.0.1rc6.post1": [{"comment_text": "", "digests": {"md5": "09898b75cd01f00d3a6c102a18cab712", "sha256": "4343a39db936f4eb8ebe4d1e0dae5d1e821594983e3da50566613d04f07c5811"}, "downloads": -1, "filename": "blockchyp-2.0.1rc6.post1-py3-none-any.whl", "has_sig": false, "md5_digest": "09898b75cd01f00d3a6c102a18cab712", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 17003, "upload_time": "2020-02-07T22:42:29", "upload_time_iso_8601": "2020-02-07T22:42:29.973794Z", "url": "https://files.pythonhosted.org/packages/ca/d8/5de3e148bf78b7240bd60bba0513e04b08f7e8669f6f89931652cb2e9b65/blockchyp-2.0.1rc6.post1-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "4359ee65259270bf02d1763a85e7ee80", "sha256": "5cf816c923a0c0dafbe94d52cfee63c2d5bf351bd4b4822c55ba26c3cdfba836"}, "downloads": -1, "filename": "blockchyp-2.0.1rc6.post1.tar.gz", "has_sig": false, "md5_digest": "4359ee65259270bf02d1763a85e7ee80", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 18352, "upload_time": "2020-02-07T22:42:31", "upload_time_iso_8601": "2020-02-07T22:42:31.541441Z", "url": "https://files.pythonhosted.org/packages/04/9f/4cccb96e2e78cc04677968cc49935120b4802827a8b040755e092e1d378e/blockchyp-2.0.1rc6.post1.tar.gz"}], "2.0.1rc8.post1": [{"comment_text": "", "digests": {"md5": "19f51cb49cc88d7b2dc8154b92a7c475", "sha256": "0d77c64f5b3cea49cea9ae1215871390886ea441cd7a533068e50a52000c382d"}, "downloads": -1, "filename": "blockchyp-2.0.1rc8.post1-py3-none-any.whl", "has_sig": false, "md5_digest": "19f51cb49cc88d7b2dc8154b92a7c475", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 17002, "upload_time": "2020-02-07T23:05:25", "upload_time_iso_8601": "2020-02-07T23:05:25.163365Z", "url": "https://files.pythonhosted.org/packages/46/4a/5ee51a5108435fe39da750e1e5df9cd7787a9b77961db6ae9c6b228387a9/blockchyp-2.0.1rc8.post1-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "9d61f3b15b0f53923366762db528c24d", "sha256": "52ae51183b328f733569a9aece407205dbc0f9d3f9e3a86eec23ce34b084f684"}, "downloads": -1, "filename": "blockchyp-2.0.1rc8.post1.tar.gz", "has_sig": false, "md5_digest": "9d61f3b15b0f53923366762db528c24d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 18351, "upload_time": "2020-02-07T23:05:26", "upload_time_iso_8601": "2020-02-07T23:05:26.938505Z", "url": "https://files.pythonhosted.org/packages/94/fa/ef74cc30f4176c1ddaa098e28cc801688e513b7a737f36a7704c7bc14d82/blockchyp-2.0.1rc8.post1.tar.gz"}], "2.1.0.post1": [{"comment_text": "", "digests": {"md5": "7e36092e4dd6f0f204535d92cbfd2e3c", "sha256": "96bd4f5e52a6366742fe91424f51695f1b6ca27e7608c7827f71b64ebf4b461e"}, "downloads": -1, "filename": "blockchyp-2.1.0.post1-py3-none-any.whl", "has_sig": false, "md5_digest": "7e36092e4dd6f0f204535d92cbfd2e3c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 17178, "upload_time": "2020-02-28T18:39:38", "upload_time_iso_8601": "2020-02-28T18:39:38.760638Z", "url": "https://files.pythonhosted.org/packages/79/0f/2dfa64e315577787c5e9d4022b268f43591b3b2fa57204247b1de4927f65/blockchyp-2.1.0.post1-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "509361682ab324a7fa8434fe08c0d2c8", "sha256": "ece33f2d0c483f24fc9220e2c686949087da75567f7511e1dd8e8e15b315ec3e"}, "downloads": -1, "filename": "blockchyp-2.1.0.post1.tar.gz", "has_sig": false, "md5_digest": "509361682ab324a7fa8434fe08c0d2c8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 18602, "upload_time": "2020-02-28T18:39:40", "upload_time_iso_8601": "2020-02-28T18:39:40.078828Z", "url": "https://files.pythonhosted.org/packages/e3/9d/ac1448b1aa03de133802f47c9e6dff485c57bdfcf70c3b5bc555123b2945/blockchyp-2.1.0.post1.tar.gz"}], "2.1.1.post1": [{"comment_text": "", "digests": {"md5": "cdec3883da4bcc010556748613640c0e", "sha256": "d7338400a3f9be88368c5d9bced83f58c7438274a233d0ed3e57b1a671dc841f"}, "downloads": -1, "filename": "blockchyp-2.1.1.post1-py3-none-any.whl", "has_sig": false, "md5_digest": "cdec3883da4bcc010556748613640c0e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 17178, "upload_time": "2020-03-03T18:09:38", "upload_time_iso_8601": "2020-03-03T18:09:38.966260Z", "url": "https://files.pythonhosted.org/packages/bf/12/5cbc2ba2d2acc86ba09d543795a2162bd1f772d2bb4170e6fd09bd84ef51/blockchyp-2.1.1.post1-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "b8790741995eb0f389d3f64807a8a77c", "sha256": "e5a73aaf02bd2ef3af190177965d62b43206859dfb4b2a6ac0609e6d0153bcd4"}, "downloads": -1, "filename": "blockchyp-2.1.1.post1.tar.gz", "has_sig": false, "md5_digest": "b8790741995eb0f389d3f64807a8a77c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 18600, "upload_time": "2020-03-03T18:09:40", "upload_time_iso_8601": "2020-03-03T18:09:40.553314Z", "url": "https://files.pythonhosted.org/packages/7f/e6/eedb3adb94c260bfd12b9533e339f6675dd8a6e74c938306374dc777cac1/blockchyp-2.1.1.post1.tar.gz"}], "2.2.0.post1": [{"comment_text": "", "digests": {"md5": "d93e49f932a0282cc48955cdf4335d39", "sha256": "5f3ac13f98836abdacf9b15e989cc0d3886b25722092936baae30da3b234f67e"}, "downloads": -1, "filename": "blockchyp-2.2.0.post1-py3-none-any.whl", "has_sig": false, "md5_digest": "d93e49f932a0282cc48955cdf4335d39", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 17728, "upload_time": "2020-03-25T16:37:43", "upload_time_iso_8601": "2020-03-25T16:37:43.899734Z", "url": "https://files.pythonhosted.org/packages/10/c8/58cc2a8fe7e32f26f76e37c58e4c5fa86d1bd838e23679fbcc92a6bde7a9/blockchyp-2.2.0.post1-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "6eed4c88ec56bbbc2e2bf37db6584db4", "sha256": "c68e34e26cb6b6e5f83b4aefe5591e68aa8b31d04431faf95a0a330139460d91"}, "downloads": -1, "filename": "blockchyp-2.2.0.post1.tar.gz", "has_sig": false, "md5_digest": "6eed4c88ec56bbbc2e2bf37db6584db4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 19724, "upload_time": "2020-03-25T16:37:47", "upload_time_iso_8601": "2020-03-25T16:37:47.092385Z", "url": "https://files.pythonhosted.org/packages/24/52/f27770a616405f4bb7a5e3a0f81e94f8c3f999ae34eb8c9f32f59ccf441c/blockchyp-2.2.0.post1.tar.gz"}], "2.2.1.post1": [{"comment_text": "", "digests": {"md5": "21e965681eee581fd82e12879d3a9a79", "sha256": "9058175c57a686d94b2bc981559a1c8d92fb320566ba5ade75ddd03e77396a55"}, "downloads": -1, "filename": "blockchyp-2.2.1.post1-py3-none-any.whl", "has_sig": false, "md5_digest": "21e965681eee581fd82e12879d3a9a79", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 17726, "upload_time": "2020-03-27T18:21:03", "upload_time_iso_8601": "2020-03-27T18:21:03.934780Z", "url": "https://files.pythonhosted.org/packages/2c/9c/c15528ad211f91b2f29bf60a861e4fa515510c362417b2038800214e1252/blockchyp-2.2.1.post1-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "1166040b4a260461e4456fa48fb17dcc", "sha256": "beeffced5573b9ce570c62c1a69192e8bb9d8fade016d1e5fed5aec3efeb3df0"}, "downloads": -1, "filename": "blockchyp-2.2.1.post1.tar.gz", "has_sig": false, "md5_digest": "1166040b4a260461e4456fa48fb17dcc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 19720, "upload_time": "2020-03-27T18:21:05", "upload_time_iso_8601": "2020-03-27T18:21:05.657116Z", "url": "https://files.pythonhosted.org/packages/7a/b0/548ba5a64f29d8699093d7b0daf3862a73bd3daafb56353bbdca48504c82/blockchyp-2.2.1.post1.tar.gz"}], "2.2.2.post1": [{"comment_text": "", "digests": {"md5": "5816e3d2a6f7ce9a30eb4a71b64a6975", "sha256": "43235154250ffbc68a2a3d84d0ccbc09e5762c3377d9da5d3b7ed4977f20a215"}, "downloads": -1, "filename": "blockchyp-2.2.2.post1-py3-none-any.whl", "has_sig": false, "md5_digest": "5816e3d2a6f7ce9a30eb4a71b64a6975", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 17726, "upload_time": "2020-03-30T17:28:32", "upload_time_iso_8601": "2020-03-30T17:28:32.912133Z", "url": "https://files.pythonhosted.org/packages/02/68/d8659a6f33b94665d7a640f1cfb53f1514dd58d3f4721bd9480b439a9f9c/blockchyp-2.2.2.post1-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "8d6e9b3d1e4f2ba79e10fb05aecb6559", "sha256": "58bc34a925504487d40a7d60a73b35b511d5a93d49268866991f0cd59645db2a"}, "downloads": -1, "filename": "blockchyp-2.2.2.post1.tar.gz", "has_sig": false, "md5_digest": "8d6e9b3d1e4f2ba79e10fb05aecb6559", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 19722, "upload_time": "2020-03-30T17:28:34", "upload_time_iso_8601": "2020-03-30T17:28:34.478322Z", "url": "https://files.pythonhosted.org/packages/52/0a/e8f873501b63e2391d7c3cfef2a368fa9a7785a81862de96397ee47a73ce/blockchyp-2.2.2.post1.tar.gz"}], "2.2.3.post1": [{"comment_text": "", "digests": {"md5": "4d5e744f08edddcdebc68332a7401768", "sha256": "46954576d61a60bb68566dde0f58b84f92a12e866f0106375203b741d758299f"}, "downloads": -1, "filename": "blockchyp-2.2.3.post1-py3-none-any.whl", "has_sig": false, "md5_digest": "4d5e744f08edddcdebc68332a7401768", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 17727, "upload_time": "2020-04-01T19:05:53", "upload_time_iso_8601": "2020-04-01T19:05:53.229596Z", "url": "https://files.pythonhosted.org/packages/8c/1c/ea0b842c9ad40b3d3916f5518635fefbc0200b163de999baa0b8b6dd0562/blockchyp-2.2.3.post1-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "eb78ba6d99bb6607a6bcae85dc49a600", "sha256": "96c4bbd262dfd149953ab34c3fc1a43db257178618afb17dbdea2aca31a6c01e"}, "downloads": -1, "filename": "blockchyp-2.2.3.post1.tar.gz", "has_sig": false, "md5_digest": "eb78ba6d99bb6607a6bcae85dc49a600", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 19718, "upload_time": "2020-04-01T19:05:54", "upload_time_iso_8601": "2020-04-01T19:05:54.509101Z", "url": "https://files.pythonhosted.org/packages/84/3f/dda8e9fc192e7be58b937b17476fe4cda16a7acd2c7e216b5ac3d5fdfda3/blockchyp-2.2.3.post1.tar.gz"}], "2.2.4.post1": [{"comment_text": "", "digests": {"md5": "9edd9f69749b801a1666f5a0491804fb", "sha256": "a31610e85b11371487e5e054dc5217b108016bc58f158e4cb49b5ecb2f479142"}, "downloads": -1, "filename": "blockchyp-2.2.4.post1-py3-none-any.whl", "has_sig": false, "md5_digest": "9edd9f69749b801a1666f5a0491804fb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 17727, "upload_time": "2020-04-08T23:04:37", "upload_time_iso_8601": "2020-04-08T23:04:37.719851Z", "url": "https://files.pythonhosted.org/packages/d1/4f/a2e83399e014a2e5cb5437ad051b7ab2b77309f1496ea772c2a457263c7d/blockchyp-2.2.4.post1-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "ef25b122c816628e8a25877318c5adf1", "sha256": "0882658abe5919911825a58a85ac7b35d4e778b4dd874069f77d06b59b08ba03"}, "downloads": -1, "filename": "blockchyp-2.2.4.post1.tar.gz", "has_sig": false, "md5_digest": "ef25b122c816628e8a25877318c5adf1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 19723, "upload_time": "2020-04-08T23:04:39", "upload_time_iso_8601": "2020-04-08T23:04:39.278752Z", "url": "https://files.pythonhosted.org/packages/65/c2/2a82a3ddb6b5585c9e1e052d486abc12c2fbd12bfc292a0a91d83785be03/blockchyp-2.2.4.post1.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "9edd9f69749b801a1666f5a0491804fb", "sha256": "a31610e85b11371487e5e054dc5217b108016bc58f158e4cb49b5ecb2f479142"}, "downloads": -1, "filename": "blockchyp-2.2.4.post1-py3-none-any.whl", "has_sig": false, "md5_digest": "9edd9f69749b801a1666f5a0491804fb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 17727, "upload_time": "2020-04-08T23:04:37", "upload_time_iso_8601": "2020-04-08T23:04:37.719851Z", "url": "https://files.pythonhosted.org/packages/d1/4f/a2e83399e014a2e5cb5437ad051b7ab2b77309f1496ea772c2a457263c7d/blockchyp-2.2.4.post1-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "ef25b122c816628e8a25877318c5adf1", "sha256": "0882658abe5919911825a58a85ac7b35d4e778b4dd874069f77d06b59b08ba03"}, "downloads": -1, "filename": "blockchyp-2.2.4.post1.tar.gz", "has_sig": false, "md5_digest": "ef25b122c816628e8a25877318c5adf1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 19723, "upload_time": "2020-04-08T23:04:39", "upload_time_iso_8601": "2020-04-08T23:04:39.278752Z", "url": "https://files.pythonhosted.org/packages/65/c2/2a82a3ddb6b5585c9e1e052d486abc12c2fbd12bfc292a0a91d83785be03/blockchyp-2.2.4.post1.tar.gz"}]}