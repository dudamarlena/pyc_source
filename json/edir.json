{"info": {"author": "Mark Blakeney", "author_email": "mark@irsaere.net", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 3"], "description": "## EDIR - Rename and Delete Files and Directories Using Your Editor\n\n[edir](http://github.com/bulletmark/edir) is a command line utility to\nrename and remove filenames and directories using your text editor.\nRun it in the current directory and `edir` will open your editor on a\nlist of files and directories in that directory. Each item in the\ndirectory will appear on its own numbered line. These numbers are how\n`edir` keeps track of what items are changed. Delete lines to remove\nfiles/directories, or edit lines to rename files/directories. You can\nalso switch pairs of numbers to swap files or directories.\n\n## Comparison to Vidir\n\n[edir](http://github.com/bulletmark/edir) unashamedly mimics the\nfunctionality of the [vidir](https://linux.die.net/man/1/vidir) utility\nfrom [moreutils](https://joeyh.name/code/moreutils/) but aims to improve it in\nthe following ways:\n\n1. `vidir` presents file and directories equivalently but `edir` adds a\n   trailing slash `/` to visually discriminate directories. E.g. if `afile` and\n   `bfile` are files, `adir` and `bdir` are directories, then `vidir`\n   presents these in your editor as follows.\n\n   ```\n   1\t./a\n   2\t./b\n   3\t./c\n   4\t./d\n   ```\n \n   But `edir` presents these as:\n \n   ```\n   1\t./a\n   2\t./b\n   3\t./c/\n   4\t./d/\n   ```\n\n   Note the trailing slash is only for presentation in your editor. You\n   are not required to ensure it is present after editing. E.g. editing\n   line 3 above to `./e` (or even just to `e`) would still rename the\n   directory `c` to `e`.\n\n   Note also, that both `edir` and `vidir` show the leading `./` on each\n   entry so that any leading spaces are clearly seen, and can be edited.\n\n2. `edir` allows you to remove a file/directory by deleting the line, as\n   `vidir` does, but you can also remove it by pre-pending a `#` to\n   \"comment it out\" or by substituting an entirely blank line.\n\n3. By default, `edir` prints remove and rename messages whereas `vidir`\n   prints those only when the `-v/--verbose` switch is added. You can add\n   `-q/--quiet` to `edir` to suppress these messages.\n\n4. When `vidir` is run with the `-v/--verbose` switch then it reports\n   the renaming of original to intermediate temporary to final files if\n   files are swapped etc. That is rather an implementation detail so\n   `edir` only reports the original to final renames which is all the\n   user really cares about.\n\n5. To remove a large recursive tree you must pipe the directory tree to\n   `vidir` and then explicitly remove all children files and directories\n   before deleting a parent directory. You can do this also in `edir` of\n   course (and arguably it is probably the safest approach) but there\n   are times when you really want to let `edir` remove recursively so\n   `edir` adds a `-r/--recurse` switch to allow this. BE CAREFUL USING\n   THIS!\n\n6. `vidir` always shows all files and directories in a directory,\n   including hidden files and directories (i.e. those starting with a\n   `.`). Usually a user does not want to be bothered with these so\n   `edir` by default does not show them. They can be included by adding\n   the `-a/--all` switch.\n\n7. `edir` does not require the user to specify the `-` if something has\n    been piped to standard input. E.g. you need only type `find | edir`\n    as opposed to `find | edir -`. Note that `vidir` requires the second\n    form.\n\n8. `edir` adds options to only show files (`-f/--files`), or to only\n    show directories (`-d/--dirs`).\n\n9. `edir` adds an option to ignore symbolic links (`-l/--nolinks`).\n\n10. `edir` shows a message \"No files or directories\" if there is nothing\n   to edit, rather than opening an empty file to edit.\n\n11. `edir` filters out any duplicate paths you may inadvertently specify\n    on it's command line.\n\n12. `edir` always invokes a consistent duplicate renaming scheme. E.g. if\n    you rename `b`, `c`, `d` all to the same pre-existing name `a` then\n    `edir` will rename `b` to `a~`, `c` to `a~1`, `d` to `a~2`.\n    Depending on order of operations, `vidir` is not always consistent\n    about this, E.g. sometimes it creates a `a~1` with no `a~` (this may\n    be a bug in `vidir` that nobody has ever bothered to\n    report/address?).\n\n13. `edir` creates the temporary editing file with a `.sh` extension so\n    your EDITOR may syntax highlight the entries.\n\n14. `edir` provides an environment value to add custom options to the\n    invocation of your editor, and/or to set default `edir` command\n    arguments. See below.\n\n15. Contrary to what it's name implies, `vidir` actually respects your\n    `$EDITOR` variable and runs your preferred editor like `edir` does\n    but `edir` has been given a generic name to make this more apparent.\n\n16. `edir` is very strict about the format of the lines you edit and\n    immediately exits with an error message (before changing anything)\n    if you format one of the lines incorrectly. All lines in the edited\n    list:\n\n    1. Must start with a number, that number must be in range, and that\n       number must be unique,\n    2. Must have at least one white space/tab after the number,\n    3. Must have a remaining valid path name.\n    4. Can start with a `#` or be completely blank to be considered the\n       same as deleted.\n\n    Note the final edited order of lines does not matter, only the first\n    number value is used to match the newly edited line to the original\n    line so an easy way to swap two file names is just to swap their\n    numbers.\n\n17. `edir` always removes and renames files consistently. The sequence of\n     operations applied is:\n\n    1. Deleted files are removed and all renamed files and directories\n       are renamed to temporaries. The temporaries are made on the same\n       file-system as the target.\n \n    2. Empty deleted directories are removed.\n \n    3. Renamed temporary files and directories are renamed to their target name.\n \n    4. Remaining deleted directories are removed.\n \n    In simple terms, remember that files are processed before directories\n    so you can rename files into a different directory and then delete\n    the original directory, all in one edit.\n\n## Installation\n\nArch users can install [edir from the AUR](https://aur.archlinux.org/packages/edir/).\n\nPython 3.5 or later is required. Note [edir is on\nPyPI](https://pypi.org/project/edir/) so you can `sudo pip3 install edir`\nor:\n\n```\n$ git clone http://github.com/bulletmark/edir\n$ cd edir\n$ sudo pip3 install .\n```\n\nOptionally, if you are using an odd system and/or want to install this\nmanually then all you need to do is rename `edir.py` as `edir` and make\nit executable somewhere in your path.\n\nEdir runs on pure Python. No 3rd party packages are required.\n\n### EDIR_EDITOR Environment Variable\n\n`edir` selects your editor from the first environment value found of:\n`$EDIR_EDITOR`, `$VISUAL`, `$EDITOR`, then falls back to \"vi\" if\nnone of these are set.\n\nYou can also `EDIR_EDITOR` explicitly to an editor + arguments\nstring if you want `edir` to call your editor with specific arguments.\n\n## EDIR Command Default Arguments\n\nYou can add default arguments to a personal configuration file\n`~/.config/edir-flags.conf`. If that file exists then each line of arguments\nwill be concatenated and automatically prepended to your `edir` command\nline arguments.\n\nThis allow you to set default preferred starting arguments to `edir`.\nType `edir -h` to see the arguments supported.\nE.g. `echo \"-q\" >~/.config/edir-flags.conf` to make `edir` not print\nrename and remove actions.\n\n## Examples\n\nRename and/or delete any files and directories in the current directory:\n\n```\n    edir\n```\n\nRename and/or delete any jpeg files in current dir:\n\n```\n   edir *.jpg\n```\n\nRename and/or delete any files under current directory and subdirectories:\n\n```\n    find | edir -f\n```\n\n## Command Line Options\n\n```\nusage: edir [-h] [-a] [-r] [-q] [-f | -d] [-l] [args [args ...]]\n\nProgram to rename and remove files and directories using your editor.\n\npositional arguments:\n  args           file|dir, or \"-\" for stdin\n\noptional arguments:\n  -h, --help     show this help message and exit\n  -a, --all      include/show all (including hidden) files\n  -r, --recurse  recursively remove any files and directories in removed\n                 directories that are non-empty\n  -q, --quiet    do not print rename/remove actions\n  -f, --files    only show files\n  -d, --dirs     only show directories\n  -l, --nolinks  ignore all symlinks\n```\n\n## Embed in Ranger File Manager\n\nIn many ways `edir` (and `vidir`) are better than the\n[ranger](https://ranger.github.io/)\n[bulkrename](https://github.com/ranger/ranger/wiki/Official-user-guide#bulk-renaming)\ncommand (which does not handle name clashes etc). To add `edir` as a\ncommand within [ranger](https://ranger.github.io/), add or create the\nfollowing in `~/.config/ranger/commands.py`. Then run it from within\n[ranger](https://ranger.github.io/) by typing `:edir`.\n\n```python\nfrom ranger.api.commands import Command\n\nclass edir(Command):\n    '''\n    :edir [file|dir]\n\n    Run edir on the selected file or dir.\n    Default argument is current dir.\n    '''\n    def execute(self):\n        self.fm.run('edir -q ' + self.rest(1))\n    def tab(self, tabnum):\n        return self._tab_directory_content()\n```\n\n## License\n\nCopyright (C) 2019 Mark Blakeney. This program is distributed under the\nterms of the GNU General Public License.\nThis program is free software: you can redistribute it and/or modify it\nunder the terms of the GNU General Public License as published by the\nFree Software Foundation, either version 3 of the License, or any later\nversion.\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\nPublic License at <http://www.gnu.org/licenses/> for more details.\n\n<!-- vim: se ai syn=markdown: -->", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/bulletmark/edir", "keywords": "vidir", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "edir", "package_url": "https://pypi.org/project/edir/", "platform": "", "project_url": "https://pypi.org/project/edir/", "project_urls": {"Homepage": "https://github.com/bulletmark/edir"}, "release_url": "https://pypi.org/project/edir/1.7/", "requires_dist": null, "requires_python": ">=3.5", "summary": "Utility to rename and remove files/dirs using your editor", "version": "1.7"}, "last_serial": 7013432, "releases": {"1.6": [{"comment_text": "", "digests": {"md5": "b3454364678513dd50ff30ea8b970e8d", "sha256": "463d1ed0a491cc6d2df5cd4e736e8a1abd246f1d05d6c3a8c96560e106732cfc"}, "downloads": -1, "filename": "edir-1.6.tar.gz", "has_sig": false, "md5_digest": "b3454364678513dd50ff30ea8b970e8d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 9505, "upload_time": "2020-04-04T23:38:31", "upload_time_iso_8601": "2020-04-04T23:38:31.814242Z", "url": "https://files.pythonhosted.org/packages/08/c8/737ab743a12168a343b4c30aa327e66da25797f17b0622711418e8bb35a5/edir-1.6.tar.gz"}], "1.7": [{"comment_text": "", "digests": {"md5": "328a40ad154a85a43207641433556b7a", "sha256": "d7c3e1cdf1ef8be217f43809f68c9bfa1e74690b86841b182b5b1e7ae4bf8b5d"}, "downloads": -1, "filename": "edir-1.7.tar.gz", "has_sig": false, "md5_digest": "328a40ad154a85a43207641433556b7a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 9509, "upload_time": "2020-04-13T23:31:22", "upload_time_iso_8601": "2020-04-13T23:31:22.098287Z", "url": "https://files.pythonhosted.org/packages/26/f4/7cb78dbd0782b1e14919ce09dc510b3ba003554243b6b96d97fd8a019d78/edir-1.7.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "328a40ad154a85a43207641433556b7a", "sha256": "d7c3e1cdf1ef8be217f43809f68c9bfa1e74690b86841b182b5b1e7ae4bf8b5d"}, "downloads": -1, "filename": "edir-1.7.tar.gz", "has_sig": false, "md5_digest": "328a40ad154a85a43207641433556b7a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 9509, "upload_time": "2020-04-13T23:31:22", "upload_time_iso_8601": "2020-04-13T23:31:22.098287Z", "url": "https://files.pythonhosted.org/packages/26/f4/7cb78dbd0782b1e14919ce09dc510b3ba003554243b6b96d97fd8a019d78/edir-1.7.tar.gz"}]}