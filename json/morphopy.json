{"info": {"author": "Sophie Laturnus, Adam von Daranyi, Ziwei Huang and Philipp Berens", "author_email": "adam.von-daranyi@uni-tuebingen.de", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Morphopy\n(c) 2020 by Sophie Laturnus, Adam von Daranyi, Ziwei Huang and Philipp Berens.\n********\n\n## <a name=\"content\">Content</a> \n- [Overview](#overview)\n- [Requirements](#requirements)\n- [Installation](#installation)\n- [Uninstallation](#uninstallation)\n- [Usage](#usage)\n- [Module description](#module)\n\n## <a name=\"overview\">Overview</a> \n\nMorphoPy is a Python3 package that uses networkX to compute and show information about neurites.\nThe input can be passed with single swc-files or it can handle whole directories with multiple files at once.\nYou can use MorphoPy imported in Python or from command line as batch-tool as well.\n\nThe current working build:\n\n **version 0.5**\n\nAll builds are tested on Linux (Debian and CentOS) and Windows 10.\n\nYou can always find the latest working build in the \"/dist\" directory of this repository.\n\n[back to start](#content)\n\n\nIn the following, all commands written in boxes need to be entered into your terminal.\n## <a name=\"requirements\">Software Requirements</a>\n### Mac:\nYou need python with pip installed and graphviz/pygraphviz:\n\n - python >3.4\n - pip\n - graphviz\n - pygraphviz\n\n**1)** Use homebrew to install, if it is not installed you can do it from your terminal with this command:\n\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n\n**2)** Then you can easily install python and graphviz like this:\n\n\tbrew install python graphviz\n\n\t# if you get an error that graphviz can't be found you can use this to install:\n\tpip install pygraphviz \u2013install-option=\u201d\u2013include-path=/usr/local/lib/graphviz/\u201d \u2013install-option=\u201d\u2013library-path=/usr/local/lib/graphviz\u201d\n\n**3)** In the last step you need to build pygraphyviz with the installed graphviz library:\n\n\tpip install pygraphviz\n\nNow you should be able to continue with the MophoPy installation. See below.\n### Linux:\nDebian/Ubuntu packages:\n\n - python 3\n - pip 3\n - graphviz development\n - geometry library development\n\nYou can install them with this command:\n\n\tapt-get install python3 python3-pip libgeos-dev libgraphviz-dev\n\nRedHat/CentOS/Fedora packages:\n\n - python >3.6\n - python development >3.6\n - gcc-c++ compiler\n - graphviz development\n - geometry library development\n\nYou can install them with this command (perhaps python version differs):\n\n\tyum install gcc-c++ python36 python36-devel geos-devel graphviz-devel\n\nThat's it. All requirements are met and you can continue with the Morphopy installation. See below. \n### Windows:\n\n - python >3.5 (x64): download from [here](https://www.python.org/downloads/windows/)\n - pip >18 : be sure you selected it during installation with the base python package\n - Microsoft Build Tools >14.0 you can download them [here](https://visualstudio.microsoft.com/visual-cpp-build-tools/)\n - Graphviz (x64) [download here](https://github.com/mahkoCosmo/GraphViz_x64/)\n - Pygraphviz (x64) [from here](https://github.com/pygraphviz/pygraphviz/releases)\n - patched pygraphviz files from [Kagami@Pygraphviz](https://github.com/Kagami/pygraphviz/commit/fe442dc16accb629c3feaf157af75f67ccabbd6e)\n\n**1)** Install python with pip and be sure to check the option to add python paths to enviroment variable.\n\n**2)** Install Microsoft Build Tools with the automatic installation tool from the website above\n\n**3)** Now download and unpack graphviz(x64), pygraphviz(x64) and the patched files from Kagami to any folder.\n\n**4)** Then replace in pygraphviz the files with the two patched ones:\n\n       ...\\Kagami\\pygraphviz\\graphviz.i -> ...\\pygraphviz-1.x\\pygraphviz\\graphviz.i\n       ...\\Kagami\\pygraphviz\\graphviz_wrap.c -> ...\\pygraphviz-1.x\\pygraphviz\\graphviz_wrap.c\n\n**5)** Now you can use this command in the base directory of pygraphviz-1.x to build it (use the full path to the directories of the unpacked graphviz files):\n\n\tpython setup.py install --user --include-path=\"C:\\\\...\\\\graphviz\\\\include\" --library-path=\"C:\\\\...\\\\graphviz\\\\lib\"\n\nPygraphviz is now build without any errors and all requirements are met, see below for continue with MorphoPy installation.\n\n[back to start](#content)\n## <a name=\"installation\">Installation:</a>\n\n###  Install the MorphoPy package (all platforms):\n\nInstall the python package with pip/pip3 and get the latest build:\n\n\tpip install morphopy\n\n## <a name=\"uninstallation\">Uninstallation:</a>\n\nYou can simply uninstall the package with pip/pip3:\n\n\tpip uninstall morphopy\n\n\n[back to start](#content)\n\n## <a name=\"usage\">Usage</a> \nJust call everywhere on the command line:\n\n\tMorphoPy.py <options>\nHelp:\n\n\tUsage: MorphoPy.py -c <compute_feature> [--func <persistence_function> | --conf <config_file>]\n\t                   [-f <swc_file> | -d <directory>] [-o <output directory>]\n\n\tOptions:\n\t   -c, --compute                parameter for selecting the computing feature:\n\t                                persistence: Compute persistence data\n\t                                stats      : Compute Morphometric statistics\n\t                                density    : Create density maps\n\t       Persistence Options:\n\t       --func                   if persistence is selected as feature, you can\n\t                                specify with this option a method function you\n\t                                want to use at computing the persistence.\n\t       Density Map Options:\n\t       --conf                   if density map is selected, you can pass a\n\t                                config file with more parameters for creating\n\t                                the density maps. (optional)\n\t   -f, --file                   specifies a swc-file as input for Morphopy,\n\t                                if no file or directory is selected, working\n\t                                directory is used as default.\n\t   -d, --directory              specifies a directory as input for swc-files.\n\t                                (default: working directory)\n\t   -o, --output                 specifies the output directory for saving the\n\t                                results in. (default: same as source)\n\n\n\n[back to start](#content)\n\n## <a name=\"contributing\">Contributing to MorphoPy </a>\n\nWe tested MorphoPy to the best of our knowledge and abilities in the scope of several projects. If you still find a bug\nor you are missing a feature, please do not hesitate to contact us via [GitHub issues](https://github.com/berenslab/MorphoPy/issues).\nPlease try to provide a minimal example that reproduces the bug you want to be fixed.\nIf you want to develop the code base further, you can work with git pull requests. Please make sure that you document\nthe code and add tests and examples of how to use your code.\n\n\n## <a name=\"citation\"> Citing MorphoPy </a>\n\nIf you are using MorphoPy for your research or your work project please make sure to cite us and this repository.\n\n## <a name=\"module\">Module description</a> \n\n**Important:** MorphoPy requires the soma to be one single point. If several soma points are present in the\nreconstruction file they will be automatically collapsed to the centroid of their convex hull on file loading (also see utils.get_standardized_swc).\nMorphoPy currently only supports neurites that connect back to the soma. This means, axons that emerge from dendritic\nstructures can not be handled.\n\nAll data is stored in the tidy data format (http://vita.had.co.nz/papers/tidy-data.pdf).\n\nPlease also refer to our [tutorial](./notebooks/MORPHOPY Tutorial.ipynb).\n\n### Density maps\nChanging config\n\n### Persistence\nchanging distance function. Adding a distance function\n\n### Morphometric statistics\nAvailable morphometric statistics are:\n- branch orders\n- Strahler order\n- branch angles\n- path angles\n- root angles\n- thickness\n- segment lengths\n- path length to soma\n- radial distance\n\n\nChanging the Code\n\n### Morphometric distributions\nThese features are not (yet) available via the command line tool.\nFrequency histograms or Gaussian kernel density estimates can be queried for all single value statistics using the\nmethods `get_histogram(key)` or `get_kde_distribution(key)`. If you provide a distance measure (e.g. branch order,\npath distance from soma or radial distance) the returned distribution will be two-dimensional and allows to investigate\na features' development across space.\n\n\n### Not enough? ###\n\nYou want to compute your own features? Go for it! We recommend you to check out `networkx` and `shapely` for more options.\n\n\n[back to start](#content)\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/berenslab/MorphoPy/archive/v0.5.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/berenslab/MorphoPy", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "morphopy", "package_url": "https://pypi.org/project/morphopy/", "platform": "", "project_url": "https://pypi.org/project/morphopy/", "project_urls": {"Download": "https://github.com/berenslab/MorphoPy/archive/v0.5.tar.gz", "Homepage": "https://github.com/berenslab/MorphoPy"}, "release_url": "https://pypi.org/project/morphopy/0.5/", "requires_dist": ["matplotlib", "matplotlib-scalebar", "scipy", "numpy", "pandas", "networkx", "seaborn", "sklearn", "shapely", "pygraphviz"], "requires_python": "", "summary": "python tool for showing and computing morphology information about neutites", "version": "0.5"}, "last_serial": 7060346, "releases": {"0.3": [{"comment_text": "", "digests": {"md5": "7cee52b0bfba52e0e9204df13ac06a80", "sha256": "e01d2ffaecf4742e46cd6628ccb5ca3f0ca91f652d77fb3f7622e10fb934ec3f"}, "downloads": -1, "filename": "morphopy-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "7cee52b0bfba52e0e9204df13ac06a80", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 48468, "upload_time": "2020-04-17T08:14:38", "upload_time_iso_8601": "2020-04-17T08:14:38.357067Z", "url": "https://files.pythonhosted.org/packages/66/00/12946a176f509a973ff8ea5431765b6fc9c64294d596344caae78273870b/morphopy-0.3-py3-none-any.whl"}], "0.5": [{"comment_text": "", "digests": {"md5": "84f08967ba987eb6f7d3bea64b28bd1d", "sha256": "5e75709b2b3e25effa3cd058c00d9586f24ddc585701337218ba1acf19f951df"}, "downloads": -1, "filename": "morphopy-0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "84f08967ba987eb6f7d3bea64b28bd1d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 49029, "upload_time": "2020-04-20T14:07:32", "upload_time_iso_8601": "2020-04-20T14:07:32.848409Z", "url": "https://files.pythonhosted.org/packages/ae/b9/783740e9315032feee30bf328e0b02256e0a9389ba6b8a7162cb329e9c4a/morphopy-0.5-py3-none-any.whl"}]}, "urls": [{"comment_text": "", "digests": {"md5": "84f08967ba987eb6f7d3bea64b28bd1d", "sha256": "5e75709b2b3e25effa3cd058c00d9586f24ddc585701337218ba1acf19f951df"}, "downloads": -1, "filename": "morphopy-0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "84f08967ba987eb6f7d3bea64b28bd1d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 49029, "upload_time": "2020-04-20T14:07:32", "upload_time_iso_8601": "2020-04-20T14:07:32.848409Z", "url": "https://files.pythonhosted.org/packages/ae/b9/783740e9315032feee30bf328e0b02256e0a9389ba6b8a7162cb329e9c4a/morphopy-0.5-py3-none-any.whl"}]}