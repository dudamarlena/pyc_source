{"info": {"author": "ACSONE SA/NV, Odoo Community Association (OCA)", "author_email": "support@odoo-community.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: Odoo", "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)", "Programming Language :: Python"], "description": "=========\nBase Rest\n=========\n\n.. !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n   !! This file is generated by oca-gen-addon-readme !!\n   !! changes will be overwritten.                   !!\n   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n.. |badge1| image:: https://img.shields.io/badge/maturity-Beta-yellow.png\n    :target: https://odoo-community.org/page/development-status\n    :alt: Beta\n.. |badge2| image:: https://img.shields.io/badge/licence-LGPL--3-blue.png\n    :target: http://www.gnu.org/licenses/lgpl-3.0-standalone.html\n    :alt: License: LGPL-3\n.. |badge3| image:: https://img.shields.io/badge/github-OCA%2Frest--framework-lightgray.png?logo=github\n    :target: https://github.com/OCA/rest-framework/tree/13.0/base_rest\n    :alt: OCA/rest-framework\n.. |badge4| image:: https://img.shields.io/badge/weblate-Translate%20me-F47D42.png\n    :target: https://translation.odoo-community.org/projects/rest-framework-13-0/rest-framework-13-0-base_rest\n    :alt: Translate me on Weblate\n.. |badge5| image:: https://img.shields.io/badge/runbot-Try%20me-875A7B.png\n    :target: https://runbot.odoo-community.org/runbot/271/13.0\n    :alt: Try me on Runbot\n\n|badge1| |badge2| |badge3| |badge4| |badge5| \n\nThis addon provides the basis to develop high level REST APIs for Odoo.\n\nAs Odoo becomes one of the central pieces of enterprise IT systems, it often\nbecomes necessary to set up specialized service interfaces, so existing\nsystems can interact with Odoo.\n\nWhile the XML-RPC interface of Odoo comes handy in such situations, it\nrequires a deep understanding of Odoo\u2019s internal data model. When used\nextensively, it creates a strong coupling between Odoo internals and client\nsystems, therefore increasing maintenance costs.\n\n**Table of contents**\n\n.. contents::\n   :local:\n\nConfiguration\n=============\n\nIf an error occurs when calling a method of a service (ie missing parameter,\n..) the system returns only a general description of the problem without\ndetails. This is done on purpose to ensure maximum opacity on implementation\ndetails and therefore lower security issue.\n\nThis restriction can be problematic when the services are accessed by an\nexternal system in development. To know the details of an error it is indeed\nnecessary to have access to the log of the server. It is not always possible\nto provide this kind of access. That's why you can configure the server to run\nthese services in development mode.\n\nTo run the REST API in development mode you must add a new section\n'**[base_rest]**' with the option '**dev_mode=True**' in the server config\nfile.\n\n.. code-block:: cfg\n\n    [base_rest]\n    dev_mode=True\n\nWhen the REST API runs in development mode, the original description and a\nstack trace is returned in case of error. **Be careful to not use this mode\nin production**.\n\nUsage\n=====\n\nTo add your own REST service you must provides at least 2 classes.\n\n* A Component providing the business logic of your service,\n* A Controller to register your service.\n\nThe business logic of your service must be implemented into a component\n(``odoo.addons.component.core.Component``) that inherit from\n'base.rest.service'\n\n.. code-block:: python\n\n    from odoo.addons.component.core import Component\n\n\n    class PingService(Component):\n        _inherit = 'base.rest.service'\n        _name = 'ping.service'\n        _usage = 'ping'\n        _collection = 'my_module.services'\n\n\n        # The following method are 'public' and can be called from the controller.\n        def get(self, _id, message):\n            return {\n                'response': 'Get called with message ' + message}\n\n        def search(self, message):\n            return {\n                'response': 'Search called search with message ' + message}\n\n        def update(self, _id, message):\n            return {'response': 'PUT called with message ' + message}\n\n        # pylint:disable=method-required-super\n        def create(self, **params):\n            return {'response': 'POST called with message ' + params['message']}\n\n        def delete(self, _id):\n            return {'response': 'DELETE called with id %s ' % _id}\n\n        # Validator\n        def _validator_search(self):\n            return {'message': {'type': 'string'}}\n\n        # Validator\n        def _validator_get(self):\n            # no parameters by default\n            return {}\n\n        def _validator_update(self):\n            return {'message': {'type': 'string'}}\n\n        def _validator_create(self):\n            return {'message': {'type': 'string'}}\n\nOnce your have implemented your services (ping, ...), you must tell to Odoo\nhow to access to these services. This process is done by implementing a\ncontroller that inherits from  ``odoo.addons.base_rest.controllers.main.RestController``\n\n.. code-block:: python\n\n    from odoo.addons.base_rest.controllers import main\n\n    class MyRestController(main.RestController):\n        _root_path = '/my_services_api/'\n        _collection_name = my_module.services\n\nIn your controller, _'root_path' is used to specify the root of the path to\naccess to your services and '_collection_name' is the name of the collection\nproviding the business logic for the requested service/\n\n\nBy inheriting from ``RestController`` the following routes will be registered\nto access to your services\n\n.. code-block:: python\n\n    @route([\n        ROOT_PATH + '<string:_service_name>',\n        ROOT_PATH + '<string:_service_name>/search',\n        ROOT_PATH + '<string:_service_name>/<int:_id>',\n        ROOT_PATH + '<string:_service_name>/<int:_id>/get'\n    ], methods=['GET'], auth=\"user\", csrf=False)\n    def get(self, _service_name, _id=None, **params):\n        method_name = 'get' if _id else 'search'\n        return self._process_method(_service_name, method_name, _id, params)\n\n    @route([\n        ROOT_PATH + '<string:_service_name>',\n        ROOT_PATH + '<string:_service_name>/<string:method_name>',\n        ROOT_PATH + '<string:_service_name>/<int:_id>',\n        ROOT_PATH + '<string:_service_name>/<int:_id>/<string:method_name>'\n    ], methods=['POST'], auth=\"user\", csrf=False)\n    def modify(self, _service_name, _id=None, method_name=None, **params):\n        if not method_name:\n            method_name = 'update' if _id else 'create'\n        if method_name == 'get':\n            _logger.error(\"HTTP POST with method name 'get' is not allowed. \"\n                          \"(service name: %s)\", _service_name)\n            raise BadRequest()\n        return self._process_method(_service_name, method_name, _id, params)\n\n    @route([\n        ROOT_PATH + '<string:_service_name>/<int:_id>',\n    ], methods=['PUT'], auth=\"user\", csrf=False)\n    def update(self, _service_name, _id, **params):\n        return self._process_method(_service_name, 'update', _id, params)\n\n    @route([\n        ROOT_PATH + '<string:_service_name>/<int:_id>',\n    ], methods=['DELETE'], auth=\"user\", csrf=False)\n    def delete(self, _service_name, _id):\n        return self._process_method(_service_name, 'delete', _id)\n\n\nThe HTTP GET 'http://my_odoo/my_services_api/ping' will be dispatched to the\nmethod ``PingService.search``\n\nKnown issues / Roadmap\n======================\n\nThe `roadmap <https://github.com/OCA/rest-framework/issues?q=is%3Aopen+is%3Aissue+label%3Aenhancement+label%3Abase_rest>`_\nand `known issues <https://github.com/OCA/rest-framework/issues?q=is%3Aopen+is%3Aissue+label%3Abug+label%3Abase_rest>`_ can\nbe found on GitHub.\n\nChangelog\n=========\n\n12.0.2.0.1\n~~~~~~~~~~\n\n* _validator_...() methods can now return a cerberus ``Validator`` object\n  instead of a schema dictionnary, for additional flexibility (e.g. allowing\n  validator options such as ``allow_unknown``).\n\n12.0.2.0.0\n~~~~~~~~~~\n\n* Licence changed from AGPL-3 to LGPL-3\n\n12.0.1.0.1\n~~~~~~~~~~\n\n* Fix issue when rendering the jsonapi documentation if no documentation is\n  provided on a method part of the REST api.\n\n12.0.1.0.0\n~~~~~~~~~~\n\nFirst official version. The addon has been incubated into the\n`Shopinvader repository <https://github.com/akretion/odoo-shopinvader>`_ from\nAkretion. For more information you need to look at the git log.\n\nBug Tracker\n===========\n\nBugs are tracked on `GitHub Issues <https://github.com/OCA/rest-framework/issues>`_.\nIn case of trouble, please check there if your issue has already been reported.\nIf you spotted it first, help us smashing it by providing a detailed and welcomed\n`feedback <https://github.com/OCA/rest-framework/issues/new?body=module:%20base_rest%0Aversion:%2013.0%0A%0A**Steps%20to%20reproduce**%0A-%20...%0A%0A**Current%20behavior**%0A%0A**Expected%20behavior**>`_.\n\nDo not contact contributors directly about support or help with technical issues.\n\nCredits\n=======\n\nAuthors\n~~~~~~~\n\n* ACSONE SA/NV\n\nContributors\n~~~~~~~~~~~~\n\n* Laurent Mignon <laurent.mignon@acsone.eu>\n* S\u00e9bastien Beau <sebastien.beau@akretion.com>\n\nMaintainers\n~~~~~~~~~~~\n\nThis module is maintained by the OCA.\n\n.. image:: https://odoo-community.org/logo.png\n   :alt: Odoo Community Association\n   :target: https://odoo-community.org\n\nOCA, or the Odoo Community Association, is a nonprofit organization whose\nmission is to support the collaborative development of Odoo features and\npromote its widespread use.\n\n.. |maintainer-lmignon| image:: https://github.com/lmignon.png?size=40px\n    :target: https://github.com/lmignon\n    :alt: lmignon\n\nCurrent `maintainer <https://odoo-community.org/page/maintainer-role>`__:\n\n|maintainer-lmignon| \n\nThis module is part of the `OCA/rest-framework <https://github.com/OCA/rest-framework/tree/13.0/base_rest>`_ project on GitHub.\n\nYou are welcome to contribute. To learn how please visit https://odoo-community.org/page/Contribute.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/OCA/rest-framework", "keywords": "", "license": "LGPL-3", "maintainer": "", "maintainer_email": "", "name": "odoo13-addon-base-rest", "package_url": "https://pypi.org/project/odoo13-addon-base-rest/", "platform": "", "project_url": "https://pypi.org/project/odoo13-addon-base-rest/", "project_urls": {"Homepage": "https://github.com/OCA/rest-framework"}, "release_url": "https://pypi.org/project/odoo13-addon-base-rest/13.0.2.0.2/", "requires_dist": ["cerberus", "odoo13-addon-component", "odoo (<13.1dev,>=13.0a)", "parse-accept-language", "pyquerystring"], "requires_python": ">=3.5", "summary": "Develop your own high level REST APIs for Odoo thanks to this addon.", "version": "13.0.2.0.2"}, "last_serial": 6910448, "releases": {"13.0.2.0.2": [{"comment_text": "", "digests": {"md5": "f01003efefedf274df8e53aebe42887c", "sha256": "07c4b1c1b9cbcaa8812f49059c9a8ef013abc03c611c108f6e6a19916eed7e3f"}, "downloads": -1, "filename": "odoo13_addon_base_rest-13.0.2.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "f01003efefedf274df8e53aebe42887c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 2826819, "upload_time": "2020-02-15T06:07:32", "upload_time_iso_8601": "2020-02-15T06:07:32.563188Z", "url": "https://files.pythonhosted.org/packages/7f/e4/e38e46f82f79454c90431329685739665eae86406d102830a96dae1181f9/odoo13_addon_base_rest-13.0.2.0.2-py3-none-any.whl"}], "13.0.2.0.2.dev1": [{"comment_text": "", "digests": {"md5": "d01f1503f653719d405d3d7ba8506f7f", "sha256": "dbdf06ca1b64b986aa43353fa3fa05af0679f1ca13335e730677eafc82ee90a9"}, "downloads": -1, "filename": "odoo13_addon_base_rest-13.0.2.0.2.dev1-py3-none-any.whl", "has_sig": false, "md5_digest": "d01f1503f653719d405d3d7ba8506f7f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 2826864, "upload_time": "2019-11-03T06:03:37", "upload_time_iso_8601": "2019-11-03T06:03:37.956004Z", "url": "https://files.pythonhosted.org/packages/e2/42/d738d46f8a0456a192baeb4a23373fb90c81f2a15a4eddfa7c4e54b224f2/odoo13_addon_base_rest-13.0.2.0.2.dev1-py3-none-any.whl"}], "13.0.2.0.3.dev1": [{"comment_text": "", "digests": {"md5": "f6840aaf4b65f5ceee11a5b203f7c63c", "sha256": "2b1ab70b133e683764cab6f49d24363a630327f09b0c839bc8c86852f2f8ee89"}, "downloads": -1, "filename": "odoo13_addon_base_rest-13.0.2.0.3.dev1-py3-none-any.whl", "has_sig": false, "md5_digest": "f6840aaf4b65f5ceee11a5b203f7c63c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 2826867, "upload_time": "2020-03-30T05:08:27", "upload_time_iso_8601": "2020-03-30T05:08:27.806150Z", "url": "https://files.pythonhosted.org/packages/f5/c5/d2a4dc456fdc31a66cf3998bc5d7e08157208c795957971287b0f423f36f/odoo13_addon_base_rest-13.0.2.0.3.dev1-py3-none-any.whl"}]}, "urls": [{"comment_text": "", "digests": {"md5": "f01003efefedf274df8e53aebe42887c", "sha256": "07c4b1c1b9cbcaa8812f49059c9a8ef013abc03c611c108f6e6a19916eed7e3f"}, "downloads": -1, "filename": "odoo13_addon_base_rest-13.0.2.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "f01003efefedf274df8e53aebe42887c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 2826819, "upload_time": "2020-02-15T06:07:32", "upload_time_iso_8601": "2020-02-15T06:07:32.563188Z", "url": "https://files.pythonhosted.org/packages/7f/e4/e38e46f82f79454c90431329685739665eae86406d102830a96dae1181f9/odoo13_addon_base_rest-13.0.2.0.2-py3-none-any.whl"}]}