{"info": {"author": "Austin Raney", "author_email": "aaraney@crimson.ua.edu", "bugtrack_url": null, "classifiers": [], "description": "# DJS\n\nDJS is an open-source python library for adjusting parameters and completing concurrent WRF-Hydro/National Water Model simulations. It provides tools that simplify model usage and executions that are operable across operating systems. The framework consists of two main pieces:\n\n- __Perturbation Engine__ for scaling and stochastically generating model parameter sets.\n- __Job Scheduler__ for spawning and managing concurrent model simulations.\n\nMost users should utilize DJS's [click](https://github.com/pallets/click) command line interface to access and use the perturbation engine and job scheduler. The CLI takes [yaml](https://yaml.org) input files that tell the perturbation engine and job scheduler what files to work on and how to work on them. See the example and docs for greater detail.\n\n## Installation\n\nNote, if you just want to vary model parameters, you can skip to [package installation](#package-installation).\n\n### Docker\n\nPrior to the package installation, first install [Docker](https://www.docker.com/products). Windows and macOS users should install [Docker Desktop](https://www.docker.com/products/docker-desktop), Linux users should install [Docker Developer Tools](https://www.docker.com/products/developer-tools).\n\nmacOS users with [homebrew](https://brew.sh) installed can install Docker as such.\n\n``` bash\nbrew cask install docker\n```\n\n#### Pull the NWM/WRF-Hydro Docker Images\n\nPull the docker images from docker hub, so DJS can use them to run models. View all available images on [Docker Hub](https://hub.docker.com/u/aaraney).\n\n``` bash\n# For NWM version 2.0\ndocker pull aaraney/nwm-djs:2.0\n\n# For NWM version 1.2\ndocker pull aaraney/nwm-djs:1.2\n\n# For WRF-Hydro\ndocker pull aaraney/wrf-hydro:5.1.1\ndocker pull aaraney/wrf-hydro:5.1.0\ndocker pull aaraney/wrf-hydro:5.0.3\n```\n\n### Package Installation\n\nDJS requires Python 3.5 or higher and is available using `pip`. It's recommend to install DJS into a virtual environment or a conda environment as a best practice. Personally, I think conda is a little easier, but admittedly a little more bloated.\n\nTo create a virtual environment run the following in terminal\n\n``` bash\npython3 -m venv djs-env\n\n# If on Mac or Linux\nsource djs-env/bin/activate\n\n# If on Windows\n. \\djs-env\\Scripts\\activate\n```\n\nTo create an environment using conda do the following in terminal. You can [install miniconda here](https://docs.conda.io/en/latest/miniconda.html).\n\n``` bash\nconda create --name djs python=3.8\nconda activate djs\n```\n\nInstall DJS using pip\n\n``` bash\npip3 install djs\n```\n\n## Example case\n\nFiles for this example [NCAR Pocono, PA test case](pocono_test_case/pocono_test_case.zip) can be downloaded and extracted for recreation purposes.\n\nIn this example, a set of varied model parameter files will be created and used to run NWM version 2.0 simulations.\n\n### Create varied parameter files\n\nLet's take a look inside `pe_setup.yml` before varying the parameters. Documentation on the perturbation engine yaml setup file can be found by running `djs perturbation-engine --help` or in the docs.\n\n``` yaml\n# Perturbation Engine setup yml file\nprimary/DOMAIN/Route_Link.nc:\n  - nCC:\n      scalar: '* 1.3'\n      output: 'nCC_route_link.nc'\nprimary/DOMAIN/soil_properties.nc:\n  - mfsno:\n      uniform: True\n      output: 'mfsno_soil_properties.nc'\nprimary/DOMAIN/Fulldom_hires.nc:\n  - OVROUGHRTFAC:\n      scalar: '- 0.2'\n      output: 'OVROUGHRTFAC_fulldom_hires.nc'\n  - multi_group:\n      output: 'RETDEPRTFAC_OVROUGHRTFAC_fulldom_hires.nc'\n      OVROUGHRTFAC:\n          norm: False\n          scalar: '- 0.3'\n      RETDEPRTFAC:\n          scalar: '- 0.05'\n```\n\nFor those following along navigate to the location you extracted the `pocono_test_case.zip` using the terminal/command prompt.\n\n![cd to directory](resources/example_case_cd.gif)\n\nCreate a varied parameter set is as simple as running:\n\n``` bash\ndjs perturbation-engine pe_yaml.yml\n```\n\nVaried parameter files should now exist in the `pocono_test_case` directory.\n\n### Run NWM Simulations\n\nFirst, ensure that Docker is running. Next, let's take a peak at the Job Scheduler setup files. Documentation on the perturbation engine yaml setup file can be found by running `djs job-scheduler --help` or in the docs.\n\n``` yaml\n# Job Scheduler setup yml file\nprimary: 'primary'\nalternative-files:\n  - 'nCC_route_link.nc'\n  - 'mfsno_soil_properties.nc'\n  - 'OVROUGHRTFAC_fulldom_hires.nc'\n  - 'RETDEPRTFAC_OVROUGHRTFAC_fulldom_hires.nc'\nimage: 'aaraney/nwm-djs:2.0'\nmax-jobs: 2\ncpus: '0-2'\nmpi-np: 2\n```\n\nTo start the simulations run:\n\n``` bash\ndjs job-scheduler js_setup.yml\n```\n\n![run simulations](resources/example_case_sim.gif)\n\nNew directories starting with the prefix `rep-` should appear in the `pocono_test_case` directory. These directories hold each of the model simulations.\n\n\nContributors: [Austin Raney](mailto:aaraney@crimson.ua.edu), [Iman Maghami](mailto:im3vp@virginia.edu), [Yenchia Feng](mailto:yenchia@stanford.edu)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/aaraney/NWM-Dockerized-Job-Scheduler", "keywords": "docker nwm hydrology cuahsi noaa owp nwc", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "djs", "package_url": "https://pypi.org/project/djs/", "platform": "", "project_url": "https://pypi.org/project/djs/", "project_urls": {"Homepage": "https://github.com/aaraney/NWM-Dockerized-Job-Scheduler"}, "release_url": "https://pypi.org/project/djs/0.0.2/", "requires_dist": ["click", "docker", "netcdf4", "numpy", "pandas", "pyyaml", "scipy", "xarray"], "requires_python": ">=3.5", "summary": "A framework for varying model parameters and automating concurrent usage of the Wrf-hydro/National Water Model using Docker", "version": "0.0.2"}, "last_serial": 7037540, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "54ee1137830319e2d17ccfc472eee2af", "sha256": "b13348d591743334b7e11ca179e12ab43429ae7a96c63f937442e60b35394892"}, "downloads": -1, "filename": "djs-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "54ee1137830319e2d17ccfc472eee2af", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 21955, "upload_time": "2020-04-16T18:37:05", "upload_time_iso_8601": "2020-04-16T18:37:05.740413Z", "url": "https://files.pythonhosted.org/packages/dc/83/0ec87a8e171941481945ef09e33fdf01d7846efbcb97d919b4157cc2738d/djs-0.0.1-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "fe8260e976ce1679a9cc83b952a594ac", "sha256": "86bbc45e14e54a529a4dd8951cca91b47f22bf168a56f046969553f63507d587"}, "downloads": -1, "filename": "djs-0.0.1.tar.gz", "has_sig": false, "md5_digest": "fe8260e976ce1679a9cc83b952a594ac", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 18115, "upload_time": "2020-04-16T18:37:08", "upload_time_iso_8601": "2020-04-16T18:37:08.500947Z", "url": "https://files.pythonhosted.org/packages/0f/a0/eb53ee8dc3dff43efa2af9032fd3951bbc1333909fef0768a57ca35ca8ea/djs-0.0.1.tar.gz"}], "0.0.2": [{"comment_text": "", "digests": {"md5": "81b087ef92726d00492ee2c4b116fcd5", "sha256": "45fe42ecdaa29164799cb48c6dbe2531806b4c452b7b5d4dc452a0dfdae8e927"}, "downloads": -1, "filename": "djs-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "81b087ef92726d00492ee2c4b116fcd5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 22935, "upload_time": "2020-04-17T05:11:01", "upload_time_iso_8601": "2020-04-17T05:11:01.417216Z", "url": "https://files.pythonhosted.org/packages/bc/98/099ebc676eaf896af142726b963e4b864fc0a7f19b261aeb5ec7518dd0bf/djs-0.0.2-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "96de3b4c0c09c66f55a2d1b20b74ab55", "sha256": "28c3b3669904ef0b5101dc0cb9c7255b869ad07c5e410feec6054cf53ec8633f"}, "downloads": -1, "filename": "djs-0.0.2.tar.gz", "has_sig": false, "md5_digest": "96de3b4c0c09c66f55a2d1b20b74ab55", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 18330, "upload_time": "2020-04-17T05:11:03", "upload_time_iso_8601": "2020-04-17T05:11:03.619032Z", "url": "https://files.pythonhosted.org/packages/5f/68/2079548764426a39913ac89bef35caae193bcb88da9664257c1d22ea75d0/djs-0.0.2.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "81b087ef92726d00492ee2c4b116fcd5", "sha256": "45fe42ecdaa29164799cb48c6dbe2531806b4c452b7b5d4dc452a0dfdae8e927"}, "downloads": -1, "filename": "djs-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "81b087ef92726d00492ee2c4b116fcd5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 22935, "upload_time": "2020-04-17T05:11:01", "upload_time_iso_8601": "2020-04-17T05:11:01.417216Z", "url": "https://files.pythonhosted.org/packages/bc/98/099ebc676eaf896af142726b963e4b864fc0a7f19b261aeb5ec7518dd0bf/djs-0.0.2-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "96de3b4c0c09c66f55a2d1b20b74ab55", "sha256": "28c3b3669904ef0b5101dc0cb9c7255b869ad07c5e410feec6054cf53ec8633f"}, "downloads": -1, "filename": "djs-0.0.2.tar.gz", "has_sig": false, "md5_digest": "96de3b4c0c09c66f55a2d1b20b74ab55", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 18330, "upload_time": "2020-04-17T05:11:03", "upload_time_iso_8601": "2020-04-17T05:11:03.619032Z", "url": "https://files.pythonhosted.org/packages/5f/68/2079548764426a39913ac89bef35caae193bcb88da9664257c1d22ea75d0/djs-0.0.2.tar.gz"}]}