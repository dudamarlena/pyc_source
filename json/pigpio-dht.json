{"info": {"author": "Gary Smart", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "pigpio-dht\n==========\n\nDHT11 and DHT22 Driver Library based on the pigpio_ GPIO library.\n\n.. _pigpio: http://www.python.org/\n\n\nInstallation\n------------\n\n``pip install pigpio-dht``\n\nSupported Versions of Python\n----------------------------\n\nTested against Python >= 3.5.\n\nMay work with earlier 3.X versions but this has not been confirmed. Does not work with Python 2.7.\n\nLinks\n-----\n\n- `GitHub Repository`_\n\n.. _GitHub Repository : https://github.com/garyns/pigpio-dht\n\nDHT Sensors are Slow\n--------------------\n\nDHT sensors are slow to take readings, and need to settle between reads. For instance, the maximum read rates for the sensors are:\n\n- DHT11 once every 1 seconds\n- DHT22 once every 2 seconds\n\nThis library monitors the read rate and will pause between successive calls to ``read()`` to honor these limits.\n\n\nExamples\n--------\n\nOne-Shot Read\n*************\n\nTake a single reading from the sensor.\n\nCode\n^^^^\n::\n\n  from pigpio-dit import DHT11, DHT22\n\n  gpio = 21 # BCM Numbering\n\n  sensor = DHT11(gpio)\n  #sensor = DHT22(gpio)\n\n  result = sensor.read()\n  print(result)\n\nOutput\n^^^^^^\n::\n\n  {'temp_c': 20, 'temp_f': 68.0, 'humidity': 35, 'valid': True}\n\nAlso see\n^^^^^^^^\n\n`read()`__\n\n__ `read(retries=0) raises TimeoutError`_\n\n\nSampled Read\n************\n\nTake many readings (by repeating calling ``read()``) from the sensor and return a normalised result.\n\nCode\n^^^^\n\n::\n\n  from pigpio-dit import DHT11, DHT22\n\n  gpio = 21 # BCM Numbering\n\n  sensor = DHT11(gpio)\n  #sensor = DHT22(gpio)\n\n  result = sensor.sample(samples=5)\n  print(result)\n\nOutput\n^^^^^^\n\n::\n\n  {'temp_c': 20, 'temp_f': 68.0, 'humidity': 35, 'valid': True}\n\nAlso see\n^^^^^^^^\n\n`sample()`__\n\n__ `sample(samples=5, max_retries=None) raises TimeoutError`_\n\nAPI \n---\n\nThe classes ``DHT11`` and ``DHT22`` both extend the base class ``DHTXX`` and share a common the API.\n\nConstructor: DHT11 | DHT22(gpio, timeout_secs=0.5, use_internal_pullup=True, pi=None)\n*************************************************************************************\n\nParameters\n^^^^^^^^^^\n\n- **gpio** GPIO (BCM) pin that data leg of sensor is connected to\n- **timeout_secs** Sensor timeout in second. Default should be adequate unless you receive a TimeoutError advising you to increase the value wuth calling ``read()`` or ``sample()``\n- **use_internal_pullup** - Enable internal pull-up resistor on gpio\n- **pi** a custom instance of ``pigpio.pi()``\n\nread(retries=0) raises TimeoutError\n************************************\n\nTake a single reading from the sensor.\n\nParameters\n^^^^^^^^^^\n\n- **retries** number of times to keep retrying when the result contains ``valid = False``\n\nReturns\n^^^^^^^\nA Dictionary in the form ``{'temp_c': 20, 'temp_f': 68.0, 'humidity': 35, 'valid': True}``\n\nWhere:\n\n- **temp_c** is the temperature in degrees Celsius\n- **temp_f** is the temperature in degrees Fahrenheit\n- **humidity** is the relative humidity\n- **valid** is true only if sensors checksum matches with returned data.\n\n**Discard readings where** ``value == False`` **and try again.**\n\n\nRaises\n^^^^^^\n\nTimeoutError\n\"\"\"\"\"\"\"\"\"\"\"\"\n\n- If the sensor on ``gpio`` does not respond\n- If the sensor responds within ``timeout_secs`` (see _Constructor), but the response cannot be understood by the library. Try increasing ``timeout_secs``\n\nAlso see\n^^^^^^^^\n\n`DHT Sensors are Slow`_\n\nsample(samples=5, max_retries=None) raises TimeoutError\n*******************************************************\n\nTake many readings (by repeating calling ``read()``) from the sensor and return a normalised result.\n\nPlease note that a call to ``sample()`` takes time. For example for the DHT11 with a maximum read rate of once every 1 seconds, 5 samples will take approximately 1 second * 5 samples = 5 seconds.\n\n**Parameters:**\n\n- **samples** number of samples to take\n- **max_retries** maximum number of times to keep retrying *per sample* when the result contains ``valid = False``. Default to samples * 2\n\nRaises\n^^^^^^\n\nTimeoutError\n\"\"\"\"\"\"\"\"\"\"\"\"\n\n- Same as for ``read()``, *plus*\n- If ``max_retries`` is reached", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "https://github.com/garyns/pigpio-dht/archive/master.zip", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/garyns/pigpio-dht", "keywords": "DHT11,DHT22,pigpio,Raspberry Pi,RaspberryPi", "license": "LGPL3", "maintainer": "", "maintainer_email": "", "name": "pigpio-dht", "package_url": "https://pypi.org/project/pigpio-dht/", "platform": "", "project_url": "https://pypi.org/project/pigpio-dht/", "project_urls": {"Download": "https://github.com/garyns/pigpio-dht/archive/master.zip", "Homepage": "https://github.com/garyns/pigpio-dht"}, "release_url": "https://pypi.org/project/pigpio-dht/0.3.2/", "requires_dist": null, "requires_python": "", "summary": "DHT11 & DHT22 Temperature and Humidity Sensor using pigpio", "version": "0.3.2"}, "last_serial": 6491516, "releases": {"0.3.0": [{"comment_text": "", "digests": {"md5": "21acd80afc60f3e2ef4e46ef1111e92d", "sha256": "8ef293b2a54ec9b5ee90b55bec6ed196bc08488f5eaa3daa34983c97122e3426"}, "downloads": -1, "filename": "pigpio-dht-0.3.0.tar.gz", "has_sig": false, "md5_digest": "21acd80afc60f3e2ef4e46ef1111e92d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7036, "upload_time": "2019-12-25T04:20:56", "upload_time_iso_8601": "2019-12-25T04:20:56.512226Z", "url": "https://files.pythonhosted.org/packages/91/a9/c13ebf264a51f10d79d46b0f5014fc75975feebca07d8752b03ba42ad4dc/pigpio-dht-0.3.0.tar.gz"}], "0.3.1": [{"comment_text": "", "digests": {"md5": "59734d8afcf71b82afc0921ea54c4a5f", "sha256": "8c1f4e1796b5a1d1ecebe90b5103f246da4c448297a38378049ec2e20fa31592"}, "downloads": -1, "filename": "pigpio-dht-0.3.1.tar.gz", "has_sig": false, "md5_digest": "59734d8afcf71b82afc0921ea54c4a5f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7028, "upload_time": "2019-12-25T04:35:10", "upload_time_iso_8601": "2019-12-25T04:35:10.615000Z", "url": "https://files.pythonhosted.org/packages/e3/88/3394b8c7f3716c38fbac78431ed6b49c731271b9f4d68b895a89639fa8dc/pigpio-dht-0.3.1.tar.gz"}], "0.3.2": [{"comment_text": "", "digests": {"md5": "8a211dc2aa7bcb97ff320368fb27defb", "sha256": "9cf167d936f32b148045b3e0160f9aee0e18ddffdf14379ef4356e06bb7b37c2"}, "downloads": -1, "filename": "pigpio-dht-0.3.2.tar.gz", "has_sig": false, "md5_digest": "8a211dc2aa7bcb97ff320368fb27defb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6988, "upload_time": "2020-01-21T01:34:23", "upload_time_iso_8601": "2020-01-21T01:34:23.193031Z", "url": "https://files.pythonhosted.org/packages/79/bf/2cce46801fed6fb74bc66d8d1a2ad0d3cc341424e84d2a0b559e0c9c74c9/pigpio-dht-0.3.2.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "8a211dc2aa7bcb97ff320368fb27defb", "sha256": "9cf167d936f32b148045b3e0160f9aee0e18ddffdf14379ef4356e06bb7b37c2"}, "downloads": -1, "filename": "pigpio-dht-0.3.2.tar.gz", "has_sig": false, "md5_digest": "8a211dc2aa7bcb97ff320368fb27defb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6988, "upload_time": "2020-01-21T01:34:23", "upload_time_iso_8601": "2020-01-21T01:34:23.193031Z", "url": "https://files.pythonhosted.org/packages/79/bf/2cce46801fed6fb74bc66d8d1a2ad0d3cc341424e84d2a0b559e0c9c74c9/pigpio-dht-0.3.2.tar.gz"}]}