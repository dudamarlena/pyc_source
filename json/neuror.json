{"info": {"author": "Blue Brain Project, EPFL", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Education", "Intended Audience :: Science/Research", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "NeuroR\n======\n\nIntroduction\n------------\n\nNeuroR is a collection of tools to repair morphologies.\n\nCitation\n--------\n\nCite NeuroR with the following DOI:\n\n.. image:: https://zenodo.org/badge/244944511.svg\n   :target: https://zenodo.org/badge/latestdoi/244944511\n\nNeuroR implements the methods discussed in the following paper:\n\n   Anwar H., Riachi I., Sch\u00fcrmann F., Markram H. (2009). \u201cAn approach to capturing neuron morphological diversity,\u201d\n   in Computational Neuroscience: Realistic Modeling for Experimentalistsed. De Schutter E.,\n   editor. (Cambridge: The MIT Press) 211\u2013232\n\n   `DOI: 10.7551/mitpress/9780262013277.003.0010 <https://doi.org/10.7551/mitpress/9780262013277.003.0010>`__\n   \n   \n\n\nMorphology repair with NeuroR\n-----------------------------\n\nThere are presently three types of repair which are outlined below.\n\nSanitization\n~~~~~~~~~~~~\n\nThis is the process of curating a morphological file. It currently:\n\n- removes zero-length segments\n- raises if the morphology has no soma\n- raises if the morphology has negative diameters\n\nNote: more functionality may be added in the future\n\n\nCut plane repair\n~~~~~~~~~~~~~~~~\n\nThe cut plane repair aims at regrowing part of a morphologies that have been cut out\nwhen the cell has been experimentally sliced.\n\n``neuror cut-plane repair`` contains the collection of CLIs to perform this repair.\n\nAdditionally, there are CLIs for the cut plane detection and writing detected cut planes to\nJSON files:\n\n- If the cut plane is aligned with one of the X, Y or Z axes, the cut plane detection\n  can be done automatically with the CLIs:\n\n.. code-block:: shell\n\n   neuror cut-plane file\n   neuror cut-plane folder\n\n- If the cut plane is not one the X, Y or Z axes, the detection has to be performed\n  through the helper web application that can be launched with the following CLI:\n\n.. code-block:: shell\n\n   neuror cut-plane hint\n\nUnravelling\n~~~~~~~~~~~\n\nUnravelling is the action of \"stretching\" the cell that has been shrunk because of the dehydratation caused by the slicing.\n\nThe unravelling CLI sub-group is:\n\n.. code-block:: shell\n\n   neuror unravel\n\n.. admonition:: Info\n   :class: info\n\n   Unravelling is also part of the \"full\" process that performs unravelling and cut plane repair.\n   The corresponding CLI is:\n\n   .. code-block:: shell\n\n      neuror cut-plane repair full\n\nThe unravelling algorithm can be described as follows:\n\n* Segments are unravelled iteratively.\n* Each segment direction is replaced by the averaged direction in a sliding window around this segment.\n* The original segment length is preserved.\n* The start position of the new segment is the end of the latest unravelled segment.\n\nInstallation\n------------\n\nNeuroR is distributed as a Python package available on PyPi:\n\n.. code-block:: console\n\n    $ pip install --pre neuror[plotly]\n\nNote: NeuroR relies on the experimental version 2 of NeuroM, hence the ``--pre`` option.\n\nOnly Python 3.6 and above are supported.\n\nPrior to running ``pip install``, we recommend updating ``pip`` in your virtual environment unless you have a compelling reason not to do it:\n\n.. code:: console\n\n    $ pip install --upgrade pip setuptools\n\nContributing\n------------\n\nIf you want to improve the project or you see any issue, every contribution is welcome.\nPlease check the `contribution guidelines <https://github.com/BlueBrain/NeuroR/blob/master/CONTRIBUTING.md>`__ for more information.\n\nLicense\n-------\n\nNeuroR is licensed under the terms of the GNU Lesser General Public License version 3.\nRefer to COPYING.LESSER and COPYING for details.", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/bluebrain/neuror", "keywords": "", "license": "LGPLv3", "maintainer": "", "maintainer_email": "", "name": "NeuroR", "package_url": "https://pypi.org/project/NeuroR/", "platform": "", "project_url": "https://pypi.org/project/NeuroR/", "project_urls": {"Homepage": "https://github.com/bluebrain/neuror"}, "release_url": "https://pypi.org/project/NeuroR/1.0.2/", "requires_dist": null, "requires_python": ">=3.6", "summary": "A morphology repair tool", "version": "1.0.2"}, "last_serial": 6888362, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "f5faa8677f5097ff8d06c613d91d895a", "sha256": "9ab372b4bdfcb9b2dcefef9bf6249353b3950d9989cd30343f80f03c2a267b46"}, "downloads": -1, "filename": "NeuroR-1.0.1.tar.gz", "has_sig": false, "md5_digest": "f5faa8677f5097ff8d06c613d91d895a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2335377, "upload_time": "2020-03-23T12:51:56", "upload_time_iso_8601": "2020-03-23T12:51:56.549776Z", "url": "https://files.pythonhosted.org/packages/05/53/e5a913db973f3fa74557da802dff03de12b6de48ffa6dcadd4c33cd56aed/NeuroR-1.0.1.tar.gz"}], "1.0.2": [{"comment_text": "", "digests": {"md5": "703d214f7b375ffb84498584524b48b0", "sha256": "fef04fa4ea8230d7d4bcb294f81e4edb8b8a8064e71b78d34d09a4e393f9cc92"}, "downloads": -1, "filename": "NeuroR-1.0.2.tar.gz", "has_sig": false, "md5_digest": "703d214f7b375ffb84498584524b48b0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2335457, "upload_time": "2020-03-26T14:11:40", "upload_time_iso_8601": "2020-03-26T14:11:40.621574Z", "url": "https://files.pythonhosted.org/packages/f0/ea/2ef797bd80f3a003c6c8777c9fbbf0b388b0f96e65add42fae8fe99c11ed/NeuroR-1.0.2.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "703d214f7b375ffb84498584524b48b0", "sha256": "fef04fa4ea8230d7d4bcb294f81e4edb8b8a8064e71b78d34d09a4e393f9cc92"}, "downloads": -1, "filename": "NeuroR-1.0.2.tar.gz", "has_sig": false, "md5_digest": "703d214f7b375ffb84498584524b48b0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2335457, "upload_time": "2020-03-26T14:11:40", "upload_time_iso_8601": "2020-03-26T14:11:40.621574Z", "url": "https://files.pythonhosted.org/packages/f0/ea/2ef797bd80f3a003c6c8777c9fbbf0b388b0f96e65add42fae8fe99c11ed/NeuroR-1.0.2.tar.gz"}]}