{"info": {"author": "ALiCE Biometrics", "author_email": "support@alicebiometrics.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3"], "description": "# meiga \ud83e\uddd9 [![version](https://img.shields.io/github/release/alice-biometrics/meiga/all.svg)](https://github.com/alice-biometrics/meiga/releases) [![ci](https://github.com/alice-biometrics/meiga/workflows/ci/badge.svg)](https://github.com/alice-biometrics/meiga/actions) [![pypi](https://img.shields.io/pypi/dm/meiga)](https://pypi.org/project/meiga/)\n\n<img src=\"https://github.com/alice-biometrics/custom-emojis/blob/master/images/alice_header.png\" width=auto>\n\nA simple, typed and monad-based Result type for Python. \n\n## Table of Contents\n- [Installation :computer:](#installation-computer)\n- [Getting Started :chart_with_upwards_trend:](#getting-started-chart_with_upwards_trend)\n  * [Example](#example)\n  * [Features](#features)\n    - [Result](#result)\n    - [Functions](#functions)\n    - [Properties](#properties)\n    - [Alias](#alias)\n- [Advance Usage :rocket:](#advance-usage-rocket)\n  * [Unwrap Result](#unwrap-result)\n  * [Handle Result](#handle-result)\n  * [Test Assertions](#test-assertions)\n- [Contact :mailbox_with_mail:](#contact-mailbox_with_mail)\n\n\n## Installation :computer:\n\n~~~\npip install meiga\n~~~\n\n## Getting Started :chart_with_upwards_trend:\t\n\n**Meiga** give us a simpler and clearer way of handling errors in Python. Use it whenever a class method or a function has the possibility of failure. \n\nThis package provides a new type for your Python applications, the **Result[Type, Type]**.\nThis Result type allows to simplify a wide range of problems, like handling potential undefined values, or reduce complexity handling exceptions. Additionally, code can be simplified following a semantic pipeline reducing the visual noise of checking data types, controlling runtime flow and side-effects.\n\nThis package is based in another solutions from another modern languages as the swift-based [Result](https://github.com/antitypical/Result) implementation.\n\n### Example\n\nThe best way to illustrate how **meiga \ud83e\uddd9** can help you is with an example.\n\nConsider the following example of a function that tries to extract a String (str) for a given key from a Dict.\n\n```python\nfrom meiga import Result, Error\n\n\nclass NoSuchKey(Error):\n    pass\n\n\nclass TypeMismatch(Error):\n    pass\n\n\ndef string_from_key(dictionary: dict, key: str) -> Result[str, Error]:\n    if key not in dictionary.keys():\n        return Result(failure=NoSuchKey())\n\n    value = dictionary[key]\n    if not isinstance(value, str):\n        return Result(failure=TypeMismatch())\n\n    return Result(success=value)\n```\n\nResult meiga type provides a robust wrapper around the functions.\nRather than throw an exception, it returns a Result that either contains the String value for the given key, or an ErrorClass detailing what went wrong.\n\n### Features\n\n#### Result\n\n`Result[T, Error]` \ud83d\udc49 A discriminated union that encapsulates successful outcome with a value of type T or a failure with an arbitrary Error exception.\n\n#### Functions\n\n| Functions                       | Definition                                                                                   | \n| --------------------------------|:-------------------------------------------------------------------------------------------- | \n| `throw()`                       | Throws the encapsulated failure value if this instance derive from Error or BaseException.    | \n| `unwrap()`                      | Returns the encapsulated value if this instance represents success or None if it is failure. | \n| `unwrap_or_throw()`             | Returns the encapsulated value if this instance represents success or throws the encapsulated exception if it is failure. |  \n| `unwrap_or_return()`            | Returns the encapsulated value if this instance represents success or return Result as long as `@meiga` decorator wraps the function |  \n| `unwrap_or(failure_value)`      | Returns the encapsulated value if this instance represents success or the selected `failure_value` if it is failure. |  \n| `unwrap_or_else(on_failure)`    | Returns the encapsulated value if this instance represents success or execute the `on_failure` function when it is failure. |   \n| `unwrap_and(on_success)`        | Returns the encapsulated value if this instance represents success and execute the `on_success` function when it is success. |   \n| `handle(on_success,on_failure)` | Returns itself and execute the `on_success`function when the instance represemts success and the `on_failure` function when it is failure. |  \n| `map(transform)`                | Returns a transformed result applying `transform` function applied to encapsulated value if this instance represents success or failure | \n\n\n#### Properties\n\n| Properties      | Definition                                                     | \n| --------------- |:--------------------------------------------------------------| \n| `value`         | Returns the encapsulated value whether it's success or failure | \n| `is_success`    | Returns true if this instance represents successful outcome. In this case is_failure returns false.|   \n| `is_failure`    | Returns true if this instance represents failed outcome. In this case is_success returns false     | \n\n\nLet's image we have a dictionary that represent a user info data\n\n```console\n>>> user_info = {\"first_name\": \"Rosalia\", \"last_name\": \"De Castro\", \"age\": 60}\n```\n\nAnd we try to obtain **first_name** \n\n```console\n>>> result = string_from_key(dictionary=user_info, key=\"first_name\")\nResult[status: success | value: Rosalia]\n```\n\nYou can check the status of the result\n\n```console\n>>> result.is_success\nTrue\n>>> result.is_failure\nFalse\n```\n\nIf the result is a success you can get the expected value\n\n```console\n>>> result.value\nRosalia \n```\n\nOtherwise, if we try to access an invalid key or a non string value, returned result will be a failure.\n\n```console\n>>> result = string_from_key(dictionary=user_info, key=\"invalid_key\")\nResult[status: failure | value: NoSuchKey]\n>>> result.is_failure\nTrue\n>>> result.value\nNoSuchKey() // Error \n```\n\nOr\n\n```console\n>>> result = string_from_key(dictionary=user_info, key=\"age\")\nResult[status: failure | value: TypeMismatch]\n>>> result.is_failure\nTrue\n>>> result.value\nTypeMismatch() // Error \n```\n\n#### Alias\n\nUse meiga aliases to improve the semantics of your code.\n\nFor success result you can use:\n\n```python\nresult = Result(success=\"Rosalia\")\nresult = Success(\"Rosalia\") # it is equivalent\n```\n\nIf return value is a bool you can use:\n\n```python\nresult = Success()\nresult = Success(True)\nresult = isSuccess\n``` \n\nFor failure results:\n\n```python\nclass NoSuchKey(Error):\n    pass\n\nresult = Result(failure=NoSuchKey())\nresult = Failure(NoSuchKey())\n``` \n\nIf you don't want to specify the error, you can use default value with:\n\n```python\nresult = Failure()\nresult = Failure(Error())\nresult = isFailure # Only valid for a failure result with non-specific Error() value\n```\n\nBringing previous example back. that is the way you can use the alias:\n\n```python\nfrom meiga import Result, Error, Success, Failure,\n\n\nclass NoSuchKey(Error):\n    pass\n\n\nclass TypeMismatch(Error):\n    pass\n\n\ndef string_from_key(dictionary: dict, key: str) -> Result[str, Error]:\n    if key not in dictionary.keys():\n        return Failure(NoSuchKey())\n\n    value = dictionary[key]\n    if not isinstance(value, str):\n        return Failure(TypeMismatch())\n\n    return Success(value)\n```\n\n\nFurthermore, there is a available a useful alias: ```NotImplementedMethodError```\n\nUse it when define abstract method that returns Result type\n\n```python\nfrom meiga import Result, Error, NotImplementedMethodError\n\nfrom abc import ABCMeta, abstractmethod\n\nclass AuthService:\n\n    __metaclass__ = ABCMeta\n\n    @abstractmethod\n    def __init__(self, base_url: str):\n        self.base_url = base_url\n\n    @abstractmethod\n    def create_token(self, client: str, client_id: str) -> Result[str, Error]:\n        return NotImplementedMethodError\n```\n\n## Advance Usage :rocket:\n\n### Unwrap Result\n\nIf you *wrap* a Result object, its will return a valid value if it is success. Otherwise, it will return None.\n\n```python\nresult = Result(success=\"Hi!\")\nvalue = result.unwrap()\nassert value == \"Hi!\"\n\nresult = Failure(Error())\nvalue = result.unwrap()\n\nassert value is None\n```\n\n* Check [Functions](#functions) to know more about *unwraping* methods.\n* Check [tests/unit/test_result_unwrap.py](https://github.com/alice-biometrics/meiga/blob/master/tests/unit/test_result_unwrap.py) to see examples of usage.\n\n\nYou can use `unwrap_or_return`in combination with `@meiga` decorator. If something wrong happens unwraping your `Result`, the `unwrap_or_return` function will raise an Exception (ReturnErrorOnFailure). `@meiga` decorator allows to handle the exception in case of error and unwrap the value in case of success. The following example illustrate this:\n\n```python\nfrom meiga import Result, Error\nfrom meiga.decorators import meiga\n\n@meiga\ndef handling_result(key: str) -> Result:\n    user_info = {\"first_name\": \"Rosalia\", \"last_name\": \"De Castro\", \"age\": 60}\n    first_name = string_from_key(dictionary=user_info, key=key).handle() \n    # Do whatever with the name\n    name = first_name.lower()\n    return Result(success=name)\n```\n\nIf key is valid success value would be returned. Otherwise, an Error would be returned.\n\n\n### Handle Result\n\nThis framework also allows a method for handling Result type. `handle` method returns itself and execute the `on_success` function when the instance represemts success and the `on_failure` function when it is failure.\n\n\nWhen the operations is executed with its happy path, handle function returns the success value, as with result.value.\n\n```console\n>>> result = string_from_key(dictionary=user_info, key=\"first_name\")\nResult[status: success | value: Rosalia]\n>>> first_name = result.handle()\nRosalia\n```\n\nIn addition, you can call another function after evaluate the result. Use optional parameters **success_handler** and **failure_handler** (Callable functions).\n\n```python\ndef success_handler():\n    print(\"Do my successful stuff here!\")\n\ndef failure_handler():\n     print(\"Do my failure stuff here!\")\n\n\nresult = string_from_key(dictionary=user_info, key=\"first_name\")\n\nresult.handle(on_success=success_handler, on_failure=failure_handler)\n```\n\n##### Additional parameters\n\nIf you need to add some arguments as a parameters, use **success_args** and **failure_args**:\n\n```python\ndef success_handler(param_1):\n    print(f\"param_1: {param_1}\")\n\ndef failure_handler(param_1, param_2):\n    print(f\"param_1: {param_1}\")\n    print(f\"param_2: {param_2}\")\n\n\nresult = string_from_key(dictionary=user_info, key=\"first_name\")\n\nresult.handle(on_success=success_handler, \n              on_failure=failure_handler,\n              success_args=1,\n              failure_args=(1, 2))\n```\n\n##### Additional parameters in combination with the Result itself\n\nSometimes a handle function will need information about external parameters and also about the result itself. Now, is possible this combination thanks to `Result.__id__` identifier. \n\n```python\n    parameters = (1, Result.__id__, 2)\n\n    def on_success(param_1: int, result: Result, param_2: int):\n        assert param_1 == 1\n        assert isinstance(result, Result)\n        assert result.value is True\n        assert param_2 == 2\n\n    def on_failure(param_1: int, result: Result, param_2: int):\n        assert param_1 == 1\n        assert isinstance(result, Result)\n        assert result.value == Error()\n        assert param_2 == 2\n\n    @meiga\n    def run():\n        result.handle(\n            on_success=on_success,\n            on_failure=on_failure,\n            success_args=parameters,\n            failure_args=parameters,\n        )\n\n    run()\n```\n\n\n\n\n### Test Assertions\n\nTo help us on testing functions that returns Result, meiga provide us two functions: **assert_success** and **access_failure**.\n\nCheck the following pytest-based test for more information: [tests/unit/test_result_assertions.py](https://github.com/alice-biometrics/meiga/blob/master/tests/unit/test_result_assertions.py)\n\n## Contact :mailbox_with_mail:\n\nsupport@alicebiometrics.com\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/alice-biometrics/meiga", "keywords": "Result,Monad,Typed,Typing", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "meiga", "package_url": "https://pypi.org/project/meiga/", "platform": "", "project_url": "https://pypi.org/project/meiga/", "project_urls": {"Homepage": "https://github.com/alice-biometrics/meiga"}, "release_url": "https://pypi.org/project/meiga/1.2.6/", "requires_dist": null, "requires_python": "", "summary": "A simple, typed and monad-based Result type for Python", "version": "1.2.6"}, "last_serial": 7041262, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "da33bab5670be9f7de4197fe3ad6f5a8", "sha256": "65539ce164a5f485a46de206cf287d62d6613b1519f5b78b2b5a447a706da606"}, "downloads": -1, "filename": "meiga-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "da33bab5670be9f7de4197fe3ad6f5a8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7333, "upload_time": "2019-09-03T06:17:40", "upload_time_iso_8601": "2019-09-03T06:17:40.124397Z", "url": "https://files.pythonhosted.org/packages/0d/60/fc979c3a8690b1df589ea112c3495d0419c91a8aa0c7e7841ed6ce077521/meiga-0.0.1-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "1d62da2fde4dd5425dd9d85e0efb20bb", "sha256": "4a12936aa645979c191c6a67f45d1b797f3e317eddd28f4c065ce04a9ee64931"}, "downloads": -1, "filename": "meiga-0.0.1.tar.gz", "has_sig": false, "md5_digest": "1d62da2fde4dd5425dd9d85e0efb20bb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5166, "upload_time": "2019-09-03T06:17:42", "upload_time_iso_8601": "2019-09-03T06:17:42.453924Z", "url": "https://files.pythonhosted.org/packages/b2/6b/4afafc15b0e4f752cdf8611e94e7fa1d04f3c1cadced4d705c60fd516be4/meiga-0.0.1.tar.gz"}], "0.0.2": [{"comment_text": "", "digests": {"md5": "dd0550345710c3f8790bc44e497f1524", "sha256": "a3571d533b46da27fbf52eebb2c1e1293aff9d3eddee16dfecc67c136b93f1ab"}, "downloads": -1, "filename": "meiga-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "dd0550345710c3f8790bc44e497f1524", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7272, "upload_time": "2019-09-03T06:27:41", "upload_time_iso_8601": "2019-09-03T06:27:41.658781Z", "url": "https://files.pythonhosted.org/packages/fd/1b/ff51e46b1a5a33d916d48f017d3cfa274902286ccb61ec5b471bea7bffc6/meiga-0.0.2-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "a2978b1ee22e41f0267d13ba15f30507", "sha256": "5a1890032849bd5945d5d7bfb916c2304da9cfb4e619af71e5c325e1c7f4f0a4"}, "downloads": -1, "filename": "meiga-0.0.2.tar.gz", "has_sig": false, "md5_digest": "a2978b1ee22e41f0267d13ba15f30507", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5099, "upload_time": "2019-09-03T06:27:43", "upload_time_iso_8601": "2019-09-03T06:27:43.494165Z", "url": "https://files.pythonhosted.org/packages/27/d8/d0cd688a7b4021af994f7bde8dbe22760c6f64ef8c38a1e7f02dc955bfb5/meiga-0.0.2.tar.gz"}], "0.0.3": [{"comment_text": "", "digests": {"md5": "ddfaa5d1ca26a4dc0a1a695fbdde27e7", "sha256": "73254a04e34ca820cf510f51ce755e67eaaf0bdd874603fd26f04da9b0952009"}, "downloads": -1, "filename": "meiga-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "ddfaa5d1ca26a4dc0a1a695fbdde27e7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7349, "upload_time": "2019-09-03T09:10:24", "upload_time_iso_8601": "2019-09-03T09:10:24.354611Z", "url": "https://files.pythonhosted.org/packages/ee/4f/9e5a33e82dd5b420ac4ebe9f4ccafdbd9abf35134e90be4d85f67e5e79c6/meiga-0.0.3-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "279d3e5f5f75d5bd4bab0ae1774c4c76", "sha256": "e0ba82cf76dd1ec0dd1240a3dd3f44bc131b4b7e507af056be1c6f3e58a47852"}, "downloads": -1, "filename": "meiga-0.0.3.tar.gz", "has_sig": false, "md5_digest": "279d3e5f5f75d5bd4bab0ae1774c4c76", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5137, "upload_time": "2019-09-03T09:10:25", "upload_time_iso_8601": "2019-09-03T09:10:25.950782Z", "url": "https://files.pythonhosted.org/packages/36/60/54bde0dfe283c95ee86dbdc59492c6b535928071805d7167523c3606c335/meiga-0.0.3.tar.gz"}], "0.1.0": [{"comment_text": "", "digests": {"md5": "8284c7d591013eadd14904e76dfdc953", "sha256": "f5fc22a2723733cc2633b5659fffc56aa2bc9c777e2d0bd9e13a3b5fae596c55"}, "downloads": -1, "filename": "meiga-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8284c7d591013eadd14904e76dfdc953", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7550, "upload_time": "2019-09-03T20:43:47", "upload_time_iso_8601": "2019-09-03T20:43:47.952195Z", "url": "https://files.pythonhosted.org/packages/43/66/081e680caef1702d64291017bc172b919e8434394a0a59e71c9552d25cca/meiga-0.1.0-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "a49f419cb86cf820be34d579a44bd639", "sha256": "29597aa47791920a4d2e092ff5b8e1fd65b2a0f39bcab8406729d247546d489f"}, "downloads": -1, "filename": "meiga-0.1.0.tar.gz", "has_sig": false, "md5_digest": "a49f419cb86cf820be34d579a44bd639", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5120, "upload_time": "2019-09-03T20:43:49", "upload_time_iso_8601": "2019-09-03T20:43:49.558949Z", "url": "https://files.pythonhosted.org/packages/e0/b1/b4a8fa5729ab5a1d239e53d1848026b4032ac02afcc909dbae81f37caf7f/meiga-0.1.0.tar.gz"}], "0.1.1": [{"comment_text": "", "digests": {"md5": "4b66998f397f569176eb1a749d775d2a", "sha256": "7e48209293a8d740f9914254ab50b0cc985f801af72e975eed1ce2d32a6b9b8b"}, "downloads": -1, "filename": "meiga-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4b66998f397f569176eb1a749d775d2a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8565, "upload_time": "2019-09-24T17:24:04", "upload_time_iso_8601": "2019-09-24T17:24:04.904159Z", "url": "https://files.pythonhosted.org/packages/ea/c5/3b0d87c3a572f7c52d333b968631084c05ab74f0a3f54f172b4799bb88e4/meiga-0.1.1-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "0ed9cb7498dea59461673074fd3dd74d", "sha256": "c581496970ef99615a314c9554de146b6460839b3e08c278c0d8776f68542e4a"}, "downloads": -1, "filename": "meiga-0.1.1.tar.gz", "has_sig": false, "md5_digest": "0ed9cb7498dea59461673074fd3dd74d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6012, "upload_time": "2019-09-24T17:24:06", "upload_time_iso_8601": "2019-09-24T17:24:06.770777Z", "url": "https://files.pythonhosted.org/packages/af/9b/daf9b84fdc822db4204ef0518aacca2588cd3439952b968cb39dd16dad1e/meiga-0.1.1.tar.gz"}], "0.1.2": [{"comment_text": "", "digests": {"md5": "87f4c1f99538cc149e9f0eea4887744c", "sha256": "f2127ea8fb80dc6f517363c70a9e016741a985aa23abb75f728090f42996fe2a"}, "downloads": -1, "filename": "meiga-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "87f4c1f99538cc149e9f0eea4887744c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9341, "upload_time": "2019-12-18T11:48:23", "upload_time_iso_8601": "2019-12-18T11:48:23.724125Z", "url": "https://files.pythonhosted.org/packages/e1/89/1ed5fbfe37cd41fa3e5a081cb61db8d96bafee9286a6b04b84a15e0475e4/meiga-0.1.2-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "8920872e601ae31e5fb351fbc03367c1", "sha256": "294c800b7e262123bb750eeffaba8a6a54b1c89ad7fbdc1b73954e78a6be6c2a"}, "downloads": -1, "filename": "meiga-0.1.2.tar.gz", "has_sig": false, "md5_digest": "8920872e601ae31e5fb351fbc03367c1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7033, "upload_time": "2019-12-18T11:48:25", "upload_time_iso_8601": "2019-12-18T11:48:25.439014Z", "url": "https://files.pythonhosted.org/packages/75/0e/371ad07816ad67b5311b14d2a12c06e7fda1d04c4f7db00f8412fe33cc3e/meiga-0.1.2.tar.gz"}], "0.1.3": [{"comment_text": "", "digests": {"md5": "a6cb3ef93c242352d6c3e938a3e71e3c", "sha256": "126341fa6f574e59ff45f067617397335a37cdefacc688966d816dbefde5369d"}, "downloads": -1, "filename": "meiga-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "a6cb3ef93c242352d6c3e938a3e71e3c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9594, "upload_time": "2019-12-19T14:50:39", "upload_time_iso_8601": "2019-12-19T14:50:39.216667Z", "url": "https://files.pythonhosted.org/packages/66/59/0d3924a7f6869dd69e1d491bbd9898a135e3b44d98ef111d82591ccedc51/meiga-0.1.3-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "2f90b0ea92bafb9a441c4f798c28becd", "sha256": "cc34783189179c20bb4ef70255ecd837ac9d795ef06ed8db20068fce07cf165b"}, "downloads": -1, "filename": "meiga-0.1.3.tar.gz", "has_sig": false, "md5_digest": "2f90b0ea92bafb9a441c4f798c28becd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10212, "upload_time": "2019-12-19T14:50:40", "upload_time_iso_8601": "2019-12-19T14:50:40.407969Z", "url": "https://files.pythonhosted.org/packages/42/56/660a1c524ddaf69cae45dce2cd36088556ab6f541943e4d8a4b4028cd222/meiga-0.1.3.tar.gz"}], "0.1.4": [{"comment_text": "", "digests": {"md5": "58a150cac1c54366f85d82813f4cb3cf", "sha256": "9a356695c3031494bb25650f558e2d7122da856c050c1a759e7f975bb4dc0aee"}, "downloads": -1, "filename": "meiga-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "58a150cac1c54366f85d82813f4cb3cf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9680, "upload_time": "2020-01-09T17:18:12", "upload_time_iso_8601": "2020-01-09T17:18:12.421522Z", "url": "https://files.pythonhosted.org/packages/21/e7/359c58bd609a6baf5704944012c240971e8da241829399ffddd21f1d7c4e/meiga-0.1.4-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "cf642d9496579250b9df958e4cd7c49a", "sha256": "295dc1df718d25dca579b0983d6eed29b6ef23ebff286b65c92977063ba4934d"}, "downloads": -1, "filename": "meiga-0.1.4.tar.gz", "has_sig": false, "md5_digest": "cf642d9496579250b9df958e4cd7c49a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10324, "upload_time": "2020-01-09T17:18:14", "upload_time_iso_8601": "2020-01-09T17:18:14.224369Z", "url": "https://files.pythonhosted.org/packages/50/65/e299abaa73f4eca3a1903e23a84f3563bba17c2786e30c9e80673815c9d4/meiga-0.1.4.tar.gz"}], "1.0.0": [{"comment_text": "", "digests": {"md5": "c2bca081cf7db10a5e2e20d1d66f2e70", "sha256": "c4df39448b37bcfd2b95071fac8c2c308754c6da0639b808b04142f8867dd0dc"}, "downloads": -1, "filename": "meiga-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c2bca081cf7db10a5e2e20d1d66f2e70", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10245, "upload_time": "2020-01-20T08:32:51", "upload_time_iso_8601": "2020-01-20T08:32:51.979916Z", "url": "https://files.pythonhosted.org/packages/a2/50/79632adbd7ea4f590eae78d95bfd178e93dd6ebf071f396274e296870309/meiga-1.0.0-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "3692456e93c7b8c52e9b436812b293cb", "sha256": "d3e839084a5698d791ec78e08b1cd29cd7924c4a99c732580c5ed248422e3681"}, "downloads": -1, "filename": "meiga-1.0.0.tar.gz", "has_sig": false, "md5_digest": "3692456e93c7b8c52e9b436812b293cb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11475, "upload_time": "2020-01-20T08:32:53", "upload_time_iso_8601": "2020-01-20T08:32:53.727918Z", "url": "https://files.pythonhosted.org/packages/ce/28/a49aa11e16623a05d5e232307764a998e055dfd7f997f5f0bf6528e06d91/meiga-1.0.0.tar.gz"}], "1.1.0": [{"comment_text": "", "digests": {"md5": "cae3026dbfea09fc2ee0f81e5cabc402", "sha256": "023f82211f388a60bbd05ccb04f06997b6e9ba95cf3faeb61d3c5220bc57ed56"}, "downloads": -1, "filename": "meiga-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "cae3026dbfea09fc2ee0f81e5cabc402", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10305, "upload_time": "2020-01-21T10:22:11", "upload_time_iso_8601": "2020-01-21T10:22:11.860356Z", "url": "https://files.pythonhosted.org/packages/4e/df/7232783022fca14b89239f44dc719d671a038061597620458affc2a7ff6f/meiga-1.1.0-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "ad98d8c702ebf165708c6fe5690652dd", "sha256": "65a93068f0f2dc5ce4abbfed5a3eb60d6dafe5089a0a7be38fe3d35783dbf963"}, "downloads": -1, "filename": "meiga-1.1.0.tar.gz", "has_sig": false, "md5_digest": "ad98d8c702ebf165708c6fe5690652dd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11519, "upload_time": "2020-01-21T10:22:13", "upload_time_iso_8601": "2020-01-21T10:22:13.285958Z", "url": "https://files.pythonhosted.org/packages/ff/9e/2e69cb47b05febbc78d412d5af5119e80431c5c352154d935f7c26db31b8/meiga-1.1.0.tar.gz"}], "1.1.1": [{"comment_text": "", "digests": {"md5": "c3fc42494f23ab5421480e291b4ef17b", "sha256": "cf090ede91987c269512c468d21adefa2e810577fa5f018c90123ba4dfa4cc96"}, "downloads": -1, "filename": "meiga-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c3fc42494f23ab5421480e291b4ef17b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10300, "upload_time": "2020-01-21T18:42:42", "upload_time_iso_8601": "2020-01-21T18:42:42.716360Z", "url": "https://files.pythonhosted.org/packages/f7/ac/c4f72fc27cf34e2284d22a306951bb977c19ccecb6b50773f7419bb9cfa5/meiga-1.1.1-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "8e87175dcd40cd35f148bf51141a99b9", "sha256": "3d9da99cd0b065a3e4b787859584432c3e44c890033678735921402179c872f9"}, "downloads": -1, "filename": "meiga-1.1.1.tar.gz", "has_sig": false, "md5_digest": "8e87175dcd40cd35f148bf51141a99b9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11546, "upload_time": "2020-01-21T18:42:44", "upload_time_iso_8601": "2020-01-21T18:42:44.501371Z", "url": "https://files.pythonhosted.org/packages/22/09/f3f8c99cda5d143da5d4e1f1a09f02bbdac020eaf63b0e46d05489390808/meiga-1.1.1.tar.gz"}], "1.1.2": [{"comment_text": "", "digests": {"md5": "9b4c978a51c1cad8c82284d8af26ac7c", "sha256": "9c725e10545d1e5df1b3c473e862402b8049c1637e93b6850f69effc6d3b6f88"}, "downloads": -1, "filename": "meiga-1.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "9b4c978a51c1cad8c82284d8af26ac7c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10339, "upload_time": "2020-01-22T07:45:43", "upload_time_iso_8601": "2020-01-22T07:45:43.907433Z", "url": "https://files.pythonhosted.org/packages/cd/d2/fc61fc94cc12f2474f4f23c1ebc2cf2816d45a7b170e978ee4225f70426c/meiga-1.1.2-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "8e62727a14e404331a4b2e7d5acf6257", "sha256": "b73acbe448cb6bb5463c233d28861179775e834f56ec46c333861a4233aa8af7"}, "downloads": -1, "filename": "meiga-1.1.2.tar.gz", "has_sig": false, "md5_digest": "8e62727a14e404331a4b2e7d5acf6257", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11622, "upload_time": "2020-01-22T07:45:45", "upload_time_iso_8601": "2020-01-22T07:45:45.027821Z", "url": "https://files.pythonhosted.org/packages/7b/62/f3d2af3f4c48121f34c5ff2ef03bb69adc1d516ad93718fd0d42cf78e5a4/meiga-1.1.2.tar.gz"}], "1.2.0": [{"comment_text": "", "digests": {"md5": "b81b357c41ce9f9aa4b62b062fb9093d", "sha256": "eff01cb4e50af0b1ee57df11e936fd7cddd67e37798922e5965d2af586c76806"}, "downloads": -1, "filename": "meiga-1.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b81b357c41ce9f9aa4b62b062fb9093d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10387, "upload_time": "2020-01-23T17:02:52", "upload_time_iso_8601": "2020-01-23T17:02:52.129178Z", "url": "https://files.pythonhosted.org/packages/e3/78/596d2e8c1c1c1890475850153cbbbad24e727fa7ce0b70c6d4c8e230e4c8/meiga-1.2.0-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "6a513eda810e00ef29fafa656e31b2ba", "sha256": "b236830d32e2acbb7c861554ac56ef2addee8657d65c25a772264d70b61f4342"}, "downloads": -1, "filename": "meiga-1.2.0.tar.gz", "has_sig": false, "md5_digest": "6a513eda810e00ef29fafa656e31b2ba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11687, "upload_time": "2020-01-23T17:02:53", "upload_time_iso_8601": "2020-01-23T17:02:53.416742Z", "url": "https://files.pythonhosted.org/packages/ea/7e/6be2c1329d5ad27a45efcdb5f482ee8a3975f906139821c8e80403f9f3a2/meiga-1.2.0.tar.gz"}], "1.2.1": [{"comment_text": "", "digests": {"md5": "ba375802432d76b20a1121d9f9d701e5", "sha256": "404fcb2e770d4ac297580017ab3e3c91c3a74d56e4f1d0bd3aff836fcd9e1c36"}, "downloads": -1, "filename": "meiga-1.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ba375802432d76b20a1121d9f9d701e5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10514, "upload_time": "2020-02-05T07:39:58", "upload_time_iso_8601": "2020-02-05T07:39:58.783170Z", "url": "https://files.pythonhosted.org/packages/8a/5b/57a460a4fa9b352d7b4c5b875395b742e97bab8614fcc8aa5ba0fdfa2674/meiga-1.2.1-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "2a3700be439bf58d8e17f11a261e9bc3", "sha256": "8cbc1842f58c0f9c2bf4db6a72f17d9a55dbb0be8cf1e2278c8547c7d5b6ad49"}, "downloads": -1, "filename": "meiga-1.2.1.tar.gz", "has_sig": false, "md5_digest": "2a3700be439bf58d8e17f11a261e9bc3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11826, "upload_time": "2020-02-05T07:40:00", "upload_time_iso_8601": "2020-02-05T07:40:00.298096Z", "url": "https://files.pythonhosted.org/packages/2e/6d/84ed4851768de45c2fbe7880b71d2ae1fc49e4a4f8399444124359376c4b/meiga-1.2.1.tar.gz"}], "1.2.2": [{"comment_text": "", "digests": {"md5": "dbc52d349fee87f7c3988a9fd1721112", "sha256": "5b1d7dcbb76198e7fa0633ddbe0dda75990418eaf1a78993e6d8412a0396ba5c"}, "downloads": -1, "filename": "meiga-1.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "dbc52d349fee87f7c3988a9fd1721112", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10669, "upload_time": "2020-02-05T07:52:54", "upload_time_iso_8601": "2020-02-05T07:52:54.739827Z", "url": "https://files.pythonhosted.org/packages/ac/11/e4787d2ffb89add1268299ff069d54aba57ccf52fb7821b9285cf12bc877/meiga-1.2.2-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "5bb1ea97b96b22d3e6aabde86610bd67", "sha256": "760992734ee440e25a26e57de47c6fb90846d61132aa1d3124ce6bd46d6df708"}, "downloads": -1, "filename": "meiga-1.2.2.tar.gz", "has_sig": false, "md5_digest": "5bb1ea97b96b22d3e6aabde86610bd67", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11982, "upload_time": "2020-02-05T07:52:56", "upload_time_iso_8601": "2020-02-05T07:52:56.354353Z", "url": "https://files.pythonhosted.org/packages/62/be/6746b483b10c7da90702b3c6f594ec7a59db8e5abbce0a7d198cf82ce8ee/meiga-1.2.2.tar.gz"}], "1.2.3": [{"comment_text": "", "digests": {"md5": "cccb672b7715340919b4d53774e755a4", "sha256": "fe3a88c5dfffacd85d1c24ed6885c7753762e06e741317a39a782b3c58a9bf85"}, "downloads": -1, "filename": "meiga-1.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "cccb672b7715340919b4d53774e755a4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11361, "upload_time": "2020-03-11T10:06:46", "upload_time_iso_8601": "2020-03-11T10:06:46.875222Z", "url": "https://files.pythonhosted.org/packages/ae/59/99e936a1f74d46bad6e1da3e4ac950c914bb40c0e851bc54639441c61e92/meiga-1.2.3-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "95baea867c3af3b29e478e8f31b184b5", "sha256": "69d7a6c193f186d85d587bf713062ed4d5dade864950fa4302f86d9c6bffe1e0"}, "downloads": -1, "filename": "meiga-1.2.3.tar.gz", "has_sig": false, "md5_digest": "95baea867c3af3b29e478e8f31b184b5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13499, "upload_time": "2020-03-11T10:06:48", "upload_time_iso_8601": "2020-03-11T10:06:48.189628Z", "url": "https://files.pythonhosted.org/packages/57/b2/959d46c34dcb6dc84ceebcdbf39a722aa3cd5f23e734190935e23997658c/meiga-1.2.3.tar.gz"}], "1.2.4": [{"comment_text": "", "digests": {"md5": "aef5c180ab2e691d5fd161ae8c730d71", "sha256": "44e2a6f62727257a9c5746b0010eb771fe9c79c42838e47820c7f03a89ee35d7"}, "downloads": -1, "filename": "meiga-1.2.4-py3-none-any.whl", "has_sig": false, "md5_digest": "aef5c180ab2e691d5fd161ae8c730d71", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11401, "upload_time": "2020-03-27T19:54:44", "upload_time_iso_8601": "2020-03-27T19:54:44.433836Z", "url": "https://files.pythonhosted.org/packages/27/7d/e47a43c7011bbc2958119e113a7f589a026704efa491c778a9adbab5b260/meiga-1.2.4-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "44a95b3040398d395b570af76da24562", "sha256": "890b79d66e0c78f88ac0edc279af5f3d566c82c5890aa08162765e386e89bde2"}, "downloads": -1, "filename": "meiga-1.2.4.tar.gz", "has_sig": false, "md5_digest": "44a95b3040398d395b570af76da24562", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13507, "upload_time": "2020-03-27T19:54:49", "upload_time_iso_8601": "2020-03-27T19:54:49.075003Z", "url": "https://files.pythonhosted.org/packages/6a/40/0b5d1123b274ebcc711ed6b5d19d0c7202aee98923453520b19463241f81/meiga-1.2.4.tar.gz"}], "1.2.5": [{"comment_text": "", "digests": {"md5": "05db1d03c72950bc095592ae9fbd430b", "sha256": "b72688b338f2d3a9b81d061fe1d7fdfb5cdcbcf2f5a1fa18764181cf1946c16f"}, "downloads": -1, "filename": "meiga-1.2.5-py3-none-any.whl", "has_sig": false, "md5_digest": "05db1d03c72950bc095592ae9fbd430b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11618, "upload_time": "2020-04-17T15:40:02", "upload_time_iso_8601": "2020-04-17T15:40:02.557602Z", "url": "https://files.pythonhosted.org/packages/1f/1f/65d46ec027140890497ae29bb13e96775d556c6bbb310729177c5a134394/meiga-1.2.5-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "0743a1386bf95b7e19ff7c727c4f08ca", "sha256": "44cfcdc63a6cb73c9d85db9403935ee484e1ae2ff6dbb346f688267abcce9a42"}, "downloads": -1, "filename": "meiga-1.2.5.tar.gz", "has_sig": false, "md5_digest": "0743a1386bf95b7e19ff7c727c4f08ca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13606, "upload_time": "2020-04-17T15:40:03", "upload_time_iso_8601": "2020-04-17T15:40:03.630711Z", "url": "https://files.pythonhosted.org/packages/7b/d9/03d6aa63dffa3532c13ffc6d99235b73f858b3c6e7ad6db16fcf6304bbe7/meiga-1.2.5.tar.gz"}], "1.2.6": [{"comment_text": "", "digests": {"md5": "4a5082c7e9f30b400ed0f4daafc458f3", "sha256": "6167c9385a1dbd915bc84738fb0e31b164b70d736e98452a5be32ebfc6ee186a"}, "downloads": -1, "filename": "meiga-1.2.6-py3-none-any.whl", "has_sig": false, "md5_digest": "4a5082c7e9f30b400ed0f4daafc458f3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11602, "upload_time": "2020-04-17T15:53:46", "upload_time_iso_8601": "2020-04-17T15:53:46.584444Z", "url": "https://files.pythonhosted.org/packages/b8/df/24445f31b3f774ceeb231e62dcd8e22bb4aea50c3828a2ab77e872ce5c69/meiga-1.2.6-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "577c0069f724c3b9e2b998f6b006749f", "sha256": "e6aded2f201f6ab24c656809aea7d6569b9f28d6733e2218a664790f69c20fd1"}, "downloads": -1, "filename": "meiga-1.2.6.tar.gz", "has_sig": false, "md5_digest": "577c0069f724c3b9e2b998f6b006749f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13560, "upload_time": "2020-04-17T15:53:48", "upload_time_iso_8601": "2020-04-17T15:53:48.321967Z", "url": "https://files.pythonhosted.org/packages/f3/6a/6bb498ebeceab4f9fd48d1f0f847ae81a3975b40f1538100b0aa0cea10ea/meiga-1.2.6.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "4a5082c7e9f30b400ed0f4daafc458f3", "sha256": "6167c9385a1dbd915bc84738fb0e31b164b70d736e98452a5be32ebfc6ee186a"}, "downloads": -1, "filename": "meiga-1.2.6-py3-none-any.whl", "has_sig": false, "md5_digest": "4a5082c7e9f30b400ed0f4daafc458f3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11602, "upload_time": "2020-04-17T15:53:46", "upload_time_iso_8601": "2020-04-17T15:53:46.584444Z", "url": "https://files.pythonhosted.org/packages/b8/df/24445f31b3f774ceeb231e62dcd8e22bb4aea50c3828a2ab77e872ce5c69/meiga-1.2.6-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "577c0069f724c3b9e2b998f6b006749f", "sha256": "e6aded2f201f6ab24c656809aea7d6569b9f28d6733e2218a664790f69c20fd1"}, "downloads": -1, "filename": "meiga-1.2.6.tar.gz", "has_sig": false, "md5_digest": "577c0069f724c3b9e2b998f6b006749f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13560, "upload_time": "2020-04-17T15:53:48", "upload_time_iso_8601": "2020-04-17T15:53:48.321967Z", "url": "https://files.pythonhosted.org/packages/f3/6a/6bb498ebeceab4f9fd48d1f0f847ae81a3975b40f1538100b0aa0cea10ea/meiga-1.2.6.tar.gz"}]}