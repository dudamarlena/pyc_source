{"info": {"author": "Peter Bedn\u00e1r", "author_email": "peter.bednar@tuke.sk", "bugtrack_url": null, "classifiers": [], "description": "# conllutils\n\nUtility classes and functions for parsing and indexing files in CoNLL-U format.\n\n## Code samples\n\n### Working with sentences and tokens\n\n```python\nfrom conllutils import Sentence, Token\nfrom conllutils import FORM\n\ns = \"\"\"\\\n# sent_id = 2\n# text = I have no clue.\n1\tI\tI\tPRON\tPRP\tCase=Nom|Number=Sing|Person=1\t2\tnsubj\t_\t_\n2\thave\thave\tVERB\tVBP\tNumber=Sing|Person=1|Tense=Pres\t0\troot\t_\t_\n3\tno\tno\tDET\tDT\tPronType=Neg\t4\tdet\t_\t_\n4\tclue\tclue\tNOUN\tNN\tNumber=Sing\t2\tobj\t_\tSpaceAfter=No\n\n\"\"\"\n# parse Sentence object from a string\n# by default, the values of FEATS field are stored as the strings\n# to access Universal features directly, set parse_feats=True to parse FEATS values to dictionaries\nsentence = Sentence.from_conllu(s, parse_feats=True)\n\n# sentences and tokens are parsed as the list and dictionary types\n# use indexing to access words and fields\nfirst = sentence[0]\nprint(first['form'])    # field keys are in lower-case\nprint(first[FORM])      # library defines constants for field names\nprint(first.upos)       # fields are accessible also as the token attributes\nprint(first.feats['Case'])  # FEATS parsed to dictionaries\n\n# you can modify tokens and sentences or create a new one\ndot = Token(id=5, form='.', lemma='.', upos='PUNCT', head=2, deprel='punct')\nsentence.append(dot)    # add '.' at the end of the sentence\n# print modified sentence in CoNLL-U format\nprint(sentence.to_conllu())\n\n# transform sentence to dependency tree representation\ntree = sentence.to_tree()\nprint(tree.root.token.form) # print root FORM\nprint(tree.is_projective()) # is tree projective?\nfor child in tree.root:\n    print(child.token.form) # iterate over root's direct children\nfor leaf in tree.leaves():\n    print(leaf.token.form)  # iterate over all leaves\n```\n\n### Indexing for machine learning\n\n```python\nimport numpy as np\nfrom conllutils import FORM, LEMMA\nfrom conllutils import read_conllu, create_index, map_to_instances, shuffled_stream\nfrom conllutils import create_inverse_index\n\ntrain_file = 'en_ewt-ud-train.conllu'\ntest_file = 'en_ewt-ud-test.conllu'\n\n# the first pass over the training data - create an index\n\n# read CoNLL-U file and return an interator over the parsed sentences\n# skip empty and multiword tokens\ntrain_sentences = read_conllu(train_file, skip_empty=True, skip_multiword=True)\n# create an index of string values for all fields\n# for FORM and LEMMA keep only the words with frequency of occurences >= 5\nindex = create_index(train_sentences, min_frequency={FORM: 5, LEMMA:5})\n\n# print number of indexed values for each field\nfor field in sorted(index):\n    # index[field] is a nested dictionary mapping string value to integer index\n    print(f\"{field}:\\t{len(index[field])}\")\n\n# the second pass - map sentences to indexed instances\n\ntrain_sentences = read_conllu(train_file, skip_empty=True, skip_multiword=True)\ntrain_instances = map_to_instances(train_sentences, index)\n# train_instances is an iterator over training instances\n\n# model training\n\nnp.random.seed(1)   # init random state\n# iterate over randomly shuffled training data and form the batches\nfor batch in shuffled_stream(train_instances, total_size=10000, batch_size=100):\n    # each batch is a list of 100 instances/sentences\n    for instance in batch:\n        # length of the instance (number of words in the sentence)\n        num_words = instance.length\n        # instance values are NumPy np.int arrays of continuous indexes for the whole sentence\n        forms = instance.form\n        heads = instance.head\n        # here you can update the model parameters according to instance values\n        # ...\n\n# model testing\n\n# iterate over the testing data\ntest_sentences = read_conllu(test_file, skip_empty=True, skip_multiword=True)\n# for the indexing use the index generated from the training sentences\ntest_instances = map_to_instances(test_sentences, index)\nfor instance in test_instances:\n    # here you can call your model to predict outputs for a testing instance\n    pass\n\n# scoring of the new sentence\n\ns = \"\"\"\\\n# sent_id = 1\n# text = They buy and sell books.\n1\tThey\tthey\tPRON\tPRP\tCase=Nom|Number=Plur\t_\t_\t_\t_\n2\tbuy\tbuy\tVERB\tVBP\tNumber=Plur|Person=3|Tense=Pres\t_\t_\t_\t_\n3\tand\tand\tCCONJ\tCC\t_\t_\t_\t_\t_\n4\tsell\tsell\tVERB\tVBP\tNumber=Plur|Person=3|Tense=Pres\t_\t_\t_\t_\n5\tbooks\tbook\tNOUN\tNNS\tNumber=Plur\t_\t_\t_\tSpaceAfter=No\n6\t.\t.\tPUNCT\t.\t_\t_\t_\t_\t_\n\n\"\"\"\n# index instance\nsentence = Sentence.from_conllu(s)\ninstance = sentence.to_instance(index)\n\n# here you can call your model to predict outputs for a new instance\n# add HEAD and DEPREL\ninstance.head = np.array([2, 0, 4, 2, 2, 2], dtype=np.int)\n# [3, 5, 14, 11, 7, 1] are corresponding indexes of \"nsubj\", \"root\", \"cc\", \"conj\", \"obj\", \"punct\"\ninstance.deprel = np.array([3, 5, 14, 11, 7, 1], dtype=np.int)\n\n# revert instance to sentence\ninverse_index = create_inverse_index(index)\nscored = instance.to_sentence(inverse_index)\n# print sentence with the new fields\nprint(scored.to_conllu())\n```\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/peterbednar/conllutils", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "conllutils", "package_url": "https://pypi.org/project/conllutils/", "platform": "", "project_url": "https://pypi.org/project/conllutils/", "project_urls": {"Homepage": "https://github.com/peterbednar/conllutils"}, "release_url": "https://pypi.org/project/conllutils/1.0.0/", "requires_dist": ["numpy"], "requires_python": "", "summary": "Utility classes and functions for parsing and indexing files in CoNLL-U format.", "version": "1.0.0"}, "last_serial": 7023513, "releases": {"0.9.0": [{"comment_text": "", "digests": {"md5": "24cac1b54ef843cb9c6d714c0773179d", "sha256": "d566c27e78398f57cc2ddebe81f113577a2cff70f6476c9afab8148bdd0572c2"}, "downloads": -1, "filename": "CoNLLUtils-0.9.0.tar.gz", "has_sig": false, "md5_digest": "24cac1b54ef843cb9c6d714c0773179d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4619, "upload_time": "2019-09-04T21:22:48", "upload_time_iso_8601": "2019-09-04T21:22:48.144917Z", "url": "https://files.pythonhosted.org/packages/ba/e6/754ea78a8c5d5b928128c2069781f84f92a5a1ab110df282260cbaf238da/CoNLLUtils-0.9.0.tar.gz"}], "0.9.1": [{"comment_text": "", "digests": {"md5": "2ea79a55963e36482132a8e02ad00dcc", "sha256": "3e315d994635da58ba5641aec2e4031779a4c37ad2c8e28169335473bdb9e044"}, "downloads": -1, "filename": "CoNLLUtils-0.9.1.tar.gz", "has_sig": false, "md5_digest": "2ea79a55963e36482132a8e02ad00dcc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4724, "upload_time": "2019-09-18T12:33:44", "upload_time_iso_8601": "2019-09-18T12:33:44.158781Z", "url": "https://files.pythonhosted.org/packages/43/88/7ead39e441acb6bc4ac8cc30d6f33d1864d2a7acde1db9d0c22856fe8ec3/CoNLLUtils-0.9.1.tar.gz"}], "0.9.2": [{"comment_text": "", "digests": {"md5": "abe810b129ca11433102c20f9ab14510", "sha256": "be0993f7b54ec2c54c744c58dc7cad17ed02d0d7d4c1a80b6621ab21dd9fde76"}, "downloads": -1, "filename": "CoNLLUtils-0.9.2.tar.gz", "has_sig": false, "md5_digest": "abe810b129ca11433102c20f9ab14510", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4786, "upload_time": "2019-10-23T11:51:50", "upload_time_iso_8601": "2019-10-23T11:51:50.284628Z", "url": "https://files.pythonhosted.org/packages/e6/31/128478ce10546e54b29a599ce5de6894fb4122fe72bb4d9fdfcc54cccd0a/CoNLLUtils-0.9.2.tar.gz"}], "0.9.3": [{"comment_text": "", "digests": {"md5": "4c4484fc9539a43087f5e3ba7ca49cc1", "sha256": "a66cd85ec604c922e30973338f91b92d359b5022fc3b2f82b8f143289a1ae35e"}, "downloads": -1, "filename": "CoNLLUtils-0.9.3.tar.gz", "has_sig": false, "md5_digest": "4c4484fc9539a43087f5e3ba7ca49cc1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7079, "upload_time": "2020-03-30T20:22:41", "upload_time_iso_8601": "2020-03-30T20:22:41.269318Z", "url": "https://files.pythonhosted.org/packages/1d/ba/1a82d2d760f2c95c5744423ddf77898ad1f993b8b4eae5dbb6192550c821/CoNLLUtils-0.9.3.tar.gz"}], "0.9.4": [{"comment_text": "", "digests": {"md5": "9abef02e1a6012ef4f9d6d64a3010ee0", "sha256": "becaeb650344090cf96564d06bba0829a2ba4bb572919201ef4b8b46ec604b5a"}, "downloads": -1, "filename": "CoNLLUtils-0.9.4-py3-none-any.whl", "has_sig": false, "md5_digest": "9abef02e1a6012ef4f9d6d64a3010ee0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14894, "upload_time": "2020-04-13T19:26:36", "upload_time_iso_8601": "2020-04-13T19:26:36.074445Z", "url": "https://files.pythonhosted.org/packages/35/a2/1b5dd7fe004216d7cd4d882b58c752f5ef13b1796e4d17fd30d3b69242d8/CoNLLUtils-0.9.4-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "3c6bdaa5bc3892bc6ac3cb5a7b5f3d49", "sha256": "518f6b9dd294c481d1bf41145f5dc46ccd148a62f389fc725f324d22f57ffcb0"}, "downloads": -1, "filename": "CoNLLUtils-0.9.4.tar.gz", "has_sig": false, "md5_digest": "3c6bdaa5bc3892bc6ac3cb5a7b5f3d49", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14324, "upload_time": "2020-04-13T19:26:39", "upload_time_iso_8601": "2020-04-13T19:26:39.463345Z", "url": "https://files.pythonhosted.org/packages/bf/66/354032599616ad4af25435fbcc89c8d2c5b1d1b9da68b4c88003beba21be/CoNLLUtils-0.9.4.tar.gz"}], "1.0.0": [{"comment_text": "", "digests": {"md5": "6229fb8e28e5138338358e3ffbad69bc", "sha256": "bb013a1e004903e183a608ae67a22c2f96af85d3e32841aebdede838a20f4870"}, "downloads": -1, "filename": "conllutils-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "6229fb8e28e5138338358e3ffbad69bc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16805, "upload_time": "2020-04-15T09:52:58", "upload_time_iso_8601": "2020-04-15T09:52:58.257553Z", "url": "https://files.pythonhosted.org/packages/eb/c0/c8f2102a746aa39596b49af1947888214bb5cd7c9c0315197224bf2e4038/conllutils-1.0.0-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "bf4a8f5069ea545d719bc91f19776b84", "sha256": "4030b3b1ef4cda0377fedff1b758e16d227f961e280d023e9fdb5ab10b0f3ae7"}, "downloads": -1, "filename": "conllutils-1.0.0.tar.gz", "has_sig": false, "md5_digest": "bf4a8f5069ea545d719bc91f19776b84", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16590, "upload_time": "2020-04-15T09:53:03", "upload_time_iso_8601": "2020-04-15T09:53:03.246780Z", "url": "https://files.pythonhosted.org/packages/51/d8/5466e316692699f133c575a8f8885cfa68e4f01f03868598eb1ba14205a8/conllutils-1.0.0.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "6229fb8e28e5138338358e3ffbad69bc", "sha256": "bb013a1e004903e183a608ae67a22c2f96af85d3e32841aebdede838a20f4870"}, "downloads": -1, "filename": "conllutils-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "6229fb8e28e5138338358e3ffbad69bc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16805, "upload_time": "2020-04-15T09:52:58", "upload_time_iso_8601": "2020-04-15T09:52:58.257553Z", "url": "https://files.pythonhosted.org/packages/eb/c0/c8f2102a746aa39596b49af1947888214bb5cd7c9c0315197224bf2e4038/conllutils-1.0.0-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "bf4a8f5069ea545d719bc91f19776b84", "sha256": "4030b3b1ef4cda0377fedff1b758e16d227f961e280d023e9fdb5ab10b0f3ae7"}, "downloads": -1, "filename": "conllutils-1.0.0.tar.gz", "has_sig": false, "md5_digest": "bf4a8f5069ea545d719bc91f19776b84", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16590, "upload_time": "2020-04-15T09:53:03", "upload_time_iso_8601": "2020-04-15T09:53:03.246780Z", "url": "https://files.pythonhosted.org/packages/51/d8/5466e316692699f133c575a8f8885cfa68e4f01f03868598eb1ba14205a8/conllutils-1.0.0.tar.gz"}]}