{"info": {"author": "FraudLabs Pro", "author_email": "support@fraudlabspro.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# FraudLabs Pro Python SDK\n\nThis Python module enables user to easily implement fraud detection feature into their solution using the API from https://www.fraudlabspro.com.\n\n\n\nBelow are the features of this Python module:\n\n* Fraud analysis and scoring\n* Credit card issuing bank validation\n* SMS verification and validation\n\nThis module requires API key to function. You may subscribe a free API key at https://www.fraudlabspro.com\n\n\n\n\n\n## Usage Example\n\n### Validate Order\n\n#### Object Properties\n\n\n\n| Property Name        | Property Type | Description                                                  |\n| -------------------- | ------------- | ------------------------------------------------------------ |\n| ip                   | string        | IP address of online transaction. It supports both IPv4 and IPv6 address format. |\n| billing->firstName   | string        | User's first name.                                           |\n| billing->lastName    | string        | User's last name.                                            |\n| billing->username    | string        | User's username.                                             |\n| billing->password    | string        | User's password.                                             |\n| billing->email       | string        | User's email address.                                        |\n| billing->phone       | string        | User's phone number.                                         |\n| billing->address     | string        | Street address of billing address.                           |\n| billing->city        | string        | City of billing address.                                     |\n| billing->state       | string        | State of billing address. It supports state codes, e.g. NY (New York), for state or province of United States or Canada. Please refer to [State & Province Codes](https://www.fraudlabspro.com/developer/reference/state-and-province-codes) for complete list. |\n| billing->postcode    | string        | Postal or ZIP code of billing address.                       |\n| billing->country     | string        | Country of billing address. It requires the input of ISO-3166 alpha-2 country code, e.g. US for United States. Please refer to [Country Codes](https://www.fraudlabspro.com/developer/reference/country-codes) for complete list. |\n| order->orderId       | string        | Merchant identifier to uniquely identify a transaction. It supports maximum of 15 characters user order id input. |\n| order->note          | string        | Merchant description of an order transaction. It supports maximum of 200 characters. |\n| order->amount        | float         | Amount of the transaction.                                   |\n| order->quantity      | integer       | Total quantity of the transaction.                           |\n| order->currency      | string        | Currency code used in the transaction. It requires the input of ISO-4217 (3 characters) currency code, e.g. USD for US Dollar. Please refer to [Currency Codes](https://www.fraudlabspro.com/developer/reference/currency-codes) for complete list. |\n| order->department    | string        | Merchant identifier to uniquely identify a product or service department. |\n| order->paymentMethod | string        | Payment mode of transaction. Please see references section.  |\n| card->number         | string        | Billing credit card number or BIN number.                    |\n| card->avs            | string        | The single character AVS result returned by the credit card processor. Please refer to [AVS & CVV2 Response Codes](https://www.fraudlabspro.com/developer/reference/avs-and-cvv2-response-codes) for details. |\n| card->cvv            | string        | The single character CVV2 result returned by the credit card processor. Please refer to [AVS & CVV2 Response Codes](https://www.fraudlabspro.com/developer/reference/avs-and-cvv2-response-codes) for details. |\n| shipping->address    | string        | Street address of shipping address.                          |\n| shipping->city       | string        | City of shipping address.                                    |\n| shipping->state      | string        | State of shipping address. It supports state codes, e.g. NY - New York, for state or province of United States or Canada. Please refer to [State & Province Codes](https://www.fraudlabspro.com/developer/reference/state-and-province-codes) for complete list. |\n| shipping->postcode   | string        | Postal or ZIP code of shipping address.                      |\n| shipping->country    | string        | Country of shipping address. It requires the input of ISO-3166 alpha-2 country code, e.g. US for United States. Please refer to [Country Codes](https://www.fraudlabspro.com/developer/reference/country-codes) for complete list. |\n\n\n\n```python\n # import SDK to use the function\nfrom libs.order import Order\n\n # Configure your API key\napi_key = 'YOUR_API_KEY'\n\n # Order Details\ndict1 = {\n\t'key': api_key,\n\t'ip': '146.112.62.105',\n\t'order': {\n\t\t'order_id': '67398', \n\t\t'currency': 'USD',\n\t\t'amount': '42',\n\t\t'quantity': 1, \n\t\t'paymentMethod': 'creditcard'\n\t},\n\t'card': {\n\t\t'number': '4556553172971283'\n\t},\n\t'billing': {\n\t\t'firstName': 'Hector',\n\t\t'lastName': 'Henderson',\n\t\t'email': 'hh5566@gmail.com',\n\t\t'phone': '561-628-8674',\n\t\t'address': '1766 Powder House Road',\n\t\t'city': 'West Palm Beach',\n\t\t'state': 'FL',\n\t\t'postcode': '33401',\n\t\t'country': 'US',\n\t},\n\t'shipping': {\n\t\t'address': '4469 Chestnut Street',\n\t\t'city'   : 'Tampa',\n\t\t'state'  : 'FL',\n\t\t'postcode': '33602',\n\t\t'country': 'US',\n\t}\n}\n\n # Sends the order details to FraudLabs Pro\nresult = Order.validate(dict1)\n```\n\n\n\n### Get Transaction\n\n#### Parameter Properties\n\n| Parameter Name | Parameter Type | Description                                                  |\n| -------------- | -------------- | ------------------------------------------------------------ |\n| $id            | string         | FraudLabs Pro transaction ID or Order ID.                    |\n| $type          | string         | ID type. Either: **FraudLabsPrp::FLP_ID** or **FraudLabsPro::ORDER_ID** |\n\n```python\n # import SDK to use the function\nfrom libs.order import Order\n\n # Configure your API key\napi_key = 'YOUR_API_KEY'\n\n # Values to get transaction details\nget_transaction_variables = {\n\t'key': api_key,\n\t'id': '20180705-WISXW2',\n\t'id_type': 'FraudLabsPro::FLP_ID'\n}\n\n # Send the values to FraudLabs Pro\nresult = Order.get_transaction(get_transaction_variables)\n```\n\n\n\n### Feedback\n\n#### Object Properties\n\n| Property Name | Property Type | Description                                                  |\n| ------------- | ------------- | ------------------------------------------------------------ |\n| id            | string        | Unique transaction ID generated from **Validate** function.  |\n| status        | string        | Perform APPROVE, REJECT, or REJECT_BLACKLIST action to transaction.\tRefer to [reference section](#feedback-status) for status code. |\n| note          | string        | Notes for the feedback request.                              |\n\n```python\n # import SDK to use the function\nfrom libs.order import Order\n\n # Configure your API key\napi_key = 'YOUR_API_KEY'\n\n # Set feedback of the particular order\nfeedback_variables = {\n\t'key': api_key,\n\t'id': '20180705-WISXW2',\n\t# Three actions available: APPROVE, REJECT, REJECT_BLACKLIST\n\t'action': 'APPROVE',\n\t'notes': 'This is for testing purpose.',\n}\n\nOrder.feedback(feedback_variables)\n```\n\n\n\n## SMS Verification\n\n### Send SMS Verification\n\n#### Object Properties\n\n| Property Name | Property Type | Description                                                  |\n| ------------- | :-----------: | ------------------------------------------------------------ |\n| tel           |    string     | The recipient mobile phone number in E164 format which is a plus followed by just numbers with no spaces or parentheses. |\n| mesg          |    string     | The message template for the SMS. Add <otp> as placeholder for the actual OTP to be generated. Max length is 140 characters. |\n| country_code  |    string     | ISO 3166 country code for the recipient mobile phone number. If parameter is supplied, then some basic telephone number validation is done. |\n\n```python\n # import SDK to use the function\nfrom libs.smsverification import SMSVerification\n\n # Configure your API key\napi_key = 'YOUR_API_KEY'\n\n # Send SMS verification\nsms_verification_variables = {\n\t'key': api_key,\n\t'tel': '+15616288674',\n\t'country_code': 'US',\n\t'mesg': 'Your OTP for the transaction is <otp>.',\n}\nresult = SMSVerification.send_sms(sms_verification_variables)\n```\n\n\n\n### Get SMS Verification Result\n\n#### Object Properties\n\n| Property Name | Property Type | Description                                                  |\n| ------------- | :-----------: | ------------------------------------------------------------ |\n| tran_id       |    string     | The unique ID that was returned by the Send SMS Verification that triggered the OTP sms. |\n| otp           |    string     | The OTP that was sent to the recipient\u00e2\u20ac\u2122s phone.              |\n\n```python\n # import SDK to use the function\nfrom libs.smsverification import SMSVerification\n\n # Configure your API key\napi_key = 'YOUR_API_KEY'\n\n # Get SMS verification result\nverify_sms_variables = {\n\t'key': api_key,\n\t'tran_id': 'UNIQUE_TRANS_ID',\n\t'otp': 'OTP_RECEIVED',\n}\nresult = SMSVerification.verify_sms(verify_sms_variables)\n```\n\n\n\n# Reference\n\n#### Payment Method\n\n| Payment Method |\n| -------------- |\n| creditcard     |\n| paypal         |\n| googlecheckout |\n| bitcoin        |\n| cod            |\n| moneyorder     |\n| wired          |\n| bankdeposit    |\n| others         |\n\n\n\nLICENCE\n=====================\nSee the LICENSE file.\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://www.fraudlabspro.com", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "fraudlabspro", "package_url": "https://pypi.org/project/fraudlabspro/", "platform": "", "project_url": "https://pypi.org/project/fraudlabspro/", "project_urls": {"Homepage": "https://www.fraudlabspro.com"}, "release_url": "https://pypi.org/project/fraudlabspro/1.1.1/", "requires_dist": null, "requires_python": "", "summary": "A Python module enables user to easily implement fraud detection feature into their solution using the API from https://www.fraudlabspro.com.", "version": "1.1.1"}, "last_serial": 6251133, "releases": {"1.1.1": [{"comment_text": "", "digests": {"md5": "a3e7b93d8fc2fc77d6be3f281f20210c", "sha256": "c711cb43f12fc8192f21f04e637f1654d9a950f7dab0e4283426bd35324daf4d"}, "downloads": -1, "filename": "fraudlabspro-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a3e7b93d8fc2fc77d6be3f281f20210c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8425, "upload_time": "2019-12-06T00:37:59", "upload_time_iso_8601": "2019-12-06T00:37:59.108521Z", "url": "https://files.pythonhosted.org/packages/d4/a2/6f43db8829b3b766a306ca9b61457cfea1484abf92946310e63e36b0d9d4/fraudlabspro-1.1.1-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "ecf0a126fb4a2eace4d8696e6ee94335", "sha256": "696e47f5936e1acd8dc81d3a4165ef5a47fb605eb2db432a57f012797486d3df"}, "downloads": -1, "filename": "fraudlabspro-1.1.1.tar.gz", "has_sig": false, "md5_digest": "ecf0a126fb4a2eace4d8696e6ee94335", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6392, "upload_time": "2019-12-06T00:38:04", "upload_time_iso_8601": "2019-12-06T00:38:04.359661Z", "url": "https://files.pythonhosted.org/packages/d6/cc/86bcc472acebf805fb9bdf712b0c604987d9a6aab57c43756c98f097fdd9/fraudlabspro-1.1.1.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "a3e7b93d8fc2fc77d6be3f281f20210c", "sha256": "c711cb43f12fc8192f21f04e637f1654d9a950f7dab0e4283426bd35324daf4d"}, "downloads": -1, "filename": "fraudlabspro-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a3e7b93d8fc2fc77d6be3f281f20210c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8425, "upload_time": "2019-12-06T00:37:59", "upload_time_iso_8601": "2019-12-06T00:37:59.108521Z", "url": "https://files.pythonhosted.org/packages/d4/a2/6f43db8829b3b766a306ca9b61457cfea1484abf92946310e63e36b0d9d4/fraudlabspro-1.1.1-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "ecf0a126fb4a2eace4d8696e6ee94335", "sha256": "696e47f5936e1acd8dc81d3a4165ef5a47fb605eb2db432a57f012797486d3df"}, "downloads": -1, "filename": "fraudlabspro-1.1.1.tar.gz", "has_sig": false, "md5_digest": "ecf0a126fb4a2eace4d8696e6ee94335", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6392, "upload_time": "2019-12-06T00:38:04", "upload_time_iso_8601": "2019-12-06T00:38:04.359661Z", "url": "https://files.pythonhosted.org/packages/d6/cc/86bcc472acebf805fb9bdf712b0c604987d9a6aab57c43756c98f097fdd9/fraudlabspro-1.1.1.tar.gz"}]}