{"info": {"author": "long2ice", "author_email": "long2ice@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "========\nmysql2ch\n========\n\n.. image:: https://img.shields.io/pypi/v/mysql2ch.svg?style=flat\n   :target: https://pypi.python.org/pypi/mysql2ch\n.. image:: https://img.shields.io/docker/cloud/build/long2ice/mysql2ch\n   :target: https://travis-ci.com/long2ice/mysql2ch\n.. image:: https://img.shields.io/github/license/long2ice/mysql2ch\n   :target: https://github.com/long2ice/mysql2ch\n\nIntroduction\n============\n\nmysql2ch is used to sync data from MySQL to ClickHouse.\n\n.. image:: https://github.com/long2ice/mysql2ch/raw/master/images/mysql2ch.png\n\nRequirements\n============\n\n* `kafka <https://kafka.apache.org/>`_\n* ``docker`` & ``docker-compose``\n\nUsage\n=====\n\nFull data etl\n~~~~~~~~~~~~~\n\n.. code-block:: shell\n\n    $ python manage.py etl -h\n\n    usage: manage.py etl [-h] --schema SCHEMA --tables TABLES [--renew]\n\n    optional arguments:\n      -h, --help       show this help message and exit\n      --schema SCHEMA  Schema to full etl.\n      --tables TABLES  Tables to full etl,multiple tables split with comma.\n      --renew          Etl after try to drop the target tables.\n\n\nContinuous Sync\n~~~~~~~~~~~~~~~\n\n1. ``cp .env.example .env`` and edit it.\n2. edit ``docker-compose.yml``,which will read ``.env``,add your own consumer services in ``docker-compose.yml``.One consumer consume one kafka partition.\n3. ``docker-compose up -d``.\n\n.. note::\n    When one service consume multiple partitions,consumer commit maybe incorrect when insert error.\n\nOptional\n========\n\n`Sentry <https://github.com/getsentry/sentry>`_,error reporting,worked if set ``SENTRY_DSN`` in ``.env``.\n\nExample\n=======\n\n.env\n~~~~\n\n.. code-block:: ini\n\n    # if True,will display sql information\n    DEBUG=True\n    # sentry need\n    ENVIRONMENT=development\n\n    MYSQL_HOST=127.0.0.1\n    MYSQL_PORT=3306\n    MYSQL_USER=root\n    MYSQL_PASSWORD=123456\n    MYSQL_SERVER_ID=101\n\n    REDIS_HOST=127.0.0.1\n    REDIS_PORT=6379\n    REDIS_DB=0\n\n    CLICKHOUSE_HOST=127.0.0.1\n    CLICKHOUSE_PORT=9002\n    CLICKHOUSE_PASSWORD=\n    CLICKHOUSE_USER=default\n\n    SENTRY_DSN=https://3450e192063d47aea7b9733d3d52585f@sentry.test.com/1\n\n    KAFKA_SERVER=127.0.0.1:9092\n    KAFKA_TOPIC=mysql2ch\n\n    # only these schemas to replication,multiple split with comma.\n    SCHEMAS=test\n    # only these tables to replication,multiple split with comma.\n    TABLES=test\n\n    # kafka partitions mapping,which means binlog of test.test will produce to 0 partition.\n    PARTITIONS=test.test=0;test.test2=1;\n\n    # init binlog file and position,should set first,after will read from redis.\n    INIT_BINLOG_FILE=binlog.000474\n    INIT_BINLOG_POS=155\n\n    # how many num to submit\n    INSERT_NUMS=20000\n    # how many seconds to submit\n    INSERT_INTERVAL=60\n\ndocker-compose.yml\n~~~~~~~~~~~~~~~~~~\n\n.. code-block:: yaml\n\n    version: '3'\n    services:\n      producer:\n        env_file:\n          - .env\n        depends_on:\n          - redis\n        image: long2ice/mysql2ch:latest\n        command: mysql2ch produce\n      # add more service if you need.\n      consumer.test.test:\n        env_file:\n          - .env\n        depends_on:\n          - redis\n          - producer\n        image: long2ice/mysql2ch:latest\n        # consume binlog of test.test\n        command: mysql2ch consume --schema test --tables test\n      redis:\n        hostname: redis\n        image: redis:latest\n        volumes:\n          - redis:/data\n    volumes:\n      redis:", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/long2ice/mysql2ch", "keywords": "MySQL ClickHouse Sync", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "mysql2ch", "package_url": "https://pypi.org/project/mysql2ch/", "platform": "any", "project_url": "https://pypi.org/project/mysql2ch/", "project_urls": {"Homepage": "https://github.com/long2ice/mysql2ch"}, "release_url": "https://pypi.org/project/mysql2ch/0.2.0/", "requires_dist": null, "requires_python": "", "summary": "mysql2ch is used to sync data from MySQL to ClickHouse.", "version": "0.2.0"}, "last_serial": 7036959, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "1f401e07b7efbb64568e22d853c8c83e", "sha256": "587d22badc12d52b3efc0449bdeff28a10bed11a62e959f5c6283a61e6cc192b"}, "downloads": -1, "filename": "mysql2ch-0.0.2.tar.gz", "has_sig": false, "md5_digest": "1f401e07b7efbb64568e22d853c8c83e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15019, "upload_time": "2020-02-25T06:07:23", "upload_time_iso_8601": "2020-02-25T06:07:23.421204Z", "url": "https://files.pythonhosted.org/packages/d5/39/6ee1e4074474280d82b604490d303040825420cba886672de206de08dfa8/mysql2ch-0.0.2.tar.gz"}], "0.0.3": [{"comment_text": "", "digests": {"md5": "59dc1e8a1dceec3375665c49f5a75852", "sha256": "b7a4840e5d0122ac6279d0a06636706ca8179353d26479a06dcf235c32bcb364"}, "downloads": -1, "filename": "mysql2ch-0.0.3.tar.gz", "has_sig": false, "md5_digest": "59dc1e8a1dceec3375665c49f5a75852", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11202, "upload_time": "2020-02-29T13:28:34", "upload_time_iso_8601": "2020-02-29T13:28:34.705456Z", "url": "https://files.pythonhosted.org/packages/93/fc/033f39f3570139d3e1ddc740059c9fefb1a38f21968f3bff0aa860dc5269/mysql2ch-0.0.3.tar.gz"}], "0.2.0": [{"comment_text": "", "digests": {"md5": "ddcdb71cbcb490c0f543f24cd2ff27ee", "sha256": "18a40c8226e806ce7174c2c14303c454447bfcadf4cd67d442186fe3d596ee67"}, "downloads": -1, "filename": "mysql2ch-0.2.0.tar.gz", "has_sig": false, "md5_digest": "ddcdb71cbcb490c0f543f24cd2ff27ee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12814, "upload_time": "2020-04-17T02:59:16", "upload_time_iso_8601": "2020-04-17T02:59:16.876004Z", "url": "https://files.pythonhosted.org/packages/a5/a9/cd1026ea7d43e87f804c73b4cfa109b47a4173b86ca7aa2f842db69b9b19/mysql2ch-0.2.0.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "ddcdb71cbcb490c0f543f24cd2ff27ee", "sha256": "18a40c8226e806ce7174c2c14303c454447bfcadf4cd67d442186fe3d596ee67"}, "downloads": -1, "filename": "mysql2ch-0.2.0.tar.gz", "has_sig": false, "md5_digest": "ddcdb71cbcb490c0f543f24cd2ff27ee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12814, "upload_time": "2020-04-17T02:59:16", "upload_time_iso_8601": "2020-04-17T02:59:16.876004Z", "url": "https://files.pythonhosted.org/packages/a5/a9/cd1026ea7d43e87f804c73b4cfa109b47a4173b86ca7aa2f842db69b9b19/mysql2ch-0.2.0.tar.gz"}]}