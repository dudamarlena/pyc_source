{"info": {"author": "Parmida Atighehchian, Fr\u00e9d\u00e9ric Branchaud-Charron, Jan Freyberg, Lorne Schell", "author_email": "parmida@elementai.com, frederic.branchaud-charron@elementai.com, jan.freyberg@elementai.com, lorne.schell@elementai.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Operating System :: POSIX", "Operating System :: Unix", "Programming Language :: Python", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: Implementation :: CPython", "Topic :: Utilities"], "description": "# Bayesian Active Learning (Baal) [![CircleCI](https://circleci.com/gh/ElementAI/baal.svg?style=svg&circle-token=aa12d3134798ff2bf8a49cebe3c855b96a776df1)](https://circleci.com/gh/ElementAI/baal)  [![Documentation Status](https://readthedocs.org/projects/baal/badge/?version=latest)](https://baal.readthedocs.io/en/latest/?badge=latest) [![Gitter](https://badges.gitter.im/eai-baal/community.svg)](https://gitter.im/eai-baal/community?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n\n<p align=\"left\">\n  <img height=15% width=25% src=\"https://github.com/ElementAI/baal/blob/master/docs/literature/images/repo_logo_25_no_corner.svg\">\n</p>\n\nBaaL is an active learning library developed at\n[ElementAI](https://www.elementai.com/). This repository contains techniques\nand reusable components to make active learning accessible for all.\n\nRead the documentation at https://baal.readthedocs.io.\n\n## Installation and requirements\n\nBaaL requires `Python>=3.6`.\n\nTo install baal using pip: `pip install baal`\n\nTo install baal from source: `pip install -e .`\n\nFor requirements please see: _[requirements.txt](requirements.txt)_.\n\n## What is Active Learning?\n\nActive learning is a special case of machine learning in which a learning\nalgorithm is able to interactively query the user (or some other information\nsource) to obtain the desired outputs at new data points\n(to understand the concept in more depth, refer to our [tutorial](https://baal.readthedocs.io/en/latest/)).\n\n\n## BaaL Framework\n\nAt the moment BaaL supports the following methods to perform active learning.\n\n- Monte-Carlo Dropout (Gal et al. 2015)\n- MCDropConnect (Mobiny et al. 2019)\n\n**Please see our Roadmap [below](./README.md#roadmap-subject-to-change-depending-on-the-community).**\n\nThe **Monte-Carlo Dropout** method is a known approximation for Bayesian neural\nnetworks. In this method, the dropout layer is used both in training and test\ntime. By running the model multiple times whilst randomly dropping weights, we calculate the uncertainty of the prediction using one of the uncertainty measurements in _src/baal/active/heuristics.py_.\n\nThe framework consists of four main parts, as demonstrated in the flowchart below:\n\n- ActiveLearningDataset\n- Heuristics\n- ModelWrapper\n- ActiveLearningLoop\n\n<p align=\"center\">\n  <img src=\"./docs/literature/images/Baalscheme.svg\">\n</p>\n\nTo get started, wrap your dataset in our _[**ActiveLearningDataset**](src/baal/active/dataset.py)_ class. This will ensure that the dataset is split into\n`training` and `pool` sets. The `pool` set represents the portion of the training set which is yet\nto be labelled.\n\n\nWe provide a lightweight object _[**ModelWrapper**](src/baal/modelwrapper.py)_ similar to `keras.Model` to make it easier to train and test the model. If your model is not ready for active learning, we provide Modules to prepare them. \n\nFor example, the _[**MCDropoutModule**](src/baal/bayesian/dropout.py)_ wrapper changes the existing dropout layer\nto be used in both training and inference time and the `ModelWrapper` makes\nthe specifies the number of iterations to run at training and inference.\n\nIn conclusion, your script should be similar to this:\n```python\ndataset = ActiveLearningDataset(your_dataset)\ndataset.label_randomly(INITIAL_POOL)  # label some data\nmodel = MCDropoutModule(your_model)\nmodel = ModelWrapper(model, your_criterion)\nactive_loop = ActiveLearningLoop(dataset,\n                                 get_probabilities=model.predict_on_dataset,\n                                 heuristic=heuristics.BALD(shuffle_prop=0.1),\n                                 ndata_to_label=NDATA_TO_LABEL)\nfor al_step in range(N_ALSTEP):\n    model.train_on_dataset(dataset, optimizer, BATCH_SIZE, use_cuda=use_cuda)\n    if not active_loop.step():\n        # We're done!\n        break\n```\n\n\nFor a complete experiment, we provide _[experiments/](experiments/)_ to understand how to\nwrite an active training process. Generally, we use the **ActiveLearningLoop**\nprovided at _[src/baal/active/active_loop.py](src/baal/active/active_loop.py)_.\nThis class provides functionality to get the predictions on the unlabeled pool\nafter each (few) epoch(s) and sort the next set of data items to be labeled\nbased on the calculated uncertainty of the pool.\n\n\n### Roadmap (Subject to change depending on the community.)\n\n* [x] Initial FOSS release with MCDropout (Gal et al. 2015)\n* [x] MCDropConnect (Mobiny et al. 2019)\n* [ ] Bayesian layers (Shridhar et al. 2019)\n* [ ] Unsupervised methods\n* [ ] NNGP (Panov et al. 2019)\n* [ ] SWAG (Zellers et al. 2018)\n\n\n### Re-run our Experiments\n\n```bash\nnvidia-docker build [--target base_baal] -t baal .\nnvidia-docker run --rm baal python3 experiments/vgg_mcdropout_cifar10.py \n```\n\n### Use BaaL for YOUR Experiments\n\nSimply clone the repo, and create your own experiment script similar to the\nexample at _experiments/vgg_experiment.py_. Make sure to use the four main parts\nof BaaL framework. _Happy running experiments_\n\n### Dev install\n\nSimply build the Dockerfile as below:\n\n```bash\ngit clone git@github.com:ElementAI/baal.git\nnvidia-docker build [--target base_baal] -t baal-dev .\n```\n\nNow you have all the requirements to start contributing to BaaL. _**YEAH!**_\n\n### Contributing!\n\nTo contribute, see [CONTRIBUTING.md](./CONTRIBUTING.md).\n\n\n### Who We Are!\n\n\"There is passion, yet peace; serenity, yet emotion; chaos, yet order.\"\n\nAt ElementAI, the BaaL team tests and implements the most recent papers on uncertainty estimation and active learning.\nThe BaaL team is here to serve you!\n\n- [Parmida Atighehchian](mailto:parmida@elementai.com)\n- [Fr\u00e9d\u00e9ric Branchaud-Charron](mailto:frederic.branchaud-charron@elementai.com)\n- [Jan Freyberg](mailto:jan.freyberg@elementai.com)\n- [Rafael Pardinas](mailto:rafael.pardinas@elementai.com)\n- [Lorne Schell](mailto:lorne.schell@elementai.com)\n\n\n### Licence\nTo get information on licence of this API please read [LICENCE](./LICENSE)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ElementAI/baal", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "baal", "package_url": "https://pypi.org/project/baal/", "platform": "", "project_url": "https://pypi.org/project/baal/", "project_urls": {"Homepage": "https://github.com/ElementAI/baal"}, "release_url": "https://pypi.org/project/baal/1.1.3/", "requires_dist": ["numpy", "matplotlib", "pandas", "scikit-learn", "scipy", "torch (>=1.2.0)", "torchvision (>=0.2.2)", "tqdm", "h5py", "structlog", "sphinx (>2) ; extra == 'documentation'", "m2r ; extra == 'documentation'", "sphinx-rtd-theme ; extra == 'documentation'", "jupyter-sphinx ; extra == 'documentation'", "nbsphinx ; extra == 'documentation'", "sphinx-automodapi ; extra == 'documentation'", "numpydoc ; extra == 'documentation'", "pytest ; extra == 'test'", "pytest-pep8 ; extra == 'test'", "hypothesis ; extra == 'test'", "coverage ; extra == 'test'", "coveralls ; extra == 'test'"], "requires_python": "", "summary": "Library for bayesian active learning.", "version": "1.1.3"}, "last_serial": 6236652, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "282a2e80b39e3ccee7968f98fcb6ddde", "sha256": "57120836249d0f802444eeb79f763cb71234158d06ae7da5eb6a3a23cc4b771a"}, "downloads": -1, "filename": "baal-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "282a2e80b39e3ccee7968f98fcb6ddde", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 51870, "upload_time": "2019-09-30T21:07:00", "upload_time_iso_8601": "2019-09-30T21:07:00.032493Z", "url": "https://files.pythonhosted.org/packages/c1/c3/be0b227c10082d466d499c3168fb8caa7f33ab15f6dff17e062670c554c9/baal-1.0.0-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "d19f18302d9d8a4dfd31134e884fd53f", "sha256": "2f324b2dc075542140de167b54ae05acc8caa38eaf5a1e935a52c8ac358abf85"}, "downloads": -1, "filename": "baal-1.0.0.tar.gz", "has_sig": false, "md5_digest": "d19f18302d9d8a4dfd31134e884fd53f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21050, "upload_time": "2019-09-30T21:07:02", "upload_time_iso_8601": "2019-09-30T21:07:02.778840Z", "url": "https://files.pythonhosted.org/packages/0a/71/8cd703e4c5d22c31a2ce5000143ae476887e7c0dde73cdd00929be8b641a/baal-1.0.0.tar.gz"}], "1.1.0": [{"comment_text": "", "digests": {"md5": "3fd024ee7ab94ed4ad9c95235591e0bf", "sha256": "f7fa1cf318f030e203b37a477e0b3751f245bf21735d80dad8988b19ca01567f"}, "downloads": -1, "filename": "baal-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "3fd024ee7ab94ed4ad9c95235591e0bf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 32442, "upload_time": "2019-11-11T16:35:40", "upload_time_iso_8601": "2019-11-11T16:35:40.496847Z", "url": "https://files.pythonhosted.org/packages/9e/58/374e64e6b4fce4f28105de82856e8991d90a23590020a813e5871ba7ec68/baal-1.1.0-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "e8fe22441f30c9d5fcd8e56a94fde0ea", "sha256": "b6d10d822afac2834adfd851bca0b3b447bcc62986031f87efd9341665a9d52b"}, "downloads": -1, "filename": "baal-1.1.0.tar.gz", "has_sig": false, "md5_digest": "e8fe22441f30c9d5fcd8e56a94fde0ea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24737, "upload_time": "2019-11-11T16:35:42", "upload_time_iso_8601": "2019-11-11T16:35:42.173559Z", "url": "https://files.pythonhosted.org/packages/66/a2/82aa3c7554a244649f337754b17352cf9408bb5db041561c0900f4ea600e/baal-1.1.0.tar.gz"}], "1.1.1": [{"comment_text": "", "digests": {"md5": "06c52627c634ea2455cc81ec93741d02", "sha256": "18212034febe68a506559a074a82135c1af4009be98f17bd6cfb90acd0adf1d0"}, "downloads": -1, "filename": "baal-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "06c52627c634ea2455cc81ec93741d02", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 35006, "upload_time": "2019-11-11T17:39:08", "upload_time_iso_8601": "2019-11-11T17:39:08.426415Z", "url": "https://files.pythonhosted.org/packages/bd/bd/bf256c7581b0b7db7d8f6dc4ae37050700f66a9bb94a695a51b99580f3e0/baal-1.1.1-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "e82855c014258ab445cf19115fa788d0", "sha256": "efb23fe53f87284f0c269ca9d8a2d0b5a60cfe12d97cac6ca811f986571db5ba"}, "downloads": -1, "filename": "baal-1.1.1.tar.gz", "has_sig": false, "md5_digest": "e82855c014258ab445cf19115fa788d0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27705, "upload_time": "2019-11-11T17:39:10", "upload_time_iso_8601": "2019-11-11T17:39:10.011813Z", "url": "https://files.pythonhosted.org/packages/30/6c/8b9339b9ee8b0f9de19a64d88204f7220f3da71a1ca9ff42fb9d9ef6777b/baal-1.1.1.tar.gz"}], "1.1.2": [{"comment_text": "", "digests": {"md5": "605411194f276e5be10e56f863e8b9ad", "sha256": "9a767f353318d8a14c11a59829bfbc0b0ae31a3f7a064f3dd36e33bfd9527e3e"}, "downloads": -1, "filename": "baal-1.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "605411194f276e5be10e56f863e8b9ad", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 35196, "upload_time": "2019-11-22T16:20:59", "upload_time_iso_8601": "2019-11-22T16:20:59.420753Z", "url": "https://files.pythonhosted.org/packages/1a/07/b1923bcaec14cf6640355352e01595af86fe5c4443a3a035766ac3bf7b6c/baal-1.1.2-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "02897f90d4b5157e17f9674fecffd0f1", "sha256": "817733fa0af2f8c73f17118962ab19b1b22eb94d02dc99df3c526c96c95801e7"}, "downloads": -1, "filename": "baal-1.1.2.tar.gz", "has_sig": false, "md5_digest": "02897f90d4b5157e17f9674fecffd0f1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27776, "upload_time": "2019-11-22T16:21:01", "upload_time_iso_8601": "2019-11-22T16:21:01.125799Z", "url": "https://files.pythonhosted.org/packages/cf/ee/f200b3c7a1d5b94eb0ad4f572614712de8852396a27fd18047282e583a95/baal-1.1.2.tar.gz"}], "1.1.3": [{"comment_text": "", "digests": {"md5": "46ff44ef63d6e5e7e267d5a8e76b7328", "sha256": "946f256c1072a12d9b81db482306968dde974cbc193ae7acb119673a419124d2"}, "downloads": -1, "filename": "baal-1.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "46ff44ef63d6e5e7e267d5a8e76b7328", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 35312, "upload_time": "2019-12-03T18:53:30", "upload_time_iso_8601": "2019-12-03T18:53:30.165765Z", "url": "https://files.pythonhosted.org/packages/53/b9/6dd46010e27c6a382365cff558cfa7b2056c3d71497013432f64ec5e8d24/baal-1.1.3-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "75f1f706fdda2e730de559f3bf8ea931", "sha256": "1785f431ffe34f6c5ce3d657f08d0bbd302334603b6f6f2161e7f6d55e7a3d61"}, "downloads": -1, "filename": "baal-1.1.3.tar.gz", "has_sig": false, "md5_digest": "75f1f706fdda2e730de559f3bf8ea931", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27935, "upload_time": "2019-12-03T18:53:31", "upload_time_iso_8601": "2019-12-03T18:53:31.753907Z", "url": "https://files.pythonhosted.org/packages/e4/84/9495fc5fb2530f0ff64629e0c3f9694cbe210ec46bae4a8eeb47db99e2f4/baal-1.1.3.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "46ff44ef63d6e5e7e267d5a8e76b7328", "sha256": "946f256c1072a12d9b81db482306968dde974cbc193ae7acb119673a419124d2"}, "downloads": -1, "filename": "baal-1.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "46ff44ef63d6e5e7e267d5a8e76b7328", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 35312, "upload_time": "2019-12-03T18:53:30", "upload_time_iso_8601": "2019-12-03T18:53:30.165765Z", "url": "https://files.pythonhosted.org/packages/53/b9/6dd46010e27c6a382365cff558cfa7b2056c3d71497013432f64ec5e8d24/baal-1.1.3-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "75f1f706fdda2e730de559f3bf8ea931", "sha256": "1785f431ffe34f6c5ce3d657f08d0bbd302334603b6f6f2161e7f6d55e7a3d61"}, "downloads": -1, "filename": "baal-1.1.3.tar.gz", "has_sig": false, "md5_digest": "75f1f706fdda2e730de559f3bf8ea931", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27935, "upload_time": "2019-12-03T18:53:31", "upload_time_iso_8601": "2019-12-03T18:53:31.753907Z", "url": "https://files.pythonhosted.org/packages/e4/84/9495fc5fb2530f0ff64629e0c3f9694cbe210ec46bae4a8eeb47db99e2f4/baal-1.1.3.tar.gz"}]}