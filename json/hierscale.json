{"info": {"author": "Hussein Hazimeh and Rahul Mazumder", "author_email": "hazimeh@mit.edu", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# hierScale\n### Hussein Hazimeh and Rahul Mazumder\n### Massachusetts Institute of Technology\n\n## Introduction\nhierScale is scalable toolkit for fitting sparse linear regression models with pairwise feature interactions. The optimization is done under the **strong hierarchy (SH)** constraint: an interaction coefficient is non-zero only if its associated main feature coefficients are non-zero. This constraint can enhance the interpretability of sparse interaction models and also reduce the future data collection costs; see the discussion in [(Hazimeh and Mazumder, 2020)](https://arxiv.org/abs/1902.01542).\n\nMore formally, given a data matrix X of main features and a response vector y, the toolkit fits a **convex relaxation** of the following model:\n\n<img src=\"https://raw.githubusercontent.com/hazimehh/hierScale/master/formulation.png\" width = 450>\n\n where X_i denotes the ith column (feature) of X and * refers to element-wise multiplication. The L0 norms impose sparsity on the coefficients and the constraints enforce SH. See [(Hazimeh and Mazumder, 2020)](https://arxiv.org/abs/1902.01542) for details on how the convex relaxation of the above problem is derived. The optimization is done for a regularization path (i.e., over a grid of lambda_1's and lambda_2's). We use proximal gradient descent (PGD) for optimization, along with novel proximal screening and gradient screening rules, which speed up PGD by over 4900x.\n\n## Installation\nhierScale is written in Python 3. It uses Gurobi internally (for solving the LPs required for checking the optimality conditions). Before installing hierScale, please make sure that  [Gurobi](https://www.gurobi.com) and its Python interface (gurobipy) are installed.\n\nTo install hierScale, run the following command:\n```bash\npip install hierScale\n```\n\n## Quick Start\nIn Python, assuming you have the data X and y stored as numpy arrays, run the following to fit a regularization path:\n```python\nfrom hierScale import hier_fit, hier_predict\n\n# Set the parameters of the algorithm.\nparams = {\n    \"nLambda\": 100, # Number of lambda_1's in the path.\n    \"maxSuppSize\": 500, # Max support size to terminate the path at.\n}\n\n# Fit a path.\nsolutions, lambdas = hier_fit(X, y, params)\n\n# solutions is a list of all the solutions in the path.\n# To access the ith solution, say i=10, use the following:\ncurrent_solution = solutions[10]\ncurrent_solution.B # A dictionary of the non-zero coefficients in beta.\ncurrent_solution.T # A dictionary of the non-zero coefficients in theta.\ncurrent_solution.intercept # The intercept term.\n\n# To predict the response given a matrix X, run the following:\nhier_predict(current_solution, X)\n\n# For more advanced usage and parameters, please check the documentation:\nprint(hier_fit.__doc__)\n```\n\n\n\n\n\n## References\n[Learning Hierarchical Interactions at Scale: A Convex Optimization Approach](https://arxiv.org/abs/1902.01542).\n\nBibtex citation below:\n```\n@inproceedings{hazimeh_mazumder_2020,\n  author    = {Hussein Hazimeh and\n               Rahul Mazumder},\n  title     = {Learning Hierarchical Interactions at Scale: A Convex Optimization Approach},\n  booktitle = {The 23nd International Conference on Artificial Intelligence and Statistics,\n               {AISTATS} 2020, 3-5 June 2020, Palermo, Sicily, Italy},\n  series    = {Proceedings of Machine Learning Research},\n  volume    = {108},\n  publisher = {{PMLR}},\n  year      = {2020},\n  url       = {https://arxiv.org/abs/1902.01542},\n}\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/hazimehh/hierScale", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "hierScale", "package_url": "https://pypi.org/project/hierScale/", "platform": "", "project_url": "https://pypi.org/project/hierScale/", "project_urls": {"Homepage": "https://github.com/hazimehh/hierScale"}, "release_url": "https://pypi.org/project/hierScale/1.0.2/", "requires_dist": ["numpy", "scipy", "numba", "networkx"], "requires_python": ">=3.0", "summary": "A scalable package for fitting sparse linear regression models with pairwise feature interactions, under strong hierarchy.", "version": "1.0.2"}, "last_serial": 6693131, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "ad3d3611a01232154de5b9391f167f57", "sha256": "7bb47f810a5ff06e0f260db021ac6427cc7f864d7f552f1d91b27cb7df9cbe08"}, "downloads": -1, "filename": "hierScale-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ad3d3611a01232154de5b9391f167f57", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.0", "size": 3759, "upload_time": "2020-02-24T22:18:22", "upload_time_iso_8601": "2020-02-24T22:18:22.466256Z", "url": "https://files.pythonhosted.org/packages/60/55/5521fdd1c283ed639042e1be00a247db61f0aaec5936e5b001272de82cef/hierScale-1.0-py3-none-any.whl"}], "1.0.1": [{"comment_text": "", "digests": {"md5": "34b09f431eb92fa673d1e5aa0a667f4b", "sha256": "0cd498d36388faad940d0ca02c6e074f70845a1a0b9df01088be89016f40b290"}, "downloads": -1, "filename": "hierScale-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "34b09f431eb92fa673d1e5aa0a667f4b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.0", "size": 3799, "upload_time": "2020-02-24T22:28:17", "upload_time_iso_8601": "2020-02-24T22:28:17.589013Z", "url": "https://files.pythonhosted.org/packages/42/a2/1b46b15b11d0d2cfe2ac07e7bcd815b7b2469dbc53ff2976ccf03da0d156/hierScale-1.0.1-py3-none-any.whl"}], "1.0.2": [{"comment_text": "", "digests": {"md5": "847fb8a8aebfae7bb5c0a7c802781aa3", "sha256": "ad50274225b4b735c6e6443cad69b93b07998b9a1d821dce33bcac9630b54e11"}, "downloads": -1, "filename": "hierScale-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "847fb8a8aebfae7bb5c0a7c802781aa3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.0", "size": 3809, "upload_time": "2020-02-24T22:32:21", "upload_time_iso_8601": "2020-02-24T22:32:21.569599Z", "url": "https://files.pythonhosted.org/packages/56/a9/e367bce325c60272cd0697603457b382ae8711afeabbd343334d8619bdcb/hierScale-1.0.2-py3-none-any.whl"}]}, "urls": [{"comment_text": "", "digests": {"md5": "847fb8a8aebfae7bb5c0a7c802781aa3", "sha256": "ad50274225b4b735c6e6443cad69b93b07998b9a1d821dce33bcac9630b54e11"}, "downloads": -1, "filename": "hierScale-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "847fb8a8aebfae7bb5c0a7c802781aa3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.0", "size": 3809, "upload_time": "2020-02-24T22:32:21", "upload_time_iso_8601": "2020-02-24T22:32:21.569599Z", "url": "https://files.pythonhosted.org/packages/56/a9/e367bce325c60272cd0697603457b382ae8711afeabbd343334d8619bdcb/hierScale-1.0.2-py3-none-any.whl"}]}