{"info": {"author": "Raik Becker", "author_email": "", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n![Python 3.6](https://github.com/raikb/gerd/workflows/Python%203.6/badge.svg)\n![Python 3.7](https://github.com/raikb/gerd/workflows/Python%203.7/badge.svg)\n![Python 3.8](https://github.com/raikb/gerd/workflows/Python%203.8/badge.svg)\n\n# gerd\n\n> Essentially, all models are wrong, but some are useful.\n> - George E. P. Box\n\nHopefully, gerd can be of use for someone.\n\n## What is gerd?\n\n**gerd.Dispatch** is an easy-to-use multi-area power market model that applies mixed-integer programming (MIP) and relaxed MIP (RMIP) for solving.\nThe full mathematical formulation of **gerd.Dispatch**  can be found [here](https://github.com/raikb/gerd/blob/master/docs/gerd_mathematical_formulation.pdf).\n\n### **gerd.Dispatch** allows you to model:\n* Power prices\n* Power plant dispatch:\n  - Minimum up-time of generators\n  - Minimum down-time of generators\n* Storages (batteries, pump storages etc.)\n* Must-run production\n* Cross-border flows\n\n### Main features:\n* Relies on the google package [ortools](https://developers.google.com/optimization):\n  -  Fast, memory efficient and numerically stable solvers that do not require any cumbersome third-party installations\n* Input-driven modeling to reduce needless parameter settings:\n  - The input handed over to the model defines what is modeled\n  - Options to switch on and off model features still exist\n* Rolling horizon optimization for cutting down run-time can be chosen\n* Different solving options available:\n  - MIP if only the dispatch is needed\n  - MIP followed by a RMIP if the dispatch and the prices are important\n\n## How to use it?\n\n### Installation\n```\npip install gerd\n```\n### Read input from CSV or use pandas DataFrames directly\nExample input files can be found in [examples](https://github.com/raikb/gerd/tree/master/examples).\n```python\nfrom gerd import models\nimport pandas as pd\n\n# Generators\ninput_gens = pd.read_csv('input_generators.csv', index_col='name')\n# Load\ninput_load = pd.read_csv(\n    'input_load.csv', index_col='time', parse_dates=True)\n# Variable costs\ninput_var_costs = pd.read_csv(\n    'input_var_costs.csv', index_col='time', parse_dates=True)\n```\n### Define what to model and optimize\nGoing with the default and what is defined by the input, i.e. the minimum up-time of generators is modeled if it is defined in the input data.\n```python\nmy_model = models.Dispatch(input_data)\nmy_model.optimize()\n```\n### Have a look at the results\n```python\nmy_model.solution['prices'].plot()\n```\n\n### More examples as Jupyter notebooks:\n* [Reading data from csv for one day and optimizing](https://github.com/raikb/gerd/blob/master/examples/example_dispatch_one_day_csv.ipynb)\n\n## Current limitations\n* The rolling horizon optimization works currently only for hourly input data and the index needs to be a pandas DatetimeIndex.\n\n## What is next?\nPossible extension of **gerd.Dispatch**:\n* Definition of dynamic power plant (un)availabilities\n* Modeling of spinning reserves\n* Advanced time series input checking\n* Further options for linearization \n\n## Acknowledgments\n* Unit-commitment equations and the example data have been inspired by:\n  - Kerstin D\u00e4chert and Christoph Weber: Linear reformulations of the unit commitment problem, OR 2016 Hamburg, 1.9.2016\n* Many ideas, especially the rolling horizon optimization implementation, are taking from:\n  - [Chi Kong Chyong, David Newbery and Thomas McCarty: A Unit Commitment and Economic Dispatch Model of the GB Electricity Market \u2013 Formulation and Application to Hydro Pumped Storage. 2019, CWPE1968](http://www.econ.cam.ac.uk/research-files/repec/cam/pdf/cwpe1968.pdf)\n* Further unit-commitment equations were taken from:\n  - [Van den Bergh, Kenneth Bruninx, Erik Delarue and William D\u2018haeseleer: LUSYM: a Unit Commitment Model formulated as a Mixed-Integer Linear Program, 2015, TME WORKING PAPER - Energy and Environment](https://www.mech.kuleuven.be/en/tme/research/energy_environment/Pdf/wpen2014-7.pdf)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/raikb/gerd", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "gerd", "package_url": "https://pypi.org/project/gerd/", "platform": "", "project_url": "https://pypi.org/project/gerd/", "project_urls": {"Homepage": "https://github.com/raikb/gerd"}, "release_url": "https://pypi.org/project/gerd/0.1.0/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Easy-to-use multi-area power market model", "version": "0.1.0"}, "last_serial": 6729744, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "1a68729b41dd54b863a8ae0ffe11f596", "sha256": "e7531b8c81b78fa56a5e8906cded2e420625d76a5991bbf24e90b8442112fc4b"}, "downloads": -1, "filename": "gerd-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1a68729b41dd54b863a8ae0ffe11f596", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 15338, "upload_time": "2020-02-26T20:23:30", "upload_time_iso_8601": "2020-02-26T20:23:30.090892Z", "url": "https://files.pythonhosted.org/packages/a9/87/8a8724f1ca9342d1f7028232b2806b6bad254813fff21edf9ebdbbc73118/gerd-0.0.1-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "ebf6218bd271813b80c2c4e366190e6c", "sha256": "38bb12ea03bc642317d822f1f71e3e7d3d4ae36687a6b16e443572eedd210212"}, "downloads": -1, "filename": "gerd-0.0.1.tar.gz", "has_sig": false, "md5_digest": "ebf6218bd271813b80c2c4e366190e6c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 16114, "upload_time": "2020-02-26T20:23:32", "upload_time_iso_8601": "2020-02-26T20:23:32.647486Z", "url": "https://files.pythonhosted.org/packages/b1/37/3c0df7b44fa57768803b86db9b333c3aa153d0c0abcccbcaa5d34da05df3/gerd-0.0.1.tar.gz"}], "0.0.4": [{"comment_text": "", "digests": {"md5": "9141bb2c9ae9f032fe78d718402be5d4", "sha256": "69faf9e9c3d313b9d18dce88dda3b69659468e79fc85c18f7c9a73022636a422"}, "downloads": -1, "filename": "gerd-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "9141bb2c9ae9f032fe78d718402be5d4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 15773, "upload_time": "2020-02-26T20:49:25", "upload_time_iso_8601": "2020-02-26T20:49:25.680337Z", "url": "https://files.pythonhosted.org/packages/14/f2/12d24edb5cb0d374eae3d095441fc47c734b1590eb6d8b42a854fe77db44/gerd-0.0.4-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "dcebb1ac5807c0281e9e54b0ff059d21", "sha256": "b63a29a3c48c3f6e53a342bf07923168a97bc5bc997ab576689648b904276f43"}, "downloads": -1, "filename": "gerd-0.0.4.tar.gz", "has_sig": false, "md5_digest": "dcebb1ac5807c0281e9e54b0ff059d21", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 16157, "upload_time": "2020-02-26T20:49:27", "upload_time_iso_8601": "2020-02-26T20:49:27.410952Z", "url": "https://files.pythonhosted.org/packages/c4/64/f2e92f031f5192eb74f18854259559ddb413790cf37fd7992b3c97549a80/gerd-0.0.4.tar.gz"}], "0.1.0": [{"comment_text": "", "digests": {"md5": "720de5e4add99f6122d20b73abf0ad68", "sha256": "a2665d95fd0dd665303c9a47286684472d379f157660ab6c6e44cbaaa962fa5b"}, "downloads": -1, "filename": "gerd-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "720de5e4add99f6122d20b73abf0ad68", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 16303, "upload_time": "2020-03-01T19:52:25", "upload_time_iso_8601": "2020-03-01T19:52:25.681895Z", "url": "https://files.pythonhosted.org/packages/1b/11/8a3d43ca555050be29cddf584869d93476865dc5b9581d2e6ea00179c2ef/gerd-0.1.0-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "e156d534173ead5f92e48caff1417a79", "sha256": "0ff9a11f4d44ec86c9e13aa9bb936a39bf7dcca2b0a34f5e0d79f16f0ff051c5"}, "downloads": -1, "filename": "gerd-0.1.0.tar.gz", "has_sig": false, "md5_digest": "e156d534173ead5f92e48caff1417a79", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 15990, "upload_time": "2020-03-01T19:52:27", "upload_time_iso_8601": "2020-03-01T19:52:27.525618Z", "url": "https://files.pythonhosted.org/packages/78/5c/7213341d0c0b77e6a02e87e0a5a0b868c310c5399c98dc0a7abf3042df5f/gerd-0.1.0.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "720de5e4add99f6122d20b73abf0ad68", "sha256": "a2665d95fd0dd665303c9a47286684472d379f157660ab6c6e44cbaaa962fa5b"}, "downloads": -1, "filename": "gerd-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "720de5e4add99f6122d20b73abf0ad68", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 16303, "upload_time": "2020-03-01T19:52:25", "upload_time_iso_8601": "2020-03-01T19:52:25.681895Z", "url": "https://files.pythonhosted.org/packages/1b/11/8a3d43ca555050be29cddf584869d93476865dc5b9581d2e6ea00179c2ef/gerd-0.1.0-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "e156d534173ead5f92e48caff1417a79", "sha256": "0ff9a11f4d44ec86c9e13aa9bb936a39bf7dcca2b0a34f5e0d79f16f0ff051c5"}, "downloads": -1, "filename": "gerd-0.1.0.tar.gz", "has_sig": false, "md5_digest": "e156d534173ead5f92e48caff1417a79", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 15990, "upload_time": "2020-03-01T19:52:27", "upload_time_iso_8601": "2020-03-01T19:52:27.525618Z", "url": "https://files.pythonhosted.org/packages/78/5c/7213341d0c0b77e6a02e87e0a5a0b868c310c5399c98dc0a7abf3042df5f/gerd-0.1.0.tar.gz"}]}