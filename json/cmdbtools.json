{"info": {"author": "Shujia Huang (at) BGI", "author_email": "huangshujia@bgi.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Operating System :: MacOS", "Operating System :: POSIX", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 2.7", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "\ncmdbtools: A command line tools for CMDB varaints browser\n=========================================================\n\nIntroduction\n------------\n\nChina is the most populous country and the second largest economy in the world. However, \nthe construction of Chinese genome database is in slow progress. At present, among the \nworld's large-scale international and national genome sequencing projects, such as 1KGP, \nGenomics England, Genome of the Netherlands, ExAC are mostly biased towards the construction\nof a genomic baseline for European populations. In those projects, while the sample size goes\nup to hundreds of thousands for samples with european ancestry in those database, the sequen-\ncing Chinese samples is no more than a thousand.\n\nSince a high-quality genomic baseline database serves as an important control for medical \nresearch and population-oriented clinical and drug applications, the Chinese millionome\ndatabase (CMDB) is developed to fill the gap.\n\nThe `Chinese Millionome Database(CMDB) <https://db.cngb.org/cmdb/>`_ is a unique large-scale \nChinese genomics database produced by BGI and hosted in the National GeneBank. The CMDB delivers\nperidical and useful variation information and scientific insights derived from the analysis of\nmillions of Chinese sequencing data. The results aim to promote genetic research and precision\nmedicine actions in China.\n\nThe delivering information includes any of detected variants and the corresponding allele frequency,\nannotation, frequency comparison to the global populations from existing databases, etc.\n\nBenchmarking detail and methods are described in our *Cell* paper:\n\nLiu, S. et al.(2018) Genomic Analyses from Non-invasive Prenatal Testing Reveal Genetic Associations, \nPatterns of Viral Infections, and Chinese Population History. *Cell*\\ , 2, 347-359. \n`DOI:https://doi.org/10.1016/j.cell.2018.08.016 <https://doi.org/10.1016/j.cell.2018.08.016>`_\n\n**cmdbtools** is a command line tool for this CMDB variants browser.\n\nQuick start\n-----------\n\nCMDB variant browser allows authorized access its data through an Genomics API and **cmdbtools** \nis a convenient command line tools for this purpose.\n\nInstallation\n------------\n\nInstall the released version by ``pip``\\ :\n\n.. code-block:: bash\n\n   pip install cmdbtools\n\nYou may instead want to install the development version from github, by running:\n\n.. code-block:: bash\n\n   pip install git+git://github.com/ShujiaHuang/cmdbtools.git#egg=cmdbtools\n\nSetup\n-----\n\nPlease enable your API access from Profile in `CMDB browser <https://db.cngb.org/cmdb>`_ before using **cmdbtools**. \n\nLogin\n-----\n\nLogin with ``cmdbtools`` by using CMDB API access key, which could be found from Profile->Genomics API if you have apply for it.\n\n\n.. image:: assets/figures/cmdb_genomics_api.png\n   :target: assets/figures/cmdb_genomics_api.png\n   :alt: cmdb_genomics_api\n\n\n.. code-block:: bash\n\n   cmdbtools login -k your-genomics-api-key\n\nIf everything goes smoothly, **means you can use CMDB as one of your varaints database in command line mode**.\n\nLogout\n------\n\nLogout ``cmdbtools`` by simply run the command below:\n\n.. code-block:: bash\n\n   cmdbtool logout\n\nQuery a single variant\n----------------------\n\nVariants could be retrieved from CMDB by using ``query-varaint``.\n\nRun ``cmdbtools query-variant -h`` to see all available options. There're two different ways to retrive variants.\n\nOne is to use ``-c`` and ``-p`` parameters for single variant, the other way uses ``-l`` for multiple positions.\n\nHere are examples for quering single varaint by chromosome name and position.\n\n.. code-block:: bash\n\n   cmdbtools query-variant -c chr17 -p 41234470\n\nand you will get something looks like below:\n\n.. code-block:: bash\n\n   ##fileformat=VCFv4.2\n   ##FILTER=<ID=LowQual,Description=\"Low quality\">\n   ##INFO=<ID=CMDB_AN,Number=1,Type=Integer,Description=\"Number of Alleles in Samples with Coverage from CMDB_hg19_v1.0\">\n   ##INFO=<ID=CMDB_AC,Number=A,Type=Integer,Description=\"Alternate Allele Counts in Samples with Coverage from CMDB_hg19_v1.0\">\n   ##INFO=<ID=CMDB_AF,Number=A,Type=Float,Description=\"Alternate Allele Frequencies from CMDB_hg19_v1.0\">\n   ##INFO=<ID=CMDB_FILTER,Number=A,Type=Float,Description=\"Filter from CMDB_hg19_v1.0\">\n   #CHROM  POS ID  REF ALT QUAL    FILTER  INFO\n   17  41234470    rs1060915&CD086610&COSM4416375  A   G   74.38   PASS    CMDB_AF=0.361763,CMDB_AC=4625,CMDB_AN=12757\n\nQuering multiple varants.\n-------------------------\n\nA list of variants could be retrieved from CMDB by using the parameters of ``-l`` when apply by ``query-varaint``.\n\n.. code-block:: bash\n\n   cmdbtools query-variant -l positions.list > result.vcf\n\nFormat for `positions.list <tests/positions.list>`_\\ , could be a mixture of ``chrom   position`` and ``chrom    start   end``\\ , even with or without ``chr`` in the\nchromosome ID column:\n\n.. code-block::\n\n   #CHROM  POS\n   chr22   17662378\n   chr22   17662408\n   22  17662442\n   22  17662444\n   22  17662699\n   22  17662729\n   22  17690496\n   22  17662353    17663671\n   22  17669209    17669357\n\n``result.vcf`` is VCF format and looks like below:\n\n.. code-block::\n\n   ##fileformat=VCFv4.2\n   ##FILTER=<ID=LowQual,Description=\"Low quality\">\n   ##INFO=<ID=CMDB_AN,Number=1,Type=Integer,Description=\"Number of Alleles in Samples with Coverage from CMDB_hg19_v1.0\">\n   ##INFO=<ID=CMDB_AC,Number=A,Type=Integer,Description=\"Alternate Allele Counts in Samples with Coverage from CMDB_hg19_v1.0\">\n   ##INFO=<ID=CMDB_AF,Number=A,Type=Float,Description=\"Alternate Allele Frequencies from CMDB_hg19_v1.0\">\n   ##INFO=<ID=CMDB_FILTER,Number=A,Type=Float,Description=\"Filter from CMDB_hg19_v1.0\">\n   #CHROM  POS ID  REF ALT QUAL    FILTER  INFO\n   chr22   17662699    rs58754958  A   G   59.86   PASS    CMDB_AF=0.031047,CMDB_AC=441,CMDB_AN=13553\n   chr22   17662793    rs7289170   A   G   64.23   PASS    CMDB_AF=0.050419,CMDB_AC=842,CMDB_AN=16135\n   chr22   17669245    rs116020027 G   T   30.3    PASS    CMDB_AF=0.003453,CMDB_AC=43,CMDB_AN=11280\n   chr22   17690409    rs362129    G   A   32.3    PASS    CMDB_AF=0.065438,CMDB_AC=686,CMDB_AN=10236\n\nActrually you can use ``-c`` ``-p`` and ``-l`` simultaneously if you like. And ``positions.list`` could just contain one single position.\n\n.. code-block:: bash\n\n   cmdbtools query-variant -c 22 -p 46616520 -l positions.list > result.vcf\n\nAnnotate your VCF files\n-----------------------\n\nAnnotate your VCF file with CMDB by using ``cmdbtools annotate`` command.\n\nDownload a list of example variants in VCF format from `multiple_samples.vcf.gz <tests/multiple_samples.vcf.gz>`_.\nTo annotate this list of variants with allele frequences from CMDB, you can just run the following command in Linux or Mac OS.\n\n.. code-block:: bash\n\n   cmdbtools annotate -i multiple_samples.vcf.gz > multiple_samples_CMDB.vcf\n\nIt'll take about 2 or 3 minutes to complete 3,000+ variants' annotation. Then you will get 4 new fields with the information of CMDB in VCF INFO:\n\n\n* ``CMDB_AF``\\ : Allele frequece in CMDB;\n* ``CMDB_AN``\\ : Coverage in CMDB in population level;\n* ``CMDB_AC``\\ : Allele count in population level in CMDB;\n* ``CMDB_FILTER``\\ : Filter status in CMDB.\n\n.. code-block:: bash\n\n   ##fileformat=VCFv4.2\n   ##ALT=<ID=NON_REF,Description=\"Represents any possible alternative allele at this location\">\n   ##FILTER=<ID=LowQual,Description=\"Low quality\">\n   ##INFO=<ID=AC,Number=A,Type=Integer,Description=\"Allele count in genotypes, for each ALT allele, in the same order as listed\">\n   ##INFO=<ID=AF,Number=A,Type=Float,Description=\"Allele Frequency, for each ALT allele, in the same order as listed\">\n   ##INFO=<ID=AN,Number=1,Type=Integer,Description=\"Total number of alleles in called genotypes\">\n   ##INFO=<ID=BaseQRankSum,Number=1,Type=Float,Description=\"Z-score from Wilcoxon rank sum test of Alt Vs. Ref base qualities\">\n   ##reference=file:///home/tools/hg19_reference/ucsc.hg19.fasta\n   ##INFO=<ID=CMDB_AN,Number=1,Type=Integer,Description=\"Number of Alleles in Samples with Coverage from CMDB_hg19_v1.0\">\n   ##INFO=<ID=CMDB_AC,Number=A,Type=Integer,Description=\"Alternate Allele Counts in Samples with Coverage from CMDB_hg19_v1.0\">\n   ##INFO=<ID=CMDB_AF,Number=A,Type=Float,Description=\"Alternate Allele Frequencies from CMDB_hg19_v1.0\">\n   ##INFO=<ID=CMDB_FILTER,Number=A,Type=Float,Description=\"Filter from CMDB_hg19_v1.0\">\n   #CHROM  POS     ID      REF     ALT     QUAL    FILTER  INFO\n   chr21   9413612 .       C       T       6906.62 .       AC=25;AF=0.313;AN=80;BaseQRankSum=0.425;CMDB_AC=2459;CMDB_AF=0.207525;CMDB_AN=11834;CMDB_FILTER=PASS\n   chr21   9413629 .       C       T       8028.88 .       AC=30;AF=0.375;AN=80;BaseQRankSum=-1.200e+00;CMDB_AC=6906;CMDB_AF=0.305445;CMDB_AN=22406;CMDB_FILTER=PASS\n   chr21   9413700 .       G       A       7723.82 .       AC=30;AF=0.375;AN=80;BaseQRankSum=-9.000e-02\n   chr21   9413735 .       C       A       10121.72        .       AC=35;AF=0.438;AN=80;BaseQRankSum=0.977;CMDB_AC=2385;CMDB_AF=0.283965;CMDB_AN=8382;CMDB_FILTER=PASS\n   chr21   9413839 .       C       T       8192.08 .       AC=28;AF=0.350;AN=80;BaseQRankSum=-5.200e-02\n   chr21   9413840 .       C       A       11514.35        .       AC=38;AF=0.475;AN=80;BaseQRankSum=0.253\n   chr21   9413870 .       T       C       7390.60 .       AC=26;AF=0.325;AN=80;BaseQRankSum=-4.270e-01\n   chr21   9413880 .       T       A       146.96  .       AC=1;AF=0.013;AN=80;BaseQRankSum=2.12;ClippingRankSum=0.00\n   chr21   9413909 .       G       A       1131.78 .       AC=10;AF=0.125;AN=80;BaseQRankSum=0.549;CMDB_AC=209;CMDB_AF=0.01507;CMDB_AN=13683;CMDB_FILTER=PASS\n   chr21   9413913 .       C       T       8120.65 .       AC=28;AF=0.350;AN=80;BaseQRankSum=-4.390e-01;CMDB_AC=2870;CMDB_AF=0.205597;CMDB_AN=13955;CMDB_FILTER=PASS\n   chr21   9413945 .       T       C       43787.68        .       AC=71;AF=0.888;AN=80;BaseQRankSum=0.089\n   chr21   9413995 .       C       T       9632.44 .       AC=29;AF=0.363;AN=80;BaseQRankSum=0.747\n   chr21   9413996 .       A       G       41996.48        .       AC=71;AF=0.888;AN=80;BaseQRankSum=-1.242e+00;CMDB_AC=3308;CMDB_AF=0.688533;CMDB_AN=4790;CMDB_FILTER=PASS\n   chr21   9414003 .       T       C       4256.54 .       AC=19;AF=0.238;AN=80;BaseQRankSum=-6.030e-01\n\nCitation\n--------\n\n**If you use CMDB in your scientific publication, we would appreciate citation this paper:**\n\nSiyang Liu, Shujia Huang. et al.(2018) Genomic Analyses from Non-invasive Prenatal Testing Reveal Genetic Associations, \nPatterns of Viral Infections, and Chinese Population History. *Cell*\\ , 2, 347-359. \n`DOI:https://doi.org/10.1016/j.cell.2018.08.016 <https://doi.org/10.1016/j.cell.2018.08.016>`_\n", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/ShujiaHuang/cmdbtools", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ShujiaHuang/cmdbtools", "keywords": "", "license": "BSD (3-clause)", "maintainer": "", "maintainer_email": "", "name": "cmdbtools", "package_url": "https://pypi.org/project/cmdbtools/", "platform": "", "project_url": "https://pypi.org/project/cmdbtools/", "project_urls": {"Download": "https://github.com/ShujiaHuang/cmdbtools", "Homepage": "https://github.com/ShujiaHuang/cmdbtools"}, "release_url": "https://pypi.org/project/cmdbtools/1.0.6.2/", "requires_dist": null, "requires_python": "", "summary": "cmdbtools: A command line tools for CMDB variant browser.", "version": "1.0.6.2"}, "last_serial": 6337901, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "1a4bc78d16e4421dd21269ded561aded", "sha256": "565b7b616c588e4cbbb5b1e99783340b18b6a2bb843c67c33e3119d56db2f394"}, "downloads": -1, "filename": "cmdbtools-1.0.1.tar.gz", "has_sig": false, "md5_digest": "1a4bc78d16e4421dd21269ded561aded", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8686, "upload_time": "2018-12-05T12:17:03", "upload_time_iso_8601": "2018-12-05T12:17:03.933700Z", "url": "https://files.pythonhosted.org/packages/d7/4b/542e68886e836f59fe0ee50bd0726cae74270dca827c11b0d6474cf32096/cmdbtools-1.0.1.tar.gz"}], "1.0.2": [{"comment_text": "", "digests": {"md5": "a2c975c1b4799db691c78120b354a313", "sha256": "8e149eebbd04bf915b9be38c3941c2ddb1e5764e30d290fb79c051b2a9931189"}, "downloads": -1, "filename": "cmdbtools-1.0.2.tar.gz", "has_sig": false, "md5_digest": "a2c975c1b4799db691c78120b354a313", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8590, "upload_time": "2018-12-05T12:33:15", "upload_time_iso_8601": "2018-12-05T12:33:15.506297Z", "url": "https://files.pythonhosted.org/packages/1f/4c/03a303743122f3190e4b7b2f9060bbb98f2086971b2eeef2fa9880aaf97e/cmdbtools-1.0.2.tar.gz"}], "1.0.3": [{"comment_text": "", "digests": {"md5": "9d666a0f6b8fdd0db6cb6809cd834df1", "sha256": "6d13cdf1d232403b9b121cc79dcc8fd42886f45ba3709a6607a5be6ba9ec8449"}, "downloads": -1, "filename": "cmdbtools-1.0.3.tar.gz", "has_sig": false, "md5_digest": "9d666a0f6b8fdd0db6cb6809cd834df1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8586, "upload_time": "2018-12-05T12:39:47", "upload_time_iso_8601": "2018-12-05T12:39:47.432779Z", "url": "https://files.pythonhosted.org/packages/02/3b/2152d14481be8ef88aa7e76bfbbcf660db0e75fa74e3d20494fcd8c15b51/cmdbtools-1.0.3.tar.gz"}], "1.0.4": [{"comment_text": "", "digests": {"md5": "e633a50a9049af212692c4b935dc58f2", "sha256": "ca3cac8a7afd1e188ec7003d056fb0879dbb0048360f918c0cdd6e286447e284"}, "downloads": -1, "filename": "cmdbtools-1.0.4.tar.gz", "has_sig": false, "md5_digest": "e633a50a9049af212692c4b935dc58f2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12834, "upload_time": "2018-12-10T14:24:49", "upload_time_iso_8601": "2018-12-10T14:24:49.013248Z", "url": "https://files.pythonhosted.org/packages/c3/c5/8eec17f58e3b7a7f69b507c05ac5ab08853f26b2bc3f9044807c0c3d22b8/cmdbtools-1.0.4.tar.gz"}], "1.0.5": [{"comment_text": "", "digests": {"md5": "850d10e8aa852e9c047851fd30d8c6b8", "sha256": "84de6357350776476c43563d2a2387614cb5356cdde70069900450b83e181820"}, "downloads": -1, "filename": "cmdbtools-1.0.5.tar.gz", "has_sig": false, "md5_digest": "850d10e8aa852e9c047851fd30d8c6b8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12811, "upload_time": "2019-08-23T01:30:13", "upload_time_iso_8601": "2019-08-23T01:30:13.600195Z", "url": "https://files.pythonhosted.org/packages/46/61/7c305aa5e438b8c5e2ddc3ce4e1387293485ea58b33d74d4a8ca8af4461a/cmdbtools-1.0.5.tar.gz"}], "1.0.6": [{"comment_text": "", "digests": {"md5": "197211f773fd141a09b03793a9305998", "sha256": "b2fbe72abce72262831fd1a655b1fb5e43982c87895e45f96ffd7132c12716f1"}, "downloads": -1, "filename": "cmdbtools-1.0.6.tar.gz", "has_sig": false, "md5_digest": "197211f773fd141a09b03793a9305998", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12820, "upload_time": "2019-08-23T01:38:08", "upload_time_iso_8601": "2019-08-23T01:38:08.052897Z", "url": "https://files.pythonhosted.org/packages/59/f7/786653154647877baba9a566b1274d4ca7650ae0ad5ee06c98a51db025a4/cmdbtools-1.0.6.tar.gz"}], "1.0.6.1": [{"comment_text": "", "digests": {"md5": "87de9af85c6f463eae947411e0a922d6", "sha256": "e2f30dc220681c2983069eee0794a2e094d207fa2984fd0fbd0f52fff30d1565"}, "downloads": -1, "filename": "cmdbtools-1.0.6.1.tar.gz", "has_sig": false, "md5_digest": "87de9af85c6f463eae947411e0a922d6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12831, "upload_time": "2019-08-23T01:51:19", "upload_time_iso_8601": "2019-08-23T01:51:19.488813Z", "url": "https://files.pythonhosted.org/packages/af/15/0c9d810b7424f78f3b9ca503235995f2a5f7e1fb2668c140701e4e130dc4/cmdbtools-1.0.6.1.tar.gz"}], "1.0.6.2": [{"comment_text": "", "digests": {"md5": "8a4d09f5bbc87f0ab5b9dedc12f98f00", "sha256": "9d123b15a9acfd33ff2470719671743d1d911b332f24fda651d1f2c307fd5e4e"}, "downloads": -1, "filename": "cmdbtools-1.0.6.2.tar.gz", "has_sig": false, "md5_digest": "8a4d09f5bbc87f0ab5b9dedc12f98f00", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12936, "upload_time": "2019-12-20T08:57:21", "upload_time_iso_8601": "2019-12-20T08:57:21.621846Z", "url": "https://files.pythonhosted.org/packages/28/6a/dfa89c857c452893d229a81d4c7704b81eb166c706ff54e1c7fd5d18e436/cmdbtools-1.0.6.2.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "8a4d09f5bbc87f0ab5b9dedc12f98f00", "sha256": "9d123b15a9acfd33ff2470719671743d1d911b332f24fda651d1f2c307fd5e4e"}, "downloads": -1, "filename": "cmdbtools-1.0.6.2.tar.gz", "has_sig": false, "md5_digest": "8a4d09f5bbc87f0ab5b9dedc12f98f00", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12936, "upload_time": "2019-12-20T08:57:21", "upload_time_iso_8601": "2019-12-20T08:57:21.621846Z", "url": "https://files.pythonhosted.org/packages/28/6a/dfa89c857c452893d229a81d4c7704b81eb166c706ff54e1c7fd5d18e436/cmdbtools-1.0.6.2.tar.gz"}]}