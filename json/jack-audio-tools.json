{"info": {"author": "Christopher Arndt", "author_email": "info@chrisarndt.de", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "License :: OSI Approved :: MIT License", "Operating System :: POSIX", "Programming Language :: Python", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only", "Topic :: Multimedia :: Sound/Audio"], "description": "# jack-audio-tools\n\nA collection of utilities and tools for the [JACK] audio ecosystem\n\n\n## JACK Transport\n\nThe scripts in the `jackaudiotools.transport` package query or manipulate the\nJACK transport state.\n\nThey require the [JACK-Client] package to be installed, which will be installed\nautomatically, when you install the `jack-audio-tools` distribution via `pip`:\n\n    pip install jack-audio-tools\n\n\n### `jack-midi-to-transport`\n\nJACK client which allows to control transport state via MIDI.\n\nThe client provides a MIDI input and converts received MIDI system real-time\nand MIDI machine control (MMC) messages into JACK transport commands.\n\nThe following MIDI messages, when received, start the JACK transport:\n\n* `START` (System Real-time)\n* `CONTINUE` (System Real-time)\n* `PLAY` (MMC)\n* `DEFERRED PLAY` (MMC)\n\nThese messages stop the transport:\n\n* `STOP` (System Real-time)\n* `STOP` (MMC)\n* `PAUSE` (MMC)\n* `RESET` (MMC)\n\nAnd these rewind the transport to frame zero:\n\n* `REWIND` (MMC)\n* `RESET` (MMC)\n\nMMC messages are ignored, if the device number in the MMC System Exclusive\nmessage does not match the client's device number (set with the -d command\nline option).\n\nIf the client's device number is set to 127 (the default), it matches all\nMMC message device numbers.\n\n\n### `jack-rtmidi-to-transport`\n\nJACK client which allows to control transport state via MIDI.\n\nA variant of `midi_to_transport`, which uses the [python-rtmidi] package\nas a MIDI backend instead of JACK-Cleint, which is slightly more efficient,\nbecause MIDI input processing is happening in a C++ thread instead of a\nPython callback.\n\nTo use it, specify the `rtmidi` extra dependency when installing the\n`jack-audio-tools` distribution via `pip`:\n\n    pip install \"jack-audio-tools[rtmidi]\"\n\n\n### `jack-timebase-master`\n\nA simple JACK timebase master, which provides  musical timing related\ninformation (i.e. currents bar, beats per bar, beat denominator, BPM etc.)\nto other JACK clients.\n\n\n### `jack-transporter`\n\nQuery or change the JACK transport state.\n\n\n## LV2\n\nThe scripts in the `jackaudiotools.lv2` package help with querying information\nfrom the [LV2] plugins installed on the system.\n\nThey require the [lilv] Python bindings to be installed. Unfortunately, these\ncan not be installed from the Python Package Index. Instead, install a recent\nversion of the `lilv` library, either from your distribution's package\nrepository or from source.\n\n\n### `lv2-grep`\n\nPrint URIs of all installed LV2 plugins matching the given regular expression.\n\n\n### `lv2-plugin-uris`\n\nPrint a list of all URIs associated with an LV2 plugin.\n\n\n### `lv2-list-plugin-presets`\n\nList all presets of an LV2 plugin with the given URI.\n\n\n### `lv2-plugin-info`\n\nGenerate a JSON document with information about a single or all installed LV2\nplugins. This allows plugin meta data to be loaded quickly in other programs.\n\nDepending on the number of plugins installed on your system, this script may\nrun for several seconds or even minutes and produce an output file of several\nmegabytes in size.\n\n\n## Carla\n\nThe scripts in the `jackaudiotools.carla` package manipulate or query [Carla]\nproject files.\n\n\n### `carxp2lv2presets`\n\nExport plugin settings from a Carla project file (.carxp) as LV2 preset bundles.\n\nThis script requires the [rdflib] package to be installed. To install it,\nspecify the `rdflib` extra dependency when installing the `jack-audio-tools`\ndistribution via `pip`:\n\n    pip install \"jack-audio-tools[rdflib]\"\n\n\n## License\n\nThis software is distributed under the MIT License.\n\nSee the file [LICENSE](./LICENSE) for more information.\n\n\n## Author\n\nThis software is written by *Christopher Arndt*.\n\n\n[carla]: https://kx.studio/Applications:Carla\n[jack-client]: https://pypi.org/project/JACK-Client\n[jack]: https://jackaudio.org/\n[lilv]: http://drobilla.net/software/lilv\n[lv2]: http://lv2plug.in/\n[python-rtmidi]: https://pypi.org/project/python-rtmidi\n[rdflib]: https://pypi.org/project/rdflib\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/SpotlightKid/jack-audio-tools", "keywords": "jack,jackaudio,LV2,carla,MIDI", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "jack-audio-tools", "package_url": "https://pypi.org/project/jack-audio-tools/", "platform": "", "project_url": "https://pypi.org/project/jack-audio-tools/", "project_urls": {"Homepage": "https://github.com/SpotlightKid/jack-audio-tools"}, "release_url": "https://pypi.org/project/jack-audio-tools/0.2.0/", "requires_dist": ["JACK-Client (>=0.5.0)", "rdflib ; extra == 'rdflib'", "python-rtmidi ; extra == 'rtmidi'"], "requires_python": ">=3", "summary": "A collection of utilities and tools for the JACK audio ecosystem", "version": "0.2.0"}, "last_serial": 6203182, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "45a4f7b06ca53f387d8e9e68c3b0d3b4", "sha256": "2b1be7378b48208b88f3921fb1ffa6b0b80b2f7f986f2d7e0fd053450fe9f6a9"}, "downloads": -1, "filename": "jack_audio_tools-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "45a4f7b06ca53f387d8e9e68c3b0d3b4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 29583, "upload_time": "2019-11-26T18:59:36", "upload_time_iso_8601": "2019-11-26T18:59:36.658782Z", "url": "https://files.pythonhosted.org/packages/11/88/8583754eca26ed748ed1cf6db4bc357df1990b25acd30d5d5a2b3f187438/jack_audio_tools-0.2.0-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "95e9da0138cb37456187c77c156db6c6", "sha256": "f7e5ddd56d97568290eec73ee4216552c0f8b68a475334edf26cfdeccac166ee"}, "downloads": -1, "filename": "jack-audio-tools-0.2.0.tar.gz", "has_sig": false, "md5_digest": "95e9da0138cb37456187c77c156db6c6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 17512, "upload_time": "2019-11-26T18:59:39", "upload_time_iso_8601": "2019-11-26T18:59:39.511268Z", "url": "https://files.pythonhosted.org/packages/80/7b/5a5366f1841bb1aa5203e521064b8f13697c702a96b136adc350d3d54be3/jack-audio-tools-0.2.0.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "45a4f7b06ca53f387d8e9e68c3b0d3b4", "sha256": "2b1be7378b48208b88f3921fb1ffa6b0b80b2f7f986f2d7e0fd053450fe9f6a9"}, "downloads": -1, "filename": "jack_audio_tools-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "45a4f7b06ca53f387d8e9e68c3b0d3b4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 29583, "upload_time": "2019-11-26T18:59:36", "upload_time_iso_8601": "2019-11-26T18:59:36.658782Z", "url": "https://files.pythonhosted.org/packages/11/88/8583754eca26ed748ed1cf6db4bc357df1990b25acd30d5d5a2b3f187438/jack_audio_tools-0.2.0-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "95e9da0138cb37456187c77c156db6c6", "sha256": "f7e5ddd56d97568290eec73ee4216552c0f8b68a475334edf26cfdeccac166ee"}, "downloads": -1, "filename": "jack-audio-tools-0.2.0.tar.gz", "has_sig": false, "md5_digest": "95e9da0138cb37456187c77c156db6c6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 17512, "upload_time": "2019-11-26T18:59:39", "upload_time_iso_8601": "2019-11-26T18:59:39.511268Z", "url": "https://files.pythonhosted.org/packages/80/7b/5a5366f1841bb1aa5203e521064b8f13697c702a96b136adc350d3d54be3/jack-audio-tools-0.2.0.tar.gz"}]}