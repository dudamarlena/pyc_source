{"info": {"author": "Adafruit Industries", "author_email": "circuitpython@adafruit.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Software Development :: Libraries", "Topic :: System :: Hardware"], "description": "Introduction\n=============\n\n.. image:: https://readthedocs.org/projects/adafruit-micropython-ds3231/badge/?version=latest\n    :target: https://circuitpython.readthedocs.io/projects/ds3231/en/latest/\n    :alt: Documentation Status\n\n.. image :: https://img.shields.io/discord/327254708534116352.svg\n    :target: https://discord.gg/nBQh6qu\n    :alt: Discord\n\n.. image:: https://github.com/adafruit/Adafruit_CircuitPython_DS3231/workflows/Build%20CI/badge.svg\n    :target: https://github.com/adafruit/Adafruit_CircuitPython_DS3231/actions/\n    :alt: Build Status\n\nThe datasheet for the DS3231 explains that this part is an\n\"Extremely Accurate I\u00b2C-Integrated RTC/TCXO/Crystal\". And,\nhey, it does exactly what it says on the tin! This Real Time\nClock (RTC) is the most precise you can get in a small, low\npower package.\n\nMost RTCs use an external 32kHz timing crystal that is used\nto keep time with low current draw. And that's all well and\ngood, but those crystals have slight drift, particularly when\nthe temperature changes (the temperature changes the oscillation\nfrequency very very very slightly but it does add up!) This\nRTC is in a beefy package because the crystal is inside the\nchip! And right next to the integrated crystal is a temperature\nsensor. That sensor compensates for the frequency changes by\nadding or removing clock ticks so that the timekeeping stays\non schedule.\n\nThis is the finest RTC you can get, and now we have it in a\ncompact, breadboard-friendly breakout. With a coin cell\nplugged into the back, you can get years of precision\ntimekeeping, even when main power is lost. Great for\ndatalogging and clocks, or anything where you need to\nreally know the time.\n\n.. image:: ../docs/_static/3013-01.jpg\n    :alt: DS3231 Product Image\n\nDependencies\n=============\nThis driver depends on:\n\n* `Adafruit CircuitPython <https://github.com/adafruit/circuitpython>`_\n* `Bus Device <https://github.com/adafruit/Adafruit_CircuitPython_BusDevice>`_\n* `Register <https://github.com/adafruit/Adafruit_CircuitPython_Register>`_\n\nPlease ensure all dependencies are available on the CircuitPython filesystem.\nThis is easily achieved by downloading\n`the Adafruit library and driver bundle <https://github.com/adafruit/Adafruit_CircuitPython_Bundle>`_.\n\nInstalling from PyPI\n====================\n\nOn supported GNU/Linux systems like the Raspberry Pi, you can install the driver locally `from\nPyPI <https://pypi.org/project/adafruit-circuitpython-ds3231/>`_. To install for current user:\n\n.. code-block:: shell\n\n    pip3 install adafruit-circuitpython-ds3231\n\nTo install system-wide (this may be required in some cases):\n\n.. code-block:: shell\n\n    sudo pip3 install adafruit-circuitpython-ds3231\n\nTo install in a virtual environment in your current project:\n\n.. code-block:: shell\n\n    mkdir project-name && cd project-name\n    python3 -m venv .env\n    source .env/bin/activate\n    pip3 install adafruit-circuitpython-ds3231\n\nUsage Notes\n===========\n\nBasics\n------\n\nOf course, you must import the library to use it:\n\n.. code:: python\n\n    import busio\n    import adafruit_ds3231\n    import time\n\nAll the Adafruit RTC libraries take an instantiated and active I2C object\n(from the ``busio`` library) as an argument to their constructor. The way to\ncreate an I2C object depends on the board you are using. For boards with labeled\nSCL and SDA pins, you can:\n\n.. code:: python\n\n    from board import *\n\nYou can also use pins defined by the onboard ``microcontroller`` through the\n``microcontroller.pin`` module.\n\nNow, to initialize the I2C bus:\n\n.. code:: python\n\n    myI2C = busio.I2C(SCL, SDA)\n\nOnce you have created the I2C interface object, you can use it to instantiate\nthe RTC object:\n\n.. code:: python\n\n    rtc = adafruit_ds3231.DS3231(myI2C)\n\nDate and time\n-------------\n\nTo set the time, you need to set ``datetime`` to a ``time.struct_time`` object:\n\n.. code:: python\n\n    rtc.datetime = time.struct_time((2017,1,9,15,6,0,0,9,-1))\n\nAfter the RTC is set, you retrieve the time by reading the ``datetime``\nattribute and access the standard attributes of a struct_time such as ``tm_year``,\n``tm_hour`` and ``tm_min``.\n\n.. code:: python\n\n    t = rtc.datetime\n    print(t)\n    print(t.tm_hour, t.tm_min)\n\nAlarm\n-----\n\nTo set the time, you need to set ``alarm1`` or ``alarm2`` to a tuple with a\n``time.struct_time`` object and string representing the frequency such as \"hourly\":\n\n.. code:: python\n\n    rtc.alarm1 = (time.struct_time((2017,1,9,15,6,0,0,9,-1)), \"daily\")\n\nAfter the RTC is set, you retrieve the alarm status by reading the corresponding\n``alarm1_status`` or ``alarm2_status`` attributes. Once True, set it back to False\nto reset.\n\n.. code:: python\n\n    if rtc.alarm1_status:\n        print(\"wake up!\")\n        rtc.alarm1_status = False\n\nContributing\n============\n\nContributions are welcome! Please read our `Code of Conduct\n<https://github.com/adafruit/Adafruit_CircuitPython_DS3231/blob/master/CODE_OF_CONDUCT.md>`_\nbefore contributing to help this project stay welcoming.\n\nDocumentation\n=============\n\nFor information on building library documentation, please check out `this guide <https://learn.adafruit.com/creating-and-sharing-a-circuitpython-library/sharing-our-docs-on-readthedocs#sphinx-5-1>`_.", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/adafruit/Adafruit_CircuitPython_DS3231", "keywords": "adafruit precision real-time real time clock breakout hardware micropython circuitpython", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "adafruit-circuitpython-ds3231", "package_url": "https://pypi.org/project/adafruit-circuitpython-ds3231/", "platform": "", "project_url": "https://pypi.org/project/adafruit-circuitpython-ds3231/", "project_urls": {"Homepage": "https://github.com/adafruit/Adafruit_CircuitPython_DS3231"}, "release_url": "https://pypi.org/project/adafruit-circuitpython-ds3231/2.3.1/", "requires_dist": null, "requires_python": "", "summary": "CircuitPython library for DS3231 precision real-time clock.", "version": "2.3.1"}, "last_serial": 6995144, "releases": {"2.1.0": [{"comment_text": "", "digests": {"md5": "224cbe9d062a283db9b8e047e9c4f9ab", "sha256": "03b0977510aaf40851b064e3e23e287dff309bf78daf98e53b16aee2580db0b5"}, "downloads": -1, "filename": "adafruit-circuitpython-ds3231-2.1.0.tar.gz", "has_sig": false, "md5_digest": "224cbe9d062a283db9b8e047e9c4f9ab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 291452, "upload_time": "2018-08-05T16:31:25", "upload_time_iso_8601": "2018-08-05T16:31:25.566559Z", "url": "https://files.pythonhosted.org/packages/4e/f2/ecae340be2d9357fa9dfb5d733b2622e2d20963e0ff1938dead74add0b54/adafruit-circuitpython-ds3231-2.1.0.tar.gz"}], "2.1.1": [{"comment_text": "", "digests": {"md5": "0bbbf9bfaeeccb9ba0cfd5eb82b4d72c", "sha256": "ca1cf3a219e1e2522df10cbe305ad257383e5c0e49f126d1d8bf3d8b0b9e012a"}, "downloads": -1, "filename": "adafruit-circuitpython-ds3231-2.1.1.tar.gz", "has_sig": false, "md5_digest": "0bbbf9bfaeeccb9ba0cfd5eb82b4d72c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 291461, "upload_time": "2018-11-12T20:29:39", "upload_time_iso_8601": "2018-11-12T20:29:39.286280Z", "url": "https://files.pythonhosted.org/packages/13/89/cfc1eea0ff10fb54896c697ddcd7365d92c5c80d61fa0d358ea31bfeaae5/adafruit-circuitpython-ds3231-2.1.1.tar.gz"}], "2.1.2": [{"comment_text": "", "digests": {"md5": "fd269462cdffd626958ccdffb7961f00", "sha256": "19fdb2452182278f718d6326b66d53d60ecf2db9efead494d9c2ff51acec75d7"}, "downloads": -1, "filename": "adafruit-circuitpython-ds3231-2.1.2.tar.gz", "has_sig": false, "md5_digest": "fd269462cdffd626958ccdffb7961f00", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 291470, "upload_time": "2018-12-03T22:04:03", "upload_time_iso_8601": "2018-12-03T22:04:03.877570Z", "url": "https://files.pythonhosted.org/packages/84/03/a4970bd804d08ab601868ff785fd51c846e4f0d7a4f40a87947dc85eb891/adafruit-circuitpython-ds3231-2.1.2.tar.gz"}], "2.1.3": [{"comment_text": "", "digests": {"md5": "188218c71f23ff1039c6223071ee920a", "sha256": "d6aafdf753ed77446a852e1bac139ce8b1e2b3996b941799294ee4bcf0e68137"}, "downloads": -1, "filename": "adafruit-circuitpython-ds3231-2.1.3.tar.gz", "has_sig": false, "md5_digest": "188218c71f23ff1039c6223071ee920a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 288371, "upload_time": "2019-01-16T02:30:39", "upload_time_iso_8601": "2019-01-16T02:30:39.511846Z", "url": "https://files.pythonhosted.org/packages/c7/d0/ef6e35191a5262e92eaae71404a34922a098c0a2e586b02225aa42018a3d/adafruit-circuitpython-ds3231-2.1.3.tar.gz"}], "2.2.3": [{"comment_text": "", "digests": {"md5": "517c8558f2be61899e75abf01d3a5162", "sha256": "53c7066b0b71597e10c883b0339f02e80c0a1d3575ec6f457a06969e01e5aa58"}, "downloads": -1, "filename": "adafruit-circuitpython-ds3231-2.2.3.tar.gz", "has_sig": false, "md5_digest": "517c8558f2be61899e75abf01d3a5162", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 290185, "upload_time": "2020-01-24T15:48:55", "upload_time_iso_8601": "2020-01-24T15:48:55.793500Z", "url": "https://files.pythonhosted.org/packages/74/75/0080c0b166f338a959c4f94522ba57e7154af4beb841be7a8539fec43c5d/adafruit-circuitpython-ds3231-2.2.3.tar.gz"}], "2.3.0": [{"comment_text": "", "digests": {"md5": "36c3a8d95c08886cb167491a0d08dd25", "sha256": "34655805b69d17f4583a243f10c1ecf2918af377ff9998b48e72fa40f6f6301b"}, "downloads": -1, "filename": "adafruit-circuitpython-ds3231-2.3.0.tar.gz", "has_sig": false, "md5_digest": "36c3a8d95c08886cb167491a0d08dd25", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 290360, "upload_time": "2020-03-20T15:08:46", "upload_time_iso_8601": "2020-03-20T15:08:46.688137Z", "url": "https://files.pythonhosted.org/packages/73/ad/c9ae622d5129ffa92a7dfc1ca3baa5e64915234831eefe5c2952d1c262b8/adafruit-circuitpython-ds3231-2.3.0.tar.gz"}], "2.3.1": [{"comment_text": "", "digests": {"md5": "e8cc3100b18deab5216191fa2c2580df", "sha256": "38bd74de85caca2f97b75efadda75d08fc00e179ade9a4188eb3dd29d7098910"}, "downloads": -1, "filename": "adafruit-circuitpython-ds3231-2.3.1.tar.gz", "has_sig": false, "md5_digest": "e8cc3100b18deab5216191fa2c2580df", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 290374, "upload_time": "2020-04-10T17:31:17", "upload_time_iso_8601": "2020-04-10T17:31:17.177439Z", "url": "https://files.pythonhosted.org/packages/56/96/d2a449ad3c28c0488c3da1a2c551a365a3b287d24cba6c4659f01018bbee/adafruit-circuitpython-ds3231-2.3.1.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "e8cc3100b18deab5216191fa2c2580df", "sha256": "38bd74de85caca2f97b75efadda75d08fc00e179ade9a4188eb3dd29d7098910"}, "downloads": -1, "filename": "adafruit-circuitpython-ds3231-2.3.1.tar.gz", "has_sig": false, "md5_digest": "e8cc3100b18deab5216191fa2c2580df", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 290374, "upload_time": "2020-04-10T17:31:17", "upload_time_iso_8601": "2020-04-10T17:31:17.177439Z", "url": "https://files.pythonhosted.org/packages/56/96/d2a449ad3c28c0488c3da1a2c551a365a3b287d24cba6c4659f01018bbee/adafruit-circuitpython-ds3231-2.3.1.tar.gz"}]}