{"info": {"author": "Sefik Ilkin Serengil", "author_email": "serengil@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# chefboost\n\n[![Downloads](https://pepy.tech/badge/chefboost)](https://pepy.tech/project/chefboost)\n\n<p align=\"center\"><img src=\"https://raw.githubusercontent.com/serengil/chefboost/master/icon/chefboost-icon.png\" width=\"200\" height=\"200\"></p>\n\n**Chefboost** is a lightweight [gradient boosting](https://sefiks.com/2018/10/04/a-step-by-step-gradient-boosting-decision-tree-example/), [random forest](https://sefiks.com/2017/11/19/how-random-forests-can-keep-you-from-decision-tree/) and [adaboost](https://sefiks.com/2018/11/02/a-step-by-step-adaboost-example/) enabled decision tree framework including regular [ID3](https://sefiks.com/2017/11/20/a-step-by-step-id3-decision-tree-example/), [C4.5](https://sefiks.com/2018/05/13/a-step-by-step-c4-5-decision-tree-example/), [CART](https://sefiks.com/2018/08/27/a-step-by-step-cart-decision-tree-example/), [CHAID](https://sefiks.com/2020/03/18/a-step-by-step-chaid-decision-tree-example/) and [regression tree](https://sefiks.com/2018/08/28/a-step-by-step-regression-decision-tree-example/) algorithms **with categorical features support**. It is lightweight, you just need to write **a few lines of code** to build decision trees with Chefboost.\n\n# Usage\n\nBasically, you just need to pass the dataset as pandas data frame and tree configurations after importing Chefboost as illustrated below. You just need to put the target label to the right. Besides, chefboost handles both numeric and nominal features and target values in contrast to its alternatives.\n\n```python\nfrom chefboost import Chefboost as chef\nimport pandas as pd\n\ndf = pd.read_csv(\"dataset/golf.txt\")\n\nconfig = {'algorithm': 'ID3'}\nmodel = chef.fit(df, config)\n```\n\n# Outcomes\n\nBuilt decision trees are stored as python if statements in the `tests/outputs/rules` directory. A sample of decision rules is demonstrated below.\n\n```python\ndef findDecision(Outlook,Temperature,Humidity,Wind,Decision):\n   if Outlook == 'Rain':\n      if Wind == 'Weak':\n         return 'Yes'\n      elif Wind == 'Strong':\n         return 'No'\n   elif Outlook == 'Sunny':\n      if Humidity == 'High':\n         return 'No'\n      elif Humidity == 'Normal':\n         return 'Yes'\n   elif Outlook == 'Overcast':\n      return 'Yes'\n ```\n\n# Testing for custom instances\n\nDecision rules will be stored in `outputs/rules/` folder when you build decision trees. You can run the built decision tree for new instances as illustrated below.\n\n```python\ntest_instance = ['Sunny', 'Hot', 'High', 'Weak']\nmodel = chef.fit(df, config)\nprediction = chef.predict(model, test_instance)\n```\n\nYou can consume built decision trees directly as well. In this way, you can restore already built decision trees and skip learning steps, or apply **transfer learning**. Loaded trees offer you findDecision method to test for new instances.\n\n```python\nmoduleName = \"outputs/rules/rules\" #this will load outputs/rules/rules.py\ntree = chef.restoreTree(moduleName)\nprediction = tree.findDecision(['Sunny', 'Hot', 'High', 'Weak'])\n```\n\n**tests/global-unit-test.py** will guide you how to build a different decision trees and make predictions.\n\n# Model save and restoration\n\nYou can save your trained models.\n\n```python\nmodel = chef.fit(df.copy(), config)\nchef.save_model(model, \"model.pkl\")\n```\n\nIn this way, you can use the same model later to just make predictions. This skips the training steps. Restoration requires to store .py and .pkl files under `outputs/rules`.\n\n```python\nmodel = chef.load_model(\"model.pkl\")\nprediction = chef.predict(model, ['Sunny',85,85,'Weak'])\n```\n\n# Sample configurations\n\nChefboost supports several decision tree, bagging and boosting algorithms. You just need to pass the configuration to use different algorithms.\n\n**Regular Decision Trees** [`ID3 Video`](https://youtu.be/Z93qE5eb6eg), [`C4.5 Video`](https://youtu.be/kjhQHmtDaAA), [`CART Video`](https://youtu.be/CSApBetgukM), [`Regression Tree Video`](https://youtu.be/pCQ2RCa20Bg)\n\n```python\nconfig = {'algorithm': 'C4.5'} #ID3, C4.5, CART, CHAID or Regression\n```\n\n**Gradient Boosting** [`Video`](https://youtu.be/KFsnZKMKNAE)\n\n```python\nconfig = {'enableGBM': True, 'epochs': 7, 'learning_rate': 1}\n```\n\n**Random Forest** [`Video`](https://youtu.be/J7hDtV261PQ)\n\n```python\nconfig = {'enableRandomForest': True, 'num_of_trees': 5}\n```\n\n**Adaboost** [`Video`](https://youtu.be/Obj208F6e7k)\n\n```python\nconfig = {'enableAdaboost': True, 'num_of_weak_classifier': 4}\n```\n\n# Documentation\n\nThis YouTube [playlist](https://www.youtube.com/playlist?list=PLsS_1RYmYQQHp_xZObt76dpacY543GrJD) guides you how to use Chefboost step by step for different algorithms. You can also find the detailed documentations about these core algorithms [here](https://sefiks.com/tag/decision-tree/). \n\nBesides, you can enroll this online course - [**Decision Trees for Machine Learning From Scratch**](https://www.udemy.com/course/decision-trees-for-machine-learning/?referralCode=FDC9B836EC6DAA1A663A) and follow the curriculum if you wonder the theory of decision trees and how this framework is developed.\n\n# Installation\n\nThe easiest way to install Chefboost framework is to download it from [from PyPI](https://pypi.org/project/chefboost).\n\n```\npip install chefboost\n```\n\nAlternatively, you can directly download the source code from this repository. **GitHub repo might be newer than the PyPI version**.\n\n```\ngit clone https://github.com/serengil/chefboost.git\ncd chefboost\npip install -e .\n```\n\nInstallation guideline is also captured as a [video](https://youtu.be/YYF993HTHf8).\n\nInitial tests are run for Python 3.6.4 on Windows 10 but this is an OS-independent framework. Even though pip handles to install dependent libraries, the framework basically needs the following dependencies. You might need the following library requirements if you install the source code from github.\n\n```\npip install pandas==0.22.0\npip install numpy==1.14.0\npip install tqdm==4.30.0\n```\n\n# Support\n\nThere are many ways to support a project - starring\u2b50\ufe0f the GitHub repos is just one.\n\nYou can also support this project through Patreon.\n\n<a href=\"https://www.patreon.com/bePatron?u=31795557\"><img src=\"https://c5.patreon.com/external/logo/become_a_patron_button.png\"></img></a>\n\n# Licence\n\nChefboost is licensed under the MIT License - see [`LICENSE`](https://github.com/serengil/chefboost/blob/master/LICENSE) for more details.\n\n[Logo](https://thenounproject.com/term/chef/1932168/) is created by [Tang Ge](https://thenounproject.com/tang_ge/). Licensed under [Creative Commons: By Attribution 3.0 License](https://creativecommons.org/licenses/by/3.0/).\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/serengil/chefboost", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "chefboost", "package_url": "https://pypi.org/project/chefboost/", "platform": "", "project_url": "https://pypi.org/project/chefboost/", "project_urls": {"Homepage": "https://github.com/serengil/chefboost"}, "release_url": "https://pypi.org/project/chefboost/0.0.4/", "requires_dist": ["pandas (>=0.22.0)", "numpy (>=1.14.0)", "tqdm (>=4.30.0)"], "requires_python": ">=3.6", "summary": "Lightweight Decision Tree Framework Supporting GBM, Random Forest and Adaboost", "version": "0.0.4"}, "last_serial": 6850894, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "f11c7cf2768890d047a8f8da102b96b6", "sha256": "c9e9004697ae1529674acc895b6a558e3c42191af8e3545f0dd379e3673f6adc"}, "downloads": -1, "filename": "chefboost-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "f11c7cf2768890d047a8f8da102b96b6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 17916, "upload_time": "2020-01-06T13:27:52", "upload_time_iso_8601": "2020-01-06T13:27:52.319381Z", "url": "https://files.pythonhosted.org/packages/03/94/ff185c8f36702b4d95c2b8e23e204774dca8a61183e0d1816c99a4983c45/chefboost-0.0.1-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "5b2bff167263b0ca7c16191774548f1e", "sha256": "7ad218d308f14fbe79592c2383de76f34c3e103cbd0ad3c03d797d3622cc0e2b"}, "downloads": -1, "filename": "chefboost-0.0.1.tar.gz", "has_sig": false, "md5_digest": "5b2bff167263b0ca7c16191774548f1e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 12982, "upload_time": "2020-01-06T13:27:54", "upload_time_iso_8601": "2020-01-06T13:27:54.796405Z", "url": "https://files.pythonhosted.org/packages/e1/a8/cf51eb3fb24f30b9225134aac1a7ac3077112c446ecc24cb8b309c567093/chefboost-0.0.1.tar.gz"}], "0.0.3": [{"comment_text": "", "digests": {"md5": "d3ee32eba4dd4154ef8cd0396f2b8875", "sha256": "20001037321fcb5fdda2cd513b7606111433a8209b9f4311772b8abfb2817199"}, "downloads": -1, "filename": "chefboost-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "d3ee32eba4dd4154ef8cd0396f2b8875", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 19813, "upload_time": "2020-01-30T21:20:18", "upload_time_iso_8601": "2020-01-30T21:20:18.061956Z", "url": "https://files.pythonhosted.org/packages/11/74/99026299127cd1095bcf57e64668e4cc37358b1369c4d9e006333c893e1a/chefboost-0.0.3-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "e69014a50d85bbb1284c20e2dc11f37e", "sha256": "76b9f760711a5b28a7722d6e81a73bbcb3322d7e49a7eb5f47e655e36dbd0329"}, "downloads": -1, "filename": "chefboost-0.0.3.tar.gz", "has_sig": false, "md5_digest": "e69014a50d85bbb1284c20e2dc11f37e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14768, "upload_time": "2020-01-30T21:20:19", "upload_time_iso_8601": "2020-01-30T21:20:19.611053Z", "url": "https://files.pythonhosted.org/packages/74/27/719e46a4db26ba9e5d9d0474a749a040472d45a439688c8fac484a50710e/chefboost-0.0.3.tar.gz"}], "0.0.4": [{"comment_text": "", "digests": {"md5": "8730251e9bc5c36e51d20dec7d56a4c8", "sha256": "fc9c9bba8f2b68c3537099bb79187cfe765d82a3aa3e7dd9caec2424de08d778"}, "downloads": -1, "filename": "chefboost-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "8730251e9bc5c36e51d20dec7d56a4c8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 20519, "upload_time": "2020-03-20T16:18:46", "upload_time_iso_8601": "2020-03-20T16:18:46.250782Z", "url": "https://files.pythonhosted.org/packages/2c/3b/719d5ebb64fd1c7d5bf491456a30a9eea048325b024103e3edec86ce79ef/chefboost-0.0.4-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "5775ac0611bc96cba16c05d679b6ca9f", "sha256": "f6aec7aced5e57518c51eeaefaba3b008b0fdadcdc22b52f196a2b913d0de09a"}, "downloads": -1, "filename": "chefboost-0.0.4.tar.gz", "has_sig": false, "md5_digest": "5775ac0611bc96cba16c05d679b6ca9f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 15668, "upload_time": "2020-03-20T16:18:47", "upload_time_iso_8601": "2020-03-20T16:18:47.763692Z", "url": "https://files.pythonhosted.org/packages/b1/16/1033ef3317c4c07301e305d7db2cc1bbecaf9cbd25876c0841367a05838d/chefboost-0.0.4.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "8730251e9bc5c36e51d20dec7d56a4c8", "sha256": "fc9c9bba8f2b68c3537099bb79187cfe765d82a3aa3e7dd9caec2424de08d778"}, "downloads": -1, "filename": "chefboost-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "8730251e9bc5c36e51d20dec7d56a4c8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 20519, "upload_time": "2020-03-20T16:18:46", "upload_time_iso_8601": "2020-03-20T16:18:46.250782Z", "url": "https://files.pythonhosted.org/packages/2c/3b/719d5ebb64fd1c7d5bf491456a30a9eea048325b024103e3edec86ce79ef/chefboost-0.0.4-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "5775ac0611bc96cba16c05d679b6ca9f", "sha256": "f6aec7aced5e57518c51eeaefaba3b008b0fdadcdc22b52f196a2b913d0de09a"}, "downloads": -1, "filename": "chefboost-0.0.4.tar.gz", "has_sig": false, "md5_digest": "5775ac0611bc96cba16c05d679b6ca9f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 15668, "upload_time": "2020-03-20T16:18:47", "upload_time_iso_8601": "2020-03-20T16:18:47.763692Z", "url": "https://files.pythonhosted.org/packages/b1/16/1033ef3317c4c07301e305d7db2cc1bbecaf9cbd25876c0841367a05838d/chefboost-0.0.4.tar.gz"}]}