{"info": {"author": "Haseeb Mir", "author_email": "haseebmir.hm@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "![cover_logo](https://github.com/haseeb-heaven/GTLibPy/blob/master/resources/cover_logo.jpg?raw=true \"\")\n\n_GTLib**Py**_ is **[Game Trainer](https://en.wikipedia.org/wiki/Trainer_(games)) library/module for _Python in windows_** it provides all the necessary methods to make simple game trainer in\nwindows using **WIN32-API** with ease.\nIt uses only **WIN32-API** methods because this is intended to work on **Windows** system only\nand not shall be portable or to target other OS like **_Linux_,_MAC OS_** etc.\n\n**NOTE** : This ain't memory scanning,hooking,analyzing library, it won't provide methods for scanning/signature or dumping RAW memory.\n\n **UNDERHOOD WORKING** : _GTLib**Py**_ is actually a wrapper module over [GTLibc](https://github.com/haseeb-heaven/GTLibc) which actually does all the work beneath,this module just converts _Python_ **datatypes,data-structures** to _C-Type_ **data** and passes them to **GTLibc** library and shows result afterwards.\nSo this has all the features which **GTLibc** had _FindGame,ReadAddress,WriteAddress,SetCheatCodes_ etc.\n\n**AIM** : The aim of this library is only to provide the most efficient way of creating game trainer \nand to provide a layer on top of **WIN-32 API** _cumbersome_ methods and to make reading/writing ,finding Game process easier and convenient.\n\n## **_Your support is needed to keep this project alive, Feel free to donate._**\n[![paypal](https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif)](https://www.paypal.me/haseebmir91)\n\n# Main Components :\n\n## Finding game : \n\nUsing **GT_FindGameProcess()** method.\n\n![finding_game_process](https://github.com/haseeb-heaven/GTLibPy/blob/master/resources/finding_game_process.jpg?raw=true \"\")\n\n\nUsing **GT_FindGameWindow()** method.\n\n![finding_game_window](https://github.com/haseeb-heaven/GTLibPy/blob/master/resources/finding_game_window.jpg?raw=true \"\")\n\n\n## Reading Values : \n\nusing **GT_ReadAddress()** or **GT_ReadAddressoffset()** methods.\n\n![reading_memory](https://github.com/haseeb-heaven/GTLibPy/blob/master/resources/reading_memory.jpg?raw=true \"\")\n\n## Writing Values : \n\nusing **GT_WriteAddress()** or **GT_WriteAddressOffset()** methods.\n\n![writing_memory](https://github.com/haseeb-heaven/GTLibPy/blob/master/resources/writing_memory.jpg?raw=true \"\")\n\n## Creating Hot-keys :\n\nusing **GT_HotKeysPressed()** **_MACRO_** or **GT_IsKeyPressed()/GT_IsKeyToggled()** methods.\n\n![hotkeys](https://github.com/haseeb-heaven/GTLibPy/blob/master/resources/hotkeys.jpg?raw=true \"\")\n\n# Additional Components :\n\n## Applying cheat codes : \n\nusing **GT_SetCheatCode()** method.\n\n![set_cheat_code](https://github.com/haseeb-heaven/GTLibPy/blob/master/resources/set_cheat_code.jpg?raw=true \"\")\n\n## Searching offset area : \n\nusing **GT_SearchOffsetArea()** method.\n\n![search_offset_area](https://github.com/haseeb-heaven/GTLibPy/blob/master/resources/search_offset_area.jpg?raw=true \"\")\n\n\n## Automation scripting  : \n\nusing **GT_DoMousePress()** and **GT_DoKeyPress()** methods.\n\n\n# GTLibPy Logs and errors :\n\n## Error/Exception Handling :\n\nAll the error/exception handling is done by library itself like if you tried read or write from **Invalid Memory section** or if process id,game handle/HWND are invalid  it will automatically handle error.So you don't have to check for any error by yourself\n\n![game_not_found](https://github.com/haseeb-heaven/GTLibc/blob/master/resources/game_not_found.jpg?raw=true \"\")\n\n\n![reading_invalid_memory](https://github.com/haseeb-heaven/GTLibc/blob/master/resources/reading_invalid_memory.jpg?raw=true \"\")\n\n\n![writing_invalid_memory](https://github.com/haseeb-heaven/GTLibc/blob/master/resources/writing_invalid_memory.jpg?raw=true \"\")\n\n\n## Methods Accessibility :\n\nAll **Public** and **Semi-Public** methods are accessible . But **Private** methods are not and library will throw error if you tried to access them.\n\n![private_method_error](https://github.com/haseeb-heaven/GTLibc/blob/master/resources/private_method_error.jpg?raw=true \"\")\n\n## Library Logs :\n\nLogs are **disabled** by default but if you want library to maintain logs use **GT_EnableLogs()** method to **enable** logs.\nor if you want to **disable** logs again you can use **GT_DisableLogs()** method.\n\n![enable_disable_logs](https://github.com/haseeb-heaven/GTLibPy/blob/master/resources/enable_disable_logs.jpg?raw=true \"\")\n\n\n# Trainer Demo :\nAs a demo of this module IGI 1 Trainer is included to show demo of all the **GT**LiPy methods and how to use them in making simple game trainer.\n\n**DOCUMENTATION INFO :**\nAll Public and Semi-Private methods are well documented.\nbut private methods are not documented as it was not necessary to do so.\n\n**VERSION INFO :**<br/>\nGTLibPy Version : V 1.0<br/>  \nDated : 31/05/2019.<br/>\n\nWritten and maintained by HaseeB Mir (haseebmir.hm@gmail.com)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/haseeb-heaven/GTLibPy", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "GT-LibPy", "package_url": "https://pypi.org/project/GT-LibPy/", "platform": "", "project_url": "https://pypi.org/project/GT-LibPy/", "project_urls": {"Homepage": "https://github.com/haseeb-heaven/GTLibPy"}, "release_url": "https://pypi.org/project/GT-LibPy/0.1/", "requires_dist": null, "requires_python": "", "summary": "GTLibPy is library to make game trainer in Python", "version": "0.1"}, "last_serial": 5342735, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "acfdbf679bff0eefb59d494f51f96480", "sha256": "f1a5c65a32fa816e7851ffac021ad1a5dcf0761f7126f48bee3330cbf77bf288"}, "downloads": -1, "filename": "GT_LibPy-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "acfdbf679bff0eefb59d494f51f96480", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20181, "upload_time": "2019-05-31T13:10:43", "upload_time_iso_8601": "2019-05-31T13:10:43.636545Z", "url": "https://files.pythonhosted.org/packages/4b/a5/6086f31c38efabaa7867a08a4af272579089d49359c2aff0abf3aa5167cb/GT_LibPy-0.1-py3-none-any.whl"}]}, "urls": [{"comment_text": "", "digests": {"md5": "acfdbf679bff0eefb59d494f51f96480", "sha256": "f1a5c65a32fa816e7851ffac021ad1a5dcf0761f7126f48bee3330cbf77bf288"}, "downloads": -1, "filename": "GT_LibPy-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "acfdbf679bff0eefb59d494f51f96480", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20181, "upload_time": "2019-05-31T13:10:43", "upload_time_iso_8601": "2019-05-31T13:10:43.636545Z", "url": "https://files.pythonhosted.org/packages/4b/a5/6086f31c38efabaa7867a08a4af272579089d49359c2aff0abf3aa5167cb/GT_LibPy-0.1-py3-none-any.whl"}]}