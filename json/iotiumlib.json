{"info": {"author": "Rashtrapathy", "author_email": "rashtrapathy.c@iotium.io", "bugtrack_url": null, "classifiers": ["Operating System :: OS Independent", "Programming Language :: Python :: 3.5"], "description": "```\n\n _       _   _                 _ _ _     \n(_)     | | (_)               | (_) |    \n _  ___ | |_ _ _   _ _ __ ___ | |_| |__  \n| |/ _ \\| __| | | | | '_ ` _ \\| | | '_ \\ \n| | (_) | |_| | |_| | | | | | | | | |_) |\n|_|\\___/ \\__|_|\\__,_|_| |_| |_|_|_|_.__/ \n\n\n\n```\n\n# Definition and Usage\n\nThe **iotiumlib** module allows you to access ioTium Orchestrator using APIs in Python.\n\n# Download and Install\n\n``pip install iotiumlib==19.11.26``\n\n## Org\n\n``iotiumlib.org.methodname(params)``\n\n| Method        \t| Required Params                       \t| Optional Params                                                 \t|\n|---------------\t|---------------------------------------\t|-----------------------------------------------------------------\t|\n| get           \t| NA                                      \t| org_id                                                          \t|\n| getv2         \t| NA                                    \t| filters                                                         \t|\n| add           \t| org_name, billing_name, billing_email \t| domain_name, timezone, headless_mode, two_factor, vlan_support \t|\n| delete        \t| org_id                                \t|                                                                 \t|\n\n> returns a **Response** Object with all the response data (output, code, formattedOutput).\n\n## Node\n\n``iotiumlib.node.methodname(params)``\n\n| Method \t| Required Params                       \t| Optional Params                                         \t|\n|--------\t|---------------------------------------\t|---------------------------------------------------------\t|\n| getv2  \t| NA                                    \t| filters                                                 \t|\n| add    \t| inode_name, serial_number, profile_id \t| standalone_expires, label, data_saving_mode             \t|\n| edit   \t| node_id                               \t| inode_name, label, standalone_expires, data_saving_mode \t|\n| delete \t| node_id                               \t| NA                                                      \t|\n| reboot \t| node_id                               \t| NA                                                      \t|\n| notifications \t| node_id                                      \t| type, filters                                                   \t|\n\n> returns a **Response** Object with all the response data (output, code, formattedOutput).\n\n\n## PKI\n\n``iotiumlib.pki.methodname(params)``\n\n| Method \t| Required Params \t| Optional Params \t|\n|--------\t|-----------------\t|-----------------\t|\n| getv2  \t| NA              \t| filters         \t|\n\n> returns a **Response** Object with all the response data (output, code, formattedOutput).\n\n\n## Profile\n\n``iotiumlib.profile.methodname(params)``\n\n| Method \t| Required Params \t| Optional Params \t|\n|--------\t|-----------------\t|-----------------\t|\n| getv2  \t| NA              \t| filters         \t|\n\n> returns a **Response** Object with all the response data (output, code, formattedOutput).\n\n## Network\n\n``iotiumlib.network.methodname(params)``\n\n\n| Method       \t| Required Params                        \t| Optional Params                                                                                                                                                      \t|\n|--------------\t|----------------------------------------\t|----------------------------------------------------------------------------------------------------------------------------------------------------------------------\t|\n| getv2        \t| NA                                     \t| filters                                                                                                                                                              \t|\n| add          \t| network_name, cidr,  start_ip, node_id \t| gateway_ip, end_ip, label, default_destination, connect_networks, firewall_selector, vlan_id, network_addressing, firewall_policy, service_addressing, static_routes \t|\n| edit         \t| network_id                             \t| network_name, cidr, gateway_ip, start_ip, end_ip, label, default_destination, connect_networks, firewall_selector,  vlan_id, firewall_policy, static_routes          \t|\n| delete       \t| network_id                             \t| firewall_policy, service_addressing, static_routes                                                                                                                   \t|\n| resetcounter \t| network_id                             \t|                                                                                                                                                                      \t|                                                                                  \t|\n> returns a **Response** Object with all the response data (output, code, formattedOutput).\n\n## Firewall\n\n``iotiumlib.firewall.methodname(params)``\n\n| Method \t| Required Params     \t| Optional Params         \t|\n|--------\t|---------------------\t|-------------------------\t|\n| getv2  \t| NA                  \t| filters                 \t|\n| add    \t| name, org_id, rules \t| label                   \t|\n| edit   \t| firewallgroup_id    \t| name, label, edit_rules \t|\n| delete \t| firewallgroup_id    \t| NA                      \t|\n\n> returns a **Response** Object with all the response data (output, code, formattedOutput).\n\n## Service\n\n``iotiumlib.service.methodname(params)``\n\n| Method         \t| Required Params     \t| Optional Params \t|\n|----------------\t|---------------------\t|-----------------\t|\n| getv2          \t| NA                  \t| filters         \t|\n| getv2_template \t| NA                  \t| filters         \t|\n| add            \t| payload             \t|                 \t|\n| edit           \t| service_id, payload \t| NA              \t|\n| delete         \t| service_id          \t| NA              \t|\n\n> returns a **Response** Object with all the response data (output, code, formattedOutput).\n\n## Secret\n\n``iotiumlib.secret.methodname(params)``\n\n| Method \t| Required Params \t| Optional Params \t|\n|--------\t|-----------------\t|-----------------\t|\n| getv2  \t| NA              \t| filters         \t|\n| add    \t| name, filename  \t| type            \t|\n| edit   \t| secret_id       \t| name, filename  \t|\n| delete \t| secret_id       \t| NA              \t|\n\n> returns a **Response** Object with all the response data (output, code, formattedOutput).\n\n## User\n\n``iotiumlib.user.methodname(params)``\n\n| Method \t| Required Params             \t| Optional Params \t|\n|--------\t|-----------------------------\t|-----------------\t|\n| getv2  \t| NA                          \t| filters         \t|\n| add    \t| name, email, password, role \t| NA        \t    |\n| edit   \t| user_id                     \t| name, role      \t|\n| delete \t| user_id                     \t| NA              \t|\n| notifications \t| NA                                      \t| org_id, node_id, type, filters                                                   \t|\n\n> returns a **Response** Object with all the response data (output, code, formattedOutput).\n\n``iotiumlib.user.mysubscriptions.methodname(params)``\n\n| Method \t| Required Params          \t| Optional Params                                                \t|\n|--------\t|--------------------------\t|----------------------------------------------------------------\t|\n| getv2  \t| NA                       \t| filters                                                        \t|\n| add    \t| alert_name, type, org_id \t| node_id, include_child, duration pod_id, network_id, tunnel_id \t|\n| delete \t| sub_id                   \t| NA                                                               \t|\n\n> returns a **Response** Object with all the response data (output, code, formattedOutput).\n\n\n## Package Helper Functions\n\n``iotiumlib.helper.get_resource_id_by_name(resource, argument)``\n\n| Resource                      \t| Argument     \t|\n|-------------------------------\t|--------------\t|\n| iotiumlib.node                \t| node_name    \t|\n| iotiumlib.network             \t| network_name \t|\n| iotiumlib.service             \t| service_name \t|\n| iotiumlib.secret              \t| secret_name  \t|\n| iotiumlib.profile             \t| profile_name \t|\n| iotiumlib.org                 \t| org_name     \t|\n| iotiumlib.firewall            \t| csp_name     \t|\n| iotiumlib.user                \t| user_name    \t|\n| iotiumlib.org.mysubscriptions \t| alert_name   \t|\n\n``iotiumlib.helper.get_resource_name_by_id(resource, argument)``\n\n| Resource                      \t| Argument   \t|\n|-------------------------------\t|------------\t|\n| iotiumlib.node                \t| node_id    \t|\n| iotiumlib.network             \t| network_id \t|\n| iotiumlib.service             \t| pod_id     \t|\n| iotiumlib.secret              \t| secret_id  \t|\n| iotiumlib.profile             \t| profile_id \t|\n| iotiumlib.org                 \t| org_id     \t|\n| iotiumlib.firewall            \t| csp_id     \t|\n| iotiumlib.user                \t| user_id    \t|\n| iotiumlib.org.mysubscriptions \t| alert_id   \t|\n\n\n``iotiumlib.helper.get_all_networks_from_node(name)``\n\n``iotiumlib.helper.get_resource_by_label(resource, labelname)``\n\n### Python example\n\n```python\n\n## Importing the Library\nimport iotiumlib\n\n# Login to Orchestartor\niotiumlib.orch.ip = \"OrchHostIp\" # Orchestrator IP\nrespObj=iotiumlib.orchlogin.login(\"useremail@domain.io\", \"password\")\n\n# Getting the Token\niotiumlib.orch.token = respObj.Response.output['token']\n\n# Get ORG ID for logged in User\niotiumlib.orch.id = iotiumlib.org.get(org_id=None).Response.output['organization']['id']\n\n# Alternate Way to get ORG ID for logged in User\nORG_ID = iotiumlib.helper.get_resource_id_by_name(iotiumlib.org, \"Org Name\")\n\n# Get PROFILE ID. Options: Edge, Virtual Edge, Virtual\nedge_profile_id = iotiumlib.helper.get_resource_id_by_name(iotiumlib.profile, \"Edge\")\n\n# Get list of Available Serial for Node provision\navail_serial_list = iotiumlib.pki.getv2(filters={\"assigned\":\"false\", \"own\":\"true\"}).Response.output\nfor pki in avail_serial_list:\n    print(pki['id'])\n\n###### Managing Users #######\n# Get User Roles for Your Organization\n#TODO\n\n# Adding a New User\nuserRespObj = iotiumlib.user.add(name=\"User Name\", email=\"email@domain.com\", password=\"Password@1234\", role=\"24c416ab-483c-402a-9b76-69bce4dd97ae\")\n\n# Getting User ID for specfic User\nUSER_ID = iotiumlib.helper.get_resource_id_by_name(iotiumlib.user, \"User Name\")\n\n# Editing the User for name and role\niotiumlib.user.edit(user_id=USER_ID, role=\"ROLL_ID\")\niotiumlib.user.edit(user_id=USER_ID)\niotiumlib.user.edit(user_id=USER_ID, name=\"New User Name\", role=\"ROLL_ID\")\niotiumlib.user.edit(user_id=USER_ID, name=\"New User Name\")\n\n# Deleting specfic User\niotiumlib.user.delete(user_id=USER_ID)\n\n###### Provising an Edge iNode #######\n# Other avail params: \n# standalone_expires (int) in minutes. Default=0\n# data_saving_mode (string). Default=\"Fast\", Options: \"Slow\", \"Off\"\nrespObj = iotiumlib.node.add(inode_name=\"Node Name\", serial_number=\"pki-id\", profile_id=edge_profile_id, org_id=ORG_ID, label=\"key:value\")\nprint(respObj.Response.output)\n\n# Get Node ID for Node edit/delete/reboot/notifications\nNODE_ID = iotiumlib.helper.get_resource_id_by_name(iotiumlib.node, \"Node Name\")\n\n# Edit Edge iNode for inode_name, label, standalone_expires, data_saving_mode\nrespObj_e = iotiumlib.node.edit(node_id=NODE_ID)\n\n# Initiate Reboot on specfic Edge iNode\nrespObj_r = iotiumlib.node.reboot(node_id=NODE_ID)\n\n# Delete Edge iNode\nrespObj_d = iotiumlib.node.delete(node_id=NODE_ID)\n\n# List iNode specfic event. Default: All Event. Options: type=node, network, service\n#start_date and end_date are in Epoch Time Stamp format\nrespObj_n = iotiumlib.node.notifications(node_id=NODE_ID)\nrespout = iotiumlib.node.notifications(node_id=NODE_ID, type=\"node\").Response.output\nrespout = iotiumlib.node.notifications(node_id=NODE_ID, type=\"node\", filters={\"start_date\":\"\", \"end_date\":\"\"}).Response.output\n\n\n###### Adding Local Network to Edge iNode #######\niotiumlib.network.add(node_id=NODE_ID, network_name=\"TAN Network\", cidr=\"192.168.0.0/28\", start_ip=\"192.168.0.1\", end_ip=\"192.168.0.14\")\n\n# Get Network ID for Network edit/delete\nTAN_ID = iotiumlib.helper.get_resource_id_by_name(iotiumlib.network, \"TAN Network\")\n\n# Setting the Default Destination for Local Network to Edge iNode\u2019s WAN Network\niotiumlib.network.edit(network_id=TAN_ID, default_destination=\"WAN_ID\")\n\n# Connecting an Edge iNode Network to a Remote Virtual iNode network\niotiumlib.network.edit(network_id=TAN_ID, connect_networks=[{\"network_id\":\"Remote_Network_Id\", \"node_id\":\"Remote_Node_Id\"}])\n\n# Delete Edge Local Network\niotiumlib.network.delete(network_id=TAN_ID)\n\n###### Using Custom Security Policy #######\niotiumlib.firewall.add(name='FWG', org_id=ORG_ID,\n                        rules=[\n                            {'from_network':'name=TAN Network', 'to_network':'id=\"NETWORK-ID\"', 'protocol':'SSH'},\n                            {'from_network':'label=key:value', 'to_network':'type=wan', 'action':'ALLOW'},\n                            {'from_network':'label=key:value', 'to_network':'type=wan', 'action':'ALLOW', 'priority':'3000'},\n                        ])\n\n###### Using Secrets #######\niotiumlib.secret.add(name=\"Service Secret Name\", filename={'.dockerconfigjson': 'ContentInBase64Format'},type=\"Dockerconfigjson\")\n\niotiumlib.secret.add(name=\"Service Volume Name\", filename=[],type=\"Opaque\")\n\n###### Using Mysubscriptions #######\n#type: NODE_STATE_CHANGE, TUNNEL_STATE_CHANGE, SERVICE_STATE_CHANGE, NODE_IP_CHANGE, NODE_UPGRADE, HEADLESS_EXPIRY, CERT_EXPIRY\n#include_child(bool): True to include child orgs. Scope: ORG level\n#duration(int): default 5min. \n#node_id: Scope: iNode level\n#tunnel_id: for type=TUNNEL_STATE_CHANGE\n#pod_id: for type=SERVICE_STATE_CHANGE\niotiumlib.user.mysubscriptions.add(alert_name=\"Alert Name\", type=\"SERVICE_STATE_CHANGE\", org_id=\"OrgID\")\n\n###### Listing Events #######\n#Default: All Event. Options: type=node, network, service\n#start_date and end_date are in Epoch Time Stamp format\niotiumlib.user.notifications(filters={\"start_date\":\"\", \"end_date\":\"\"}, type=\"node\").Response.output\niotiumlib.user.notifications(node_id=NODE_ID, filters={\"start_date\":\"\", \"end_date\":\"\"}, type=\"node\").Response.output\niotiumlib.user.notifications(org_id=ORG_ID, filters={\"start_date\":\"\", \"end_date\":\"\"}, type=\"node\").Response.output\n\n\n```  \n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://iotium.io", "keywords": "", "license": "Iotium | All rights reserved.", "maintainer": "", "maintainer_email": "", "name": "iotiumlib", "package_url": "https://pypi.org/project/iotiumlib/", "platform": "", "project_url": "https://pypi.org/project/iotiumlib/", "project_urls": {"Homepage": "https://iotium.io"}, "release_url": "https://pypi.org/project/iotiumlib/20.3.3/", "requires_dist": null, "requires_python": "", "summary": "ioTium API library", "version": "20.3.3"}, "last_serial": 6941084, "releases": {"19.11.26": [{"comment_text": "", "digests": {"md5": "4711f206d7c9427780335a06d8a124b0", "sha256": "e7524e34119afd6db083f63da11f902f8d6ff70ae81baead5cdd35297310c19c"}, "downloads": -1, "filename": "iotiumlib-19.11.26-py3-none-any.whl", "has_sig": false, "md5_digest": "4711f206d7c9427780335a06d8a124b0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 38050, "upload_time": "2019-11-27T11:16:59", "upload_time_iso_8601": "2019-11-27T11:16:59.781742Z", "url": "https://files.pythonhosted.org/packages/30/84/18df70389c4119ff8efba57329943709308b2db70033059e23856c8dc555/iotiumlib-19.11.26-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "2960888623afee6e71d2571aed2be3bd", "sha256": "102f0f78b66fcc3335b52f26ca0de7a1bf9526948fe591cf227a4e77e41ff536"}, "downloads": -1, "filename": "iotiumlib-19.11.26.tar.gz", "has_sig": false, "md5_digest": "2960888623afee6e71d2571aed2be3bd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27833, "upload_time": "2019-11-27T11:17:03", "upload_time_iso_8601": "2019-11-27T11:17:03.806918Z", "url": "https://files.pythonhosted.org/packages/bd/61/b1b991356e475ba4b1f9203b37587425925fdd44cc379f26bfef8b464672/iotiumlib-19.11.26.tar.gz"}], "19.11.27": [{"comment_text": "", "digests": {"md5": "50f57ceaa201e0d488c76d4a28fd89e8", "sha256": "2845fbb240f047ae178852ae4e8a7786caa6986c98f8ac6f60d19b02c8b31d64"}, "downloads": -1, "filename": "iotiumlib-19.11.27-py3-none-any.whl", "has_sig": false, "md5_digest": "50f57ceaa201e0d488c76d4a28fd89e8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 38052, "upload_time": "2019-11-27T11:20:18", "upload_time_iso_8601": "2019-11-27T11:20:18.501118Z", "url": "https://files.pythonhosted.org/packages/49/6a/41e87d9c17f4acd1203c23d16dc15ecfd0d06af522cc808b6a50bf0a6dde/iotiumlib-19.11.27-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "caa8d9a4382cc1e1feadef5e10515680", "sha256": "36df4eb650f3c902a56b5821b60320d7cae74f401aee7c31ecf27e39bedc2cb8"}, "downloads": -1, "filename": "iotiumlib-19.11.27.tar.gz", "has_sig": false, "md5_digest": "caa8d9a4382cc1e1feadef5e10515680", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24148, "upload_time": "2019-11-27T11:20:21", "upload_time_iso_8601": "2019-11-27T11:20:21.063430Z", "url": "https://files.pythonhosted.org/packages/a2/24/e85ea63ab957029176da541e856d39cf67b0b6afdb1cfbaaa4b6c945e17e/iotiumlib-19.11.27.tar.gz"}], "19.11.28": [{"comment_text": "", "digests": {"md5": "e45822a1b7d5194b9cc733de7745a2d7", "sha256": "a8b59758c5a28b192bbb2b01a6f0969f75306bbf1373f7a11cccd2fad2f551e2"}, "downloads": -1, "filename": "iotiumlib-19.11.28-py3-none-any.whl", "has_sig": false, "md5_digest": "e45822a1b7d5194b9cc733de7745a2d7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 38198, "upload_time": "2019-12-02T16:48:05", "upload_time_iso_8601": "2019-12-02T16:48:05.854341Z", "url": "https://files.pythonhosted.org/packages/1f/29/40148a68a6e57138bd125464b9e1f597ef1900a8d411493ae19ffd22b49a/iotiumlib-19.11.28-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "44987eff93b0f06d661c004774a8ab7d", "sha256": "93a65a0eb6496a97ed0ceff572c93343571ee86fad234b834584b146c6e1ed13"}, "downloads": -1, "filename": "iotiumlib-19.11.28.tar.gz", "has_sig": false, "md5_digest": "44987eff93b0f06d661c004774a8ab7d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24329, "upload_time": "2019-12-02T16:48:08", "upload_time_iso_8601": "2019-12-02T16:48:08.610868Z", "url": "https://files.pythonhosted.org/packages/6a/5a/7b1dd0409687cca21289e09b3c11186118516ff59ebc11707a5e0dfd29a2/iotiumlib-19.11.28.tar.gz"}], "19.12.27": [{"comment_text": "", "digests": {"md5": "ab7cc8afd1cebbfb21aba48ed076618c", "sha256": "30b570185aa7f00eb63f446504206154db77d001807b72e176c91184cf0a2ba9"}, "downloads": -1, "filename": "iotiumlib-19.12.27-py3-none-any.whl", "has_sig": false, "md5_digest": "ab7cc8afd1cebbfb21aba48ed076618c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 38482, "upload_time": "2019-12-27T05:11:07", "upload_time_iso_8601": "2019-12-27T05:11:07.898701Z", "url": "https://files.pythonhosted.org/packages/50/f0/6d9caf230c38f44c4c0713a0d25309f02c4c4372ba8933844eaa72a8c6be/iotiumlib-19.12.27-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "ed56792772c6b7c509f4a44732585b57", "sha256": "78d6b3402b669d709c01e75929f0ad738da05ecd71b0cdb3e07dba76312bab0f"}, "downloads": -1, "filename": "iotiumlib-19.12.27.tar.gz", "has_sig": false, "md5_digest": "ed56792772c6b7c509f4a44732585b57", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24640, "upload_time": "2019-12-27T05:11:10", "upload_time_iso_8601": "2019-12-27T05:11:10.000079Z", "url": "https://files.pythonhosted.org/packages/13/67/5ad979c11288590a1c9fabc7d9f0301ab1e5d9dba1e8af0203ac64b98c33/iotiumlib-19.12.27.tar.gz"}], "20.3.3": [{"comment_text": "", "digests": {"md5": "6c154438e8e935fbcdc977ec91a85c84", "sha256": "377581203abf3e78f592ad2e337e57d07e9e63a65e2c3903c86ae432b3de385a"}, "downloads": -1, "filename": "iotiumlib-20.3.3-py3-none-any.whl", "has_sig": false, "md5_digest": "6c154438e8e935fbcdc977ec91a85c84", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 38733, "upload_time": "2020-04-03T05:38:42", "upload_time_iso_8601": "2020-04-03T05:38:42.384498Z", "url": "https://files.pythonhosted.org/packages/33/a3/9bf3a4b16585a3d408bced0f6817acfb70df0612736eadbe21efb09cff9b/iotiumlib-20.3.3-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "56fdb1a638369a11b95bfed6c4881202", "sha256": "93622a2945ac881f61f64ee086328d558a9ec8a6b73ddc3bd0dcef92e3817254"}, "downloads": -1, "filename": "iotiumlib-20.3.3.tar.gz", "has_sig": false, "md5_digest": "56fdb1a638369a11b95bfed6c4881202", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24911, "upload_time": "2020-04-03T05:38:44", "upload_time_iso_8601": "2020-04-03T05:38:44.341814Z", "url": "https://files.pythonhosted.org/packages/05/ce/1403505bc6918441e2d92c07a30e86ccea36ed2e380eff242edda12a2e9f/iotiumlib-20.3.3.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "6c154438e8e935fbcdc977ec91a85c84", "sha256": "377581203abf3e78f592ad2e337e57d07e9e63a65e2c3903c86ae432b3de385a"}, "downloads": -1, "filename": "iotiumlib-20.3.3-py3-none-any.whl", "has_sig": false, "md5_digest": "6c154438e8e935fbcdc977ec91a85c84", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 38733, "upload_time": "2020-04-03T05:38:42", "upload_time_iso_8601": "2020-04-03T05:38:42.384498Z", "url": "https://files.pythonhosted.org/packages/33/a3/9bf3a4b16585a3d408bced0f6817acfb70df0612736eadbe21efb09cff9b/iotiumlib-20.3.3-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "56fdb1a638369a11b95bfed6c4881202", "sha256": "93622a2945ac881f61f64ee086328d558a9ec8a6b73ddc3bd0dcef92e3817254"}, "downloads": -1, "filename": "iotiumlib-20.3.3.tar.gz", "has_sig": false, "md5_digest": "56fdb1a638369a11b95bfed6c4881202", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24911, "upload_time": "2020-04-03T05:38:44", "upload_time_iso_8601": "2020-04-03T05:38:44.341814Z", "url": "https://files.pythonhosted.org/packages/05/ce/1403505bc6918441e2d92c07a30e86ccea36ed2e380eff242edda12a2e9f/iotiumlib-20.3.3.tar.gz"}]}