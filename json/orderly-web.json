{"info": {"author": "Rich FitzJohn", "author_email": "r.fitzjohn@imperial.ac.uk", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "## OrderlyWeb (Deploy)\n\n[![Build Status](https://travis-ci.org/vimc/orderly-web-deploy.svg?branch=master)](https://travis-ci.org/vimc/orderly-web-deploy)\n[![codecov.io](https://codecov.io/github/vimc/orderly-web-deploy/coverage.svg?branch=master)](https://codecov.io/github/vimc/orderly-web-deploy?branch=master)\n\nThis is the deploy scripts for OrderlyWeb.  They are the only part of the system that runs directly on metal.\nI am not good at python packaging so some documentation for help me.  These might not be the best ways to do things but they seem to work:\n\n## Installation\n\nFrom local sources\n\n```\npython3 setup.py install --user\n```\n\n(you may need `--upgrade` to upgrade older versions of python packages).\n\nThis installs the package `orderly_web` for programmatic use, and a cli tool `orderly-web` for interacting with the package:\n\n## Usage\n\n```\n$ orderly-web --help\nUsage:\n  orderly-web start <path> [--extra=PATH] [--option=OPTION]... [--pull]\n  orderly-web status <path>\n  orderly-web stop <path> [--volumes] [--network] [--kill] [--force] [--extra=PATH] [--option=OPTION]...\n  orderly-web admin <path> add-users <email>...\n  orderly-web admin <path> add-groups <name>...\n  orderly-web admin <path> add-members <group> <email>...\n  orderly-web admin <path> grant <group> <permission>...\n\nOptions:\n  --extra=PATH     Path, relative to <path>, of yml file of additional\n                   configuration\n  --option=OPTION  Additional configuration options, in the form key=value\n                   Use dots in key for hierarchical structure, e.g., a.b=value\n                   This argument may be repeated to provide multiple arguments\n  --pull           Pull images before starting\n  --volumes        Remove volumes (WARNING: irreversible data loss)\n  --network        Remove network\n  --kill           Kill the containers (faster, but possible db corruption)\n  --force          Force stop even if containers are corrupted and cannot signal their running configuration.\n                   Use with extra and/or option to force stop with configuration options.\n```\n\nHere `<path>` is the path to a directory that contains a configuration file `orderly-web.yml` (more options will follow in future versions).\n\n### Examples\n\nTo deploy with 2 users:\n```\norderly-web start ./config/basic\norderly-web admin ./config/basic add-users test.user@example.com admin.user@example.com\n```\n\nTo grant the users permissions on an individual basis:\n```\norderly-web admin ./config/basic grant test.user@example.com */reports.read\norderly-web admin ./config/basic grant admin.user@example.com */reports.read */reports.review */reports.run\n```\n\nOr to add 2 user groups, \"funders\" and \"admin\", and grant users permissions via group membership: \n```\norderly-web admin ./config/basic add-groups funders admin\norderly-web admin ./config/basic grant funders */reports.read\norderly-web admin ./config/basic grant admin */reports.read */reports.review */reports.run\norderly-web admin ./config/basic add-members funders test.user@example.com\norderly-web admin ./config/basic add-members admin admin.user@example.com\n```\n\n## Testing\n\nRun\n\n```\npython3 setup.py test\n```\n\nThis will take a while.  There will be lots of warnings like:\n\n```\nResourceWarning: unclosed <socket.socket fd=8,\n```\n\nwhich are out of our control (see the helper `docker_client` in `docker_helpers.py` for details).\n\n## Configuration\n\nConfiguration is a work in progress and will change as the tool progresses.  See [`config/complete/orderly-web.yml`] for an annotated configuration that covers all the options.\n\n### Modified versions of configurations\n\nIt is possible to create sub-configurations that adapt a configuration.  To do this, create a base configuration with shared options and save that as `orderly-web.yml`.  Then, within the same directory, create secondary yml files (named however you want) that override options.  For example if you have an `orderly-web.yml` that contains\n\n```yaml\nweb:\n  port: 443\n  name: OrderlyWeb\n  dev_mode: false\n```\n\n(among other options), you could create a yaml file called `testing.yml` (in the same directory) that contains\n\n```yaml\nweb:\n  port: 8000\n  dev_mode: true\n```\n\nWhen run with\n\n```\norderly-web path --extra testing.yml\n```\n\nthe options in `testing.yml` will override the base configuration.  The options that are not mentioned in the `testing.yml` are left unmodified (i.e, in this case we end up with\n\n```yaml\nweb:\n  port: 8000\n  name: OrderlyWeb\n  dev_mode: true\n```\n\nIt is also possible to change options by passing individual changes through with the `--option` flag, for example:\n\n```\norderly-web path --option web.port=8000 --option web.dev_mode=true\n```\n\nUse `.` to indicate a level of nesting and do not use spaces around the `=`; the right-hand-side is parsed as if it was yaml.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/vimc/orderly-web-deploy", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "orderly-web", "package_url": "https://pypi.org/project/orderly-web/", "platform": "", "project_url": "https://pypi.org/project/orderly-web/", "project_urls": {"Homepage": "https://github.com/vimc/orderly-web-deploy"}, "release_url": "https://pypi.org/project/orderly-web/0.0.6/", "requires_dist": null, "requires_python": "", "summary": "Deploy scripts for OrderlyWeb", "version": "0.0.6"}, "last_serial": 6576492, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "3095658ba93171c8a2bf9b1598d7a9f0", "sha256": "fc5c42c23b19f546615141f24beeabf956a4b6965630d3938c6e6f3969ed5740"}, "downloads": -1, "filename": "orderly_web-0.0.1.tar.gz", "has_sig": false, "md5_digest": "3095658ba93171c8a2bf9b1598d7a9f0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24513, "upload_time": "2019-08-02T15:32:23", "upload_time_iso_8601": "2019-08-02T15:32:23.865301Z", "url": "https://files.pythonhosted.org/packages/30/a5/9dcff669931d27617dd736fa7a97dc90c1ad13f5df7cf1a5128ca323bc34/orderly_web-0.0.1.tar.gz"}], "0.0.3": [{"comment_text": "", "digests": {"md5": "6891688cafd6c8bfb9a3b9cca740636f", "sha256": "7dd44d49ad34371e0b74eea778f391d1cf7b138c4d0b7d8dff5d8fc8fd56f62f"}, "downloads": -1, "filename": "orderly_web-0.0.3.tar.gz", "has_sig": false, "md5_digest": "6891688cafd6c8bfb9a3b9cca740636f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24524, "upload_time": "2019-08-02T15:50:28", "upload_time_iso_8601": "2019-08-02T15:50:28.862629Z", "url": "https://files.pythonhosted.org/packages/60/ec/bed8b1e1cb773f3d7fa91673d580d5b39a95324d92800ab0c16025870c42/orderly_web-0.0.3.tar.gz"}], "0.0.4": [{"comment_text": "", "digests": {"md5": "30e1334db86f8512f3ddb0a84ce8b030", "sha256": "26b9b3ce8dc521113089c395a0d0d231c2ab29ad403e7fdaa7b5f9524c0234bb"}, "downloads": -1, "filename": "orderly_web-0.0.4.tar.gz", "has_sig": false, "md5_digest": "30e1334db86f8512f3ddb0a84ce8b030", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23926, "upload_time": "2019-12-16T13:54:01", "upload_time_iso_8601": "2019-12-16T13:54:01.507790Z", "url": "https://files.pythonhosted.org/packages/d5/02/7166095e8500d625bd9f277e2dc83c820b54232283b7452ecf4cb3bdb1e5/orderly_web-0.0.4.tar.gz"}], "0.0.5": [{"comment_text": "", "digests": {"md5": "1cf809b7352db3d8e42a91da0a10d234", "sha256": "9be1df9b2d66e123e0c4ab213ed05666567b28bd2b604f7e33539cc4df029a65"}, "downloads": -1, "filename": "orderly_web-0.0.5.tar.gz", "has_sig": false, "md5_digest": "1cf809b7352db3d8e42a91da0a10d234", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23908, "upload_time": "2019-12-18T15:11:12", "upload_time_iso_8601": "2019-12-18T15:11:12.241870Z", "url": "https://files.pythonhosted.org/packages/60/6c/55be312b81460d69a02e348a1e713211d66d9c79f9bb8cbd71166526c001/orderly_web-0.0.5.tar.gz"}], "0.0.6": [{"comment_text": "", "digests": {"md5": "b17218d566f10606e36e9993b03d95a2", "sha256": "40e967656202b7cd954911aac340d284521edb762ca6de0f5e7ce7aabdd04224"}, "downloads": -1, "filename": "orderly_web-0.0.6.tar.gz", "has_sig": false, "md5_digest": "b17218d566f10606e36e9993b03d95a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23049, "upload_time": "2020-02-05T15:24:53", "upload_time_iso_8601": "2020-02-05T15:24:53.946811Z", "url": "https://files.pythonhosted.org/packages/3f/61/849f9fa841fb15798b2835efd1b04f7f8eb2e844f51d7df87cbf2f138532/orderly_web-0.0.6.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "b17218d566f10606e36e9993b03d95a2", "sha256": "40e967656202b7cd954911aac340d284521edb762ca6de0f5e7ce7aabdd04224"}, "downloads": -1, "filename": "orderly_web-0.0.6.tar.gz", "has_sig": false, "md5_digest": "b17218d566f10606e36e9993b03d95a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23049, "upload_time": "2020-02-05T15:24:53", "upload_time_iso_8601": "2020-02-05T15:24:53.946811Z", "url": "https://files.pythonhosted.org/packages/3f/61/849f9fa841fb15798b2835efd1b04f7f8eb2e844f51d7df87cbf2f138532/orderly_web-0.0.6.tar.gz"}]}