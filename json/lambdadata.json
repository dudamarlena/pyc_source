{"info": {"author": "Robert Sharp", "author_email": "webmaster@sharpdesigndigital.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Programming Language :: Cython", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# LambdaData\n\nData Science Utility Library\n\n\n### Tests\n- Test Coverage: 92%\n- All tests passing\n\n## Table of Contents:\n- Generators\n    - iota\n    - generate\n    - generate_n\n- Expansions\n    - fork\n    - exclusive_scan\n    - inclusive_scan\n- Transforms\n    - transform\n    - adjacent_difference\n    - partial_sum\n- Permutations\n    - partition\n- Reductions\n    - reduce\n    - accumulate\n    - product\n    - min_max\n- Queries\n    - all_of\n    - any_of\n    - none_of\n- Transform & Reduction\n    - transform_reduce\n    - inner_product\n    - matrix_multiply\n- Multidimensional Reductions\n    - zip_transform\n    - transposed_sums\n- Multi-Set Operations\n    - union\n    - intersection\n    - difference\n    - symmetric_difference\n- Pandas Helpers\n    - value_span\n    - star_cat_row\n    - star_cat_col\n- Randomizers\n    - random_range\n    - shuffle\n    - TruffleShuffle\n\n---\n\n## Generators\n\n### Iota\n```\nHelp on built-in function iota in module LambdaData:\n\niota(...)\n    iota(start, *, stop=None, step=1, stride=0)\n    Iota\n       Iterator of a given range with grouping size equal to the stride.\n       If stride is zero - a single dimensional iterator is returned.\n\n       DocTests:\n       >>> list(iota(10))\n       [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n       >>> list(iota(start=1, stop=11))\n       [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n       >>> list(iota(start=2, stop=21, step=2))\n       [2, 4, 6, 8, 10, 12, 14, 16, 18, 20]\n       >>> list(iota(start=2, stop=21, step=2, stride=2))\n       [(2, 4), (6, 8), (10, 12), (14, 16), (18, 20)]\n\n       @param start: Beginning. Required.\n       @param stop: Ending. Default is None.\n       @param step: Stepping. Default is one.\n       @param stride: Size of groupings. Default is zero.\n\n```\n### Generate\n```\nHelp on built-in function generate in module LambdaData:\n\ngenerate(...)\n    generate(func: Callable, *args, **kwargs)\n    Generate\n       Infinite iterator of a callable with arguments.\n\n       DocTests:\n       >>> counter = itertools.count(1)\n       >>> gen = generate(next, counter)\n       >>> list(next(gen) for _ in range(10))\n       [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\n       @param func: Callable.\n       @param args: Positional arguments for the functor.\n       @param kwargs: Keyword arguments for the functor.\n\n```\n### Generate_N\n```\nHelp on built-in function generate_n in module LambdaData:\n\ngenerate_n(...)\n    generate_n(n: int, func: Callable, *args, **kwargs)\n    Generate N\n       Abstract generator function. Finite.\n\n       DocTests:\n       >>> counter = itertools.count(1)\n       >>> list(generate_n(10, next, counter))\n       [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\n       @param n: Number of elements to generate.\n       @param func: Callable.\n       @param args: Positional arguments for the functor.\n       @param kwargs: Keyword arguments for the functor.\n\n```\n\n## Expansions\n\n### Fork\n```\nHelp on built-in function fork in module LambdaData:\n\nfork(...)\n    fork(array: Iterable, forks: int = 2) -> tuple\n    Fork\n       Iterator Duplicator. Same as itertools.tee but with a better name.\n\n       DocTests:\n       >>> it = iter(range(10))\n       >>> a, b, c = fork(it, 3)\n       >>> list(c)\n       [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n       >>> a == b\n       False\n       >>> list(a) == list(b)\n       True\n\n       @param array: Iterable to be forked.\n       @param forks: Optional Integer. Default is 2. Represents the number of forks.\n       @return: Tuple of N Iterators where N is the number of forks.\n\n```\n### Inclusive_Scan\n```\nHelp on built-in function inclusive_scan in module LambdaData:\n\ninclusive_scan(...)\n    inclusive_scan(array: Iterable, init=None) -> Iterator\n    Inclusive Scan -> Adjacent Pairs\n\n       DocTests:\n       >>> list(inclusive_scan(range(1, 10)))\n       [(1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7), (7, 8), (8, 9)]\n       >>> list(inclusive_scan(range(1, 10), 0))\n       [(0, 1), (1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7), (7, 8), (8, 9)]\n\n       @param array: Iterable to be scanned.\n       @param init: Optional initial value. Default is None.\n       @return: Iterator of Pairs.\n\n```\n### Exclusive_Scan\n```\nHelp on built-in function exclusive_scan in module LambdaData:\n\nexclusive_scan(...)\n    exclusive_scan(array: Iterable, init=None) -> Iterator\n    Exclusive Scan -> Adjacent Pairs\n       Like inclusive_scan, but ignores the last value.\n\n       DocTests:\n       >>> list(exclusive_scan(range(1, 10)))\n       [(1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7), (7, 8)]\n       >>> list(exclusive_scan(range(1, 10), 0))\n       [(0, 1), (1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7), (7, 8)]\n\n       @param array: Iterable to be scanned.\n       @param init: Initial Value.\n       @return: Iterator of Pairs.\n\n```\n\n## Transforms\n\n### Transform\n```\nHelp on built-in function transform in module LambdaData:\n\ntransform(...)\n    transform(array: Iterable, func: Callable) -> Iterator\n    Transform\n       Similar to map but with a reversed signature.\n\n       DocTests:\n       >>> list(transform(range(10), add_one))\n       [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n       >>> list(transform(range(10), square))\n       [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\n\n       @param array: Iterable of Values.\n       @param func: Unary Functor. F(x) -> Value\n       @return: Iterator of transformed Values.\n\n```\n### Adjacent_Difference\n```\nHelp on built-in function adjacent_difference in module LambdaData:\n\nadjacent_difference(...)\n    adjacent_difference(array: Iterable) -> Iterator\n    Adjacent Difference\n       Calculates the difference between adjacent pairs.\n       This is the opposite of Partial Sum.\n       The first iteration compares with zero for proper offset.\n\n       DocTests:\n       >>> list(adjacent_difference(range(1, 10)))\n       [1, 1, 1, 1, 1, 1, 1, 1, 1]\n       >>> list(adjacent_difference(partial_sum(range(1, 10))))\n       [1, 2, 3, 4, 5, 6, 7, 8, 9]\n       >>> list(adjacent_difference(partial_sum(range(-10, 11, 2))))\n       [-10, -8, -6, -4, -2, 0, 2, 4, 6, 8, 10]\n\n       @param array: Iterable of Numeric Values.\n       @return: Iterator of adjacent differences.\n\n```\n### Partial_Sum\n```\nHelp on built-in function partial_sum in module LambdaData:\n\npartial_sum(...)\n    partial_sum(array: Iterable) -> Iterator\n    Partial Sum\n       Calculates the sum of adjacent pairs.\n       This is the opposite of Adjacent Difference.\n\n       DocTests:\n       >>> list(partial_sum(range(1, 10)))\n       [1, 3, 6, 10, 15, 21, 28, 36, 45]\n       >>> list(partial_sum([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))\n       [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\n       @param array: Iterable of Numeric Values.\n       @return: Iterator of adjacent sums.\n\n```\n\n## Permutations\n\n### Partition\n```\nHelp on built-in function partition in module LambdaData:\n\npartition(...)\n    partition(array: Iterable, predicate: Callable) -> Iterator\n    Stable Partition\n       Arranges all the elements of a group such that any that return true\n           when passed to the predicate will be at the front, and the rest will be\n           at the back. The size of the output iterator will be the same as the\n           size of the input iterable.\n\n       DocTests:\n       >>> list(partition(range(1, 10), is_even))\n       [2, 4, 6, 8, 1, 3, 5, 7, 9]\n       >>> list(partition(range(1, 10), is_odd))\n       [1, 3, 5, 7, 9, 2, 4, 6, 8]\n\n       @param array: Iterable of values to be partitioned.\n       @param predicate: Unary functor. F(x) -> bool\n       @return: Partitioned Iterator.\n\n```\n\n## Reductions\n\n### Reduce\n```\nHelp on built-in function reduce in module LambdaData:\n\nreduce(...)\n    reduce(array: Iterable, func: Callable, initial=None)\n    Reduce\n       Similar to accumulate but allows any binary functor and/or an initial value.\n\n       DocTests:\n       >>> reduce(range(1, 5), operator.add)\n       10\n       >>> reduce(range(1, 5), operator.add, 100)\n       110\n       >>> reduce(range(1, 5), operator.mul)\n       24\n       >>> reduce(range(1, 5), operator.mul, 0)\n       0\n\n       @param array: Iterable of Values to be reduced.\n       @param func: Binary Functor.\n       @param initial: Initial value. Typically 0 for add or 1 for multiply.\n       @return: Reduced Value.\n\n```\n### Accumulate\n```\nHelp on built-in function accumulate in module LambdaData:\n\naccumulate(...)\n    accumulate(array: Iterable)\n    Accumulate\n       Returns the Sum of a range of elements.\n           Same as sum() or reduce with operator.add\n\n       DocTests:\n       >>> accumulate(range(5))\n       10\n       >>> accumulate(range(11))\n       55\n\n       @param array: Iterable of Values to be summed.\n       @return: Sum of Values.\n\n```\n### Product\n```\nHelp on built-in function product in module LambdaData:\n\nproduct(...)\n    product(array: Iterable)\n    Product\n       Reduce with multiply.\n       For counting numbers from 1 to N: returns the factorial of N.\n\n       DocTests:\n       >>> product(range(1, 5))\n       24\n       >>> product(range(5, 10))\n       15120\n\n       @param array: Iterable of Values to be reduced.\n       @return: Product of all elements multiplied together.\n\n```\n### Min_Max\n```\nHelp on built-in function min_max in module LambdaData:\n\nmin_max(...)\n    min_max(array: Iterable) -> tuple\n    Min & Max Element\n\n       DocTests:\n       >>> min_max(range(1, 10))\n       (1, 9)\n       >>> min_max([100, 42, 69, 1])\n       (1, 100)\n\n       @param array: Iterable of Numeric Values\n       @return: Tuple(Minimum, Maximum)\n\n```\n### Star_Sum\n```\nHelp on built-in function star_sum in module LambdaData:\n\nstar_sum(...)\n    star_sum(*args)\n    Star Sum: Add All Args\n       Similar to accumulate, but takes an arbitrary number of arguments.\n\n       DocTests:\n       >>> star_sum(1)\n       1\n       >>> star_sum(1, 2)\n       3\n       >>> star_sum(1, 2, 3)\n       6\n       >>> star_sum(1, 2, 3, 4)\n       10\n\n       @param args: Numbers to be summed.\n       @return: Sum of all arguments.\n\n```\n### Star_Product\n```\nHelp on built-in function star_product in module LambdaData:\n\nstar_product(...)\n    star_product(*args)\n    Star Product: Multiply All Args\n       Similar to product, but takes an arbitrary number of arguments.\n\n       DocTests:\n       >>> star_product(0, 42)\n       0\n       >>> star_product(3, 3, 3)\n       27\n       >>> star_product(1, 2, 3, 4)\n       24\n\n       @param args: Numbers to be multiplied.\n       @return: Product of all arguments.\n\n```\n\n## Queries\n\n### All_Of\n```\nHelp on built-in function all_of in module LambdaData:\n\nall_of(...)\n    all_of(array: Iterable, predicate: Callable) -> bool\n    All of These\n\n       DocTests:\n       >>> all_of([], is_even)\n       True\n       >>> all_of([2, 4, 6], is_even)\n       True\n       >>> all_of([1, 4, 6], is_even)\n       False\n       >>> all_of([1, 3, 5], is_even)\n       False\n\n       @param array: Iterable to inspect.\n       @param predicate: Callable. f(x) -> bool\n       @return: Boolean.\n\n```\n### Any_Of\n```\nHelp on built-in function any_of in module LambdaData:\n\nany_of(...)\n    any_of(array: Iterable, predicate: Callable) -> bool\n    Any of These\n\n       DocTests:\n       >>> any_of([], is_even)\n       False\n       >>> any_of([2, 4, 6], is_even)\n       True\n       >>> any_of([1, 4, 6], is_even)\n       True\n       >>> any_of([1, 3, 5], is_even)\n       False\n\n       @param array: Iterable to inspect.\n       @param predicate: Callable. f(x) -> bool\n       @return: Boolean.\n\n```\n### None_Of\n```\nHelp on built-in function none_of in module LambdaData:\n\nnone_of(...)\n    none_of(array: Iterable, predicate: Callable) -> bool\n    None Of These\n\n       DocTests:\n       >>> none_of([], is_even)\n       True\n       >>> none_of([2, 4, 6], is_even)\n       False\n       >>> none_of([1, 4, 6], is_even)\n       False\n       >>> none_of([1, 3, 5], is_even)\n       True\n\n       @param array: Iterable to inspect.\n       @param predicate: Callable. f(x) -> bool\n       @return: Boolean.\n\n```\n\n## Transform & Reduce\n\n### Transform_Reduce\n```\nHelp on built-in function transform_reduce in module LambdaData:\n\ntransform_reduce(...)\n    transform_reduce(lhs: Iterable, rhs: Iterable, transformer: Callable, reducer: Callable)\n    Transform Reduce\n       Pairwise transform and then reduction across all results.\n\n       DocTests:\n       >>> transform_reduce(range(1, 6), range(1, 6), operator.mul, sum)\n       55\n       >>> transform_reduce(range(1, 6), range(1, 6), operator.add, product)\n       3840\n\n       @param lhs: Left Iterator\n       @param rhs: Right Iterator\n       @param transformer: Binary Functor F(x, y) -> Value\n       @param reducer: Reduction Functor F(Iterable) -> Value\n       @return: Reduced Value\n\n```\n### Inner_Product\n```\nHelp on built-in function inner_product in module LambdaData:\n\ninner_product(...)\n    inner_product(lhs: Iterable, rhs: Iterable)\n    Inner Product\n       Preforms pairwise multiplication across the iterables,\n           then returns the sum of the products.\n\n       DocTests:\n       >>> inner_product(range(1, 6), range(1, 6))\n       55\n       >>> inner_product(range(11), range(11))\n       385\n\n       @param lhs: Left Iterator\n       @param rhs: Right Iterator\n       @return: Sum of the products.\n\n```\n### Matrix_Multiply\n```\nHelp on built-in function matrix_multiply in module LambdaData:\n\nmatrix_multiply(...)\n    matrix_multiply(left, right)\n    Matrix Product\n       Row by Column inner product.\n\n       DocTests\n       >>> list(matrix_multiply([[1,2], [3,4]], [[1], [2]]))\n       [(5,), (11,)]\n       >>> list(matrix_multiply([[10,20], [30,40]], [[10], [20]]))\n       [(500,), (1100,)]\n\n       @param left: M x N matrix\n       @param right: N x P matrix\n       @return: M x P matrix\n\n```\n\n## Multidimensional Reductions\n\n### Zip_Transform\n```\nHelp on built-in function zip_transform in module LambdaData:\n\nzip_transform(...)\n    zip_transform(transducer: Callable, *args: Iterable) -> Iterator\n    Zip Transform\n       The transducer should take the same number of arguments as the number of\n       iterators passed. Each iteration will call the transducer with the ith element\n       of each iterable. F(a[i], b[i], c[i]...) ...\n\n       DocTests:\n       >>> l1 = (0, 1, 2, 3)\n       >>> l2 = (8, 7, 6, 5)\n       >>> l3 = (1, 1, 1, 1)\n       >>> list(zip_transform(star_sum, []))\n       []\n       >>> list(zip_transform(star_sum, l1))\n       [0, 1, 2, 3]\n       >>> list(zip_transform(star_sum, l1, l2))\n       [8, 8, 8, 8]\n       >>> list(zip_transform(star_sum, l1, l2, l3))\n       [9, 9, 9, 9]\n\n       @param transducer: Callable\n       @param args: Any number of iterables.\n       @return: Iterator of values from the transducer.\n\n```\n### Transposed_Sums\n```\nHelp on built-in function transposed_sums in module LambdaData:\n\ntransposed_sums(...)\n    transposed_sums(*args: Iterable) -> Iterator\n    Transposed Sums - Column Sums\n       The size of the output iterator will be the same as\n           the smallest input iterator.\n\n       DocTests:\n       >>> l1 = (0, 1, 2, 3)\n       >>> l2 = (8, 7, 6, 5)\n       >>> l3 = (1, 1, 1, 1)\n       >>> list(transposed_sums(l1, l2, l3))\n       [9, 9, 9, 9]\n\n       @param args: Arbitrary number of Iterators of numeric values.\n       @return: Iterator of transposed sums aka column sums.\n\n```\n\n## Multi-Set Operations\n\n### Union\n```\nHelp on built-in function union in module LambdaData:\n\nunion(...)\n    union(*args: set) -> set\n    Multiple Set Union\n       Includes all elements of every set passed in.\n\n       DocTests:\n       >>> s1 = {0, 2, 4, 6, 8}\n       >>> s2 = {1, 2, 3, 4, 5}\n       >>> s3 = {2, 8, 9, 1, 7}\n       >>> union(s1, s2, s3)\n       {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}\n\n       @param args: Arbitrary number of sets.\n       @return: Unified set\n\n```\n### Intersection\n```\nHelp on built-in function intersection in module LambdaData:\n\nintersection(...)\n    intersection(*args: set) -> set\n    Multiple Set Intersection\n       Includes all elements that are common to every set passed in.\n       If there is no intersection, it will return the empty set.\n       If all sets are the same, it will return the union of all sets.\n       Opposite of symmetric_difference.\n\n       DocTests:\n       >>> s1 = {0, 2, 4, 6, 8}\n       >>> s2 = {1, 2, 3, 4, 5}\n       >>> s3 = {2, 8, 9, 1, 7}\n       >>> intersection(s1, s2, s3)\n       {2}\n\n       @param args: Arbitrary number of sets.\n       @return: Set of common elements\n\n```\n### Difference\n```\nHelp on built-in function difference in module LambdaData:\n\ndifference(...)\n    difference(*args: set) -> set\n    Multiple Set Difference\n       Includes every element in the first set that isn't in one of the others.\n       If there is no difference, it will return the empty set.\n\n       DocTests:\n       >>> s1 = {0, 2, 4, 6, 8}\n       >>> s2 = {1, 2, 3, 4, 5}\n       >>> s3 = {2, 8, 9, 1, 7}\n       >>> difference(s1, s2, s3)\n       {0, 6}\n\n       @param args: Arbitrary number of sets.\n       @return: Difference between the first set and the rest.\n\n```\n### Symmetric_Difference\n```\nHelp on built-in function symmetric_difference in module LambdaData:\n\nsymmetric_difference(...)\n    symmetric_difference(*args: set) -> set\n    Multiple Set Symmetric Difference\n       Includes all elements that are not common to every set passed in.\n       If there is no intersection, it will return the union of all sets.\n       If all sets are the same, it will return the empty set.\n       Opposite of intersection.\n\n       DocTests:\n       >>> s1 = {0, 2, 4, 6, 8}\n       >>> s2 = {1, 2, 3, 4, 5}\n       >>> s3 = {2, 8, 9, 1, 7}\n       >>> symmetric_difference(s1, s2, s3)\n       {0, 1, 3, 4, 5, 6, 7, 8, 9}\n\n       @param args: Arbitrary number of sets.\n       @return: Symmetric difference considering all sets.\n\n```\n\n## Pandas Helpers\n\n### Value_Span\n```\nHelp on built-in function value_span in module LambdaData:\n\nvalue_span(...)\n    value_span(data: pd.Series, start, stop)\n    Value Span\n       Returns a conditional matching values in the inclusive range [start, stop]\n\n       @param data: Series\n       @param start: Sortable Value, lower bound\n       @param stop: Sortable Value, upper bound\n       @return: Conditional\n\n```\n### Star_Cat_Row\n```\nHelp on built-in function star_cat_row in module LambdaData:\n\nstar_cat_row(...)\n    star_cat_row(*args: pd.DataFrame, crop=False, reset_index=True)\n    Star Cat Rows\n       Concatenates two or more pandas data frames in the order you provide them.\n\n       @param args: Two or more DataFrames\n       @param crop: Boolean to indicate join type, default is False\n           True: inner join, this will crop columns that are not in all data frames\n           False: outer join, this will fill missing columns with NaN\n       @param reset_index: Boolean to indicate resetting the index, default is True\n       @return: DataFrame\n\n```\n### Star_Cat_Col\n```\nHelp on built-in function star_cat_col in module LambdaData:\n\nstar_cat_col(...)\n    star_cat_col(*args: pd.DataFrame, crop=False, reset_index=False)\n    Star Cat Cols\n       Concatenates two or more pandas data frames in the order you provide them.\n\n       @param args: Two or more DataFrames\n       @param crop: Boolean to indicate join type, default is False\n           True: inner join, this will crop columns that are not in all data frames\n           False: outer join, this will fill missing columns with NaN\n       @param reset_index: Boolean to indicate resetting the index, default is True\n       @return: DataFrame\n\n```\n\n## Randomizers\n\n### Random_Range\n```\nHelp on built-in function random_range in module LambdaData:\n\nrandom_range(...)\n    random_range(start: int, stop: int = 0, step: int = 1) -> int\n    Random Range: Flat uniform distribution.\n       The order of the inputs `start` and `stop` are interchangeable.\n       Conceptually: A = min(start, stop), B = max(start, stop), C = step\n       The sign of the step parameter controls the phase of the output.\n       Negative stepping will flip the inclusively of the distribution.\n       In other words: a negative step means to count down, not up.\n\n       @param start: Typically the lower bound. Inclusive.\n       @param stop: Typically the upper limit. Exclusive.\n       @param step: Size of the increments within the distribution.\n       @return: Random Integer in range [A, B) by C, or (A, B] by |C| for -C\n\n```\n### Shuffle\n```\nHelp on built-in function shuffle in module LambdaData:\n\nshuffle(...)\n    shuffle(array: List[Any])\n    Knuth B Shuffle Algorithm\n       Knuth_B Shuffle Algorithm.\n       Destructive, in-place shuffle.\n       Reverse Order Random Swap to Back\n\n       @param array: List of values to be shuffled.\n\n```\n### Truffleshuffle\n```\nHelp on class TruffleShuffle in module LambdaData:\n\nclass TruffleShuffle(builtins.object)\n |  TruffleShuffle(collection: Iterable[Any])\n |  \n |  Truffle Shuffle\n |  Produces random values from a collection with a Wide Uniform Distribution.\n |  \n |  @param collection :: Collection of Values. Any list-like object, a Set is\n |      recommended but not required.\n |  @return :: Callable Object. `Callable() -> Value`\n |      @return :: Random Value, wide distribution\n |  \n |  Wide Uniform Distribution: \"Wide\" refers to the average distance between\n |  consecutive occurrences of the same value. The average width of the output\n |  distribution will naturally scale up with the size of the collection.\n |  The goal of this type of distribution is to keep the output sequence free\n |  of clumps or streaks of the same value, while maintaining randomness and\n |  uniform probability. This is not the same as a flat uniform distribution.\n |  The two distributions over time will be statistically similar for any\n |  given set, but the repetitiveness of the output sequence will be\n |  very different.\n |  \n |  Methods defined here:\n |  \n |  __call__(self, *args, **kwargs) -> Any\n |      TruffleShuffle.__call__(self, *args, **kwargs) -> Any\n |  \n |  __init__(self, collection: Iterable[Any])\n |      TruffleShuffle.__init__(self, collection: Iterable[Any])\n |  \n |  ----------------------------------------------------------------------\n |  Data descriptors defined here:\n |  \n |  data\n |  \n |  rotate_size\n\n```\n\n\n## Tests\n```\n$ python LambdaDataTests/LDTests.py\n```\n```\n8 items had no tests:\n    LambdaData\n    LambdaData.TruffleShuffle\n    LambdaData.TruffleShuffle.__call__\n    LambdaData.TruffleShuffle.__init__\n    LambdaData.shuffle\n    LambdaData.star_cat_col\n    LambdaData.star_cat_row\n    LambdaData.value_span\n66 items passed all tests:\n   2 tests in LambdaData.accumulate\n   2 tests in LambdaData.add_one\n   3 tests in LambdaData.adjacent_difference\n   4 tests in LambdaData.all_of\n   4 tests in LambdaData.any_of\n   4 tests in LambdaData.difference\n   2 tests in LambdaData.exclusive_scan\n   5 tests in LambdaData.fork\n   3 tests in LambdaData.generate\n   2 tests in LambdaData.generate_n\n   2 tests in LambdaData.inclusive_scan\n   2 tests in LambdaData.inner_product\n   4 tests in LambdaData.intersection\n   4 tests in LambdaData.iota\n   5 tests in LambdaData.is_even\n   5 tests in LambdaData.is_odd\n   2 tests in LambdaData.matrix_multiply\n   2 tests in LambdaData.min_max\n   4 tests in LambdaData.none_of\n   2 tests in LambdaData.partial_sum\n   2 tests in LambdaData.partition\n   2 tests in LambdaData.product\n   4 tests in LambdaData.random_range\n   4 tests in LambdaData.reduce\n   3 tests in LambdaData.square\n   3 tests in LambdaData.star_product\n   4 tests in LambdaData.star_sum\n   4 tests in LambdaData.symmetric_difference\n   2 tests in LambdaData.transform\n   2 tests in LambdaData.transform_reduce\n   4 tests in LambdaData.transposed_sums\n   4 tests in LambdaData.union\n   7 tests in LambdaData.zip_transform\n216 tests in 74 items.\n216 passed and 0 failed.\nTest passed.\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "Lambda School,Data Science Algorithm,accumulate,adjacent_difference,all_of,any_of,difference,exclusive_scan,fork,generate,generate_n,inclusive_scan,inner_product,intersection,iota,min_max,none_of,partial_sum,partition,product,reduce,star_sum,star_product,symmetric_difference,transform,transform_reduce,transposed_sums,union,zip_transform,matrix_multiplyvalue_span,star_cat_row,star_cat_col,random_range,shuffle,TruffleShuffle", "license": "Free for non-commercial use", "maintainer": "", "maintainer_email": "", "name": "LambdaData", "package_url": "https://pypi.org/project/LambdaData/", "platform": "Darwin", "project_url": "https://pypi.org/project/LambdaData/", "project_urls": null, "release_url": "https://pypi.org/project/LambdaData/0.1.7/", "requires_dist": ["Cython", "pandas"], "requires_python": ">=3.6", "summary": "Data Science Algorithm Library", "version": "0.1.7"}, "last_serial": 6982002, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "52f35a226c634566e8593dfc7c1a24f4", "sha256": "2c2a59bed001ad52157cf5a927a82575e170d005905c38b7e1686c75732fe175"}, "downloads": -1, "filename": "LambdaData-0.0.1-cp38-cp38-macosx_10_9_x86_64.whl", "has_sig": false, "md5_digest": "52f35a226c634566e8593dfc7c1a24f4", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=3.7", "size": 88564, "upload_time": "2020-02-19T03:15:40", "upload_time_iso_8601": "2020-02-19T03:15:40.084498Z", "url": "https://files.pythonhosted.org/packages/e6/b2/00324290e2946ddfeb288f197e2798eb6a5b52b78f746eb2bb0fc050b746/LambdaData-0.0.1-cp38-cp38-macosx_10_9_x86_64.whl"}, {"comment_text": "", "digests": {"md5": "234306f90830e0a55341db17b013cd02", "sha256": "5a783de827bd5915ae7dfe29023673a507fabf709296901e691e92d4718c09ac"}, "downloads": -1, "filename": "LambdaData-0.0.1.tar.gz", "has_sig": false, "md5_digest": "234306f90830e0a55341db17b013cd02", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 92125, "upload_time": "2020-02-19T03:15:42", "upload_time_iso_8601": "2020-02-19T03:15:42.337048Z", "url": "https://files.pythonhosted.org/packages/fd/4f/21b63fd299aae90027b984a001414bc99f9c0d3311d0d2b37d700f64b55a/LambdaData-0.0.1.tar.gz"}], "0.0.2": [{"comment_text": "", "digests": {"md5": "ef3a29173b5233bf2d91aadc968eda2c", "sha256": "76cd9d2f8735822df1ce361a34b05200d914dfc887b19788acbfb114fbda6ca9"}, "downloads": -1, "filename": "LambdaData-0.0.2-cp38-cp38-macosx_10_9_x86_64.whl", "has_sig": false, "md5_digest": "ef3a29173b5233bf2d91aadc968eda2c", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=3.7", "size": 88763, "upload_time": "2020-02-19T03:19:12", "upload_time_iso_8601": "2020-02-19T03:19:12.234248Z", "url": "https://files.pythonhosted.org/packages/95/da/989954f0ed462f90803da69b0c5876c1d8f8e4826544a62fc8f40b3c7db7/LambdaData-0.0.2-cp38-cp38-macosx_10_9_x86_64.whl"}, {"comment_text": "", "digests": {"md5": "a8b5edff09051eb27141b68356470dde", "sha256": "74a234c529423e47201ec3b60e70a0a441565ca8489e374c5b1ad8fc9f303fc0"}, "downloads": -1, "filename": "LambdaData-0.0.2.tar.gz", "has_sig": false, "md5_digest": "a8b5edff09051eb27141b68356470dde", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 92801, "upload_time": "2020-02-19T03:19:13", "upload_time_iso_8601": "2020-02-19T03:19:13.645688Z", "url": "https://files.pythonhosted.org/packages/6f/e0/98b16a23d89fff147e315d955a5a695874a457e4bfcfcb77e46916db156f/LambdaData-0.0.2.tar.gz"}], "0.0.3": [{"comment_text": "", "digests": {"md5": "30dc274f6decab63db920fc6f897ed1d", "sha256": "97af340efe6836bd55a1e95259214276d5eb59985f94c85b4788accc52d7a8b3"}, "downloads": -1, "filename": "LambdaData-0.0.3-cp38-cp38-macosx_10_9_x86_64.whl", "has_sig": false, "md5_digest": "30dc274f6decab63db920fc6f897ed1d", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=3.7", "size": 94693, "upload_time": "2020-02-19T03:34:48", "upload_time_iso_8601": "2020-02-19T03:34:48.438828Z", "url": "https://files.pythonhosted.org/packages/29/6e/9b7a277936e5ca23c4100a46bbfdaf3f9bb8fe3bc78b3bdba255d4a1a571/LambdaData-0.0.3-cp38-cp38-macosx_10_9_x86_64.whl"}, {"comment_text": "", "digests": {"md5": "7c86178d37e701f14129532b650cc1fe", "sha256": "277b2533df9c9c5faf96ed63bde9c904f74cd49fbd011aa1c9466ca00c4ac53e"}, "downloads": -1, "filename": "LambdaData-0.0.3.tar.gz", "has_sig": false, "md5_digest": "7c86178d37e701f14129532b650cc1fe", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 96787, "upload_time": "2020-02-19T03:34:50", "upload_time_iso_8601": "2020-02-19T03:34:50.285292Z", "url": "https://files.pythonhosted.org/packages/c3/f1/40cec626276ab3250874bfc9a100016be9474923f30b624dd6442194b2e1/LambdaData-0.0.3.tar.gz"}], "0.0.4": [{"comment_text": "", "digests": {"md5": "22fe94cf297ecee345e763e3fbc546ba", "sha256": "5ee10e03d236344eea699341a4842416d6966a7aeeaa36ba0381e92ec02eade8"}, "downloads": -1, "filename": "LambdaData-0.0.4-cp38-cp38-macosx_10_9_x86_64.whl", "has_sig": false, "md5_digest": "22fe94cf297ecee345e763e3fbc546ba", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=3.7", "size": 94749, "upload_time": "2020-02-19T04:05:43", "upload_time_iso_8601": "2020-02-19T04:05:43.326654Z", "url": "https://files.pythonhosted.org/packages/e1/29/0da0dbaa64273fa3481424fdfc0b7d4f23f9c401646e35b98c89592af7a2/LambdaData-0.0.4-cp38-cp38-macosx_10_9_x86_64.whl"}, {"comment_text": "", "digests": {"md5": "de7c2235c5ae751aafb817c087343749", "sha256": "fc1c21a6a0a99b1b7a17eb2c6ed4adf88da87b99f6069c5c337d02f95a4306b6"}, "downloads": -1, "filename": "LambdaData-0.0.4.tar.gz", "has_sig": false, "md5_digest": "de7c2235c5ae751aafb817c087343749", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 96988, "upload_time": "2020-02-19T04:05:44", "upload_time_iso_8601": "2020-02-19T04:05:44.656186Z", "url": "https://files.pythonhosted.org/packages/d0/fc/98e5b478430c27f4d72991132d5bad9073326bdf8c719b7e7151a5ff005e/LambdaData-0.0.4.tar.gz"}], "0.1.0": [{"comment_text": "", "digests": {"md5": "ac3874a91c3b818678fd774ae0a28ef2", "sha256": "772c3eb857387a9c23d4b8f8f29fa2b584d6bc4d8c8c97fe6f2ef9264ab1e5c4"}, "downloads": -1, "filename": "LambdaData-0.1.0-cp38-cp38-macosx_10_9_x86_64.whl", "has_sig": false, "md5_digest": "ac3874a91c3b818678fd774ae0a28ef2", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=3.7", "size": 111658, "upload_time": "2020-02-19T05:23:29", "upload_time_iso_8601": "2020-02-19T05:23:29.818781Z", "url": "https://files.pythonhosted.org/packages/8f/9c/f37133c971ea8ab71327dfd4a90232b713f8c8037d252fc4112f460f1bca/LambdaData-0.1.0-cp38-cp38-macosx_10_9_x86_64.whl"}, {"comment_text": "", "digests": {"md5": "fb55d7d9d6b15ba7652f5f066d5fa02a", "sha256": "8da88cfd50df3c37485e025d1740b45b5efa7a35f51212e0b7648c08cca41b2f"}, "downloads": -1, "filename": "LambdaData-0.1.0.tar.gz", "has_sig": false, "md5_digest": "fb55d7d9d6b15ba7652f5f066d5fa02a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 113757, "upload_time": "2020-02-19T05:23:31", "upload_time_iso_8601": "2020-02-19T05:23:31.377389Z", "url": "https://files.pythonhosted.org/packages/9a/63/e5caa6b1a38eaa1e8781936ffeab50829e7ed7917db260f27bebb4efd453/LambdaData-0.1.0.tar.gz"}], "0.1.1": [{"comment_text": "", "digests": {"md5": "94a70e19a6b4a66874810061ac07c991", "sha256": "af63df2f655b63455a1878338b414e116e85bdabb6f3af877886b42a852857fd"}, "downloads": -1, "filename": "LambdaData-0.1.1-cp38-cp38-macosx_10_9_x86_64.whl", "has_sig": false, "md5_digest": "94a70e19a6b4a66874810061ac07c991", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=3.7", "size": 112103, "upload_time": "2020-02-19T05:36:06", "upload_time_iso_8601": "2020-02-19T05:36:06.693359Z", "url": "https://files.pythonhosted.org/packages/8f/0c/14e824c95cbf7c7ea3842f1d068a99c942b95ce4d4e9fda387ad2da45cb0/LambdaData-0.1.1-cp38-cp38-macosx_10_9_x86_64.whl"}, {"comment_text": "", "digests": {"md5": "2e7b791b4d8a63655a234455fcd719f4", "sha256": "cc225c5230eea2298ef5d8cf89178edf5c4e825faa966045318be13e25ddb9a4"}, "downloads": -1, "filename": "LambdaData-0.1.1.tar.gz", "has_sig": false, "md5_digest": "2e7b791b4d8a63655a234455fcd719f4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 114719, "upload_time": "2020-02-19T05:36:08", "upload_time_iso_8601": "2020-02-19T05:36:08.142297Z", "url": "https://files.pythonhosted.org/packages/03/f3/5c3e5f0c407f6e66dac0940552544b18d7a91d50ad95b687658804cc90b4/LambdaData-0.1.1.tar.gz"}], "0.1.2": [{"comment_text": "", "digests": {"md5": "62ddcde71f1aea1074c4f56ad43ef660", "sha256": "388944f6e3dd530274b66c60461d0b83b518a7ae19ebc88b84dc8ca1b27d1436"}, "downloads": -1, "filename": "LambdaData-0.1.2-cp38-cp38-macosx_10_9_x86_64.whl", "has_sig": false, "md5_digest": "62ddcde71f1aea1074c4f56ad43ef660", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=3.7", "size": 112173, "upload_time": "2020-02-19T05:47:40", "upload_time_iso_8601": "2020-02-19T05:47:40.634965Z", "url": "https://files.pythonhosted.org/packages/1c/c8/3d7c3b0e32df8d74174fb68098ca5f01694102ac89da87d4ac4797768bb7/LambdaData-0.1.2-cp38-cp38-macosx_10_9_x86_64.whl"}, {"comment_text": "", "digests": {"md5": "50f63e793cb41a2c0bd609d2e9a76088", "sha256": "dcdaf2359c81e51d082b51ba8bac0e22a6e60249dc600c07eadfe0a007d9b147"}, "downloads": -1, "filename": "LambdaData-0.1.2.tar.gz", "has_sig": false, "md5_digest": "50f63e793cb41a2c0bd609d2e9a76088", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 114903, "upload_time": "2020-02-19T05:47:42", "upload_time_iso_8601": "2020-02-19T05:47:42.362860Z", "url": "https://files.pythonhosted.org/packages/b6/f7/7986d4cc97f200df8e78c6338a7d99b9aaa79d50b21d6fc05278e4b3605b/LambdaData-0.1.2.tar.gz"}], "0.1.3": [{"comment_text": "", "digests": {"md5": "39f170198ec8416a0ab83992caecf1c9", "sha256": "805b3ac6f9d5c2e1b8346c5a4c1edcd05e94833a04df56df0362fe0fd88213ee"}, "downloads": -1, "filename": "LambdaData-0.1.3-cp38-cp38-macosx_10_9_x86_64.whl", "has_sig": false, "md5_digest": "39f170198ec8416a0ab83992caecf1c9", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=3.7", "size": 118884, "upload_time": "2020-02-19T20:13:42", "upload_time_iso_8601": "2020-02-19T20:13:42.876344Z", "url": "https://files.pythonhosted.org/packages/43/db/d3fa57857ebf245ffb41c0c132ff0f726a5b43438101ba62df17c4413779/LambdaData-0.1.3-cp38-cp38-macosx_10_9_x86_64.whl"}, {"comment_text": "", "digests": {"md5": "474996bbe1068e8ba2f4386b0bde8d6a", "sha256": "d27c2de854f4e5fc126054a3d037cf5a2006c16ade077a8cf3064d78dfac7836"}, "downloads": -1, "filename": "LambdaData-0.1.3.tar.gz", "has_sig": false, "md5_digest": "474996bbe1068e8ba2f4386b0bde8d6a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 121401, "upload_time": "2020-02-19T20:13:44", "upload_time_iso_8601": "2020-02-19T20:13:44.344353Z", "url": "https://files.pythonhosted.org/packages/cb/e7/be9acc8c84d2eee9014eecb4eda8603c8d1c5b7ed8a88f2cb5c68dd3d271/LambdaData-0.1.3.tar.gz"}], "0.1.4": [{"comment_text": "", "digests": {"md5": "39104fba7e3bae73c2b904142be7e0f7", "sha256": "29fc15c37db00b61ba783dca80370101ca52587579bc7ee0114be9c4c60680d8"}, "downloads": -1, "filename": "LambdaData-0.1.4-cp38-cp38-macosx_10_9_x86_64.whl", "has_sig": false, "md5_digest": "39104fba7e3bae73c2b904142be7e0f7", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=3.7", "size": 118892, "upload_time": "2020-04-07T02:59:51", "upload_time_iso_8601": "2020-04-07T02:59:51.147508Z", "url": "https://files.pythonhosted.org/packages/92/b0/2486f8ae85f0c732864a8ee368bd85c5865ac3dc7c1acb1fb68a1fe44641/LambdaData-0.1.4-cp38-cp38-macosx_10_9_x86_64.whl"}, {"comment_text": "", "digests": {"md5": "4e562ffbf11ac992c26ae8d244bcf580", "sha256": "4cad5ed30ef21d8f6855ddb5581ad99c5f4f26af33883bcd0d62e8f2ab9ebe54"}, "downloads": -1, "filename": "LambdaData-0.1.4.tar.gz", "has_sig": false, "md5_digest": "4e562ffbf11ac992c26ae8d244bcf580", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 121759, "upload_time": "2020-04-07T02:59:52", "upload_time_iso_8601": "2020-04-07T02:59:52.752882Z", "url": "https://files.pythonhosted.org/packages/56/b9/b48d65e8d5b06cf36b0c8524b1a3e441c7415db0a20aabf5c05b26de376f/LambdaData-0.1.4.tar.gz"}], "0.1.5": [{"comment_text": "", "digests": {"md5": "6efef536147e126f8f067e23df0ecf0a", "sha256": "bb472d6292547ab1c8f739e4d00172a3664a5c0fb642423c1634b978a7896831"}, "downloads": -1, "filename": "LambdaData-0.1.5-cp38-cp38-macosx_10_9_x86_64.whl", "has_sig": false, "md5_digest": "6efef536147e126f8f067e23df0ecf0a", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=3.6", "size": 118891, "upload_time": "2020-04-08T20:57:31", "upload_time_iso_8601": "2020-04-08T20:57:31.107700Z", "url": "https://files.pythonhosted.org/packages/c9/ee/a330e782816bbffffa50ee7fc398e9ef6304f24e9e5bf84e214f24f71478/LambdaData-0.1.5-cp38-cp38-macosx_10_9_x86_64.whl"}, {"comment_text": "", "digests": {"md5": "37d4ce4b1ac08fb9b0ad0401bcf66ed4", "sha256": "fbbd3fb0b0b8397428d55bd077fddf8fa2a1c1e087618f6ad2ca27d2f2c5a3bb"}, "downloads": -1, "filename": "LambdaData-0.1.5.tar.gz", "has_sig": false, "md5_digest": "37d4ce4b1ac08fb9b0ad0401bcf66ed4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 121762, "upload_time": "2020-04-08T20:57:32", "upload_time_iso_8601": "2020-04-08T20:57:32.696736Z", "url": "https://files.pythonhosted.org/packages/f0/5c/c4c2e7f76e31c25956f70a6d392c80658923603244b059a5ff4abaa6dc20/LambdaData-0.1.5.tar.gz"}], "0.1.6": [{"comment_text": "", "digests": {"md5": "cb04d3408b3a680d93a96da127c29e95", "sha256": "6a11c59cffb4c46527b9f23e2bd9c824562998d7161367c3f27f2d92379f22a6"}, "downloads": -1, "filename": "LambdaData-0.1.6-cp38-cp38-macosx_10_9_x86_64.whl", "has_sig": false, "md5_digest": "cb04d3408b3a680d93a96da127c29e95", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=3.6", "size": 118919, "upload_time": "2020-04-08T22:05:48", "upload_time_iso_8601": "2020-04-08T22:05:48.921294Z", "url": "https://files.pythonhosted.org/packages/65/13/a163c1e796f092bf65fb393ca07a249d69186b7a0e8bba6efde981255e4a/LambdaData-0.1.6-cp38-cp38-macosx_10_9_x86_64.whl"}, {"comment_text": "", "digests": {"md5": "e0a58af863ec8d25e93015c045e8dc57", "sha256": "0c302e138753a1832d95fd393cca36ffdc776b4e0c1dfcb28db0320ae80eb8de"}, "downloads": -1, "filename": "LambdaData-0.1.6.tar.gz", "has_sig": false, "md5_digest": "e0a58af863ec8d25e93015c045e8dc57", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 122009, "upload_time": "2020-04-08T22:05:50", "upload_time_iso_8601": "2020-04-08T22:05:50.324868Z", "url": "https://files.pythonhosted.org/packages/08/0d/3ac085194fd3785f9dc5a346e10520e5de7da8a7447ed0d771c0720f162f/LambdaData-0.1.6.tar.gz"}], "0.1.7": [{"comment_text": "", "digests": {"md5": "bcdcfa5c8fdf205dfec3a146a1ce45e9", "sha256": "36745438964514237f4a86923c1c1735db49b6ffac09a55791372c1b9eda78ff"}, "downloads": -1, "filename": "LambdaData-0.1.7-cp37-cp37m-macosx_10_9_x86_64.whl", "has_sig": false, "md5_digest": "bcdcfa5c8fdf205dfec3a146a1ce45e9", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.6", "size": 117223, "upload_time": "2020-04-08T22:23:26", "upload_time_iso_8601": "2020-04-08T22:23:26.557686Z", "url": "https://files.pythonhosted.org/packages/ed/7c/2e20c356eefb45890e6a4f24e8cdce52f83c66e31a23d99b590ede1fd0c6/LambdaData-0.1.7-cp37-cp37m-macosx_10_9_x86_64.whl"}, {"comment_text": "", "digests": {"md5": "3ab12e7d00b637c80c095f8351ed6476", "sha256": "856be6cf0a67ecaecf997849a82e8ee497ca7299b41fa1e926525c6803abbe33"}, "downloads": -1, "filename": "LambdaData-0.1.7.tar.gz", "has_sig": false, "md5_digest": "3ab12e7d00b637c80c095f8351ed6476", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 118562, "upload_time": "2020-04-08T22:23:28", "upload_time_iso_8601": "2020-04-08T22:23:28.145212Z", "url": "https://files.pythonhosted.org/packages/86/6b/e133be60c4b40e1c0a1db85862f2b63b7ddac29f049a4d49d04a77a33fb6/LambdaData-0.1.7.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "bcdcfa5c8fdf205dfec3a146a1ce45e9", "sha256": "36745438964514237f4a86923c1c1735db49b6ffac09a55791372c1b9eda78ff"}, "downloads": -1, "filename": "LambdaData-0.1.7-cp37-cp37m-macosx_10_9_x86_64.whl", "has_sig": false, "md5_digest": "bcdcfa5c8fdf205dfec3a146a1ce45e9", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.6", "size": 117223, "upload_time": "2020-04-08T22:23:26", "upload_time_iso_8601": "2020-04-08T22:23:26.557686Z", "url": "https://files.pythonhosted.org/packages/ed/7c/2e20c356eefb45890e6a4f24e8cdce52f83c66e31a23d99b590ede1fd0c6/LambdaData-0.1.7-cp37-cp37m-macosx_10_9_x86_64.whl"}, {"comment_text": "", "digests": {"md5": "3ab12e7d00b637c80c095f8351ed6476", "sha256": "856be6cf0a67ecaecf997849a82e8ee497ca7299b41fa1e926525c6803abbe33"}, "downloads": -1, "filename": "LambdaData-0.1.7.tar.gz", "has_sig": false, "md5_digest": "3ab12e7d00b637c80c095f8351ed6476", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 118562, "upload_time": "2020-04-08T22:23:28", "upload_time_iso_8601": "2020-04-08T22:23:28.145212Z", "url": "https://files.pythonhosted.org/packages/86/6b/e133be60c4b40e1c0a1db85862f2b63b7ddac29f049a4d49d04a77a33fb6/LambdaData-0.1.7.tar.gz"}]}