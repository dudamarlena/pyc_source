{"info": {"author": "LOGILAB S.A. (Paris, FRANCE)", "author_email": "contact@logilab.fr", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: CubicWeb", "Programming Language :: JavaScript", "Programming Language :: Python"], "description": "Summary\n-------\n\nA Cubicweb Storage that stores the data on S3.\n\nIt is a standard Cubicweb_ Storage, similar to the BytesFileSystemStorage_. For\nexample, if you want to store File.data payloads in S3, you should create an\nS3Storage instance, typically in a startup hook, as::\n\n\n  from cubicweb.server.hook import Hook\n  from cubicweb_s3storage.storages import S3Storage\n\n  class S3StorageStartupHook(Hook):\n      __regid__ = 'mycube.server-startup-hook'\n      events = ('server_startup', 'server_maintenance')\n\n      def __call__(self):\n          storage = S3Storage('s3_bucket')\n          self.repo.system_source.set_storage('File', 'data', storage)\n\nBy default, S3 object keys (ie. S3 object identifiers) are random UUID\ngenerated at entity creation time. If you want to implement another key\ngeneration algorithm, you must write overload ``S3Storage.new_s3_key()``\nmethod.\n\n\nCommunications with AWS are handled by boto3_.\n\n\n.. Warning:: there is no cache, for now, so every time you read an entity\n   attribute that is stored on S3, it will be downloaded from amazon.\n\nConfiguration\n-------------\n\nThe S3Storage class constructor needs an S3 bucket name.\n\nIf you want to put your aws credentials in an other file than the default\n(``~/.aws/credentials``), you must set the ``AWS_CONFIG_FILE`` environment\nvariable.\n\nIf you want to use another profile name than ``default``, set the\n``AWS_PROFILE`` environment variable.\n\nIf you prefer to configure AWS credentials by environment variables\n(eg. when using docker), you can use the following variables:\n\n- AWS_ACCESS_KEY_ID: the access key for your AWS account,\n\n- AWS_SECRET_ACCESS_KEY: the secret key for your AWS account.\n\nPlease read `boto3 documentation`_ for more details.\n\nFurther configuration\n---------------------\n\nIn some cases you might want to use compatible S3 storage which is not on\nAWS.\n\nFor this you have the following variables :\n\n- AWS_S3_ENDPOINT_URL: endpoint url for your alternative S3 storage\n\nThis enables the use of a `minio server <https://min.io>`_, see\n`their documentation about endpoints\n<https://docs.min.io/docs/aws-cli-with-minio>`_.\n\nNote : this type of variable `has been requested upstream\n<https://github.com/boto/boto3/issues/2099>`_\n(and related `aws-cli <https://github.com/aws/aws-cli/issues/4454>`_).\n\n\n.. _`boto3 documentation`: https://boto3.readthedocs.io/en/stable/guide/configuration.html#shared-credentials-file\n.. _boto3: https://github.com/boto/boto3\n.. _Cubicweb: https://www.cubicweb.org/project/cubicweb\n.. _BytesFileSystemStorage: http://cubicweb.readthedocs.io/en/3.26.2/tutorials/advanced/part03_bfss", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.cubicweb.org/project/cubicweb-s3storage", "keywords": "", "license": "LGPL", "maintainer": "", "maintainer_email": "", "name": "cubicweb-s3storage", "package_url": "https://pypi.org/project/cubicweb-s3storage/", "platform": "", "project_url": "https://pypi.org/project/cubicweb-s3storage/", "project_urls": {"Homepage": "http://www.cubicweb.org/project/cubicweb-s3storage"}, "release_url": "https://pypi.org/project/cubicweb-s3storage/0.1.0/", "requires_dist": null, "requires_python": "", "summary": "A Cubicweb Storage that stores the data on S3", "version": "0.1.0"}, "last_serial": 6754605, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "5c5c82669ba01ac9a6ac36b9622ff88f", "sha256": "81791fa93c051580c721a447d61d90d17da1aa323272486388361bc206c2b962"}, "downloads": -1, "filename": "cubicweb-s3storage-0.1.0.tar.gz", "has_sig": false, "md5_digest": "5c5c82669ba01ac9a6ac36b9622ff88f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11673, "upload_time": "2020-03-05T11:29:00", "upload_time_iso_8601": "2020-03-05T11:29:00.175642Z", "url": "https://files.pythonhosted.org/packages/81/af/ecdf53de7a4885e027b1f8e8fc167f62836eeb9e9400c705fe8ebbeca277/cubicweb-s3storage-0.1.0.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "5c5c82669ba01ac9a6ac36b9622ff88f", "sha256": "81791fa93c051580c721a447d61d90d17da1aa323272486388361bc206c2b962"}, "downloads": -1, "filename": "cubicweb-s3storage-0.1.0.tar.gz", "has_sig": false, "md5_digest": "5c5c82669ba01ac9a6ac36b9622ff88f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11673, "upload_time": "2020-03-05T11:29:00", "upload_time_iso_8601": "2020-03-05T11:29:00.175642Z", "url": "https://files.pythonhosted.org/packages/81/af/ecdf53de7a4885e027b1f8e8fc167f62836eeb9e9400c705fe8ebbeca277/cubicweb-s3storage-0.1.0.tar.gz"}]}