{"info": {"author": "Florian Woerister", "author_email": "e1126205@student.tuwien.ac.at", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.7"], "description": ".. You should enable this project on travis-ci.org and coveralls.io to make\r\n   these badges work. The necessary Travis and Coverage config files have been\r\n   generated for you.\r\n\r\n.. image:: https://travis-ci.org/fwoerister/ckanext-mongodatastore.svg?branch=master\r\n    :target: https://travis-ci.org/fwoerister/ckanext-mongodatastore\r\n    \r\n.. image:: https://coveralls.io/repos/github/fwoerister/ckanext-mongodatastore/badge.svg?branch=master\r\n   :target: https://coveralls.io/github/fwoerister/ckanext-mongodatastore?branch=master\r\n\r\n.. image:: https://pypip.in/download/ckanext-mongodatastore/badge.svg\r\n    :target: https://pypi.python.org/pypi//ckanext-mongodatastore/\r\n    :alt: Downloads\r\n\r\n.. image:: https://pypip.in/version/ckanext-mongodatastore/badge.svg\r\n    :target: https://pypi.python.org/pypi/ckanext-mongodatastore/\r\n    :alt: Latest Version\r\n\r\n.. image:: https://pypip.in/py_versions/ckanext-mongodatastore/badge.svg\r\n    :target: https://pypi.python.org/pypi/ckanext-mongodatastore/\r\n    :alt: Supported Python versions\r\n\r\n.. image:: https://pypip.in/status/ckanext-mongodatastore/badge.svg\r\n    :target: https://pypi.python.org/pypi/ckanext-mongodatastore/\r\n    :alt: Development Status\r\n\r\n.. image:: https://pypip.in/license/ckanext-mongodatastore/badge.svg\r\n    :target: https://pypi.python.org/pypi/ckanext-mongodatastore/\r\n    :alt: License\r\n\r\n\r\n======================\r\nckanext-mongodatastore\r\n======================\r\n\r\nThe MongoDatastore is a implementation of the DatastoreBackend interface, provided by the Datastore plugin.\r\nProviding cite-ability of evolving data is the main goal of this work.\r\n\r\n\r\n------------\r\nRequirements\r\n------------\r\n\r\nTo run this plugin, a CKAN instance already has to be installed. In addition to the PostgreSQL database a MongoDB\r\ninstance is required. To retrieve the PIDs in the UI, the CKAN plugin 'datacitator' has to be installed\r\n\r\n------------\r\nInstallation\r\n------------\r\n\r\n.. Add any additional install steps to the list below.\r\n   For example installing any non-Python dependencies or adding any required\r\n   config settings.\r\n\r\nTo install ckanext-mongodatastore:\r\n\r\n1. Activate your CKAN virtual environment, for example::\r\n\r\n     . /usr/lib/ckan/default/bin/activate\r\n\r\n2. Install the ckanext-mongodatastore Python package into your virtual environment::\r\n\r\n     pip install ckanext-mongodatastore\r\n\r\n3. Add ``mongodatastore`` to the ``ckan.plugins`` setting in your CKAN\r\n   config file (by default the config file is located at\r\n   ``/etc/ckan/default/production.ini``).\r\n\r\n4. Restart CKAN. For example if you've deployed CKAN with Apache on Ubuntu::\r\n\r\n     sudo service apache2 reload\r\n\r\n\r\n---------------\r\nConfig Settings\r\n---------------\r\n\r\nDocument any optional config settings here. For example::\r\n\r\n    # The minimum number of hours to wait before re-checking a resource\r\n    # (optional, default: 24).\r\n    ckanext.mongodatastore.some_setting = some_default_value\r\n\r\n\r\n------------------------\r\nDevelopment Installation\r\n------------------------\r\n\r\nTo install ckanext-mongodatastore for development, activate your CKAN virtualenv and\r\ndo::\r\n\r\n    git clone https://github.com/fwoerister/ckanext-mongodatastore.git\r\n    cd ckanext-mongodatastore\r\n    python setup.py develop\r\n    pip install -r dev-requirements.txt\r\n\r\n\r\n-----------------\r\nRunning the Tests\r\n-----------------\r\n\r\nTo run the tests, do::\r\n\r\n    nosetests --nologcapture --with-pylons=test.ini\r\n\r\nTo run the tests and produce a coverage report, first make sure you have\r\ncoverage installed in your virtualenv (``pip install coverage``) then run::\r\n\r\n    nosetests --nologcapture --with-pylons=test.ini --with-coverage --cover-package=ckanext.mongodatastore --cover-inclusive --cover-erase --cover-tests\r\n\r\n\r\n---------------------------------\r\nRegistering ckanext-mongodatastore on PyPI\r\n---------------------------------\r\n\r\nckanext-mongodatastore should be availabe on PyPI as\r\nhttps://pypi.python.org/pypi/ckanext-mongodatastore. If that link doesn't work, then\r\nyou can register the project on PyPI for the first time by following these\r\nsteps:\r\n\r\n1. Create a source distribution of the project::\r\n\r\n     python setup.py sdist\r\n\r\n2. Register the project::\r\n\r\n     python setup.py register\r\n\r\n3. Upload the source distribution to PyPI::\r\n\r\n     python setup.py sdist upload\r\n\r\n4. Tag the first release of the project on GitHub with the version number from\r\n   the ``setup.py`` file. For example if the version number in ``setup.py`` is\r\n   0.0.1 then do::\r\n\r\n       git tag 0.0.1\r\n       git push --tags\r\n\r\n\r\n----------------------------------------\r\nReleasing a New Version of ckanext-mongodatastore\r\n----------------------------------------\r\n\r\nckanext-mongodatastore is availabe on PyPI as https://pypi.python.org/pypi/ckanext-mongodatastore.\r\nTo publish a new version to PyPI follow these steps:\r\n\r\n1. Update the version number in the ``setup.py`` file.\r\n   See `PEP 440 <http://legacy.python.org/dev/peps/pep-0440/#public-version-identifiers>`_\r\n   for how to choose version numbers.\r\n\r\n2. Create a source distribution of the new version::\r\n\r\n     python setup.py sdist\r\n\r\n3. Upload the source distribution to PyPI::\r\n\r\n     python setup.py sdist upload\r\n\r\n4. Tag the new release of the project on GitHub with the version number from\r\n   the ``setup.py`` file. For example if the version number in ``setup.py`` is\r\n   0.0.2 then do::\r\n\r\n       git tag 0.0.2\r\n       git push --tags\r\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/fwoerister/ckanext-mongodatastore", "keywords": "CKAN mongodb datastore datacitation citation", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "ckanext-mongodatastore", "package_url": "https://pypi.org/project/ckanext-mongodatastore/", "platform": "", "project_url": "https://pypi.org/project/ckanext-mongodatastore/", "project_urls": {"Homepage": "https://github.com/fwoerister/ckanext-mongodatastore"}, "release_url": "https://pypi.org/project/ckanext-mongodatastore/0.0.1/", "requires_dist": null, "requires_python": "", "summary": "A MongoDB DataStoreBackend implementation, that supports data citation.", "version": "0.0.1"}, "last_serial": 4938684, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "d72cc6d3ae67beac1062f213c54f739f", "sha256": "83ac5c9fe3403d88e7c5846e64e00c6008fc80d326d881342074d0bd7fb6fa50"}, "downloads": -1, "filename": "ckanext-mongodatastore-0.0.1.tar.gz", "has_sig": false, "md5_digest": "d72cc6d3ae67beac1062f213c54f739f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 978715, "upload_time": "2019-03-14T09:46:41", "upload_time_iso_8601": "2019-03-14T09:46:41.641999Z", "url": "https://files.pythonhosted.org/packages/1b/7f/111ebfcff8abad98b801a5d686a78fbe913af3eb7c0a9084135b5f93d072/ckanext-mongodatastore-0.0.1.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "d72cc6d3ae67beac1062f213c54f739f", "sha256": "83ac5c9fe3403d88e7c5846e64e00c6008fc80d326d881342074d0bd7fb6fa50"}, "downloads": -1, "filename": "ckanext-mongodatastore-0.0.1.tar.gz", "has_sig": false, "md5_digest": "d72cc6d3ae67beac1062f213c54f739f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 978715, "upload_time": "2019-03-14T09:46:41", "upload_time_iso_8601": "2019-03-14T09:46:41.641999Z", "url": "https://files.pythonhosted.org/packages/1b/7f/111ebfcff8abad98b801a5d686a78fbe913af3eb7c0a9084135b5f93d072/ckanext-mongodatastore-0.0.1.tar.gz"}]}