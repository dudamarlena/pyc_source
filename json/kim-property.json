{"info": {"author": "Yaser Afshar", "author_email": "yafshar@umn.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Science/Research", "License :: OSI Approved :: Common Development and Distribution License 1.0 (CDDL-1.0)", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Scientific/Engineering"], "description": "# KIM-PROPERTY utility module\n\n[![Build Status](https://travis-ci.org/openkim/kim-property.svg?branch=master)](https://travis-ci.org/openkim/kim-property)\n[![Python package](https://github.com/openkim/kim-property/workflows/Python%20package/badge.svg)](https://github.com/openkim/kim-property/actions)\n[![Windows Build status](https://ci.appveyor.com/api/projects/status/iu5se53hqyaigiur?svg=true)](https://ci.appveyor.com/project/yafshar/kim-property)\n[![codecov](https://codecov.io/gh/openkim/kim-property/branch/master/graph/badge.svg)](https://codecov.io/gh/openkim/kim-property)\n[![Anaconda-Server Badge](https://img.shields.io/conda/vn/conda-forge/kim-property.svg)](https://anaconda.org/conda-forge/kim-property)\n[![PyPI](https://img.shields.io/pypi/v/kim-property.svg)](https://pypi.python.org/pypi/kim-property)\n[![License](https://img.shields.io/badge/license-CDDL--1.0-blue)](LICENSE.CDDL)\n\nThe objective is to make it as easy as possible to convert a script (for\nexample a [LAMMPS](https://lammps.sandia.gov/) script) that computes a\n[KIM property](https://openkim.org/properties) to a KIM Test.\n\nThis utility module has 5 modes:\n\n1- **[Create](#Create)**\\\n    Take as input the property instance ID and property definition name and\n    create initial property instance data structure. It checks and indicates\n    whether the property definition exists in [OpenKIM](https://openkim.org/).\n\n2- **[Destroy](#Destroy)**\\\n    Delete a previously created property instance ID.\n\n3- **[Modify](#Modify)**\\\n    Incrementally build the property instance by receiving keys with\n    associated arguments. It can \"append\" and add to a key's existing array\n    argument.\n\n4- **[Remove](#Remove)**\\\n    Remove a key.\n\n5- **[Dump](#Dump)**\\\n    Take as input the generated instance and a filename, validate each\n    instance against the property definition and either issues an error or\n    writes the instance out to file in edn format. Final validation should\n    make sure all keys/arguments are legal and all required keys are\n    provided.\n\n## Create\n\nCreating property instances::\n\n````py\n    >>> kim_property_create(1, 'cohesive-energy-relation-cubic-crystal')\n    '[{\"property-id\" \"tag:staff@noreply.openkim.org,2014-04-15:property/cohesive-energy-relation-cubic-crystal\" \"instance-id\" 1}]'\n\n    >>> str = kim_property_create(1, 'cohesive-energy-relation-cubic-crystal')\n\n    >>> kim_property_create(2, 'atomic-mass', str)\n    '[{\"property-id\" \"tag:staff@noreply.openkim.org,2014-04-15:property/cohesive-energy-relation-cubic-crystal\" \"instance-id\" 1} {\"property-id\" \"tag:brunnels@noreply.openkim.org,2016-05-11:property/atomic-mass\" \"instance-id\" 2}]'\n\n    >>> str = kim_property_create(2, 'atomic-mass', str)\n    >>> obj = kim_edn.loads(str)\n    >>> print(kim_edn.dumps(obj, indent=4))\n    [\n        {\n            \"property-id\" \"tag:staff@noreply.openkim.org,2014-04-15:property/cohesive-energy-relation-cubic-crystal\"\n            \"instance-id\" 1\n        }\n        {\n            \"property-id\" \"tag:brunnels@noreply.openkim.org,2016-05-11:property/atomic-mass\"\n            \"instance-id\" 2\n        }\n    ]\n````\n\nA property instance is stored in a subset of the KIM-EDN format as described\nin [KIM Property Instances](https://openkim.org/doc/schema/properties-framework).\nEach property instance must contain the `property-id` and `instance-id`.\n`kim-property` utility module can create a new property instance, using a KIM\nproperty ID (e.g.\n`tag:staff@noreply.openkim.org,2014-04-15:property/cohesive-energy-relation-cubic-crystal`)\nor only a KIM property name (e.g `cohesive-energy-relation-cubic-crystal`)\nwhere, it internally will use the correct KIM property ID. Both use cases are\ndepicted above.\n\n## Destroy\n\nDestroying property instances::\n\n````py\n    >>> obj = '[{\"property-id\" \"tag:staff@noreply.openkim.org,2014-04-15:property/cohesive-energy-relation-cubic-crystal\" \"instance-id\" 1}]'\n\n    >>> kim_property_destroy(obj, 1)\n    '[]'\n\n    >>> obj = '[{\"property-id\" \"tag:staff@noreply.openkim.org,2014-04-15:property/cohesive-energy-relation-cubic-crystal\" \"instance-id\" 1} {\"property-id\" \"tag:brunnels@noreply.openkim.org,2016-05-11:property/atomic-mass\" \"instance-id\" 2}]'\n\n    >>> kim_property_destroy(obj, 2)\n    '[{\"property-id\" \"tag:staff@noreply.openkim.org,2014-04-15:property/cohesive-energy-relation-cubic-crystal\" \"instance-id\" 1}]'\n````\n\n## Modify\n\nModifying (setting) property instances::\n\n````py\n    >>> str = kim_property_create(1, 'cohesive-energy-relation-cubic-crystal')\n    >>> str = kim_property_modify(str, 1,\n                \"key\", \"short-name\",\n                \"source-value\", \"1\", \"fcc\",\n                \"key\", \"species\",\n                \"source-value\", \"1:4\", \"Al\", \"Al\", \"Al\", \"Al\",\n                \"key\", \"a\",\n                \"source-value\", \"1:5\", \"3.9149\", \"4.0000\", \"4.032\", \"4.0817\", \"4.1602\",\n                \"source-unit\", \"angstrom\", \"digits\", \"5\")\n    >>> obj = kim_edn.loads(str)\n    >>> print(kim_edn.dumps(obj, indent=4))\n    [\n        {\n            \"property-id\" \"tag:staff@noreply.openkim.org,2014-04-15:property/cohesive-energy-relation-cubic-crystal\"\n            \"instance-id\" 1\n            \"short-name\" {\n                \"source-value\" [\n                    \"fcc\"\n                ]\n            }\n            \"species\" {\n                \"source-value\" [\n                    \"Al\"\n                    \"Al\"\n                    \"Al\"\n                    \"Al\"\n                ]\n            }\n            \"a\" {\n                \"source-value\" [\n                    3.9149\n                    4.0\n                    4.032\n                    4.0817\n                    4.1602\n                ]\n                \"source-unit\" \"angstrom\"\n                \"digits\" 5\n            }\n        }\n    ]\n````\n\nFor cases where there are multiple keys or a key receives an array of values\ncomputed one at a time, the `kim_property_modify` can be called multiple\ntimes and append values to a given key.\n\n````py\n    >>> str = kim_property_create(1, 'cohesive-energy-relation-cubic-crystal')\n    >>> str = kim_property_modify(str, 1,\n                \"key\", \"short-name\",\n                \"source-value\", \"1\", \"fcc\",\n                \"key\", \"species\",\n                \"source-value\", \"1:4\", \"Al\", \"Al\", \"Al\", \"Al\",\n                \"key\", \"a\",\n                \"source-value\", \"1:5\", \"3.9149\", \"4.0000\", \"4.032\", \"4.0817\", \"4.1602\",\n                \"source-unit\", \"angstrom\", \"digits\", \"5\")\n    >>> obj = kim_edn.loads(str)\n    >>> print(kim_edn.dumps(obj, indent=4))\n    [\n        {\n            \"property-id\" \"tag:staff@noreply.openkim.org,2014-04-15:property/cohesive-energy-relation-cubic-crystal\"\n            \"instance-id\" 1\n            \"short-name\" {\n                \"source-value\" [\n                    \"fcc\"\n                ]\n            }\n            \"species\" {\n                \"source-value\" [\n                    \"Al\"\n                    \"Al\"\n                    \"Al\"\n                    \"Al\"\n                ]\n            }\n            \"a\" {\n                \"source-value\" [\n                    3.9149\n                    4.0\n                    4.032\n                    4.0817\n                    4.1602\n                ]\n                \"source-unit\" \"angstrom\"\n                \"digits\" 5\n            }\n        }\n    ]\n    >>> str = kim_property_modify(str, 1,\n                \"key\", \"basis-atom-coordinates\",\n                \"source-value\", \"2\", \"1:2\", \"0.5\", \"0.5\")\n\n    >>> obj = kim_edn.loads(str)\n    >>> print(kim_edn.dumps(obj, indent=4))\n    [\n        {\n            \"property-id\" \"tag:staff@noreply.openkim.org,2014-04-15:property/cohesive-energy-relation-cubic-crystal\"\n            \"instance-id\" 1\n            \"short-name\" {\n                \"source-value\" [\n                    \"fcc\"\n                ]\n            }\n            \"species\" {\n                \"source-value\" [\n                    \"Al\"\n                    \"Al\"\n                    \"Al\"\n                    \"Al\"\n                ]\n            }\n            \"a\" {\n                \"source-value\" [\n                    3.9149\n                    4.0\n                    4.032\n                    4.0817\n                    4.1602\n                ]\n                \"source-unit\" \"angstrom\"\n                \"digits\" 5\n            }\n            \"basis-atom-coordinates\" {\n                \"source-value\" [\n                    [\n                        0.0\n                        0.0\n                        0.0\n                    ]\n                    [\n                        0.5\n                        0.5\n                        0.0\n                    ]\n                ]\n            }\n        }\n    ]\n    >>> str = kim_property_modify(str, 1,\n                \"key\", \"basis-atom-coordinates\",\n                \"source-value\", \"3\", \"1:3\", \"0.5\", \"0.0\", \"0.5\",\n                \"key\", \"basis-atom-coordinates\",\n                \"source-value\", \"4\", \"2:3\", \"0.5\", \"0.5\")\n\n    >>> obj = kim_edn.loads(str)\n    >>> print(kim_edn.dumps(obj, indent=4))\n    [\n        {\n            \"property-id\" \"tag:staff@noreply.openkim.org,2014-04-15:property/cohesive-energy-relation-cubic-crystal\"\n            \"instance-id\" 1\n            \"short-name\" {\n                \"source-value\" [\n                    \"fcc\"\n                ]\n            }\n            \"species\" {\n                \"source-value\" [\n                    \"Al\"\n                    \"Al\"\n                    \"Al\"\n                    \"Al\"\n                ]\n            }\n            \"a\" {\n                \"source-value\" [\n                    3.9149\n                    4.0\n                    4.032\n                    4.0817\n                    4.1602\n                ]\n                \"source-unit\" \"angstrom\"\n                \"digits\" 5\n            }\n            \"basis-atom-coordinates\" {\n                \"source-value\" [\n                    [\n                        0.0\n                        0.0\n                        0.0\n                    ]\n                    [\n                        0.5\n                        0.5\n                        0.0\n                    ]\n                    [\n                        0.5\n                        0.0\n                        0.5\n                    ]\n                    [\n                        0.0\n                        0.5\n                        0.5\n                    ]\n                ]\n            }\n        }\n    ]\n\n    >>> str = kim_property_modify(str, 1,\n                \"key\", \"cohesive-potential-energy\",\n                \"source-value\", \"1:5\", \"3.324\", \"3.3576\", \"3.3600\", \"3.3550\", \"3.3260\",\n                \"source-std-uncert-value\", \"1:5\", \"0.002\", \"0.0001\", \"0.00001\", \"0.0012\", \"0.00015\",\n                \"source-unit\", \"eV\",\n                \"digits\", \"5\")\n\n    >>> obj = kim_edn.loads(str)\n    >>> print(kim_edn.dumps(obj, indent=4))\n    [\n        {\n            \"property-id\" \"tag:staff@noreply.openkim.org,2014-04-15:property/cohesive-energy-relation-cubic-crystal\"\n            \"instance-id\" 1\n            \"short-name\" {\n                \"source-value\" [\n                    \"fcc\"\n                ]\n            }\n            \"species\" {\n                \"source-value\" [\n                    \"Al\"\n                    \"Al\"\n                    \"Al\"\n                    \"Al\"\n                ]\n            }\n            \"a\" {\n                \"source-value\" [\n                    3.9149\n                    4.0\n                    4.032\n                    4.0817\n                    4.1602\n                ]\n                \"source-unit\" \"angstrom\"\n                \"digits\" 5\n            }\n            \"basis-atom-coordinates\" {\n                \"source-value\" [\n                    [\n                        0.0\n                        0.0\n                        0.0\n                    ]\n                    [\n                        0.5\n                        0.5\n                        0.0\n                    ]\n                    [\n                        0.5\n                        0.0\n                        0.5\n                    ]\n                    [\n                        0.0\n                        0.5\n                        0.5\n                    ]\n                ]\n            }\n            \"cohesive-potential-energy\" {\n                \"source-value\" [\n                    3.324\n                    3.3576\n                    3.36\n                    3.355\n                    3.326\n                ]\n                \"source-std-uncert-value\" [\n                    0.002\n                    0.0001\n                    1e-05\n                    0.0012\n                    0.00015\n                ]\n                \"source-unit\" \"eV\"\n                \"digits\" 5\n            }\n        }\n    ]\n````\n\n**Note:**\n\nVariables which are introduced with a specified extent of either an empty\nvector `[]` or `[1]`, are scalars.\n\nCalling a `kim_property_modify` will update the scalars and vector values\nwhich are already set.\n\nFor example:\n\n````py\n    >>> str = kim_property_create(1, 'cohesive-energy-relation-cubic-crystal')\n    >>> str = kim_property_modify(str, 1,\n                \"key\", \"space-group\",\n                \"source-value\", \"Immm\")\n\n    >>> obj = kim_edn.loads(str)\n    >>> print(kim_edn.dumps(obj, indent=4))\n    [\n        {\n            \"property-id\" \"tag:staff@noreply.openkim.org,2014-04-15:property/cohesive-energy-relation-cubic-crystal\"\n            \"instance-id\" 1\n            \"space-group\" {\n                \"source-value\" \"Immm\"\n            }\n        }\n    ]\n````\n\nCalling the `kim_property_modify` again set the scalar variable with a new value.\n\n````py\n    >>> str = kim_property_modify(str, 1,\n                \"key\", \"space-group\",\n                \"source-value\", \"P6_3/mmc\")\n\n    >>> obj = kim_edn.loads(str)\n    >>> print(kim_edn.dumps(obj, indent=4))\n    [\n        {\n            \"property-id\" \"tag:staff@noreply.openkim.org,2014-04-15:property/cohesive-energy-relation-cubic-crystal\"\n            \"instance-id\" 1\n            \"space-group\" {\n                \"source-value\" \"P6_3/mmc\"\n            }\n        }\n    ]\n\n````\n\n## Remove\n\nRemoving (a) key(s) from a property instance::\n\n````py\n    >>> str = kim_property_create(1, 'cohesive-energy-relation-cubic-crystal')\n    >>> str = kim_property_modify(str, 1,\n                \"key\", \"short-name\",\n                \"source-value\", \"1\", \"fcc\",\n                \"key\", \"species\",\n                \"source-value\", \"1:4\", \"Al\", \"Al\", \"Al\", \"Al\",\n                \"key\", \"a\",\n                \"source-value\", \"1:5\", \"3.9149\", \"4.0000\", \"4.032\", \"4.0817\", \"4.1602\",\n                \"source-unit\", \"angstrom\", \"digits\", \"5\",\n                \"key\", \"basis-atom-coordinates\",\n                \"source-value\", \"2\", \"1:2\", \"0.5\", \"0.5\",\n                \"key\", \"basis-atom-coordinates\",\n                \"source-value\", \"3\", \"1:3\", \"0.5\", \"0.0\", \"0.5\",\n                \"key\", \"basis-atom-coordinates\",\n                \"source-value\", \"4\", \"2:3\", \"0.5\", \"0.5\",\n                \"key\", \"cohesive-potential-energy\",\n                \"source-value\", \"1:5\", \"3.324\", \"3.3576\", \"3.3600\", \"3.3550\", \"3.3260\",\n                \"source-std-uncert-value\", \"1:5\", \"0.002\", \"0.0001\", \"0.00001\", \"0.0012\", \"0.00015\",\n                \"source-unit\", \"eV\",\n                \"digits\", \"5\")\n\n    >>> str = kim_property_remove(str, 1, \"key\", \"a\", \"source-unit\")\n    >>> str = kim_property_remove(str, 1, \"key\", \"cohesive-potential-energy\", \"key\", \"basis-atom-coordinates\")\n\n    >>> obj = kim_edn.loads(str)\n    >>> print(kim_edn.dumps(obj, indent=4))\n    [\n        {\n            \"property-id\" \"tag:staff@noreply.openkim.org,2014-04-15:property/cohesive-energy-relation-cubic-crystal\"\n            \"instance-id\" 1\n            \"short-name\" {\n                \"source-value\" [\n                    \"fcc\"\n                ]\n            }\n            \"species\" {\n                \"source-value\" [\n                    \"Al\"\n                    \"Al\"\n                    \"Al\"\n                    \"Al\"\n                ]\n            }\n            \"a\" {\n                \"source-value\" [\n                    3.9149\n                    4.0\n                    4.032\n                    4.0817\n                    4.1602\n                ]\n                \"digits\" 5\n            }\n        }\n    ]\n````\n\n## Dump\n\nFirst, it validates the generated instances against the property definition.\nThen serializes it to a [KIM-EDN](https://github.com/openkim/kim-edn#kim-edn)\nformatted stream and dumps it to a `fp` (a `.write()`-supporting file-like\nobject or a name string to open a file).\n\nThe validation makes sure all keys/arguments are legal and all required keys\nare provided.\n\n````py\n    >>> str = kim_property_create(1, 'cohesive-energy-relation-cubic-crystal')\n    >>> str = kim_property_modify(str, 1,\n                \"key\", \"short-name\",\n                \"source-value\", \"1\", \"fcc\",\n                \"key\", \"species\",\n                \"source-value\", \"1:4\", \"Al\", \"Al\", \"Al\", \"Al\",\n                \"key\", \"a\",\n                \"source-value\", \"1:5\", \"3.9149\", \"4.0000\", \"4.032\", \"4.0817\", \"4.1602\",\n                \"source-unit\", \"angstrom\", \"digits\", \"5\",\n                \"key\", \"basis-atom-coordinates\",\n                \"source-value\", \"2\", \"1:2\", \"0.5\", \"0.5\",\n                \"key\", \"basis-atom-coordinates\",\n                \"source-value\", \"3\", \"1:3\", \"0.5\", \"0.0\", \"0.5\",\n                \"key\", \"basis-atom-coordinates\",\n                \"source-value\", \"4\", \"2:3\", \"0.5\", \"0.5\",\n                \"key\", \"cohesive-potential-energy\",\n                \"source-value\", \"1:5\", \"3.324\", \"3.3576\", \"3.3600\", \"3.3550\", \"3.3260\",\n                \"source-std-uncert-value\", \"1:5\", \"0.002\", \"0.0001\", \"0.00001\", \"0.0012\", \"0.00015\",\n                \"source-unit\", \"eV\",\n                \"digits\", \"5\")\n    >>> kim_property_dump(str, \"results.edn\")\n````\n\nor\n\n````py\n    >>> str = kim_property_create(1, 'cohesive-energy-relation-cubic-crystal')\n    >>> str = kim_property_modify(str, 1,\n                \"key\", \"short-name\",\n                \"source-value\", \"1\", \"fcc\",\n                \"key\", \"species\",\n                \"source-value\", \"1:4\", \"Al\", \"Al\", \"Al\", \"Al\",\n                \"key\", \"a\",\n                \"source-value\", \"1:5\", \"3.9149\", \"4.0000\", \"4.032\", \"4.0817\", \"4.1602\",\n                \"source-unit\", \"angstrom\", \"digits\", \"5\",\n                \"key\", \"basis-atom-coordinates\",\n                \"source-value\", \"2\", \"1:2\", \"0.5\", \"0.5\",\n                \"key\", \"basis-atom-coordinates\",\n                \"source-value\", \"3\", \"1:3\", \"0.5\", \"0.0\", \"0.5\",\n                \"key\", \"basis-atom-coordinates\",\n                \"source-value\", \"4\", \"2:3\", \"0.5\", \"0.5\",\n                \"key\", \"cohesive-potential-energy\",\n                \"source-value\", \"1:5\", \"3.324\", \"3.3576\", \"3.3600\", \"3.3550\", \"3.3260\",\n                \"source-std-uncert-value\", \"1:5\", \"0.002\", \"0.0001\", \"0.00001\", \"0.0012\", \"0.00015\",\n                \"source-unit\", \"eV\",\n                \"digits\", \"5\")\n    >>> obj = kim_edn.loads(str)\n    >>> kim_property_dump(obj, \"results.edn\")\n````\n\nor\n\n````py\n    >>> str = kim_property_create(1, 'cohesive-energy-relation-cubic-crystal')\n    >>> str = kim_property_modify(str, 1,\n                \"key\", \"short-name\",\n                \"source-value\", \"1\", \"fcc\",\n                \"key\", \"species\",\n                \"source-value\", \"1:4\", \"Al\", \"Al\", \"Al\", \"Al\",\n                \"key\", \"a\",\n                \"source-value\", \"1:5\", \"3.9149\", \"4.0000\", \"4.032\", \"4.0817\", \"4.1602\",\n                \"source-unit\", \"angstrom\", \"digits\", \"5\",\n                \"key\", \"basis-atom-coordinates\",\n                \"source-value\", \"2\", \"1:2\", \"0.5\", \"0.5\",\n                \"key\", \"basis-atom-coordinates\",\n                \"source-value\", \"3\", \"1:3\", \"0.5\", \"0.0\", \"0.5\",\n                \"key\", \"basis-atom-coordinates\",\n                \"source-value\", \"4\", \"2:3\", \"0.5\", \"0.5\",\n                \"key\", \"cohesive-potential-energy\",\n                \"source-value\", \"1:5\", \"3.324\", \"3.3576\", \"3.3600\", \"3.3550\", \"3.3260\",\n                \"source-std-uncert-value\", \"1:5\", \"0.002\", \"0.0001\", \"0.00001\", \"0.0012\", \"0.00015\",\n                \"source-unit\", \"eV\",\n                \"digits\", \"5\")\n    >>> with open(\"results.edn\", 'w') as fp:\n            kim_property_dump(str, fp)\n````\n\n## Installing kim-property\n\n### Requirements\n\nYou need Python 3.6 or later to run `kim-property`. You can have multiple\nPython versions (2.x and 3.x) installed on the same system without problems.\n\nTo install Python 3 for different Linux flavors, macOS and Windows, packages\nare available at\\\n[https://www.python.org/getit/](https://www.python.org/getit/)\n\n### Using pip\n\n**pip** is the most popular tool for installing Python packages, and the one\nincluded with modern versions of Python.\n\n`kim-property` can be installed with `pip`:\n\n```sh\npip install kim-property\n```\n\n**Note:**\n\nDepending on your Python installation, you may need to use `pip3` instead of\n`pip`.\n\n```sh\npip3 install kim-property\n```\n\nDepending on your configuration, you may have to run `pip` like this:\n\n```sh\npython3 -m pip install kim-property\n```\n\n### Using pip (GIT Support)\n\n`pip` currently supports cloning over `git`\n\n```sh\npip install git+https://github.com/openkim/kim-property.git\n```\n\nFor more information and examples, see the [pip install](https://pip.pypa.io/en/stable/reference/pip_install/#id18) reference.\n\n### Using conda\n\n**conda** is the package management tool for Anaconda Python installations.\n\nInstalling `kim-property` from the `conda-forge` channel can be achieved by\nadding `conda-forge` to your channels with:\n\n```sh\nconda config --add channels conda-forge\n```\n\nOnce the `conda-forge` channel has been enabled, `kim-property` can be\ninstalled with:\n\n```sh\nconda install kim-property\n```\n\nIt is possible to list all of the versions of `kim-property` available on\nyour platform with:\n\n```sh\nconda search kim-property --channel conda-forge\n```\n\n## Copyright\n\nCopyright (c) 2020, Regents of the University of Minnesota.\\\nAll Rights Reserved\n\n## Contributing\n\nContributors:\\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Yaser Afshar\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/openkim/kim-property", "keywords": "kim-property", "license": "CDDL-1.0", "maintainer": "", "maintainer_email": "", "name": "kim-property", "package_url": "https://pypi.org/project/kim-property/", "platform": "", "project_url": "https://pypi.org/project/kim-property/", "project_urls": {"Homepage": "https://github.com/openkim/kim-property"}, "release_url": "https://pypi.org/project/kim-property/2.1.0/", "requires_dist": ["kim-edn"], "requires_python": ">=3.6", "summary": "kim-property - KIM-PROPERTY utility module.", "version": "2.1.0"}, "last_serial": 6740517, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "a4bc1b3d788f04538d0e68608cf2effe", "sha256": "9f9a78e40e4cb1dff2b87120a4e56bab84c55603af2d2c8176d6ccb5499020a8"}, "downloads": -1, "filename": "kim_property-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a4bc1b3d788f04538d0e68608cf2effe", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 187974, "upload_time": "2020-02-16T03:52:09", "upload_time_iso_8601": "2020-02-16T03:52:09.895910Z", "url": "https://files.pythonhosted.org/packages/30/93/d3d2b21bfaf06ff899477dc84b3a93e5d8cfc13f43dd1e2eda9fc5f3d1e9/kim_property-1.0.1-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "a5cfb578e1bcdc695701732c67f02590", "sha256": "5dfc7ecf3e61db914266950d7e26fb55518d09639d06266614a4f8e431fbc031"}, "downloads": -1, "filename": "kim_property-1.0.1.tar.gz", "has_sig": false, "md5_digest": "a5cfb578e1bcdc695701732c67f02590", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 81261, "upload_time": "2020-02-16T03:52:12", "upload_time_iso_8601": "2020-02-16T03:52:12.050197Z", "url": "https://files.pythonhosted.org/packages/8f/67/4cf899e680c4269dac3e879527269aa818e9367ccb1f105114255981b3f8/kim_property-1.0.1.tar.gz"}], "2.0.0": [{"comment_text": "", "digests": {"md5": "1cf10211e0144e40c1aecfd6552fbefb", "sha256": "67ca872665696b43c652e0c53732eb0a06e6f3926209b73671ed40eb7ea966c6"}, "downloads": -1, "filename": "kim_property-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "1cf10211e0144e40c1aecfd6552fbefb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 88755, "upload_time": "2020-03-02T21:55:44", "upload_time_iso_8601": "2020-03-02T21:55:44.939079Z", "url": "https://files.pythonhosted.org/packages/5a/4e/8bf201e09e9a50419879ab9769423c9c2631e80d9d43da6fefcb1d10370f/kim_property-2.0.0-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "59e9bfba7fbc2435e679086e322758c4", "sha256": "91ab427d2df47e7aa95d795328e3cbc668964fa5bf1e61634e5284495230211b"}, "downloads": -1, "filename": "kim-property-2.0.0.tar.gz", "has_sig": false, "md5_digest": "59e9bfba7fbc2435e679086e322758c4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 91250, "upload_time": "2020-03-02T21:55:46", "upload_time_iso_8601": "2020-03-02T21:55:46.593666Z", "url": "https://files.pythonhosted.org/packages/74/df/4e5f96f23a4a348900c0adb86773fefa81fbc82e03b515f9c602cc19d48c/kim-property-2.0.0.tar.gz"}], "2.1.0": [{"comment_text": "", "digests": {"md5": "3458828ac6b826c6276773833152af77", "sha256": "d9d6553042c9698ff950d72083b9347c10e808799a6f9c3df59ab634a3ef6e75"}, "downloads": -1, "filename": "kim_property-2.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "3458828ac6b826c6276773833152af77", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 88690, "upload_time": "2020-03-03T13:04:19", "upload_time_iso_8601": "2020-03-03T13:04:19.997970Z", "url": "https://files.pythonhosted.org/packages/28/33/261bf3053e1c1b35dc48638336b230377e5548ceb7588eb4f9d23de2abc3/kim_property-2.1.0-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "b52e0596836c79e1fd79eec71e0d73f9", "sha256": "413198f9c1f8014b367eb6339cec10de7b874afa990b439c519eefa360496043"}, "downloads": -1, "filename": "kim-property-2.1.0.tar.gz", "has_sig": false, "md5_digest": "b52e0596836c79e1fd79eec71e0d73f9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 91185, "upload_time": "2020-03-03T13:04:21", "upload_time_iso_8601": "2020-03-03T13:04:21.466789Z", "url": "https://files.pythonhosted.org/packages/8f/66/965bfc943c4e1cd76a50c33f74b3f4a6aced49b3ead017426b0ea40bfa19/kim-property-2.1.0.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "3458828ac6b826c6276773833152af77", "sha256": "d9d6553042c9698ff950d72083b9347c10e808799a6f9c3df59ab634a3ef6e75"}, "downloads": -1, "filename": "kim_property-2.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "3458828ac6b826c6276773833152af77", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 88690, "upload_time": "2020-03-03T13:04:19", "upload_time_iso_8601": "2020-03-03T13:04:19.997970Z", "url": "https://files.pythonhosted.org/packages/28/33/261bf3053e1c1b35dc48638336b230377e5548ceb7588eb4f9d23de2abc3/kim_property-2.1.0-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "b52e0596836c79e1fd79eec71e0d73f9", "sha256": "413198f9c1f8014b367eb6339cec10de7b874afa990b439c519eefa360496043"}, "downloads": -1, "filename": "kim-property-2.1.0.tar.gz", "has_sig": false, "md5_digest": "b52e0596836c79e1fd79eec71e0d73f9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 91185, "upload_time": "2020-03-03T13:04:21", "upload_time_iso_8601": "2020-03-03T13:04:21.466789Z", "url": "https://files.pythonhosted.org/packages/8f/66/965bfc943c4e1cd76a50c33f74b3f4a6aced49b3ead017426b0ea40bfa19/kim-property-2.1.0.tar.gz"}]}