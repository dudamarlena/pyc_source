{"info": {"author": "The scikit-optimize contributors", "author_email": "", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Operating System :: MacOS", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Operating System :: Unix", "Programming Language :: Python", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Scientific/Engineering", "Topic :: Software Development"], "description": "\n|Logo|\n\n|pypi| |conda| |Travis Status| |CircleCI Status| |binder| |gitter| |Zenodo DOI|\n\nScikit-Optimize\n===============\n\nScikit-Optimize, or ``skopt``, is a simple and efficient library to\nminimize (very) expensive and noisy black-box functions. It implements\nseveral methods for sequential model-based optimization. ``skopt`` aims\nto be accessible and easy to use in many contexts.\n\nThe library is built on top of NumPy, SciPy and Scikit-Learn.\n\nWe do not perform gradient-based optimization. For gradient-based\noptimization algorithms look at\n``scipy.optimize``\n`here <http://docs.scipy.org/doc/scipy/reference/optimize.html>`_.\n\n.. figure:: https://github.com/scikit-optimize/scikit-optimize/blob/master/media/bo-objective.png\n   :alt: Approximated objective\n\nApproximated objective function after 50 iterations of ``gp_minimize``.\nPlot made using ``skopt.plots.plot_objective``.\n\nImportant links\n---------------\n\n-  Static documentation - `Static\n   documentation <https://scikit-optimize.github.io/>`__\n-  Example notebooks - can be found in the\n   `examples directory <https://github.com/scikit-optimize/scikit-optimize/tree/master/examples>`_.\n-  Issue tracker -\n   https://github.com/scikit-optimize/scikit-optimize/issues\n-  Releases - https://pypi.python.org/pypi/scikit-optimize\n\nInstall\n-------\n\nThe latest released version of scikit-optimize is v0.7.2, which you can install\nwith:\n::\n\n    pip install scikit-optimize\n\nThis installs an essential version of scikit-optimize. To install scikit-optimize\nwith plotting functionality, you can instead do:\n::\n\n    pip install 'scikit-optimize[plots]'\n\nThis will install matplotlib along with scikit-optimize.\n\nIn addition there is a `conda-forge <https://conda-forge.org/>`_ package\nof scikit-optimize:\n::\n\n    conda install -c conda-forge scikit-optimize\n\nUsing conda-forge is probably the easiest way to install scikit-optimize on\nWindows.\n\n\nGetting started\n---------------\n\nFind the minimum of the noisy function ``f(x)`` over the range\n``-2 < x < 2`` with ``skopt``:\n\n.. code:: python\n\n    import numpy as np\n    from skopt import gp_minimize\n\n    def f(x):\n        return (np.sin(5 * x[0]) * (1 - np.tanh(x[0] ** 2)) +\n                np.random.randn() * 0.1)\n\n    res = gp_minimize(f, [(-2.0, 2.0)])\n\n\nFor more control over the optimization loop you can use the ``skopt.Optimizer``\nclass:\n\n.. code:: python\n\n    from skopt import Optimizer\n\n    opt = Optimizer([(-2.0, 2.0)])\n\n    for i in range(20):\n        suggested = opt.ask()\n        y = f(suggested)\n        opt.tell(suggested, y)\n        print('iteration:', i, suggested, y)\n\n\nRead our `introduction to bayesian\noptimization <https://scikit-optimize.github.io/notebooks/bayesian-optimization.html>`__\nand the other\n`examples <https://github.com/scikit-optimize/scikit-optimize/tree/master/examples>`__.\n\n\nDevelopment\n-----------\n\nThe library is still experimental and under heavy development. Checkout\nthe `next\nmilestone <https://github.com/scikit-optimize/scikit-optimize/milestone/6>`__\nfor the plans for the next release or look at some `easy\nissues <https://github.com/scikit-optimize/scikit-optimize/issues?q=is%3Aissue+is%3Aopen+label%3AEasy>`__\nto get started contributing.\n\nThe development version can be installed through:\n\n::\n\n    git clone https://github.com/scikit-optimize/scikit-optimize.git\n    cd scikit-optimize\n    pip install -e.\n\nRun all tests by executing ``pytest`` in the top level directory.\n\nTo only run the subset of tests with short run time, you can use ``pytest -m 'fast_test'`` (``pytest -m 'slow_test'`` is also possible). To exclude all slow running tests try ``pytest -m 'not slow_test'``.\n\nThis is implemented using pytest `attributes <https://docs.pytest.org/en/latest/mark.html>`__. If a tests runs longer than 1 second, it is marked as slow, else as fast.\n\nAll contributors are welcome!\n\n\nMaking a Release\n~~~~~~~~~~~~~~~~\n\nThe release procedure is almost completely automated. By tagging a new release\ntravis will build all required packages and push them to PyPI. To make a release\ncreate a new issue and work through the following checklist:\n\n* update the version tag in ``__init__.py``\n* update the version tag mentioned in the README\n* check if the dependencies in ``setup.py`` are valid or need unpinning\n* check that the ``CHANGELOG.md`` is up to date\n* did the last build of master succeed?\n* create a `new release <https://github.com/scikit-optimize/scikit-optimize/releases>`__\n* ping `conda-forge <https://github.com/conda-forge/scikit-optimize-feedstock>`__\n\nBefore making a release we usually create a release candidate. If the next\nrelease is v0.X then the release candidate should be tagged v0.Xrc1 in\n``__init__.py``. Mark a release candidate as a \"pre-release\"\non GitHub when you tag it.\n\n\nCommercial support\n------------------\n\nFeel free to `get in touch <mailto:tim@wildtreetech.com>`_ if you need commercial\nsupport or would like to sponsor development. Resources go towards paying\nfor additional work by seasoned engineers and researchers.\n\n\nMade possible by\n----------------\n\nThe scikit-optimize project was made possible with the support of\n\n.. image:: https://avatars1.githubusercontent.com/u/18165687?v=4&s=128\n   :alt: Wild Tree Tech\n   :target: http://wildtreetech.com\n\n.. image:: https://i.imgur.com/lgxboT5.jpg\n    :alt: NYU Center for Data Science\n    :target: https://cds.nyu.edu/\n\n.. image:: https://i.imgur.com/V1VSIvj.jpg\n    :alt: NSF\n    :target: https://www.nsf.gov\n\n.. image:: https://i.imgur.com/3enQ6S8.jpg\n    :alt: Northrop Grumman\n    :target: http://www.northropgrumman.com/Pages/default.aspx\n\nIf your employer allows you to work on scikit-optimize during the day and would like\nrecognition, feel free to add them to the \"Made possible by\" list.\n\n\n.. |pypi| image:: https://img.shields.io/pypi/v/scikit-optimize.svg\n   :target: https://pypi.python.org/pypi/scikit-optimize\n.. |conda| image:: https://anaconda.org/conda-forge/scikit-optimize/badges/version.svg\n   :target: https://anaconda.org/conda-forge/scikit-optimize\n.. |Travis Status| image:: https://travis-ci.org/scikit-optimize/scikit-optimize.svg?branch=master\n   :target: https://travis-ci.org/scikit-optimize/scikit-optimize\n.. |CircleCI Status| image:: https://circleci.com/gh/scikit-optimize/scikit-optimize/tree/master.svg?style=shield&circle-token=:circle-token\n   :target: https://circleci.com/gh/scikit-optimize/scikit-optimize\n.. |Logo| image:: https://avatars2.githubusercontent.com/u/18578550?v=4&s=80\n.. |binder| image:: https://mybinder.org/badge.svg\n   :target: https://mybinder.org/v2/gh/scikit-optimize/scikit-optimize/master?filepath=examples\n.. |gitter| image:: https://badges.gitter.im/scikit-optimize/scikit-optimize.svg\n   :target: https://gitter.im/scikit-optimize/Lobby\n.. |Zenodo DOI| image:: https://zenodo.org/badge/54340642.svg\n   :target: https://zenodo.org/badge/latestdoi/54340642\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://scikit-optimize.github.io/", "keywords": "", "license": "BSD 3-clause", "maintainer": "", "maintainer_email": "", "name": "dh-scikit-optimize", "package_url": "https://pypi.org/project/dh-scikit-optimize/", "platform": "", "project_url": "https://pypi.org/project/dh-scikit-optimize/", "project_urls": {"Homepage": "https://scikit-optimize.github.io/"}, "release_url": "https://pypi.org/project/dh-scikit-optimize/0.8.dev0/", "requires_dist": ["joblib (>=0.11)", "pyaml (>=16.9)", "numpy (>=1.12.0)", "scipy (>=0.18.0)", "scikit-learn (>=0.19.1)", "matplotlib (>=2.0.0) ; extra == 'plots'"], "requires_python": "", "summary": "A Modified version of scikit-optimize a Sequential model-based optimization toolbox for DeepHyper.", "version": "0.8.dev0"}, "last_serial": 7031119, "releases": {"0.8.dev0": [{"comment_text": "", "digests": {"md5": "281f77909558071a93cd3d1fada67bc7", "sha256": "2f6b4482a421ce12511b99018a131e9a19de40067e830749a7d7f40143a4d522"}, "downloads": -1, "filename": "dh_scikit_optimize-0.8.dev0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "281f77909558071a93cd3d1fada67bc7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 96672, "upload_time": "2020-04-16T10:32:01", "upload_time_iso_8601": "2020-04-16T10:32:01.351524Z", "url": "https://files.pythonhosted.org/packages/c7/5e/799858523dd6299fb2063d0c6ed0d8a2157362b3f17d8808509c7c8564f4/dh_scikit_optimize-0.8.dev0-py2.py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "93ed1bb7becc1ed67e0ea84e5d387130", "sha256": "a50b551528025ae5cde07b86d866da757bfa7c068d9a1c12f876443434dce651"}, "downloads": -1, "filename": "dh-scikit-optimize-0.8.dev0.tar.gz", "has_sig": false, "md5_digest": "93ed1bb7becc1ed67e0ea84e5d387130", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 269822, "upload_time": "2020-04-16T10:32:04", "upload_time_iso_8601": "2020-04-16T10:32:04.848960Z", "url": "https://files.pythonhosted.org/packages/3e/42/0c02f4ee143a531fd83976a900b38340fdae0fa8c7d153361244c2fc622c/dh-scikit-optimize-0.8.dev0.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "281f77909558071a93cd3d1fada67bc7", "sha256": "2f6b4482a421ce12511b99018a131e9a19de40067e830749a7d7f40143a4d522"}, "downloads": -1, "filename": "dh_scikit_optimize-0.8.dev0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "281f77909558071a93cd3d1fada67bc7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 96672, "upload_time": "2020-04-16T10:32:01", "upload_time_iso_8601": "2020-04-16T10:32:01.351524Z", "url": "https://files.pythonhosted.org/packages/c7/5e/799858523dd6299fb2063d0c6ed0d8a2157362b3f17d8808509c7c8564f4/dh_scikit_optimize-0.8.dev0-py2.py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "93ed1bb7becc1ed67e0ea84e5d387130", "sha256": "a50b551528025ae5cde07b86d866da757bfa7c068d9a1c12f876443434dce651"}, "downloads": -1, "filename": "dh-scikit-optimize-0.8.dev0.tar.gz", "has_sig": false, "md5_digest": "93ed1bb7becc1ed67e0ea84e5d387130", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 269822, "upload_time": "2020-04-16T10:32:04", "upload_time_iso_8601": "2020-04-16T10:32:04.848960Z", "url": "https://files.pythonhosted.org/packages/3e/42/0c02f4ee143a531fd83976a900b38340fdae0fa8c7d153361244c2fc622c/dh-scikit-optimize-0.8.dev0.tar.gz"}]}