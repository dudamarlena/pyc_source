{"info": {"author": "Tomoki Hayashi", "author_email": "hayashi.tomoki@g.sp.m.is.nagoya-u.ac.jp", "bugtrack_url": null, "classifiers": ["Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# Parallel WaveGAN (+ MelGAN) implementation with Pytorch\n\n![](https://github.com/kan-bayashi/ParallelWaveGAN/workflows/CI/badge.svg) [![](https://img.shields.io/pypi/v/parallel-wavegan)](https://pypi.org/project/parallel-wavegan/) ![](https://img.shields.io/pypi/pyversions/parallel-wavegan) ![](https://img.shields.io/pypi/l/parallel-wavegan) [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/espnet/notebook/blob/master/tts_realtime_demo.ipynb)\n\nThis repository provides **UNOFFICIAL** [Parallel WaveGAN](https://arxiv.org/abs/1910.11480) and [MelGAN](https://arxiv.org/abs/1910.06711) implementations with Pytorch.  \nYou can combine these state-of-the-art non-autoregressive models to build your own great vocoder!\n\nPlease check our samples in [our demo HP](https://kan-bayashi.github.io/ParallelWaveGAN).\n\n![](https://user-images.githubusercontent.com/22779813/68081503-4b8fcf00-fe52-11e9-8791-e02851220355.png)\n\n> Source of the figure: https://arxiv.org/pdf/1910.11480.pdf\n\nThe goal of this repository is to provide the real-time neural vocoder which is compatible with [ESPnet-TTS](https://github.com/espnet/espnet).  \n\nYou can try the realtime end-to-end text-to-speech demonstraion in Google Colab!\n\n[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/espnet/notebook/blob/master/tts_realtime_demo.ipynb)\n\n## What's new\n\n- 2020/02/22 **(New!)** [MelGAN G + MelGAN D + STFT-loss samples](#Results) are available!\n- 2020/02/12 Support [MelGAN](https://arxiv.org/abs/1910.06711)'s discriminator!\n- 2020/02/08 Support [MelGAN](https://arxiv.org/abs/1910.06711)'s generator!\n\n## Requirements\n\nThis repository is tested on Ubuntu 16.04 with a GPU Titan V.\n\n- Python 3.6+\n- Cuda 10.0\n- CuDNN 7+\n- NCCL 2+ (for distributed multi-gpu training)\n- libsndfile (you can install via `sudo apt install libsndfile-dev` in ubuntu)\n- jq (you can install via `sudo apt install jq` in ubuntu)\n\nDifferent cuda version should be working but not explicitly tested.  \nAll of the codes are tested on Pytorch 1.0.1, 1.1, 1.2, 1.3.1 and 1.4.\n\n## Setup\n\nYou can select the installation method from two alternatives.\n\n### A. Use pip\n\n```bash\n$ git clone https://github.com/kan-bayashi/ParallelWaveGAN.git\n$ cd ParallelWaveGAN\n$ pip install -e .\n# If you want to use distributed training, please install\n# apex manually by following https://github.com/NVIDIA/apex\n$ ...\n```\nNote that your cuda version must be exactly matched with the version used for pytorch binary to install apex.  \nTo install pytorch compiled with different cuda version, see `tools/Makefile`.\n\n### B. Make virtualenv\n\n```bash\n$ git clone https://github.com/kan-bayashi/ParallelWaveGAN.git\n$ cd ParallelWaveGAN/tools\n$ make\n# If you want to use distributed training, please run following\n# command to install apex.\n$ make apex\n```\n\nNote that we specify cuda version used to compile pytorch wheel.  \nIf you want to use different cuda version, please check `tools/Makefile` to change the pytorch wheel to be installed.\n\n## Run\n\nThis repository provides [Kaldi](https://github.com/kaldi-asr/kaldi)-style recipes, as the same as [ESPnet](https://github.com/espnet/espnet).  \nCurrently, five recipes are supported.\n\n- [CMU Arctic](http://www.festvox.org/cmu_arctic/): English speakers\n- [LJSpeech](https://keithito.com/LJ-Speech-Dataset/): English female speaker\n- [JSUT](https://sites.google.com/site/shinnosuketakamichi/publication/jsut): Japanese female speaker\n- [CSMSC](https://www.data-baker.com/open_source.html): Mandarin female speaker\n- [JNAS](http://research.nii.ac.jp/src/en/JNAS.html): Japanese multi speaker\n\nTo run the recipe, please follow the below instruction.\n\n```bash\n# Let us move on the recipe directory\n$ cd egs/ljspeech/voc1\n\n# Run the recipe from scratch\n$ ./run.sh\n\n# You can change config via command line\n$ ./run.sh --conf <your_customized_yaml_config>\n\n# You can select the stage to start and stop\n$ ./run.sh --stage 2 --stop_stage 2\n\n# If you want to specify the gpu\n$ CUDA_VISIBLE_DEVICES=1 ./run.sh --stage 2\n\n# If you want to resume training from 10000 steps checkpoint\n$ ./run.sh --stage 2 --resume <path>/<to>/checkpoint-10000steps.pkl\n```\n\nThe integration with job schedulers such as [slurm](https://slurm.schedmd.com/documentation.html) can be done via `cmd.sh` and  `conf/slurm.conf`.  \nIf you want to use it, please check [this page](https://kaldi-asr.org/doc/queue.html).\n\nAll of the hyperparameters is written in a single yaml format configuration file.  \nPlease check [this example](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/ljspeech/voc1/conf/parallel_wavegan.v1.yaml) in ljspeech recipe.\n\nThe training requires ~3 days with a single GPU (TITAN V).  \nThe speed of the training is 0.5 seconds per an iteration, in total ~ 200000 sec (= 2.31 days).  \nYou can monitor the training progress via tensorboard.\n\n```bash\n$ tensorboard --logdir exp\n```\n\n![](https://user-images.githubusercontent.com/22779813/68100080-58bbc500-ff09-11e9-9945-c835186fd7c2.png)\n\nIf you want to accelerate the training, you can try distributed multi-gpu training based on apex.  \nYou need to install apex for distributed training. Please make sure you already installed it.  \nThen you can run distributed multi-gpu training via following command:\n\n```bash\n# in the case of the number of gpus = 8\n$ CUDA_VISIBLE_DEVICES=\"0,1,2,3,4,5,6,7\" ./run.sh --stage 2 --n_gpus 8\n```\n\nIn the case of distributed training, batch size will be automatically multiplied by the number of gpus.  \nPlease be careful.\n\nThe decoding speed is RTF = 0.016 with TITAN V, much faster than the real-time.\n\n```bash\n[decode]: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 250/250 [00:30<00:00,  8.31it/s, RTF=0.0156]\n2019-11-03 09:07:40,480 (decode:127) INFO: finished generation of 250 utterances (RTF = 0.016).\n```\n\nEven on the CPU (Intel(R) Xeon(R) Gold 6154 CPU @ 3.00GHz 16 threads), it can generate less than the real-time.\n\n```bash\n[decode]: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 250/250 [22:16<00:00,  5.35s/it, RTF=0.841]\n2019-11-06 09:04:56,697 (decode:129) INFO: finished generation of 250 utterances (RTF = 0.734).\n```\n\nIf you use MelGAN's generator, the decoding speed will be further faster.\n\n```bash\n# On CPU (Intel(R) Xeon(R) Gold 6154 CPU @ 3.00GHz 16 threads)\n[decode]: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 250/250 [04:00<00:00,  1.04it/s, RTF=0.0882]\n2020-02-08 10:45:14,111 (decode:142) INFO: Finished generation of 250 utterances (RTF = 0.137).\n\n# On GPU (TITAN V)\n[decode]: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 250/250 [00:06<00:00, 36.38it/s, RTF=0.00189]\n2020-02-08 05:44:42,231 (decode:142) INFO: Finished generation of 250 utterances (RTF = 0.002).\n```\n\n## Results\n\nHere the results are summarized in the table.  \nYou can listen to the samples and download pretrained models from the link to our google drive.\n\n| Model                                                                                                       | Conf                                                                                                                        | Lang  | Fs [Hz] | Mel range [Hz] | FFT / Hop / Win [pt] | # iters |\n| :------                                                                                                     | :---:                                                                                                                       | :---: | :----:  | :--------:     | :---------------:    | :-----: |\n| [ljspeech_parallel_wavegan.v1](https://drive.google.com/open?id=1wdHr1a51TLeo4iKrGErVKHVFyq6D17TU)          | [link](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/ljspeech/voc1/conf/parallel_wavegan.v1.yaml)          | EN    | 22.05k  | 80-7600        | 1024 / 256 / None    | 400k    |\n| [ljspeech_parallel_wavegan.v1.long](https://drive.google.com/open?id=1XRn3s_wzPF2fdfGshLwuvNHrbgD0hqVS)     | [link](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/ljspeech/voc1/conf/parallel_wavegan.v1.long.yaml)     | EN    | 22.05k  | 80-7600        | 1024 / 256 / None    | 1000k   |\n| [ljspeech_parallel_wavegan.v1.no_limit](https://drive.google.com/open?id=1NoD3TCmKIDHHtf74YsScX8s59aZFOFJA) | [link](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/ljspeech/voc1/conf/parallel_wavegan.v1.no_limit.yaml) | EN    | 22.05k  | None           | 1024 / 256 / None    | 400k    |\n| [ljspeech_melgan.v1](https://drive.google.com/open?id=1z0vO1UMFHyeCdCLAmd7Moewi4QgCb07S)                    | [link](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/ljspeech/voc1/conf/melgan.v1.yaml)                    | EN    | 22.05k  | 80-7600        | 1024 / 256 / None    | 400k    |\n| [ljspeech_melgan.v1.long](https://drive.google.com/open?id=1RqNGcFO7Geb6-4pJtMbC9-ph_WiWA14e)               | [link](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/ljspeech/voc1/conf/melgan.v1.long.yaml)               | EN    | 22.05k  | 80-7600        | 1024 / 256 / None    | 1000k   |\n| [ljspeech_melgan_large.v1](https://drive.google.com/open?id=1KQt-gyxbG6iTZ4aVn9YjQuaGYjAleYs8)              | [link](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/ljspeech/voc1/conf/melgan_large.v1.yaml)              | EN    | 22.05k  | 80-7600        | 1024 / 256 / None    | 400k    |\n| [ljspeech_melgan_large.v1.long](https://drive.google.com/open?id=1ogEx-wiQS7HVtdU0_TmlENURIe4v2erC)         | [link](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/ljspeech/voc1/conf/melgan_large.v1.long.yaml)         | EN    | 22.05k  | 80-7600        | 1024 / 256 / None    | 1000k   |\n| [ljspeech_melgan.v3 (New!)](https://drive.google.com/open?id=1eXkm_Wf1YVlk5waP4Vgqd0GzMaJtW3y5)             | [link](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/ljspeech/voc1/conf/melgan.v3.yaml)                    | EN    | 22.05k  | 80-7600        | 1024 / 256 / None    | 2000k   |\n| [ljspeech_melgan.v3.long (New!)](https://drive.google.com/open?id=1u1w4RPefjByX8nfsL59OzU2KgEksBhL1)        | [link](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/ljspeech/voc1/conf/melgan.v3.long.yaml)               | EN    | 22.05k  | 80-7600        | 1024 / 256 / None    | 4000k   |\n| [jsut_parallel_wavegan.v1](https://drive.google.com/open?id=1UDRL0JAovZ8XZhoH0wi9jj_zeCKb-AIA)              | [link](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/jsut/voc1/conf/parallel_wavegan.v1.yaml)              | JP    | 24k     | 80-7600        | 2048 / 300 / 1200    | 400k    |\n| [csmsc_parallel_wavegan.v1](https://drive.google.com/open?id=1C2nu9nOFdKcEd-D9xGquQ0bCia0B2v_4)             | [link](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/csmsc/voc1/conf/parallel_wavegan.v1.yaml)             | ZH    | 24k     | 80-7600        | 2048 / 300 / 1200    | 400k    |\n| [arctic_slt_parallel_wavegan.v1](https://drive.google.com/open?id=1xG9CmSED2TzFdklD6fVxzf7kFV2kPQAJ)        | [link](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/arctic/voc1/conf/parallel_wavegan.v1.yaml)            | EN    | 16k     | 80-7600        | 1024 / 256 / None    | 400k    |\n| [jnas_parallel_wavegan.v1](https://drive.google.com/open?id=1n_hkxPxryVXbp6oHM1NFm08q0TcoDXz1)              | [link](https://github.com/kan-bayashi/ParallelWaveGAN/blob/master/egs/jnas/voc1/conf/parallel_wavegan.v1.yaml)              | JP    | 16k     | 80-7600        | 1024 / 256 / None    | 400k    |\n\nIf you want to check more results, please access at [our google drive](https://drive.google.com/open?id=1sd_QzcUNnbiaWq7L0ykMP7Xmk-zOuxTi).\n\n## How-to-use pretrained models\n\nHere the minimal code is shown to perform analysis-synthesis using the pretrained model.\n\n```bash\n# Please make sure you installed `parallel_wavegan`\n# If not, please install via pip\n$ pip install parallel_wavegan\n\n# Please download pretrained models and put them in `pretrain_model` directory\n$ ls pretrain_model\n\uf016  checkpoint-400000steps.pkl  \uf481  config.yml  \uf016  stats.h5\n\n# Please put an audio file in `sample` directory to perform analysis-synthesis\n$ ls sample/\n\uf001  sample.wav\n\n# Then perform feature extraction -> feature normalization -> sysnthesis\n$ parallel-wavegan-preprocess \\\n\t--config pretrain_model/config.yml \\\n\t--rootdir sample \\\n\t--dumpdir dump/sample/raw\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00<00:00, 914.19it/s]\n[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.\n[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    1.2s finished\n$ parallel-wavegan-normalize \\\n\t--config pretrain_model/config.yml \\\n\t--rootdir dump/sample/raw \\\n\t--dumpdir dump/sample/norm \\\n\t--stats pretrain_model/stats.h5\n2019-11-13 13:44:29,574 (normalize:87) INFO: the number of files = 1.\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00<00:00, 513.13it/s]\n[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.\n[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    0.6s finished\n$ parallel-wavegan-decode \\\n\t--checkpoint pretrain_model/checkpoint-400000steps.pkl \\\n\t--dumpdir dump/sample/norm \\\n\t--outdir sample\n2019-11-13 13:44:31,229 (decode:91) INFO: the number of features to be decoded = 1.\n2019-11-13 13:44:37,074 (decode:105) INFO: loaded model parameters from pretrain_model/checkpoint-400000steps.pkl.\n[decode]: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00<00:00, 18.33it/s, RTF=0.0146]\n2019-11-13 13:44:37,132 (decode:129) INFO: finished generation of 1 utterances (RTF = 0.015).\n\n# you can find the generated speech in `sample` directory\n$ ls sample\n\uf001  sample.wav  \uf001  sample_gen.wav\n```\n\nIf you want to combine with TTS models, you can try the realtime demonstraion in Google Colab!\n\n[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/espnet/notebook/blob/master/tts_realtime_demo.ipynb)\n\n## References\n\n- [Parallel WaveGAN](https://arxiv.org/abs/1910.11480)\n- [r9y9/wavenet_vocoder](https://github.com/r9y9/wavenet_vocoder)\n- [LiyuanLucasLiu/RAdam](https://github.com/LiyuanLucasLiu/RAdam)\n- [MelGAN](https://arxiv.org/abs/1910.06711)\n- [descriptinc/melgan-neurips](https://github.com/descriptinc/melgan-neurips)\n\n## Acknowledgement\n\nThe author would like to thank Ryuichi Yamamoto ([@r9y9](https://github.com/r9y9)) for his great repository, paper and valuable discussions.\n\n## Author\n\nTomoki Hayashi ([@kan-bayashi](https://github.com/kan-bayashi))  \nE-mail: `hayashi.tomoki<at>g.sp.m.is.nagoya-u.ac.jp`", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/kan-bayashi/ParallelWaveGAN", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "parallel-wavegan", "package_url": "https://pypi.org/project/parallel-wavegan/", "platform": "", "project_url": "https://pypi.org/project/parallel-wavegan/", "project_urls": {"Homepage": "http://github.com/kan-bayashi/ParallelWaveGAN"}, "release_url": "https://pypi.org/project/parallel-wavegan/0.3.4/", "requires_dist": null, "requires_python": "", "summary": "Parallel WaveGAN implementation", "version": "0.3.4"}, "last_serial": 6775176, "releases": {"0.2.1": [{"comment_text": "", "digests": {"md5": "cab57fd5176f234f44326778679feefb", "sha256": "73a0726fdda89379e667bfbff9d35853b331cc753248912331b3c8010f593194"}, "downloads": -1, "filename": "parallel_wavegan-0.2.1.tar.gz", "has_sig": false, "md5_digest": "cab57fd5176f234f44326778679feefb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13241, "upload_time": "2019-11-04T01:43:29", "upload_time_iso_8601": "2019-11-04T01:43:29.352054Z", "url": "https://files.pythonhosted.org/packages/f1/40/4d8142efd3bcd4519753a2c17d154efae4abe858ea8ab9dccd07d9443a38/parallel_wavegan-0.2.1.tar.gz"}], "0.2.1.post2": [{"comment_text": "", "digests": {"md5": "454da469163b58a91b984462766d2a13", "sha256": "3e72502356603d517bb14935ca581181b70f7d91af1e7cd5afa1b91bda2be3e8"}, "downloads": -1, "filename": "parallel_wavegan-0.2.1.post2.tar.gz", "has_sig": false, "md5_digest": "454da469163b58a91b984462766d2a13", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21602, "upload_time": "2019-11-04T02:23:30", "upload_time_iso_8601": "2019-11-04T02:23:30.104146Z", "url": "https://files.pythonhosted.org/packages/ad/0f/43b3af9c253514bec377f6ab17cdaf5ad4626c09c009dd2c68f355dba62c/parallel_wavegan-0.2.1.post2.tar.gz"}], "0.2.1.post3": [{"comment_text": "", "digests": {"md5": "03d9946e8dbddcc73ce006ac1a3ee51a", "sha256": "29f21bebe78f1bc1782818306dfdc6e182bdee6a178b57de6a18761961798432"}, "downloads": -1, "filename": "parallel_wavegan-0.2.1.post3.tar.gz", "has_sig": false, "md5_digest": "03d9946e8dbddcc73ce006ac1a3ee51a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22076, "upload_time": "2019-11-05T01:54:57", "upload_time_iso_8601": "2019-11-05T01:54:57.232749Z", "url": "https://files.pythonhosted.org/packages/bb/13/fd16ce23b8e17d784e939ad8dae8fe16e17f10bf191ba22f3e3083c1a089/parallel_wavegan-0.2.1.post3.tar.gz"}], "0.2.2": [{"comment_text": "", "digests": {"md5": "4b31308371be32d58aa5163c4167e3f1", "sha256": "3e9c4c03e5cd454eb024689540aecc92586307efd8560346fa606c26aabda8ea"}, "downloads": -1, "filename": "parallel_wavegan-0.2.2.tar.gz", "has_sig": false, "md5_digest": "4b31308371be32d58aa5163c4167e3f1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22421, "upload_time": "2019-11-05T08:13:20", "upload_time_iso_8601": "2019-11-05T08:13:20.294571Z", "url": "https://files.pythonhosted.org/packages/fe/b6/1b28407c2c80b15272e44d250e1ff7edc57e4dd1096e8aacce7f1db1f37a/parallel_wavegan-0.2.2.tar.gz"}], "0.2.2.post1": [{"comment_text": "", "digests": {"md5": "4e4fad55a36d4ed672069db0b394bafe", "sha256": "cc199481dc795f2f4dc50b63077b7d8cc0a01a61600c0330492d62999fc6b8d0"}, "downloads": -1, "filename": "parallel_wavegan-0.2.2.post1.tar.gz", "has_sig": false, "md5_digest": "4e4fad55a36d4ed672069db0b394bafe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22435, "upload_time": "2019-11-06T02:25:09", "upload_time_iso_8601": "2019-11-06T02:25:09.561799Z", "url": "https://files.pythonhosted.org/packages/31/03/9a8cb0253272d83ae43b494e55016b37fd6100bd3863d89308e0951bc7be/parallel_wavegan-0.2.2.post1.tar.gz"}], "0.2.3": [{"comment_text": "", "digests": {"md5": "58afcb2c0ee49c26530be7d40626c298", "sha256": "aee3272b7c68502ce26714bd66c444069f659d9209f0f875dd7ccabdad020a96"}, "downloads": -1, "filename": "parallel_wavegan-0.2.3.tar.gz", "has_sig": false, "md5_digest": "58afcb2c0ee49c26530be7d40626c298", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22818, "upload_time": "2019-11-08T08:05:32", "upload_time_iso_8601": "2019-11-08T08:05:32.798308Z", "url": "https://files.pythonhosted.org/packages/ef/bc/5df47e06260272f42cb7275a4a8a8494468d5bef55c2bb17a546266426ef/parallel_wavegan-0.2.3.tar.gz"}], "0.2.4": [{"comment_text": "", "digests": {"md5": "796237242b3ff14fffb8b977c24b25d7", "sha256": "1514a699d46a6a14a20b90668d2c5f3c1025e1a7757d2982f232620708e4ef2b"}, "downloads": -1, "filename": "parallel_wavegan-0.2.4.tar.gz", "has_sig": false, "md5_digest": "796237242b3ff14fffb8b977c24b25d7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25882, "upload_time": "2019-11-11T16:27:47", "upload_time_iso_8601": "2019-11-11T16:27:47.572238Z", "url": "https://files.pythonhosted.org/packages/d8/35/d2247b4012d3cce0db1bd33adc30b550ec289d45eca7dad874ec8b9b8a7e/parallel_wavegan-0.2.4.tar.gz"}], "0.2.4.post1": [{"comment_text": "", "digests": {"md5": "9c878e2f27d2162e2731e0fb504982e6", "sha256": "b89ec349693f51c96ebc6ee0c735d2790456d19c816024391473a101fc4d39ad"}, "downloads": -1, "filename": "parallel_wavegan-0.2.4.post1.tar.gz", "has_sig": false, "md5_digest": "9c878e2f27d2162e2731e0fb504982e6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26285, "upload_time": "2019-11-12T04:02:29", "upload_time_iso_8601": "2019-11-12T04:02:29.338155Z", "url": "https://files.pythonhosted.org/packages/fc/a6/cd37560884be16cd63cedae0cf2970ddf0f1523a84e9e035484e225f7a10/parallel_wavegan-0.2.4.post1.tar.gz"}], "0.2.4.post2": [{"comment_text": "", "digests": {"md5": "500cb2445b4b5ad5bbd558c7c1a9c53e", "sha256": "5de11a4e55a4456bebd85561cc1ba573efdd8b7f21123d8e13530a61211cfdd5"}, "downloads": -1, "filename": "parallel_wavegan-0.2.4.post2.tar.gz", "has_sig": false, "md5_digest": "500cb2445b4b5ad5bbd558c7c1a9c53e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26194, "upload_time": "2019-11-12T04:08:56", "upload_time_iso_8601": "2019-11-12T04:08:56.100607Z", "url": "https://files.pythonhosted.org/packages/8d/82/af68f104054cbe5638a12b69cf6295dd3411287e4381fc8581a6c183aa97/parallel_wavegan-0.2.4.post2.tar.gz"}], "0.2.5": [{"comment_text": "", "digests": {"md5": "9d851de4a76495427f7d2777a9f18c5b", "sha256": "4f7448ae5105946bbd947dee25e17e10cb7f310050a47b5bd1aef706e06ed06c"}, "downloads": -1, "filename": "parallel_wavegan-0.2.5.tar.gz", "has_sig": false, "md5_digest": "9d851de4a76495427f7d2777a9f18c5b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27839, "upload_time": "2019-11-13T06:17:56", "upload_time_iso_8601": "2019-11-13T06:17:56.737509Z", "url": "https://files.pythonhosted.org/packages/9b/d8/22260afeb6a66c327e4126d3c16079fdc908549e8aebfd69493df0a8d090/parallel_wavegan-0.2.5.tar.gz"}], "0.2.5.post1": [{"comment_text": "", "digests": {"md5": "892553a5a32c1271a80e63a8f54e3c78", "sha256": "3328a5e1debe15269ef4aa60b10c35e427e63ada4b31eee9cddd93b786598613"}, "downloads": -1, "filename": "parallel_wavegan-0.2.5.post1.tar.gz", "has_sig": false, "md5_digest": "892553a5a32c1271a80e63a8f54e3c78", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27837, "upload_time": "2019-11-24T01:31:42", "upload_time_iso_8601": "2019-11-24T01:31:42.560400Z", "url": "https://files.pythonhosted.org/packages/44/87/52d89ff1697e30acbbe00b1d3380903e1731b4d886fa095eb25263d86779/parallel_wavegan-0.2.5.post1.tar.gz"}], "0.2.5.post2": [{"comment_text": "", "digests": {"md5": "f0e2c7e9ce2d3d0d9750061164d5b8c5", "sha256": "58d0667c9d4b28c0cacc2630a957a688bf738dfc045fe24712588ccfd9fcae4f"}, "downloads": -1, "filename": "parallel_wavegan-0.2.5.post2.tar.gz", "has_sig": false, "md5_digest": "f0e2c7e9ce2d3d0d9750061164d5b8c5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27846, "upload_time": "2019-11-25T03:03:20", "upload_time_iso_8601": "2019-11-25T03:03:20.994866Z", "url": "https://files.pythonhosted.org/packages/73/f5/df7491ac1d0958776320b227c01fef9ae54855379863a6189f758fb13966/parallel_wavegan-0.2.5.post2.tar.gz"}], "0.2.6": [{"comment_text": "", "digests": {"md5": "b9365c1aa0c8e7b12133e435a8821b17", "sha256": "cc4f3e826a054475a9a87058cd88b8ed78aa72f371bb340fe59c61e3420afaac"}, "downloads": -1, "filename": "parallel_wavegan-0.2.6.tar.gz", "has_sig": false, "md5_digest": "b9365c1aa0c8e7b12133e435a8821b17", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28573, "upload_time": "2019-12-25T09:26:42", "upload_time_iso_8601": "2019-12-25T09:26:42.797549Z", "url": "https://files.pythonhosted.org/packages/82/fa/56fe659428f00f6b728ad54b7a864ee57bac5837acf4c82be703f3bb1280/parallel_wavegan-0.2.6.tar.gz"}], "0.2.6.post1": [{"comment_text": "", "digests": {"md5": "20cef8bb1d0158f818e13e2f5efe85d1", "sha256": "a569a044d132eb53c44affa3d54d9b6519f5c10e4e6244d76ad58b97b02d31f1"}, "downloads": -1, "filename": "parallel_wavegan-0.2.6.post1.tar.gz", "has_sig": false, "md5_digest": "20cef8bb1d0158f818e13e2f5efe85d1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28545, "upload_time": "2019-12-26T05:12:24", "upload_time_iso_8601": "2019-12-26T05:12:24.691141Z", "url": "https://files.pythonhosted.org/packages/dc/4c/866ea57f4c29c1110518556fd78ab93385f33134d6f1cbbd5b65aaeebbc9/parallel_wavegan-0.2.6.post1.tar.gz"}], "0.2.7": [{"comment_text": "", "digests": {"md5": "fc46d53524d1a480c24e7ebff3db95ec", "sha256": "574275f5512882809f0207793acaa32ec79a7e377290a97578b1a091b1a81a81"}, "downloads": -1, "filename": "parallel_wavegan-0.2.7.tar.gz", "has_sig": false, "md5_digest": "fc46d53524d1a480c24e7ebff3db95ec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29427, "upload_time": "2020-01-14T06:21:38", "upload_time_iso_8601": "2020-01-14T06:21:38.233017Z", "url": "https://files.pythonhosted.org/packages/e6/81/555f0370413ce731276f3b802fc5df070fd2b72e79314a20647ce0e361f3/parallel_wavegan-0.2.7.tar.gz"}], "0.2.7.post1": [{"comment_text": "", "digests": {"md5": "43daae9ddafbb8118a032511fc5a52a5", "sha256": "4ec00727a8329f73c5d61579876a9717b9f222e78467e2904ee65ef1c7713f2e"}, "downloads": -1, "filename": "parallel_wavegan-0.2.7.post1.tar.gz", "has_sig": false, "md5_digest": "43daae9ddafbb8118a032511fc5a52a5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31289, "upload_time": "2020-01-14T07:03:52", "upload_time_iso_8601": "2020-01-14T07:03:52.029664Z", "url": "https://files.pythonhosted.org/packages/e0/04/e862485d2bd4ba6fc0854e1838dc0f4267a06ae0c9f1f39f307143edb67f/parallel_wavegan-0.2.7.post1.tar.gz"}], "0.2.8.post1": [{"comment_text": "", "digests": {"md5": "23be022d8d7ad2531c3d26fbd47974c2", "sha256": "2f0cb5821495dc35e299518b44701c93f516a73c7bb827e7bad5b9434e5e9467"}, "downloads": -1, "filename": "parallel_wavegan-0.2.8.post1.tar.gz", "has_sig": false, "md5_digest": "23be022d8d7ad2531c3d26fbd47974c2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34349, "upload_time": "2020-02-08T03:15:22", "upload_time_iso_8601": "2020-02-08T03:15:22.433698Z", "url": "https://files.pythonhosted.org/packages/4a/a9/0099fd305180acaf59e9eff75087360d02eb64271c9188684cb1c264955b/parallel_wavegan-0.2.8.post1.tar.gz"}], "0.3.0": [{"comment_text": "", "digests": {"md5": "aa656af018c8ce3dc8b3dc75f632b56b", "sha256": "35456b0287e5df91c8508de51e8e339d7616ce3273fba0bb66ce95048105d264"}, "downloads": -1, "filename": "parallel_wavegan-0.3.0.tar.gz", "has_sig": false, "md5_digest": "aa656af018c8ce3dc8b3dc75f632b56b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36869, "upload_time": "2020-02-15T10:43:30", "upload_time_iso_8601": "2020-02-15T10:43:30.599597Z", "url": "https://files.pythonhosted.org/packages/92/3a/7be6395952d77b6fac953d422e58a45ccdde59ff097ef34013cfc2f95fdd/parallel_wavegan-0.3.0.tar.gz"}], "0.3.1": [{"comment_text": "", "digests": {"md5": "7e7edcc00bc34ba4dd0d1cc47d6886e5", "sha256": "19105c404db2485f564de1311ddb366a8728152e549e6017f76cc7f4159c4ff4"}, "downloads": -1, "filename": "parallel_wavegan-0.3.1.tar.gz", "has_sig": false, "md5_digest": "7e7edcc00bc34ba4dd0d1cc47d6886e5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37804, "upload_time": "2020-02-26T14:40:58", "upload_time_iso_8601": "2020-02-26T14:40:58.882357Z", "url": "https://files.pythonhosted.org/packages/cb/8d/2db623b5ed19180746a3595b9567ac10663fd4dd779fbdc72166c5680f84/parallel_wavegan-0.3.1.tar.gz"}], "0.3.1.post1": [{"comment_text": "", "digests": {"md5": "7925b1f0571da8b04dd4e3b3da990bcf", "sha256": "aebd1922128924a0015382eb4430f05cf83218d3df23009fd8a0eea9ca812ef6"}, "downloads": -1, "filename": "parallel_wavegan-0.3.1.post1.tar.gz", "has_sig": false, "md5_digest": "7925b1f0571da8b04dd4e3b3da990bcf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37821, "upload_time": "2020-02-28T14:38:31", "upload_time_iso_8601": "2020-02-28T14:38:31.579813Z", "url": "https://files.pythonhosted.org/packages/db/40/245b61bc8bc78c4ddeda585be21b7edbe8e326bed71f39269fa541a35a4c/parallel_wavegan-0.3.1.post1.tar.gz"}], "0.3.2": [{"comment_text": "", "digests": {"md5": "41c384836321ede009bdacfc2b04ccf2", "sha256": "2f78afc4b08544849b2a3e1bf6f37b714f10a3852c1f3622fa75f583bb41952d"}, "downloads": -1, "filename": "parallel_wavegan-0.3.2.tar.gz", "has_sig": false, "md5_digest": "41c384836321ede009bdacfc2b04ccf2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37708, "upload_time": "2020-03-06T18:20:06", "upload_time_iso_8601": "2020-03-06T18:20:06.880723Z", "url": "https://files.pythonhosted.org/packages/66/85/26ecb5f8169b468a298c7e7860967fd77890d56580c8661c245c85bedec7/parallel_wavegan-0.3.2.tar.gz"}], "0.3.3": [{"comment_text": "", "digests": {"md5": "cd232078dc130953eed4465f1a6b5478", "sha256": "3758cab564f69bf8d80694171dfba344b9d82c354561572d96f0589be1244635"}, "downloads": -1, "filename": "parallel_wavegan-0.3.3.tar.gz", "has_sig": false, "md5_digest": "cd232078dc130953eed4465f1a6b5478", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38690, "upload_time": "2020-03-07T07:35:50", "upload_time_iso_8601": "2020-03-07T07:35:50.628488Z", "url": "https://files.pythonhosted.org/packages/34/61/b5540e9448974d2bf38a557e6d6b19abf616b98fae68db9931758ce26d37/parallel_wavegan-0.3.3.tar.gz"}], "0.3.4": [{"comment_text": "", "digests": {"md5": "6678ae0b967973df6a649b4528de5077", "sha256": "abe9608de3c387107d31164f5e5794befe3a75eb52130ef038f83644a6e50d09"}, "downloads": -1, "filename": "parallel_wavegan-0.3.4.tar.gz", "has_sig": false, "md5_digest": "6678ae0b967973df6a649b4528de5077", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39145, "upload_time": "2020-03-09T07:14:05", "upload_time_iso_8601": "2020-03-09T07:14:05.922777Z", "url": "https://files.pythonhosted.org/packages/5b/26/4281e991aaebc2a64e90a00e8ff3150a503863c4d2361b24f3b3f2480dfc/parallel_wavegan-0.3.4.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "6678ae0b967973df6a649b4528de5077", "sha256": "abe9608de3c387107d31164f5e5794befe3a75eb52130ef038f83644a6e50d09"}, "downloads": -1, "filename": "parallel_wavegan-0.3.4.tar.gz", "has_sig": false, "md5_digest": "6678ae0b967973df6a649b4528de5077", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39145, "upload_time": "2020-03-09T07:14:05", "upload_time_iso_8601": "2020-03-09T07:14:05.922777Z", "url": "https://files.pythonhosted.org/packages/5b/26/4281e991aaebc2a64e90a00e8ff3150a503863c4d2361b24f3b3f2480dfc/parallel_wavegan-0.3.4.tar.gz"}]}