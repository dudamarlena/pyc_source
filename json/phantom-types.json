{"info": {"author": "Anton Agestam", "author_email": "git@antonagestam.se", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.8"], "description": "# phantom-types\n\n[![](https://github.com/antonagestam/phantom-types/workflows/CI/badge.svg)][CI]\n\n[CI]: https://github.com/antonagestam/phantom-types/actions?query=workflow%3ACI\n\nPhantom types for Python.\n\n## Installation\n\n```bash\npython3 -m pip install phantom-types\n```\n\n## Abstract\n\n- Make illegal states unrepresentable.\n- [Parse, don't validate]\n- [Ghosts of Departed Proofs]\n- Abuse `__instancecheck__` and type-guards.\n- Values are checked at runtime but no extra instances/subclasses are\n  instantiated.\n\n[Parse, don't validate]: https://lexi-lambda.github.io/blog/2019/11/05/parse-don-t-validate/\n[Ghosts of Departed Proofs]: https://kataskeue.com/gdp.pdf\n\n## Usage\n\n### Builtin types\n\n#### `phantom.datetime`\n\n- `TZAware`\n- `TZNaive`\n\n#### `phantom.numeric`\n\n- `Natural`\n- `NegativeInt`\n- `Portion`\n\n#### `phantom.re`\n\n- `Match`\n\n#### `phantom.sized`\n\n- `NonEmpty`\n- `Empty`\n\n### Creating phantom types\n\nTo create new phantom types, subclass `phantom.base.Phantom` and define an\n`__instancecheck__` method:\n\n```python\nfrom typing import Any\nfrom typing import TYPE_CHECKING\n\nfrom phantom.base import Phantom\n\n\nclass Greeting(str, Phantom):\n    @classmethod\n    def __instancecheck__(cls, instance: Any) -> bool:\n        return (\n            isinstance(instance, str)\n            and instance.startswith((\"Hello\", \"Hi\"))\n        )\n\n\nhello = \"Hello there\"\n# We can narrow types using mypy's type guards\nassert isinstance(hello, Greeting)\n# or explicitly when we need to\nhi = Greeting.from_instance(\"Hi there\")\n\n# The runtime types are unchanged and will still be str for our greetings\nassert type(hello) is str\nassert type(hi) is str\n\n# But their static types will be Greeting, retaining the information that our\n# strings are not just any strs\nif TYPE_CHECKING:\n    reveal_type(hello)\n    reveal_type(hi)\n\n# As this string doesn't fulfill our __instancecheck__, it will not be an\n# instance of Greeting.\nassert not isinstance(\"Goodbye\", Greeting)\n```\n\nCheckout out the [dacite example] for how to create dataclasses with rich\nphantom-typed fields without duplicating type definitions or losing parsed\ninformation.\n\n[dacite example]: examples/dacite/test_dacite.py\n\n\n", "description_content_type": "text/markdown; charset=UTF-8", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/antonagestam/phantom-types/", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "phantom-types", "package_url": "https://pypi.org/project/phantom-types/", "platform": "", "project_url": "https://pypi.org/project/phantom-types/", "project_urls": {"Homepage": "https://github.com/antonagestam/phantom-types/"}, "release_url": "https://pypi.org/project/phantom-types/0.0.2/", "requires_dist": ["black ; extra == 'test'", "flake8 ; extra == 'test'", "mypy ; extra == 'test'", "sorti ; extra == 'test'", "pytest ; extra == 'test'", "pytest-mypy-plugins ; extra == 'test'"], "requires_python": ">=3.8", "summary": "Phantom types for Python", "version": "0.0.2"}, "last_serial": 6894134, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "93701e353e25fd030f963008c65b5d3c", "sha256": "1eac10a75dc1f9242865c0029ee1ef9583198418b3eb6cd614978d8da366e760"}, "downloads": -1, "filename": "phantom_types-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "93701e353e25fd030f963008c65b5d3c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 8594, "upload_time": "2020-03-26T20:48:52", "upload_time_iso_8601": "2020-03-26T20:48:52.323624Z", "url": "https://files.pythonhosted.org/packages/7f/0e/dabceca47322b06a5ef235c4f3ba0868ecb05d0eb8c992b5327983fe1bc8/phantom_types-0.0.1-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "601d105e02f7c6d5b6fbdebee37fb76d", "sha256": "b0cbe87231d46001778c51f8d223bc5b3c0368d5361580d2d5258dcdf0812beb"}, "downloads": -1, "filename": "phantom-types-0.0.1.tar.gz", "has_sig": false, "md5_digest": "601d105e02f7c6d5b6fbdebee37fb76d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 6488, "upload_time": "2020-03-26T20:48:54", "upload_time_iso_8601": "2020-03-26T20:48:54.509401Z", "url": "https://files.pythonhosted.org/packages/66/7f/249d9b0ea43f0348a7a6fddb482a10e35675b59bc8babd56dcee462630e0/phantom-types-0.0.1.tar.gz"}], "0.0.2": [{"comment_text": "", "digests": {"md5": "57380d19dd8e4c4c1135ddbadf89495c", "sha256": "a11e31faf59f97532bbaa22af6318bdeb32e2ed58d620b67f84a1c2bd76dc20a"}, "downloads": -1, "filename": "phantom_types-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "57380d19dd8e4c4c1135ddbadf89495c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 8633, "upload_time": "2020-03-27T07:06:07", "upload_time_iso_8601": "2020-03-27T07:06:07.463321Z", "url": "https://files.pythonhosted.org/packages/07/2c/fa4bd8762ded5c29f3ad20738d5c91ad64e404fc2fa767847d40a5e8a0fc/phantom_types-0.0.2-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "265a29cb9468f9f0f544d0be08a07c6b", "sha256": "c198560fb8c890b27df2fab4955d93441871d53b4b8052713accd4543ba6a346"}, "downloads": -1, "filename": "phantom-types-0.0.2.tar.gz", "has_sig": false, "md5_digest": "265a29cb9468f9f0f544d0be08a07c6b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 6542, "upload_time": "2020-03-27T07:06:08", "upload_time_iso_8601": "2020-03-27T07:06:08.848465Z", "url": "https://files.pythonhosted.org/packages/fd/7d/5dad8c622cf480a5e9d2cc4a75808530614d0109327f02808b48e3b8a0f5/phantom-types-0.0.2.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "57380d19dd8e4c4c1135ddbadf89495c", "sha256": "a11e31faf59f97532bbaa22af6318bdeb32e2ed58d620b67f84a1c2bd76dc20a"}, "downloads": -1, "filename": "phantom_types-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "57380d19dd8e4c4c1135ddbadf89495c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 8633, "upload_time": "2020-03-27T07:06:07", "upload_time_iso_8601": "2020-03-27T07:06:07.463321Z", "url": "https://files.pythonhosted.org/packages/07/2c/fa4bd8762ded5c29f3ad20738d5c91ad64e404fc2fa767847d40a5e8a0fc/phantom_types-0.0.2-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "265a29cb9468f9f0f544d0be08a07c6b", "sha256": "c198560fb8c890b27df2fab4955d93441871d53b4b8052713accd4543ba6a346"}, "downloads": -1, "filename": "phantom-types-0.0.2.tar.gz", "has_sig": false, "md5_digest": "265a29cb9468f9f0f544d0be08a07c6b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 6542, "upload_time": "2020-03-27T07:06:08", "upload_time_iso_8601": "2020-03-27T07:06:08.848465Z", "url": "https://files.pythonhosted.org/packages/fd/7d/5dad8c622cf480a5e9d2cc4a75808530614d0109327f02808b48e3b8a0f5/phantom-types-0.0.2.tar.gz"}]}