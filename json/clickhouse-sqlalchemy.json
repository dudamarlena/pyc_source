{"info": {"author": "Konstantin Lebedev", "author_email": "kostyan.lebedev@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Information Technology", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: SQL", "Topic :: Database", "Topic :: Scientific/Engineering :: Information Analysis", "Topic :: Software Development", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Application Frameworks", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "ClickHouse SQLAlchemy\n=====================\n\nClickHouse dialect for SQLAlchemy to `ClickHouse database <https://clickhouse.yandex/>`_.\n\n\n.. image:: https://img.shields.io/pypi/v/clickhouse-sqlalchemy.svg\n    :target: https://pypi.org/project/clickhouse-sqlalchemy\n\n.. image:: https://img.shields.io/pypi/l/clickhouse-sqlalchemy.svg\n    :target: https://pypi.org/project/clickhouse-sqlalchemy\n\n.. image:: https://img.shields.io/pypi/pyversions/clickhouse-sqlalchemy.svg\n    :target: https://pypi.org/project/clickhouse-sqlalchemy\n\n.. image:: https://coveralls.io/repos/github/xzkostyan/clickhouse-sqlalchemy/badge.svg?branch=master\n    :target: https://coveralls.io/github/xzkostyan/clickhouse-sqlalchemy?branch=master\n\n.. image:: https://img.shields.io/travis/xzkostyan/clickhouse-sqlalchemy.svg?branch=master\n   :target: https://travis-ci.org/xzkostyan/clickhouse-sqlalchemy\n\nInstallation\n============\n\nThe package can be installed using ``pip``:\n\n    .. code-block:: bash\n\n       pip install clickhouse-sqlalchemy\n\nInterfaces support\n------------------\n\n- **native** [recommended] (TCP) via `clickhouse-driver <https://github.com/mymarilyn/clickhouse-driver>`_\n- **http** via requests\n\n\nConnection Parameters\n=====================\n\nClickHouse SQLAlchemy uses the following syntax for the connection string:\n\n    .. code-block:: python\n\n     'clickhouse+<driver>://<user>:<password>@<host>:<port>/<database>[?key=value..]'\n\nWhere:\n\n- *driver* is driver to use. Possible choices: ``http``, ``native``. ``http`` is default.\n- *database* is database connect to. Default is ``default``.\n\n\nDrivers options\n===============\n\nThere are several options can be specified in query string.\n\nHTTP\n----\n\n- *port* is port ClickHouse server is bound to. Default is ``8123``.\n- *timeout* in seconds. There is no timeout by default.\n- *protocol* to use. Possible choices: ``http``, ``https``. ``http`` is default.\n\nConnection string to database `test` in default ClickHouse installation:\n\n    .. code-block:: python\n\n         'clickhouse://default:@localhost/test'\n\n\nWhen you are using `nginx` as proxy server for ClickHouse server connection string might look like:\n\n    .. code-block:: python\n\n         'clickhouse://user:password@example.com:8124/test?protocol=https'\n\nWhere ``8124`` is proxy port.\n\n\nNative\n------\n\nPlease note that native connection **is not encrypted**. All data including\nuser/password is transferred in plain text. You should use this connection over\nSSH or VPN (for example) while communicating over untrusted network.\n\nConnection string to database `test` in default ClickHouse installation:\n\n    .. code-block:: python\n\n         'clickhouse+native://default:@localhost/test'\n\nAll connection string parameters are proxied to `clickhouse-driver`.\nSee it's `parameters <https://clickhouse-driver.readthedocs.io/en/latest/api.html#clickhouse_driver.connection.Connection>`_.\n\n\nFeatures\n========\n\nSQLAlchemy declarative support\n------------------------------\n\nBoth declarative and constructor-style tables support:\n\n    .. code-block:: python\n\n        from sqlalchemy import create_engine, Column, MetaData, literal\n\n        from clickhouse_sqlalchemy import Table, make_session, get_declarative_base, types, engines\n\n        uri = 'clickhouse://default:@localhost/test'\n\n        engine = create_engine(uri)\n        session = make_session(engine)\n        metadata = MetaData(bind=engine)\n\n        Base = get_declarative_base(metadata=metadata)\n\n        class Rate(Base):\n            day = Column(types.Date, primary_key=True)\n            value = Column(types.Int32)\n            other_value = Column(\n                types.DateTime,\n                clickhouse_codec=('DoubleDelta', 'ZSTD'),\n            )\n\n            __table_args__ = (\n                engines.Memory(),\n            )\n\n        another_table = Table('another_rate', metadata,\n            Column('day', types.Date, primary_key=True),\n            Column('value', types.Int32, server_default=literal(1)),\n            engines.Memory()\n        )\n\nTables created in declarative way have lowercase with words separated by underscores naming convention.\nBut you can easy set you own via SQLAlchemy ``__tablename__`` attribute.\n\nBasic DDL support\n-----------------\n\nYou can emit simple DDL. Example ``CREATE/DROP`` table:\n\n    .. code-block:: python\n\n        table = Rate.__table__\n        table.create()\n        another_table.create()\n\n\n        another_table.drop()\n        table.drop()\n\n\nBasic INSERT clause support\n---------------------------\n\nSimple batch INSERT:\n\n    .. code-block:: python\n\n        from datetime import date, timedelta\n        from sqlalchemy import func\n\n        today = date.today()\n        rates = [{'day': today - timedelta(i), 'value': 200 - i} for i in range(100)]\n\n        # Emits single INSERT statement.\n        session.execute(table.insert(), rates)\n\n\nCommon SQLAlchemy query method chaining\n---------------------------------------\n\n``order_by``, ``filter``, ``limit``, ``offset``, etc. are supported:\n\n    .. code-block:: python\n\n        session.query(func.count(Rate.day)) \\\n            .filter(Rate.day > today - timedelta(20)) \\\n            .scalar()\n\n        session.query(Rate.value) \\\n            .order_by(Rate.day.desc()) \\\n            .first()\n\n        session.query(Rate.value) \\\n            .order_by(Rate.day) \\\n            .limit(10) \\\n            .all()\n\n        session.query(func.sum(Rate.value)) \\\n            .scalar()\n\n\nAdvanced INSERT clause support\n------------------------------\nINSERT FROM SELECT statement:\n\n    .. code-block:: python\n\n        from sqlalchemy import cast\n\n        # Labels must be present.\n        select_query = session.query(\n            Rate.day.label('day'),\n            cast(Rate.value * 1.5, types.Int32).label('value')\n        ).subquery()\n\n        # Emits single INSERT FROM SELECT statement\n        session.execute(\n            another_table.insert()\n            .from_select(['day', 'value'], select_query)\n        )\n\n\nMany but not all of SQLAlchemy features are supported out of the box.\n\nUNION ALL example:\n\n    .. code-block:: python\n\n        from sqlalchemy import union_all\n\n        select_rate = session.query(\n            Rate.day.label('date'),\n            Rate.value.label('x')\n        )\n        select_another_rate = session.query(\n            another_table.c.day.label('date'),\n            another_table.c.value.label('x')\n        )\n\n        union_all(select_rate, select_another_rate).execute().fetchone()\n\n\nExternal data for query processing\n----------------------------------\n\nCurrently can be used with native interface.\n\n    .. code-block:: python\n\n        ext = Table(\n            'ext', metadata, Column('x', types.Int32),\n            clickhouse_data=[(101, ), (103, ), (105, )], extend_existing=True\n        )\n\n        rv = session.query(Rate) \\\n            .filter(Rate.value.in_(session.query(ext.c.x))) \\\n            .execution_options(external_tables=[ext]) \\\n            .all()\n\n        print(rv)\n\nSupported ClickHouse-specific SQL\n---------------------------------\n\n- ``SELECT`` query:\n    - ``WITH TOTALS``\n    - ``SAMPLE``\n    - lambda functions: ``x -> expr``\n    - ``JOIN``\n\nSee `tests <https://github.com/xzkostyan/clickhouse-sqlalchemy/tree/master/tests>`_ for examples.\n\n\nOverriding default query settings\n---------------------------------\n\nSet lower priority to query and limit max number threads to execute the request.\n\n    .. code-block:: python\n\n        rv = session.query(func.sum(Rate.value)) \\\n            .execution_options(settings={'max_threads': 2, 'priority': 10}) \\\n            .scalar()\n\n        print(rv)\n\n\nRunning tests\n=============\n\n    .. code-block:: bash\n\n        mkvirtualenv testenv && python setup.py test\n\n``pip`` will automatically install all required modules for testing.\n\n\nLicense\n=======\n\nClickHouse SQLAlchemy is distributed under the `MIT license\n<http://www.opensource.org/licenses/mit-license.php>`_.\n\nHow to Contribute\n=================\n\n#. Check for open issues or open a fresh issue to start a discussion around a feature idea or a bug.\n#. Fork `the repository <https://github.com/xzkostyan/clickhouse-sqlalchemy>`_ on GitHub to start making your changes to the **master** branch (or branch off of it).\n#. Write a test which shows that the bug was fixed or that the feature works as expected.\n#. Send a pull request and bug the maintainer until it gets merged and published.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/xzkostyan/clickhouse-sqlalchemy", "keywords": "ClickHouse db database cloud analytics", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "clickhouse-sqlalchemy", "package_url": "https://pypi.org/project/clickhouse-sqlalchemy/", "platform": "", "project_url": "https://pypi.org/project/clickhouse-sqlalchemy/", "project_urls": {"Homepage": "https://github.com/xzkostyan/clickhouse-sqlalchemy"}, "release_url": "https://pypi.org/project/clickhouse-sqlalchemy/0.1.3/", "requires_dist": null, "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "summary": "Simple ClickHouse SQLAlchemy Dialect", "version": "0.1.3"}, "last_serial": 6950588, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "5b54ebb53c77967d374925654b5e6c19", "sha256": "dfdc18259455fa6959defcd9d3506ae79d40e129a4adda6f6b728a3d7a2996c2"}, "downloads": -1, "filename": "clickhouse-sqlalchemy-0.0.1.tar.gz", "has_sig": false, "md5_digest": "5b54ebb53c77967d374925654b5e6c19", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11202, "upload_time": "2017-03-30T00:13:33", "upload_time_iso_8601": "2017-03-30T00:13:33.758683Z", "url": "https://files.pythonhosted.org/packages/ff/5c/9fa61a94d73476db91d196994d97c748dc518292a9c24a6bf9568b112ce0/clickhouse-sqlalchemy-0.0.1.tar.gz"}], "0.0.10": [{"comment_text": "", "digests": {"md5": "2745185702d35d3204cb19006dce307d", "sha256": "56984e9f88a40635c80cf1d10963a679573cf060eb746edd3d85b5825610dbc0"}, "downloads": -1, "filename": "clickhouse-sqlalchemy-0.0.10.tar.gz", "has_sig": false, "md5_digest": "2745185702d35d3204cb19006dce307d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 21849, "upload_time": "2019-02-05T15:40:03", "upload_time_iso_8601": "2019-02-05T15:40:03.351212Z", "url": "https://files.pythonhosted.org/packages/7a/4a/1832a1f7f08ced762cf5a20b6a6f7d682174a5eef0a04253bff3cfe940b2/clickhouse-sqlalchemy-0.0.10.tar.gz"}], "0.0.2": [{"comment_text": "", "digests": {"md5": "2ce9c54eaf6cee1ee561143e213b336d", "sha256": "f3f4aea5d83a81bd54e9bd785b53768756cb6b471a0ca89ee93a0b98f441deea"}, "downloads": -1, "filename": "clickhouse-sqlalchemy-0.0.2.tar.gz", "has_sig": false, "md5_digest": "2ce9c54eaf6cee1ee561143e213b336d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13061, "upload_time": "2017-06-22T23:14:54", "upload_time_iso_8601": "2017-06-22T23:14:54.875278Z", "url": "https://files.pythonhosted.org/packages/76/48/8c68d7c8026a2cc46c0458ac28515fed48e74716bc4f2a94446042027827/clickhouse-sqlalchemy-0.0.2.tar.gz"}], "0.0.3": [{"comment_text": "", "digests": {"md5": "b3e9eef9cd4960d1d7de47c843e7e987", "sha256": "8f87db01a6e26f437d097e07365ca6313f3814aef871f4f37ad6a3c06550301e"}, "downloads": -1, "filename": "clickhouse-sqlalchemy-0.0.3.tar.gz", "has_sig": false, "md5_digest": "b3e9eef9cd4960d1d7de47c843e7e987", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14879, "upload_time": "2017-07-16T19:59:06", "upload_time_iso_8601": "2017-07-16T19:59:06.000924Z", "url": "https://files.pythonhosted.org/packages/cb/3c/3720527c06c31ca1c2c1f0e33af30b3dc099e6a69d73357063a5f19126df/clickhouse-sqlalchemy-0.0.3.tar.gz"}], "0.0.4": [{"comment_text": "", "digests": {"md5": "568c0235d883f9bc6473d30d87e20c00", "sha256": "73f0d4aa7038821be3cdc9cf01e09dad8494fb749c464e591f44480bdaa1c669"}, "downloads": -1, "filename": "clickhouse-sqlalchemy-0.0.4.tar.gz", "has_sig": false, "md5_digest": "568c0235d883f9bc6473d30d87e20c00", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16279, "upload_time": "2017-10-02T23:23:34", "upload_time_iso_8601": "2017-10-02T23:23:34.388523Z", "url": "https://files.pythonhosted.org/packages/0f/54/66bfb91273a9a8949dd77be83828963c3fac6c9b7f88bf138b32a2eefb14/clickhouse-sqlalchemy-0.0.4.tar.gz"}], "0.0.5": [{"comment_text": "", "digests": {"md5": "2ad8e6831cb08bc7b796598ad77702db", "sha256": "169c7ea825dfe64b0b90d0c00ee8e5815e49cae953f168a265989d9634b9dd71"}, "downloads": -1, "filename": "clickhouse-sqlalchemy-0.0.5.tar.gz", "has_sig": false, "md5_digest": "2ad8e6831cb08bc7b796598ad77702db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19881, "upload_time": "2017-11-06T20:21:03", "upload_time_iso_8601": "2017-11-06T20:21:03.660677Z", "url": "https://files.pythonhosted.org/packages/d5/04/13f4d0a82d1029279aeb52065da5eb4c059128b4aa52ddc5ff66eda06250/clickhouse-sqlalchemy-0.0.5.tar.gz"}], "0.0.6": [{"comment_text": "", "digests": {"md5": "1f615896065dbd9571c23e2eca358185", "sha256": "2b0277ca148be430ddd480afe4d14de3ae32f59457ac87ab52db38a0d548a63f"}, "downloads": -1, "filename": "clickhouse-sqlalchemy-0.0.6.tar.gz", "has_sig": false, "md5_digest": "1f615896065dbd9571c23e2eca358185", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20169, "upload_time": "2018-07-20T16:42:58", "upload_time_iso_8601": "2018-07-20T16:42:58.063757Z", "url": "https://files.pythonhosted.org/packages/1f/bf/376f055b7e8b7278b09b80f0c7a875cae5bbcbc4efb62f45cfbe890dc027/clickhouse-sqlalchemy-0.0.6.tar.gz"}], "0.0.7": [{"comment_text": "", "digests": {"md5": "3505ef7e25c42fe33738d54cfc69bfcf", "sha256": "c976e13c4d33c3ef701f9a35d1974271bd3b6d04ef3c5c43d81814d0a890613c"}, "downloads": -1, "filename": "clickhouse-sqlalchemy-0.0.7.tar.gz", "has_sig": false, "md5_digest": "3505ef7e25c42fe33738d54cfc69bfcf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20191, "upload_time": "2018-07-31T16:51:02", "upload_time_iso_8601": "2018-07-31T16:51:02.873458Z", "url": "https://files.pythonhosted.org/packages/f0/e4/0554ce711f2ef4a9c53e725114fae8d8a2cf5b9649e47e654651bfd6068d/clickhouse-sqlalchemy-0.0.7.tar.gz"}], "0.0.8": [{"comment_text": "", "digests": {"md5": "a33ef04ba72ba17e6f001d52767a23be", "sha256": "843d1a4df79e6c18c927107c38953a9f60c7088209f76e818aa2c355e684b905"}, "downloads": -1, "filename": "clickhouse-sqlalchemy-0.0.8.tar.gz", "has_sig": false, "md5_digest": "a33ef04ba72ba17e6f001d52767a23be", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 21066, "upload_time": "2018-11-25T10:10:52", "upload_time_iso_8601": "2018-11-25T10:10:52.950193Z", "url": "https://files.pythonhosted.org/packages/be/a0/fd4a2a7784fe8f1c024ad8c8b298210fe16969d194d3fc87fed33e4b71ff/clickhouse-sqlalchemy-0.0.8.tar.gz"}], "0.0.9": [{"comment_text": "", "digests": {"md5": "1d6b3f2239576896c7384379b12c32c1", "sha256": "b7c26cda5633f0599d3dbc785f04feed763986887d11eee0aff848add2419c5f"}, "downloads": -1, "filename": "clickhouse-sqlalchemy-0.0.9.tar.gz", "has_sig": false, "md5_digest": "1d6b3f2239576896c7384379b12c32c1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 21237, "upload_time": "2019-01-21T07:21:34", "upload_time_iso_8601": "2019-01-21T07:21:34.868402Z", "url": "https://files.pythonhosted.org/packages/ce/78/6ee2fc764faef26b7b774f7287e32a4b377f155ce1e08c51364f923ac83c/clickhouse-sqlalchemy-0.0.9.tar.gz"}], "0.1.0": [{"comment_text": "", "digests": {"md5": "b4d7f1cbd3d54857f485062adc7085c0", "sha256": "99fb17eacb1c337b7cba4794b14a12c53d6bc79c53759287f67456cc578a5159"}, "downloads": -1, "filename": "clickhouse-sqlalchemy-0.1.0.tar.gz", "has_sig": false, "md5_digest": "b4d7f1cbd3d54857f485062adc7085c0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 25858, "upload_time": "2019-10-30T22:27:53", "upload_time_iso_8601": "2019-10-30T22:27:53.999652Z", "url": "https://files.pythonhosted.org/packages/9e/3f/236ba4c6fc46c6e5a84e402109cf00956e169b48bf53a64afc189b2dfe02/clickhouse-sqlalchemy-0.1.0.tar.gz"}], "0.1.1": [{"comment_text": "", "digests": {"md5": "c7459345b83091eee7368f930819cf53", "sha256": "ac67db5f3b659d839821af226141a6fda5846a11203b1236094bcffd6f1a95ad"}, "downloads": -1, "filename": "clickhouse-sqlalchemy-0.1.1.tar.gz", "has_sig": false, "md5_digest": "c7459345b83091eee7368f930819cf53", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 25811, "upload_time": "2019-10-30T23:56:47", "upload_time_iso_8601": "2019-10-30T23:56:47.546175Z", "url": "https://files.pythonhosted.org/packages/69/ad/9b723875da349e37575eea7212f36928f94ec1a63fa9663e82ed704eef23/clickhouse-sqlalchemy-0.1.1.tar.gz"}], "0.1.2": [{"comment_text": "", "digests": {"md5": "ec458b97cbced24023b1e54c006f01b2", "sha256": "b50d5031db51f8baa7e4dd32066778ac9097c0993320b4be7edfc2e41a247027"}, "downloads": -1, "filename": "clickhouse-sqlalchemy-0.1.2.tar.gz", "has_sig": false, "md5_digest": "ec458b97cbced24023b1e54c006f01b2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 25908, "upload_time": "2019-11-06T19:50:34", "upload_time_iso_8601": "2019-11-06T19:50:34.837773Z", "url": "https://files.pythonhosted.org/packages/48/bc/43389b93e65c12a339cb438d7c25ab163b99d71850bea19f7dd3c6b1ee8e/clickhouse-sqlalchemy-0.1.2.tar.gz"}], "0.1.3": [{"comment_text": "", "digests": {"md5": "48d908a4a3e319c8e036729bea187db6", "sha256": "44b046e0fde5993d5f81dda06463580a4ef448f078d375b07bd2f75e598a3d82"}, "downloads": -1, "filename": "clickhouse-sqlalchemy-0.1.3.tar.gz", "has_sig": false, "md5_digest": "48d908a4a3e319c8e036729bea187db6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 29552, "upload_time": "2020-04-04T15:03:15", "upload_time_iso_8601": "2020-04-04T15:03:15.712052Z", "url": "https://files.pythonhosted.org/packages/9f/72/ddb2fa343397cc3e1b264e30c8bd3ec239bd96d899a9dcbf0e0cc4898074/clickhouse-sqlalchemy-0.1.3.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "48d908a4a3e319c8e036729bea187db6", "sha256": "44b046e0fde5993d5f81dda06463580a4ef448f078d375b07bd2f75e598a3d82"}, "downloads": -1, "filename": "clickhouse-sqlalchemy-0.1.3.tar.gz", "has_sig": false, "md5_digest": "48d908a4a3e319c8e036729bea187db6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 29552, "upload_time": "2020-04-04T15:03:15", "upload_time_iso_8601": "2020-04-04T15:03:15.712052Z", "url": "https://files.pythonhosted.org/packages/9f/72/ddb2fa343397cc3e1b264e30c8bd3ec239bd96d899a9dcbf0e0cc4898074/clickhouse-sqlalchemy-0.1.3.tar.gz"}]}