{"info": {"author": "Olx", "author_email": "", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 3", "Topic :: Software Development :: Libraries :: Application Frameworks", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# BarterDude\n[![Build Status](https://travis-ci.com/olxbr/BarterDude.svg?branch=master)](https://travis-ci.com/olxbr/BarterDude)\n[![Coverage Status](https://coveralls.io/repos/github/olxbr/BarterDude/badge.svg?branch=master)](https://coveralls.io/github/olxbr/BarterDude?branch=master)\n\nMessage exchange engine to build pipelines using brokers like RabbitMQ. This project is build on top of the great [async-worker](https://github.com/b2wdigital/async-worker).\n\n![barter](https://github.com/olxbr/BarterDude/blob/master/barterdude.jpg)\n\n## Install\n\nUsing Python 3.6+\n\n```sh\npip install barterdude\n```\n\nif you want Prometheus integration, run the command:\n\n```sh\npip install barterdude[prometheus] # or pip install barterdude[all]\n```\n\n## Usage\n\nBuild your consumer with this complete example:\n\n```python\nfrom barterdude import BarterDude\nfrom barterdude.monitor import Monitor\nfrom barterdude.hooks.healthcheck import Healthcheck\nfrom barterdude.hooks.logging import Logging\nfrom barterdude.hooks.metrics.prometheus import Prometheus\nfrom asyncworker.rabbitmq.message import RabbitMQMessage\n\n# from my_project import MyHook # (you can build your own hooks)\n\n\n# configure RabbitMQ\nbarterdude = BarterDude(\n    hostname=\"localhost\",\n    username=\"guest\",\n    password=\"guest\",\n    prefetch=256,\n)\n\n# Prometheus labels for automatic metrics\nlabels = dict(\n    app_name=\"my_app\",\n    team_name=\"my_team\"\n)\nhealthcheck = Healthcheck(barterdude) # automatic and customizable healthcheck\nprometheus = Prometheus(barterdude, labels) # automatic and customizable Prometheus integration\n\nmonitor = Monitor(\n    healthcheck,\n    prometheus,\n    # MyHook(barterdude, \"/path\") # (will make localhost:8080/path url)\n    Logging() # automatic and customizable logging\n)\n\nmy_metric = prometheus.metrics.counter(name=\"fail\", description=\"fail again\")  # It's the same as https://github.com/prometheus/client_python\n\n\n@barterdude.consume_amqp(\n    [\"queue1\", \"queue2\"],\n    monitor,\n    coroutines = 10,  # number of coroutines spawned to consume messages (1 per message)\n    bulk_flush_interval = 60.0,  #  max waiting time for messages to start process n_coroutines\n    requeue_on_fail = True  # should retry or not the message\n)\nasync def your_consumer(msg: RabbitMQMessage): # you receive only one message and we parallelize processing for you\n    await barterdude.publish_amqp(\n        exchange=\"my_exchange\",\n        data=msg.body\n    )\n    if msg.body == \"fail\":\n        my_metric.inc() # you can use prometheus metrics\n        healthcheck.force_fail() # you can use your hooks inside consumer too\n        msg.reject(requeue=False) # You can force to reject a message, exactly equal https://b2wdigital.github.io/async-worker/src/asyncworker/asyncworker.rabbitmq.html#asyncworker.rabbitmq.message.RabbitMQMessage\n\n    if msg.body == \"exception\":\n        raise Exception() # this will reject the message and requeue\n\n    # if everything is fine, than message automatically is accepted\n\n\nbarterdude.run() # you will start consume and start a server on http://localhost:8080\n# Change host and port with ASYNCWORKER_HTTP_HOST and ASYNCWORKER_HTTP_PORT env vars\n\n```\n\n### Build your own Hook\n\n#### Base Hook (Simple One)\n\nThese hooks are called when message retreive, have success and fail.\n\n```python\nfrom barterdude.hooks import BaseHook\nfrom asyncworker.rabbitmq.message import RabbitMQMessage\n\nclass MyCounterHook(BaseHook):\n    _consume = _fail = _success = 0\n\n    async def on_success(self, message: RabbitMQMessage):\n        self._success += 1\n\n    async def on_fail(self, message: RabbitMQMessage, error: Exception):\n        self._fail += 1\n\n    async def before_consume(self, message: RabbitMQMessage):\n        self._consume += 1\n\n```\n\n#### Http Hook (Open Route)\n\nThese hooks can do everything simple hook does, but responding to a route.\n\n```python\nfrom aiohttp import web\nfrom barterdude.hooks import HttpHook\nfrom asyncworker.rabbitmq.message import RabbitMQMessage\n\nclass MyCounterHttpHook(HttpHook):\n    _consume = _fail = _success = 0\n\n    async def __call__(self, req: web.Request):\n        return web.json_response(dict(\n            consumed=self._consume,\n            success=self._success,\n            fail=self._fail\n        ))\n\n    async def on_success(self, message: RabbitMQMessage):\n        self._success += 1\n\n    async def on_fail(self, message: RabbitMQMessage, error: Exception):\n        self._fail += 1\n\n    async def before_consume(self, message: RabbitMQMessage):\n        self._consume += 1\n\n\n```\n\n### Data Sharing\n\nFollowing the approach found in [async-worker](https://b2wdigital.github.io/async-worker/userguide/asyncworker-app/storage.html) and in [aiohttp](https://docs.aiohttp.org/en/stable/web_advanced.html#data-sharing-aka-no-singletons-please),\n`BarterDude` discourages the use of global variables, aka singletons.\n\nTo share data states globally in an application, `BarterDude` behaves like a `dict`.\nAs an example, one can save a global-like variable in a  `BarterDude` instance:\n\n```python\nfrom barterdude import BarterDude\n\nbarterdude = BarterDude()\nbaterdude[\"my_variable\"] = data\n```\n\nand get it back in a consumer\n\n```python\nasync def consumer_access_storage(msg):\n    data = baterdude[\"my_variable\"]\n```\n\n### Testing\n\nTo test async consumers we recommend `asynctest` lib\n\n```python\nfrom asynctest import TestCase\n\n\nclass TestMain(TestCase):\n    def test_should_pass(self):\n        self.assertTrue(True)\n```\n\nWe hope you enjoy! :wink:\n\n## Contribute\n\nFor development and contributing, please follow [Contributing Guide](https://github.com/olxbr/BarterDude/blob/master/CONTRIBUTING.md) and **ALWAYS** respect the [Code of Conduct](https://github.com/olxbr/BarterDude/blob/master/CODE_OF_CONDUCT.md)", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/olxbr/BarterDude/archive/master.zip", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/olxbr/BarterDude/", "keywords": "", "license": "Apache 2", "maintainer": "", "maintainer_email": "", "name": "barterdude", "package_url": "https://pypi.org/project/barterdude/", "platform": "", "project_url": "https://pypi.org/project/barterdude/", "project_urls": {"Download": "https://github.com/olxbr/BarterDude/archive/master.zip", "Homepage": "https://github.com/olxbr/BarterDude/"}, "release_url": "https://pypi.org/project/barterdude/0.0.14/", "requires_dist": null, "requires_python": "", "summary": "Message exchange engine to build pipelines using brokers like RabbitMQ", "version": "0.0.14"}, "last_serial": 6851847, "releases": {"0.0.10": [{"comment_text": "", "digests": {"md5": "6aa83331cc7a7e8ebd2fd644cdc1c2e3", "sha256": "2e0d99bec7558c87625d1dfe0d2aea8e99c3a29c9b7dde97b9241423ebb9a643"}, "downloads": -1, "filename": "barterdude-0.0.10.tar.gz", "has_sig": false, "md5_digest": "6aa83331cc7a7e8ebd2fd644cdc1c2e3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14444, "upload_time": "2020-02-17T21:54:14", "upload_time_iso_8601": "2020-02-17T21:54:14.049368Z", "url": "https://files.pythonhosted.org/packages/e7/6a/1a9047d737d6da100ba118e5fe936e35c00f8a4ee3896e80002848399aec/barterdude-0.0.10.tar.gz"}], "0.0.11": [{"comment_text": "", "digests": {"md5": "c6bb45b9c57c24bf0befb5721292fdfe", "sha256": "4dd9fb006d0dec28818202adf41efc0d3302b3e862990b54a9a382faa6e430fb"}, "downloads": -1, "filename": "barterdude-0.0.11.tar.gz", "has_sig": false, "md5_digest": "c6bb45b9c57c24bf0befb5721292fdfe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14365, "upload_time": "2020-02-20T17:47:46", "upload_time_iso_8601": "2020-02-20T17:47:46.233477Z", "url": "https://files.pythonhosted.org/packages/c0/e5/117cbfa2cffe0541b525e08142a01638493a00e70e06eea89f5ef5b1a4e8/barterdude-0.0.11.tar.gz"}], "0.0.12": [{"comment_text": "", "digests": {"md5": "c273643caa078d2d95e787330afef9d5", "sha256": "363ff0762f2036ec1b2cfa21da8de89a4e22d1f692b66ea268b941f11a7c29c6"}, "downloads": -1, "filename": "barterdude-0.0.12.tar.gz", "has_sig": false, "md5_digest": "c273643caa078d2d95e787330afef9d5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14825, "upload_time": "2020-02-27T20:57:42", "upload_time_iso_8601": "2020-02-27T20:57:42.480606Z", "url": "https://files.pythonhosted.org/packages/c8/44/4e953cac182e4f1d50199270f0c7182fd0ce1b5c825e0ddf98d1abb67700/barterdude-0.0.12.tar.gz"}], "0.0.13": [{"comment_text": "", "digests": {"md5": "719eb78d3aece043e1d85d57b01f48ac", "sha256": "ade528cea953af8a1efa0d8999de5e4c48607c647659c62038e4b056e1f903c6"}, "downloads": -1, "filename": "barterdude-0.0.13.tar.gz", "has_sig": false, "md5_digest": "719eb78d3aece043e1d85d57b01f48ac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15486, "upload_time": "2020-03-02T14:54:32", "upload_time_iso_8601": "2020-03-02T14:54:32.829904Z", "url": "https://files.pythonhosted.org/packages/a6/db/99c3e088d94c42686cd704b7560e480fd0cbae6b5edde4f40a346b64b0dc/barterdude-0.0.13.tar.gz"}], "0.0.14": [{"comment_text": "", "digests": {"md5": "6a8d510081ff7261fe4d223d28b2ea7f", "sha256": "f42b6a04666450d5f8efcc997de907d2d82c68fe48e15d7afe62d0c8b227d1fb"}, "downloads": -1, "filename": "barterdude-0.0.14.tar.gz", "has_sig": false, "md5_digest": "6a8d510081ff7261fe4d223d28b2ea7f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17036, "upload_time": "2020-03-20T19:16:14", "upload_time_iso_8601": "2020-03-20T19:16:14.933500Z", "url": "https://files.pythonhosted.org/packages/e2/c2/f1396ceeeccd7a85977c024ba6ebf365de4b8db152ee3bfefe9840045e50/barterdude-0.0.14.tar.gz"}], "0.0.2": [{"comment_text": "", "digests": {"md5": "d174d546872238e9131ffbe458621856", "sha256": "bdd8a06c1e0e41230f0daab8051a836ee02be565ca19bccd2903815cf765ff6b"}, "downloads": -1, "filename": "barterdude-0.0.2.tar.gz", "has_sig": false, "md5_digest": "d174d546872238e9131ffbe458621856", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3687, "upload_time": "2020-02-12T21:29:44", "upload_time_iso_8601": "2020-02-12T21:29:44.415193Z", "url": "https://files.pythonhosted.org/packages/10/9a/fe5673d5fbe8c4f5ca2ee251d04af008b3b288983263197bbd2d95c61788/barterdude-0.0.2.tar.gz"}], "0.0.3": [{"comment_text": "", "digests": {"md5": "3a78eb9cbf1ba0c2177b10687fbdf6e4", "sha256": "06ea5b842cd283675fd1faa4aa8ed72726060b600a84ad49e8895ae5639817c6"}, "downloads": -1, "filename": "barterdude-0.0.3.tar.gz", "has_sig": false, "md5_digest": "3a78eb9cbf1ba0c2177b10687fbdf6e4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3909, "upload_time": "2020-02-12T21:38:24", "upload_time_iso_8601": "2020-02-12T21:38:24.093228Z", "url": "https://files.pythonhosted.org/packages/31/26/c8a28077cc15250467faf80ed426dce1f82b640d6fecae59730e2b7d182e/barterdude-0.0.3.tar.gz"}], "0.0.4": [{"comment_text": "", "digests": {"md5": "e9f83228b709003ddbe7de4e6834835b", "sha256": "747974a16653d1c30ee41fbc8ef1fe8ff71274f2107b2235caa6e5eabb98bfc8"}, "downloads": -1, "filename": "barterdude-0.0.4.tar.gz", "has_sig": false, "md5_digest": "e9f83228b709003ddbe7de4e6834835b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11761, "upload_time": "2020-02-12T21:48:42", "upload_time_iso_8601": "2020-02-12T21:48:42.039168Z", "url": "https://files.pythonhosted.org/packages/47/9e/2e71979384bb6d1c6e276a72c9e43db737e27bcf083b7702f05ad505927d/barterdude-0.0.4.tar.gz"}], "0.0.5": [{"comment_text": "", "digests": {"md5": "d5d4cdf0e000eeb74e3fff47ccfcfb9c", "sha256": "5e98d64e7f14595e930da959f660194c98ac0cfbd4aa266da754a1a917d9ceeb"}, "downloads": -1, "filename": "barterdude-0.0.5.tar.gz", "has_sig": false, "md5_digest": "d5d4cdf0e000eeb74e3fff47ccfcfb9c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11882, "upload_time": "2020-02-12T22:02:12", "upload_time_iso_8601": "2020-02-12T22:02:12.843599Z", "url": "https://files.pythonhosted.org/packages/29/ec/c99d6f8a03f68879b6d90643e13a38f15c2ffeed01758cf20924627d632f/barterdude-0.0.5.tar.gz"}], "0.0.6": [{"comment_text": "", "digests": {"md5": "7a5299cdb2a41e708b13864e274d3274", "sha256": "bd8d9dcd226d9fa0c53f600b1cd337f3b008304ad0b3a0a44978f2b54ae24500"}, "downloads": -1, "filename": "barterdude-0.0.6.tar.gz", "has_sig": false, "md5_digest": "7a5299cdb2a41e708b13864e274d3274", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11905, "upload_time": "2020-02-12T23:04:18", "upload_time_iso_8601": "2020-02-12T23:04:18.258947Z", "url": "https://files.pythonhosted.org/packages/5f/eb/3b2413445a66edd1841b9546484967b342f0cac50a771db1eb80d3bbbd14/barterdude-0.0.6.tar.gz"}], "0.0.7": [{"comment_text": "", "digests": {"md5": "2204e3897697ed4bc09d3d6396239c74", "sha256": "6915e21d4b376d3a15bca790a3528601b05ade29ad02d0eb0abf4e752af09d36"}, "downloads": -1, "filename": "barterdude-0.0.7.tar.gz", "has_sig": false, "md5_digest": "2204e3897697ed4bc09d3d6396239c74", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11901, "upload_time": "2020-02-12T23:06:43", "upload_time_iso_8601": "2020-02-12T23:06:43.986802Z", "url": "https://files.pythonhosted.org/packages/e6/77/b3100248b5f81d0109b44a02ba70a829afff45aaaff09b8fd007d0682277/barterdude-0.0.7.tar.gz"}], "0.0.8": [{"comment_text": "", "digests": {"md5": "3e12315c74b829f685377e3eb097012e", "sha256": "695885bfb545cfd2ae4460373f2e105ff8c90d15f525df6b5e6cd6ddc3db09f8"}, "downloads": -1, "filename": "barterdude-0.0.8.tar.gz", "has_sig": false, "md5_digest": "3e12315c74b829f685377e3eb097012e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11937, "upload_time": "2020-02-12T23:15:49", "upload_time_iso_8601": "2020-02-12T23:15:49.132314Z", "url": "https://files.pythonhosted.org/packages/84/2b/e4a78c626a96ae73a205100518abd4c723c5050e4d9370fafa2685004321/barterdude-0.0.8.tar.gz"}], "0.0.9": [{"comment_text": "", "digests": {"md5": "4236907d3d7da203688ed1e4e117e3da", "sha256": "5c92fdf66c73ba5d42e658abe631cb765b32f46f615170c8341dab45ab97ff93"}, "downloads": -1, "filename": "barterdude-0.0.9.tar.gz", "has_sig": false, "md5_digest": "4236907d3d7da203688ed1e4e117e3da", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14358, "upload_time": "2020-02-14T20:14:35", "upload_time_iso_8601": "2020-02-14T20:14:35.157022Z", "url": "https://files.pythonhosted.org/packages/f3/b5/d99a2ab1e8b46ff245c01d9a1a169fb2727030a0d12eb7dbf2b6c51937dc/barterdude-0.0.9.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "6a8d510081ff7261fe4d223d28b2ea7f", "sha256": "f42b6a04666450d5f8efcc997de907d2d82c68fe48e15d7afe62d0c8b227d1fb"}, "downloads": -1, "filename": "barterdude-0.0.14.tar.gz", "has_sig": false, "md5_digest": "6a8d510081ff7261fe4d223d28b2ea7f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17036, "upload_time": "2020-03-20T19:16:14", "upload_time_iso_8601": "2020-03-20T19:16:14.933500Z", "url": "https://files.pythonhosted.org/packages/e2/c2/f1396ceeeccd7a85977c024ba6ebf365de4b8db152ee3bfefe9840045e50/barterdude-0.0.14.tar.gz"}]}