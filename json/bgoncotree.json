{"info": {"author": "Barcelona Biomedical Genomics Lab", "author_email": "bbglab@irbbarcelona.org", "bugtrack_url": null, "classifiers": [], "description": "BGOncoTree\n==========\n\n.. |ot| replace:: **BGOncoTree**\n.. |tree| replace:: *oncotree*\n\n|ot| is a Python package to standardize the use of the OncoTree within the BBGLab.\n\n\nInstallation\n------------\n\n|ot| works with Python 3.5+ and can be installed with pip::\n\n\tpip install bgoncotree\n\n\n\nUsage\n-----\n\nAny use of |ot| requires to initialize the tree:\n\n.. code:: python\n\n\tfrom bgoncotree.main import BGOncoTree\n\n\ttree = BGOncoTree()\n\n|ot| accepts a file as argument if you want to `provide your own tree`_.\n\nEach node is composed by:\n\n- ``id``: short identifier of the node (e.g. ``ALL``)\n- ``parent``: ancestor node\n- ``children``: list of descendent nodes\n- ``synonyms``: list of alternative names that can be used to search for this node\n- ``name``: first provided synonym or node id\n\n\n\nPython\n******\n\nThe first thing to do is **initialize** the *BGOncoTree* object:\n\n.. code:: python\n\n\ttree = BGOncoTree()\n\nThe *BGOncoTree* object is a *dictionary* that you can query to **get\neach node**:\n\n.. code:: python\n\n\tnode = tree['CANCER']\n\nUsing the ID of the node or any synonym you can ``find`` the node:\n\n.. code:: python\n\n\tnode = tree.find('clear cell sarcoma')\n\n\nTo **explore** the tree, you can use the ``iter_from`` method:\n\n.. code:: python\n\n\tfor node, level in tree.iter_from(tree['ALL'], descending=True):\n\t\t...\n\nThe `level` is simply an integer indicating the level of nested with respect\nto the ``starting_node``.\nIf you want to explore the full tree, you can get the **root node** as:\n\n.. code:: python\n\n\troot_node = tree.root\n\n\nThe methods ``descendants`` and ``ancestors`` do the same as ``iter_from``\nbut you do not need to indicate the ``descending`` flag, the ``level`` is not\nreturned and node can also be a string. E.g.:\n\n.. code:: python\n\n\tfor node in tree.descendants('ALL'):\n\t\t...\n\n\n.. important:: `iter_from``, ``descendants`` and ``ancestors`` methods\n   return the starting node.\n\n\nThere are two other methods that you can make use of.\n``search`` can be used to **search** for all nodes containing a word\nin their names. E.g.:\n\n.. code:: python\n\n\tfor node in tree.search('acute'):\n\t\t...\n\nThe ``get`` method is useful if you expect only one result from a search.\nE.g.:\n\n.. code:: python\n\n\tnode = tree.get('Cholangiocarcinoma')\n\nThis method will raise an exception if none or more than 1 items are found.\n\n\nCommand line\n************\n\nThe command line provides two utilities to explore the tree\n``bgoncotree ancestors`` and ``bgoncotree descendants``.\nOutput can be formatted in json, and you can also set a recursion limit.\n\nSee first one level of childs of ``HEMATO`` node:\n\n.. code:: bash\n\n\tbgoncotree descendants --node HEMATO --json --limit 2\n\n\nIn addition, the same ``search`` function as in Python can be called\nfrom the command line as::\n\n\tbgoncotree search acute\n\n\nTab completion can be enabled adding\n``eval \"$(_BGONCOTREE_COMPLETE=source bgoncotree)\"`` to your ``.bashrc``\nfile as explained in the\n`bash completion section of Click <https://click.palletsprojects.com/en/7.x/bashcomplete/>`_\n\n\n\n.. _provide your own tree:\n\nDefining your own tree\n----------------------\n\n|ot| uses `bgdata <https://pypi.org/project/bgdata/>`_ to get the most recent\nversion of the |tree| used in the lab.\nHowever, you can pass a file with your own |tree|::\n\n\tfrom bgoncotree.main import BGOncoTree\n\n\ttree = BGOncoTree(file)\n\nIf you are interested in creating your own |tree|,\nyou need a ``tsv`` file with 2 columns: ``ID`` and ``PARENT``.\nEach node can only have 1 parent, and there must but one node without a\nparent: the root node.\n\nYou can provide an additional extra column ``NAMES`` with a comma separated\nlist of synonyms for each node. The first name will be used as the\nname to display.\n\nYou can **validate** your tree using the command line::\n\n\tbgoncotree validate my_tree.tsv", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/bgframework/bgoncotree", "keywords": "", "license": "Apache Software License 2.0", "maintainer": "", "maintainer_email": "", "name": "bgoncotree", "package_url": "https://pypi.org/project/bgoncotree/", "platform": "", "project_url": "https://pypi.org/project/bgoncotree/", "project_urls": {"Homepage": "https://bitbucket.org/bgframework/bgoncotree"}, "release_url": "https://pypi.org/project/bgoncotree/0.2/", "requires_dist": null, "requires_python": "", "summary": "BBGLab interface for an OncoTree", "version": "0.2"}, "last_serial": 6602414, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "d23afa331c3496e4f1c7c9627254af1e", "sha256": "81ef5f7a99323857f2966eff12ff5558c76671bf22c736e75ba3cd53d00105fd"}, "downloads": -1, "filename": "bgoncotree-0.1.tar.gz", "has_sig": false, "md5_digest": "d23afa331c3496e4f1c7c9627254af1e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7191, "upload_time": "2019-12-04T12:53:04", "upload_time_iso_8601": "2019-12-04T12:53:04.170204Z", "url": "https://files.pythonhosted.org/packages/f1/e6/4a156a752014baa7446bb51992198ad790b805523f49618e3a100e2bdfdd/bgoncotree-0.1.tar.gz"}], "0.2": [{"comment_text": "", "digests": {"md5": "bde57d0fadd0732c43865bd16bf0dc17", "sha256": "72aaedf92222b23ecdbb52c7fd948847dc33cef77848cd5f4506b5b610f1132b"}, "downloads": -1, "filename": "bgoncotree-0.2.tar.gz", "has_sig": false, "md5_digest": "bde57d0fadd0732c43865bd16bf0dc17", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7333, "upload_time": "2020-02-10T13:26:36", "upload_time_iso_8601": "2020-02-10T13:26:36.526484Z", "url": "https://files.pythonhosted.org/packages/ba/8c/3e2110912b2e6ebf3d6845da6af482e724d6883262f3acc73af409085fff/bgoncotree-0.2.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "bde57d0fadd0732c43865bd16bf0dc17", "sha256": "72aaedf92222b23ecdbb52c7fd948847dc33cef77848cd5f4506b5b610f1132b"}, "downloads": -1, "filename": "bgoncotree-0.2.tar.gz", "has_sig": false, "md5_digest": "bde57d0fadd0732c43865bd16bf0dc17", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7333, "upload_time": "2020-02-10T13:26:36", "upload_time_iso_8601": "2020-02-10T13:26:36.526484Z", "url": "https://files.pythonhosted.org/packages/ba/8c/3e2110912b2e6ebf3d6845da6af482e724d6883262f3acc73af409085fff/bgoncotree-0.2.tar.gz"}]}