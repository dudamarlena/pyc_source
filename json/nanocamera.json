{"info": {"author": "Ayo Ayibiowu", "author_email": "charlesayibiowu@hotmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3"], "description": "# NanoCamera [![MIT License](https://img.shields.io/github/license/mashape/apistatus.svg)](https://github.com/thehapyone/NanoCamera/blob/master/LICENSE)\nA simple to use camera interface for the Jetson Nano for working with USB and CSI cameras in Python.\n\nIt currently supports the following types of camera:\n*  Works with CSI Cameras (Tested and Works)\n*  Works with various USB cameras (Tested with Logitech USB camera)\n*  Works with IP Cameras (Future version)\n\n## Features\n* It is OpenCV ready. Image file can be called directly with OpenCV imshow\n* Image file is a numpy RGB array.\n* Support different Camera Flip Mode (Counterclockwise, Rotate 180 degress, Clockwise - 90 degrees, Horizontal Flip, Vertical Flip)\n* Can be used with multiple cameras\n* Support Frame rate enforcement. *Only available for USB cameras.\n* Frame rate enforcement ensures the cameras work at the given frame rate using gstreamer videorate plugin\n* It is based on [Accelerated GStreamer Plugins](https://developer.download.nvidia.com/embedded/L4T/r32_Release_v1.0/Docs/Accelerated_GStreamer_User_Guide.pdf?uIzwdFeQNE8N-vV776ZCUUEbiJxYagieFEqUoYFM9XSf9tbslxWqFKnVHu8erbZZS20A7ADAIgmSQJvXZTb0LkuGl9GoD5HJz4263HcmYWZW0t2OeFSJKZOfuWZ-lF51Pva2DSDtu2QPs-junm7BhMB_9AMQRwExuDb5zIhf_o8PIbA4KKo)\n* Should work with other Jetson boards like Jetson TX1, TX2 and others (Not tested)\n* Easily read images as ``numpy`` arrays with ``image = camera.read()``\n* Supports threaded read - available to all camera types. To enable a fast threaded read, you will to enable the enforce_fps: ``enforce_fps = True``\n\n## Requirements\nThis library requires OpenCV to be installed to work.\nIf you don't have OpenCV, you can install one with pip:\n```bash\npip3 install opencv-python \n```\n\n## Install\nInstallation is simple. Can be installed in two ways with Pip or Manually.\n##### Pip Installation\n```bash\npip3 install nanocamera \n```\n##### Manual Installation\n```bash\ngit clone https://github.com/thehapyone/NanoCamera\ncd NanoCamera\nsudo python3 setup.py install\n```\n\n## Usage & Example\nUsing NanoCamera is super easy. Below we show some usage examples.  You can find more in the [examples](https://github.com/thehapyone/NanoCamera/tree/master/examples).\n### Working with CSI Camera\nFor CSI Cameras, the ``camera_type = 0``.\n\nFind here for full [CSI camera example](https://github.com/thehapyone/NanoCamera/tree/master/examples/CSI_camera.py)\n\nPython Example - \nCreate CSI camera using default FPS=30, default image size: 640 by 480 and with no rotation (flip=0)\n```python\nimport nanocamera as nano\n# Create the Camera instance for 640 by 480\ncamera = nano.Camera()\n```\nCustomizing the width and height\n```python\nimport nanocamera as nano\n# Create the Camera instance for No rotation (flip=0) with size of 1280 by 800\ncamera = nano.Camera(flip=0, width=1280, height=800, fps=30)\n```\nif image is inverted, set ``flip = 2``\n\n### Working with USB Camera\nFor USB Cameras, set the ``camera_type = 1``, and set the ``device_id`` as well\nFind here for full [USB camera example](https://github.com/thehapyone/NanoCamera/tree/master/examples/USB_camera.py)\n\nPython Example - \nCreate USB camera connected to ``/dev/video1``\n\n```python\nimport nanocamera as nano\n# Create the Camera instance for No rotation (flip=0) with size of 640 by 480\ncamera = nano.Camera(camera_type=1, device_id=1, width=640, height=480, fps=30)\n```\n\nEnable frame rate enforcement i.e force the camera to work at the given frame rate\n```python\nimport nanocamera as nano\n# enforce the capture frame rate with the enforce_fps=True\ncamera = nano.Camera(camera_type=1, device_id=1, width=640, height=480, fps=30, enforce_fps=True)\n```\n\nYou can see connected USB cameras by running : \n```bash\nls /dev/video*\n```\n    # for usb camera /dev/video2, the device_id will be 2\n\n### Reading Camera\n\nCall ``read()`` to read the latest image as a ``numpy.ndarray``. The color format is ``BGR8``.\n\n```python\nframe = camera.read()\n```\n\nA Simple program to read from the CSI camera and display with OpenCV\n```python\nimport cv2\n#from nanocamera.NanoCam import Camera\nimport nanocamera as nano\n\nif __name__ == '__main__':\n    # Create the Camera instance\n    camera = nano.Camera(flip=0, width=640, height=480, fps=30)\n    print('CSI Camera is now ready')\n    while True:\n        try:\n            # read the camera image\n            frame = camera.read()\n            # display the frame\n            cv2.imshow(\"Video Frame\", frame)\n            if cv2.waitKey(25) & 0xFF == ord('q'):\n                break\n        except KeyboardInterrupt:\n            break\n\n    # close the camera instance\n    camera.release()\n\n    # remove camera object\n    del camera\n```\n## See also\n\n- [Platooning Robot](https://github.com/thehapyone/Platooning-Robot) - Resources for building collaborative robots\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/thehapyone/NanoCamera", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "nanocamera", "package_url": "https://pypi.org/project/nanocamera/", "platform": "", "project_url": "https://pypi.org/project/nanocamera/", "project_urls": {"Homepage": "https://github.com/thehapyone/NanoCamera"}, "release_url": "https://pypi.org/project/nanocamera/0.1.3/", "requires_dist": null, "requires_python": ">=3", "summary": "A Python camera interface for the Jetson Nano", "version": "0.1.3"}, "last_serial": 6482609, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "d3694ee32ea204e56ca94401da2e2b94", "sha256": "d45e48aa9c81defa031205746a8659b2d937367e3576a86c8fc93714b1feacef"}, "downloads": -1, "filename": "NanoCamera-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d3694ee32ea204e56ca94401da2e2b94", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 5205, "upload_time": "2020-01-12T17:31:02", "upload_time_iso_8601": "2020-01-12T17:31:02.453680Z", "url": "https://files.pythonhosted.org/packages/76/e8/4568ec81befa7ffc326c00df698954f84af3b7eb8a09f011fd3a59784701/NanoCamera-0.1.0-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "b44ccaaa3c28b1896e4c820d5f0ee486", "sha256": "9f0f597e3ea6fa2f650f64ec1bded0dcafaaf1c502798f32fadadb9427d7b9d2"}, "downloads": -1, "filename": "NanoCamera-0.1.0.tar.gz", "has_sig": false, "md5_digest": "b44ccaaa3c28b1896e4c820d5f0ee486", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 4223, "upload_time": "2020-01-12T17:31:05", "upload_time_iso_8601": "2020-01-12T17:31:05.118613Z", "url": "https://files.pythonhosted.org/packages/e8/d5/98adc42ff5ca4a8a471fcf8f9e2c1543613a4e40ca01c1c45e007e29c879/NanoCamera-0.1.0.tar.gz"}], "0.1.2": [{"comment_text": "", "digests": {"md5": "dfae4b535283fa9fb88ae159ac9e3e6c", "sha256": "0a2f636e30b45286ded2ffee11884122f7ce98c6dec797cbf668ab13b31824fc"}, "downloads": -1, "filename": "nanocamera-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "dfae4b535283fa9fb88ae159ac9e3e6c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 5216, "upload_time": "2020-01-15T07:57:43", "upload_time_iso_8601": "2020-01-15T07:57:43.838484Z", "url": "https://files.pythonhosted.org/packages/19/c7/604198367cdef4cde3197eaf011cab2dd96b70c0e729b8153120d1d0901d/nanocamera-0.1.2-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "690da12dd232b5263c16dbfb3f063d42", "sha256": "e71347ee86521220cca5afa0858ad27863ecffe9cb466d993dbb24d36a78ac7d"}, "downloads": -1, "filename": "nanocamera-0.1.2.tar.gz", "has_sig": false, "md5_digest": "690da12dd232b5263c16dbfb3f063d42", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 4225, "upload_time": "2020-01-15T07:57:45", "upload_time_iso_8601": "2020-01-15T07:57:45.715694Z", "url": "https://files.pythonhosted.org/packages/30/33/1b7105300dc8ad1aef14b9ed5df64654b70d92dc907d906d0336849b2fac/nanocamera-0.1.2.tar.gz"}], "0.1.3": [{"comment_text": "", "digests": {"md5": "fd991510b0afc3f409524073fc73520d", "sha256": "506c87e2aa95058103ee0dcee2112124e689aa5dd18f15c4a39354894eb92447"}, "downloads": -1, "filename": "nanocamera-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "fd991510b0afc3f409524073fc73520d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 5669, "upload_time": "2020-01-19T16:24:57", "upload_time_iso_8601": "2020-01-19T16:24:57.849524Z", "url": "https://files.pythonhosted.org/packages/d3/e2/dfd6c1f51af87b19d110d0c0e49fcc36e9cc5e3dd6bd7944280cb6d4dc41/nanocamera-0.1.3-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "1e6b6005b1ecce01e3c956f456fac26c", "sha256": "3af3486ae316264a15ee5cda3462329e76a5caf989af4ebd0b2859ad5c2753f6"}, "downloads": -1, "filename": "nanocamera-0.1.3.tar.gz", "has_sig": false, "md5_digest": "1e6b6005b1ecce01e3c956f456fac26c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 4692, "upload_time": "2020-01-19T16:24:59", "upload_time_iso_8601": "2020-01-19T16:24:59.198564Z", "url": "https://files.pythonhosted.org/packages/40/dc/1e66dc76ce290d52b977b16ae50375e98840a55186dfc23a63faf6661e3f/nanocamera-0.1.3.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "fd991510b0afc3f409524073fc73520d", "sha256": "506c87e2aa95058103ee0dcee2112124e689aa5dd18f15c4a39354894eb92447"}, "downloads": -1, "filename": "nanocamera-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "fd991510b0afc3f409524073fc73520d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 5669, "upload_time": "2020-01-19T16:24:57", "upload_time_iso_8601": "2020-01-19T16:24:57.849524Z", "url": "https://files.pythonhosted.org/packages/d3/e2/dfd6c1f51af87b19d110d0c0e49fcc36e9cc5e3dd6bd7944280cb6d4dc41/nanocamera-0.1.3-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "1e6b6005b1ecce01e3c956f456fac26c", "sha256": "3af3486ae316264a15ee5cda3462329e76a5caf989af4ebd0b2859ad5c2753f6"}, "downloads": -1, "filename": "nanocamera-0.1.3.tar.gz", "has_sig": false, "md5_digest": "1e6b6005b1ecce01e3c956f456fac26c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 4692, "upload_time": "2020-01-19T16:24:59", "upload_time_iso_8601": "2020-01-19T16:24:59.198564Z", "url": "https://files.pythonhosted.org/packages/40/dc/1e66dc76ce290d52b977b16ae50375e98840a55186dfc23a63faf6661e3f/nanocamera-0.1.3.tar.gz"}]}