{"info": {"author": "Mark van de Korput", "author_email": "dr.theman@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# pyevento\n[![Build Status](https://travis-ci.org/markkorput/pyevento.svg)](https://travis-ci.org/markkorput/pyevento)\n\n\nPython evento package, making the Observer pattern est\u00fapida sencillo.\n\n## Install\n\n```shell\npip install evento\n```\n\n## Usage\n\n```python\nfrom evento import Event\n\n# observers are simply methods\ndef observer(param1, param2):\n\tprint(', '.join([param1, param2]))\n\n# we need to create an instance for every event we want to fire\ndemo_event = Event()\n\n# subscribe observer to the event\ndemo_event += observer\n\n# trigger notifications for the event (run all observers)\ndemo_event('Hello', 'World') # => \"Hello, World\"\n```\n\n## Usage within classes\n\nThis is how Events are typically used to decouple code into separate classes;\n\n```python\nfrom evento import Event\n\nclass Action:\n\tdef __init__(self, name):\n\t\tself.name = name\n\t\tself.runEvent = Event()\n\n\tdef run(self):\n\t\t# do action-specific stuff\n\t\tself.runEvent(self)\n\nclass ActionCounter:\n\tdef __init__(self, action_performer):\n\t\tself.count = 0\n\t\tself.actionEvent = action_performer.runEvent\n\t\tself.actionEvent += self._onActionRun\n\n\tdef __del__(self):\n\t\t# observers should always make sure to _unsubscribe_ from events when they are done\n\t\tself.actionEvent -= self._onActionRun\n\n\tdef _onActionRun(self, action_performer):\n\t\tself.count += 1\n\t\tprint(\"'{0}' ran {1} times\".format(action_performer.name, self.count))\n\nperformer = Action('Foo action')\nobserver = ActionCounter(performer)\nperformer.run() # => \"'Foo action' ran 1 times\"\nperformer.run() # => \"'Foo action' ran 2 times\"\n```\n\n### Unsubscribe function returned by .add\n```python\n\n# setup\nevent = Event()\n\ndef setup():\n\tdef handler(value):\n\t\tprint(value)\n\n\tunsubscribe = event.add(handler)\n\treturn unsubscribe\n\ncleanup = setup()\n\n# do stuff\n# ...\n\n# cleanup\ncleanup()\n```\n\n\n\n## Decorators\n\nThe evento package provides the following decorators to easily add before and/or after events to any method:\n\n```python\n@triggers_before_event\n@triggers_after_event\n@triggers_beforeafter_events\n```\n\nThey can be used as followed:\n\n```python\nfrom evento import triggers_before_event, triggers_after_event, triggers_beforeafter_events\n\ndef before(event):\n    print('before')\n\ndef after(event):\n    print('after')\n\n@triggers_before_event\ndef before_action(param1):\n    print(param1)\n\n@triggers_after_event\ndef after_action(param1, param2, param3):\n    print(' '.join([param1, param2, param3]))\n\n@triggers_beforeafter_events\ndef both_action():\n    print('during')\n\n\nbefore_action('first before') # => \"first before\"\nafter_action('first after:', '1', '2') # => \"first after: 1 2\"\nboth_action() # => \"during\"\n\n# subscribe callbacks to the decorated methods\nbefore_action.subscribe(before)\nafter_action.subscribe(after)\nboth_action.subscribe(before, after)\n\nbefore_action('second before') # => \"before\\nsecond before\"\nafter_action('second after:', '3', '4') # => second after: 3 4\\nafter\"\nboth_action() # before\\nduring\\nafter\n\n```\n\nNote that these decorators simply wrap the function in a class that also holds a beforeEvent and/or afterEvent, which is/are triggered before/after the function is invoked. To clarify; within the context of the above example, the following two lines do exactly the same:\n\n```python\nbefore_action.subscribe(before)\nbefore_action.beforeEvent += before\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/markkorput/pyevento", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "evento", "package_url": "https://pypi.org/project/evento/", "platform": "", "project_url": "https://pypi.org/project/evento/", "project_urls": {"Homepage": "http://github.com/markkorput/pyevento"}, "release_url": "https://pypi.org/project/evento/1.0.2/", "requires_dist": null, "requires_python": "", "summary": "Observer pattern made muy facil", "version": "1.0.2"}, "last_serial": 6439568, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "5db368b09f3bb7bc0bf6b7961be2edad", "sha256": "f6b627d269c8f37f5296993632f3d1e6647753a06249e3312b03f12f3d011772"}, "downloads": -1, "filename": "evento-0.0.1.tar.gz", "has_sig": false, "md5_digest": "5db368b09f3bb7bc0bf6b7961be2edad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1572, "upload_time": "2016-09-13T00:13:36", "upload_time_iso_8601": "2016-09-13T00:13:36.098733Z", "url": "https://files.pythonhosted.org/packages/7c/01/7071be932beee8ae06c1e92eaf8df688e215a89766edfa91c666e85562ae/evento-0.0.1.tar.gz"}], "1.0.0": [{"comment_text": "", "digests": {"md5": "b6419f2c32b399cd4e9a61738df7bc27", "sha256": "7d2264c75cca1e8f8c8eb2e40b13e25224c9f1d5222268cbe738874cfe007e03"}, "downloads": -1, "filename": "evento-1.0.0.tar.gz", "has_sig": false, "md5_digest": "b6419f2c32b399cd4e9a61738df7bc27", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1843, "upload_time": "2016-09-13T01:38:10", "upload_time_iso_8601": "2016-09-13T01:38:10.437707Z", "url": "https://files.pythonhosted.org/packages/f3/0e/9f2d22f1a515a1f325980d9a897e628cbf724e9d29b80cd509dd2ff8de3c/evento-1.0.0.tar.gz"}], "1.0.1": [{"comment_text": "", "digests": {"md5": "7b39c9cc24980afbc31185b2dde33e35", "sha256": "2644a88e4e0a395f0d372ce0b5627506cb29547788bdd97e8fb2240dfe341b13"}, "downloads": -1, "filename": "evento-1.0.1.tar.gz", "has_sig": false, "md5_digest": "7b39c9cc24980afbc31185b2dde33e35", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1852, "upload_time": "2016-11-08T11:45:41", "upload_time_iso_8601": "2016-11-08T11:45:41.375248Z", "url": "https://files.pythonhosted.org/packages/95/68/65ca69971ab0727c11bf6b416579f4d692c7aa75f9cb663ece0e216edf46/evento-1.0.1.tar.gz"}], "1.0.2": [{"comment_text": "", "digests": {"md5": "3140fd1ba59a39864f8f012ece63f539", "sha256": "7a010c2a7d64b84dff06fb56a28d7e64b9234b15778bf96d526d6d839f181547"}, "downloads": -1, "filename": "evento-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "3140fd1ba59a39864f8f012ece63f539", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4884, "upload_time": "2020-01-12T12:26:32", "upload_time_iso_8601": "2020-01-12T12:26:32.449590Z", "url": "https://files.pythonhosted.org/packages/30/d5/84619ee45061a3a4658b883550eff5d18bb8ce1a8af4f2b61fcb7ab00337/evento-1.0.2-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "f86b238bba6d272a1417dab24f1b692b", "sha256": "093c054ae590b968c3c2c7852d02ddbaea25fc1305024f83dd636fcba3545871"}, "downloads": -1, "filename": "evento-1.0.2.tar.gz", "has_sig": false, "md5_digest": "f86b238bba6d272a1417dab24f1b692b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3597, "upload_time": "2020-01-12T12:26:33", "upload_time_iso_8601": "2020-01-12T12:26:33.971205Z", "url": "https://files.pythonhosted.org/packages/0b/65/eb6abbd4cd250c903645a27e357ff9f8e33b45f1eb126846807a3cd2e5d2/evento-1.0.2.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "3140fd1ba59a39864f8f012ece63f539", "sha256": "7a010c2a7d64b84dff06fb56a28d7e64b9234b15778bf96d526d6d839f181547"}, "downloads": -1, "filename": "evento-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "3140fd1ba59a39864f8f012ece63f539", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4884, "upload_time": "2020-01-12T12:26:32", "upload_time_iso_8601": "2020-01-12T12:26:32.449590Z", "url": "https://files.pythonhosted.org/packages/30/d5/84619ee45061a3a4658b883550eff5d18bb8ce1a8af4f2b61fcb7ab00337/evento-1.0.2-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "f86b238bba6d272a1417dab24f1b692b", "sha256": "093c054ae590b968c3c2c7852d02ddbaea25fc1305024f83dd636fcba3545871"}, "downloads": -1, "filename": "evento-1.0.2.tar.gz", "has_sig": false, "md5_digest": "f86b238bba6d272a1417dab24f1b692b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3597, "upload_time": "2020-01-12T12:26:33", "upload_time_iso_8601": "2020-01-12T12:26:33.971205Z", "url": "https://files.pythonhosted.org/packages/0b/65/eb6abbd4cd250c903645a27e357ff9f8e33b45f1eb126846807a3cd2e5d2/evento-1.0.2.tar.gz"}]}