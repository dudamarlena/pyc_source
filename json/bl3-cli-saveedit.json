{"info": {"author": "CJ Kucera", "author_email": "cj@apocalyptech.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: zlib/libpng License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Games/Entertainment :: First Person Shooters", "Topic :: Utilities"], "description": "# Borderlands 3 Commandline Savegame Editor\n\nThis project is a commandline Python-based Borderlands 3 Savegame\nEditor.  It's a companion to the very similar\n[CLI editor for BL2/TPS](https://github.com/apocalyptech/borderlands2),\nand provides some very similar functionality.  It can be used\nto level up your characters, unlock Mayhem modes early in the\ngame, unlock TVHM, add SDUs, unlock equipment slots, and more.\nOne thing it does *not* do yet is levelling up items/weapons.\n\nThis editor has only been tested on PC Savegames -- other platforms'\nsavegames are not supported at the moment.\n\nPlease keep the following in mind:\n\n- This app does not have any graphical interface.  You must be\n  on a commandline in order to use it.\n- It does not provide any mechanisms for creating items/weapons,\n  or even editing items/weapons in any useful fashion.\n- This also does *not* support editing the `profile.sav` file.\n- While I have not experienced any data loss with the app,\n  **take backups of your savegames before using this**, and\n  keep in mind that it could end up corrupting your saves.  If\n  you do encounter any data loss problems, please contact me\n  and I'll try to at least fix whatever bug caused it.\n\n# Installation\n\nThis editor requires [Python 3](https://www.python.org/), and has been\ntested on 3.7 and 3.8.  It also requires the [protobuf package](https://pypi.org/project/protobuf/).\n\nThe easiest way to install this app is via `pip`/`pip3`.  Once Python 3 is\ninstalled, you should be able to run this to install the app:\n\n    pip3 install bl3-cli-saveedit\n\nOnce installed, there should be a few new commandline utilities available\nto you.  The main editor is `bl3-save-edit`, and you can see its possible\narguments with `-h`/`--help`:\n\n    bl3-save-edit -h\n\nThere's also a `bl3-save-info` utility which just shows some information\nabout a specified savefile.  You can see its possible arguments with\n`-h`/`--help` as well:\n\n    bl3-save-info -h\n\nIf you've got a raw savegame protobuf file that you've hand-edited (or\notherwise processed) that you'd like to import into an existing savegame,\nyou can do that with `bl3-save-import-protobuf`:\n\n    bl3-save-import-protobuf -h\n\nAlternatively, if you've got a savegame exported as JSON that you'd like\nto import into an existing savegame, you can do that with\n`bl3-save-import-json`:\n\n    bl3-save-import-json -h\n\nFinally, there's a utility which I'd used to generate my\n[BL3 Savegame Archive Page](http://apocalyptech.com/games/bl-saves/bl3.php).\nThis one won't be useful to anyone but me, but you can view its arguments\nas well, if you like:\n\n    bl3-process-archive-saves -h\n\n### Upgrading\n\nWhen a new version is available, you can update using `pip3` like so:\n\n    pip3 install --upgrade bl3-cli-saveedit\n\nYou can check your current version by running any of the apps with the\n`-V`/`--version` argument:\n\n    bl3-save-info --version\n\n### Notes for People using Windows\n\nThis is a command-line utility, which means there's no graphical interface,\nand you'll have to run it from either a Windows `cmd.exe` prompt, or presumably\nrunning through PowerShell should work, too.  The first step is to\ninstall Python:\n\n- If you're on Windows 10, you can apparently just type `python3` into a command\n  prompt to be taken to the Windows store, where you can install Python with\n  just one click.\n- Alternatively, and for folks not on Windows 10, you can\n  [install Python from python.org](https://www.python.org/downloads/windows/).\n  Grab what's available in the 3.x series (at time of writing, that's either\n  3.8.2 or 3.7.7).\n\nWhen you install, make sure to check the checkbox which says something\nlike \"add to PATH\", so that you can run Python from the commandline directly.\n(That may only show up when installing manually, as opposed to the Windows Store\nmethod.)\n\nWhen it's installed, test that you can run it from the commandline.  Open up\neither `cmd.exe` or PowerShell, and make sure that you see something like this\nwhen you run `python -V`:\n\n    C:\\> python -V\n    Python 3.8.2\n\nIf that works, you can then run the `pip3 install bl3-cli-saveedit` command\nas mentioned above, and use the commandline scripts to edit to your heart's\ncontent.\n\n### Running from Github\n\nAlternatively, if you want to download or run the Github version of\nthe app: clone the repository and then install `protobuf` (you can\nuse `pip3 install -r requirements.txt` to do so, though a `pip3 install protobuf`\nwill also work just fine).\n\nYou can then run the scripts directly from the Github checkout, though\nyou'll have to use a slightly different syntax.  Here are the equivalents:\n\n    python -m bl3save.cli_edit -h\n    python -m bl3save.cli_info -h\n    python -m bl3save.cli_import_protobuf -h\n    python -m bl3save.cli_import_json -h\n    python -m bl3save.cli_archive -h\n\n# Editor Usage\n\nThis section will assume that you've installed via `pip3` - if you're using\na Github checkout, substitute the commands as appropriate, as per the\nInstallation section above.\n\n## Basic Operation\n\nAt its most basic, you can run the editor with only an input and output\nfile, and it will simply load and then re-encode the savegame.  For\ninstance, in this example, `old.sav` and `new.sav` will be identical as\nfar as BL3 is concerned:\n\n    bl3-save-edit old.sav new.sav\n\nIf `new.sav` exists, the utility will prompt you if you want to overwrite\nit.  If you want to force the utility to overwrite without asking,\nuse the `-f`/`--force` option:\n\n    bl3-save-edit old.sav new.sav -f\n\nAs the app processes files, it will output exactly what it's doing.  If\nyou prefer to have silent output (unless there's an error), such as if\nyou're using this to process a group of files in a loop, you can use\nthe `-q`/`--quiet` option:\n\n    bl3-save-edit old.sav new.sav -q\n\n## Output Formats\n\nThe editor can output files in a few different formats, and you can\nspecify the format using the `-o`/`--output` option, like so:\n\n    bl3-save-edit old.sav new.sav -o savegame\n    bl3-save-edit old.sav new.pbraw -o protobuf\n    bl3-save-edit old.sav new.json -o json\n    bl3-save-edit old.sav new.txt -o items\n\n- **savegame** - This is the default, if you don't specify an output\n  format.  It will save the game like a valid BL3 savegame.  This\n  will likely be your most commonly-used option.\n- **protobuf** - This will write out the raw, unencrypted Protobuf\n  entries contained in the savegame, which might be useful if you\n  want to look at them with a Protobuf viewer of some sort (such\n  as [this one](https://protogen.marcgravell.com/decode)), or to\n  make hand edits of your own.  Raw protobuf files can be imported\n  back into savegames using the separate `bl3-save-import-protobuf`\n  command, whose docs you can find near the bottom of this README.\n- **json** - Alternatively, this will write out the raw protobufs\n  as encoded into JSON.  Like the protobuf output, you should be\n  able to edit this by hand and then re-import using the\n  `bl3-save-import-json` utility.  **NOTE:** JSON import is not\n  super well-tested yet, so keep backups!\n- **items** - This will output a text file containing item codes\n  which can be read back in to other savegames.  It uses a format\n  similar to the item codes used by Gibbed's BL2/TPS editors.\n  (It will probably be identical to the codes used by Gibbed's BL3\n  editor, once that is released, but time will tell on that front.)\n\nKeep in mind that when saving in `items` format, basically all of\nthe other CLI arguments are pointless, since the app will only save\nout the items textfile.\n\n## Modifying the Savegame\n\nHere's a list of all the edits you can make to the savegame.  You\ncan specify as many of these as you want on the commandline, to\nprocess multiple changes at once.\n\n### Character Name\n\nThis can be done with the `--name` option:\n\n    bl3-save-edit old.sav new.sav --name \"Gregor Samsa\"\n\n### Save Game ID\n\nLike with BL2/TPS, I suspect that this ID isn't at all important, but\nthe editor can set it anyway with the `--save-game-id` option.  BL3\nitself sets the savegame ID to match the filename of the savegame, if\ninterpreted as a hex value (so `10.sav` would have an ID of `16`).\n\n    bl3-save-edit old.sav new.sav --save-game-id 2\n\n### Character Level\n\nYou can set your character to a specific level using `--level <num>`,\nor to the max level allowed by the game using `--level-max`\n\n    bl3-save-edit old.sav new.sav --level 20\n    bl3-save-edit old.sav new.sav --level-max\n\n### Mayhem Level\n\nThis is only really useful before you've got Mayhem Mode unlocked.\nYou can use the `--mayhem` argument to activate Mayhem mode even from\nthe very beginning of the game.  Note that you still won't have access\nto the Mayhem console on Sanctuary until it's properly unlocked by the\ngame, so this will be the only way of changing Mayhem mode until that\npoint in the game.  This will set the Mayhem level for all\nplaythroughs found in the game.\n\n    bl3-save-edit old.sav new.sav --mayhem 4\n\n### Currency (Money and Eridium)\n\nMoney and Eridium can be set with the `--money` and `--eridium`\narguments, respectively:\n\n    bl3-save-edit old.sav new.sav --money 20000000\n    bl3-save-edit old.sav new.sav --eridium 10000\n\n### Item Levels\n\nThere are two arguments to set item levels.  The first is to set\nall items/weapons in your inventory to match your character's level.\nIf you're also changing your character's level at the same time,\nitems/weapons will get that new level.  This can be done with\n`--items-to-char`\n\n    bl3-save-edit old.sav new.sav --items-to-char\n\nAlternatively, you can set an explicit level using `--item-levels`\n\n    bl3-save-edit old.sav new.sav --item-levels 57\n\n### Unlocks\n\nThere are a number of things you can unlock with the utility, all\nspecified using the `--unlock` argument.  You can specify this\nmultiple times on the commandline, to unlock more than one thing\nat once, like so:\n\n    bl3-save-edit old.sav new.sav --unlock ammo --unlock backpack\n\n#### Ammo/Backpack Unlocks\n\nThe `ammo` and `backpack` unlocks will give you the maximum number\nof SDUs for all ammo types, and your backpack space, respectively.\nThe `ammo` SDU unlock will also fill your ammo reserves.\n\n    bl3-save-edit old.sav new.sav --unlock ammo\n    bl3-save-edit old.sav new.sav --unlock backpack\n\n#### Eridian Resonator\n\nThe `resonator` unlock is what allows you to crack open Eridium\ndeposits throughout the game.  You ordinarily receive this as a\nreward for the plot mission \"Beneath the Meridian.\"\n\n    bl3-save-edit old.sav new.sav --unlock resonator\n\n#### Eridian Analyzer\n\nLikewise, the `analyzer` unlock is what allows you to decode\nthe Eridian writings scattered throughout BL3.  You ordinarily\nreceive this ability during the plot mission \"The Great Vault.\"\n\n    bl3-save-edit old.sav new.sav --unlock analyzer\n\n#### Inventory Slots\n\nYou can use the `gunslots`, `artifactslot`, and `comslot` unlocks\nto activate the inventory slots which are ordinarily locked until\ncertain points in the game.  You can also use the `allslots` to\nunlock all of them at once, rather than having to specify three\nunlocks.\n\n    bl3-save-edit old.sav new.sav --unlock gunslots\n    bl3-save-edit old.sav new.sav --unlock comslot\n    bl3-save-edit old.sav new.sav --unlock artifactslot\n\nOr: \n\n    bl3-save-edit old.sav new.sav --unlock allslots\n\n#### Vehicles\n\nYou can use the `vehicles` unlock to unlock all vehicles and\nvehicle parts.  Note that this does *not* prematurely unlock the\nCatch-A-Ride system.  You will still have to at least complete\nthe story mission with Ellie which unlocks those, to have access\nto the vehicles.\n\n    bl3-save-edit old.sav new.sav --unlock vehicles\n\n#### Vehicle Skins\n\nYou can use `vehicleskins` to unlock all vehicle skins, for all\nvehicle types.\n\n    bl3-save-edit old.sav new.sav --unlock vehicleskins\n\n#### TVHM\n\nYou can use the `tvhm` unlock to unlock TVHM mode early:\n\n    bl3-save-edit old.sav new.sav --unlock tvhm\n\n#### All Unlocks at Once\n\nYou can also use `all` to unlock all the various `--unlock`\noptions at once, without having to specify each one individually:\n\n    bl3-save-edit old.sav new.sav --unlock all\n\n### Copy NVHM State to THVM\n\nThe `--copy-nvhm` argument can be used to copy mission status,\nunlocked Fast Travels, Mayhem Mode, and Last Map Visited from Normal\nmode (NVHM) to TVHM, so your character in TVHM will be at basically\nthe exact same game state as in Normal.\n\n    bl3-save-edit old.sav new.sav --copy-nvhm\n\n### Import Items\n\nThe `-i`/`--import-items` option will let you import items into\na savegame, of the sort you can export using `-o items`.  Simply\nspecify a text file as the argument to `-i` and it will load in\nany line starting with `BL3(` as an item into the savegame:\n\n    bl3-save-edit old.sav new.sav -i items.txt\n\nNote that by default, the app will not allow Fabricators to be\nimported into a save, since the player doesn't have a good way to\nget rid of them.  You can tell the app to allow importing\nFabricators anyway with the `--allow-fabricator` option (which has\nno use when not used along with `-i`/`--import-items`)\n\n    bl3-save-edit old.sav new.sav -i items.txt --allow-fabricator\n\nIf the utility can't tell what an item is during import (which may\nhappen if BL3 has been updated but this editor hasn't been updated\nyet), it will refuse to import the unknown items, unless\n`--allow-fabricator` is specified, since the unknown item could be\na Fabricator.  Other edits and imports can still happen, however.\n\n# Importing Raw Protobufs\n\nIf you've saved a savegame in raw protobuf format (using the\n`-o protobuf` option, or otherwise), you may want to re-import it\ninto a savegame, perhaps after having edited it by hand.  This can\nbe done with the separate utility `bl3-save-import-protobuf`.  This\nrequires a `-p`/`--protobuf` argument to specify the file where\nthe raw protobuf is stored, and a `-t`/`--to-filename` argument,\nwhich specifies the filename to import the protobufs into:\n\n    bl3-save-import-protobuf -p edited.pbraw -t old.sav\n\nBy default this will prompt for confirmation before actually\noverwriting the file, but you can use the `-c`/`--clobber` option\nto force it to overwrite without asking:\n\n    bl3-save-import-protobuf -p edited.pbraw -t old.sav -c\n\n# Importing JSON\n\nIf you saved a savegame in JSON format (using the `-o json` option),\nyou may want to re-import it into a savegame, perhaps after having\nedited it by hand.  This can be done with the separate utility\n`bl3-save-import-json`.  This requires a `-j`/`--json` argument to\nspecify the file where the JSON is stored, and a `-t`/`--to-filename`\nargument, which specifies the filename to import the JSON into:\n\n    bl3-save-import-json -j edited.json -t old.sav\n\nBy default this will prompt for confirmation before actually\noverwriting the file, but you can use the `-c`/`--clobber` option\nto force it to overwrite without asking:\n\n    bl3-save-import-json -j edited.json -t old.sav -c\n\n**NOTE:** Importing from JSON isn't super well tested, though I\nhaven't found any problems yet.  Definitely keep backups if you're\nplanning on using this, though.  Let me know if anything breaks!\n\n# Savegame Info Usage\n\nThe `bl3-save-info` script is extremely simple, and just dumps a bunch\nof information about the specified savegame to the console.  If you\nspecify the `-v`/`--verbose` option, it'll output a little more info\nthan it ordinarily would, such as inventory contents and discovered\nFast Travel stations:\n\n    bl3-save-info -v old.sav\n\n# TODO\n\n- Would anyone appreciate an option to *delete* Fabricators?  Hm.\n- Something a bit more Enum-like for various things in `__init__.py`; I\n  know that's not very Pythonic, but when dealing with extra-Python data\n  formats, one must sometimes make exceptions.\n- Unit tests?\n\n# Credits\n\nThe encryption/decryption stanzas in `BL3Save.__init__` and `BL3Save.save_to`\nwere [helpfully provided by Gibbed](https://twitter.com/gibbed/status/1246863435868049410?s=19)\n(rick 'at' gibbed 'dot' us), so many thanks for that!  The protobuf definitions\nare also provided by Gibbed, from his\n[Borderlands3Protos](https://github.com/gibbed/Borderlands3Protos) repo,\nand used with permission.\n\nThe rest of the savegame format was gleaned from 13xforever/Ilya's\n`gvas-converter` project: https://github.com/13xforever/gvas-converter\n\nMany thanks also to Baysix, who endured an awful lot of basic questions about\npulling apart item serial numbers.  Without their help, we wouldn't have\nitem level editing (or nice item names in the output)!\n\n# License\n\nAll code in this project is licensed under the\n[zlib/libpng license](https://opensource.org/licenses/Zlib).  A copy is\nprovided in [COPYING.txt](COPYING.txt).\n\n# Changelog\n\n**v1.3.1** - April 14, 2020\n - Bah, forgot a few more README tweaks about the JSON export/import\n\n**v1.3.0** - April 14, 2020\n - Added `json` output type, to export the protobuf as encoded into JSON\n - Added `bl3-save-import-json` utility, to load JSON into a savegame\n\n**v1.2.2** - April 12, 2020\n - Updated README with some more specific Windows 10 installation advice.\n\n**v1.2.1** - April 12, 2020\n - Updated Credits section of the README with one more credit that I'd\n   wanted to put in but forgot. :)\n\n**v1.2.0** - April 12, 2020\n - Added ability to change item/weapon levels, using `--items-to-char`\n   or `--item-levels`\n - Item Imports will now *not* import Fabricators unless explicitly\n   told to with the `--allow-fabricator` option.\n - Item names and levels are now shown where appropriate:\n   - In verbose `bl3-save-info` output\n   - In item export files\n   - While importing items\n - Updated to Protobuf v3, which is what BL3 itself uses.  Now when we\n   re-save without any edits, the save should be identical to the\n   original savegame.\n - Item export will now be done without any encryption, so an item will\n   have the exact same item code regardless of where it came from\n   (previously, item codes would change every time the game was saved,\n   so the same item could have very different-looking codes)\n - Added `-V`/`--version` flag to show version number\n\n**v1.1.1** - April 7, 2020\n - Added in Citizen Science mission name.\n\n**v1.1.0** - April 7, 2020\n - Added `bl3-save-import-protobuf` command, to load a raw protobuf file\n   into an existing savegame.\n\n**v1.0.1** - April 5, 2020\n - Some saves include Eridium as an ammo type, presumably related to the\n   Fabricator.  Fixed a crash in `bl3-save-info` related to that.\n\n**v1.0.0** - April 5, 2020\n - Initial version\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/apocalyptech/bl3-cli-saveedit", "keywords": "", "license": "zlib/libpng", "maintainer": "", "maintainer_email": "", "name": "bl3-cli-saveedit", "package_url": "https://pypi.org/project/bl3-cli-saveedit/", "platform": "", "project_url": "https://pypi.org/project/bl3-cli-saveedit/", "project_urls": {"Homepage": "https://github.com/apocalyptech/bl3-cli-saveedit"}, "release_url": "https://pypi.org/project/bl3-cli-saveedit/1.3.1/", "requires_dist": ["protobuf (~=3.0)"], "requires_python": "", "summary": "Borderlands 3 Savegame Editor", "version": "1.3.1"}, "last_serial": 7020153, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "158be2b21fbbac2958680484d59867c1", "sha256": "52f55b3e691d6f97dfd3eca759e654e39763be57b174662f59e42518fe7c965d"}, "downloads": -1, "filename": "bl3_cli_saveedit-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "158be2b21fbbac2958680484d59867c1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 84249, "upload_time": "2020-04-05T18:59:46", "upload_time_iso_8601": "2020-04-05T18:59:46.179194Z", "url": "https://files.pythonhosted.org/packages/d5/d2/dfd491e0e1a8c6ad860bb1d74cb92d4a324c2029c15256259ce8f78a1c6a/bl3_cli_saveedit-1.0.0-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "b7951478b8a29dc0bb423257ff06f1be", "sha256": "1b434a6b74367a9a4105704b6ea70bb33dc27b2a1b230bdd2e27cae399aaff8d"}, "downloads": -1, "filename": "bl3-cli-saveedit-1.0.0.tar.gz", "has_sig": false, "md5_digest": "b7951478b8a29dc0bb423257ff06f1be", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 78594, "upload_time": "2020-04-05T18:59:48", "upload_time_iso_8601": "2020-04-05T18:59:48.682354Z", "url": "https://files.pythonhosted.org/packages/28/f7/a522a67b89a45e9c91af619772ca0beb874651ff519de9073b6ae3717a13/bl3-cli-saveedit-1.0.0.tar.gz"}], "1.0.1": [{"comment_text": "", "digests": {"md5": "98aca289dd65367012495ba91c52af8f", "sha256": "7242f82158797f85126f442bd663b055e1a5075ac5b8a289b5459443c4fd8cc3"}, "downloads": -1, "filename": "bl3_cli_saveedit-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "98aca289dd65367012495ba91c52af8f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 84535, "upload_time": "2020-04-06T04:54:48", "upload_time_iso_8601": "2020-04-06T04:54:48.807410Z", "url": "https://files.pythonhosted.org/packages/68/8d/46f9f169fab01ec68340c5677685ac545a655ebc976bc374123db2bfad62/bl3_cli_saveedit-1.0.1-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "567917f7428ef7855df3292c2c61295a", "sha256": "6c9f51133caf5fbf35068a73d3a6f826da302cdd1bcdfa5f5e5cb4f29c0656ae"}, "downloads": -1, "filename": "bl3-cli-saveedit-1.0.1.tar.gz", "has_sig": false, "md5_digest": "567917f7428ef7855df3292c2c61295a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 78889, "upload_time": "2020-04-06T04:54:49", "upload_time_iso_8601": "2020-04-06T04:54:49.994928Z", "url": "https://files.pythonhosted.org/packages/6d/bf/bd49b3872871bd85ba47da065a8b851eb9309c5294688b4df631f45b0ec1/bl3-cli-saveedit-1.0.1.tar.gz"}], "1.1.0": [{"comment_text": "", "digests": {"md5": "7fc9c31032ba0525abd766f575b555da", "sha256": "61ac15afd0ea56e13f9eb2bef86ea51ffa63eb0ad7a995cedbac6e5201b66a11"}, "downloads": -1, "filename": "bl3_cli_saveedit-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "7fc9c31032ba0525abd766f575b555da", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 86999, "upload_time": "2020-04-07T15:52:54", "upload_time_iso_8601": "2020-04-07T15:52:54.509041Z", "url": "https://files.pythonhosted.org/packages/d7/4f/245549fe17d7dbc6ad0527d80e95a02b1a151af8297e27789158ea3e09e1/bl3_cli_saveedit-1.1.0-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "4d2eb9d6a6cb531287198c91c43ab587", "sha256": "3f835643c47ee1c27bf69d63c9c82c823f459495fd9b9e2e369f849f5d915ae4"}, "downloads": -1, "filename": "bl3-cli-saveedit-1.1.0.tar.gz", "has_sig": false, "md5_digest": "4d2eb9d6a6cb531287198c91c43ab587", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 80774, "upload_time": "2020-04-07T15:52:56", "upload_time_iso_8601": "2020-04-07T15:52:56.094977Z", "url": "https://files.pythonhosted.org/packages/75/0e/87615b26c3dfcdc1c8dcba2f31bd204a93a018a472803b374a9623a90420/bl3-cli-saveedit-1.1.0.tar.gz"}], "1.1.1": [{"comment_text": "", "digests": {"md5": "ae5d6d94a05f40f9bafefbec837541a9", "sha256": "addb40f1e4e62f3ca1b8899cb47c622e6f8888f025d6829da9daac13bfecd470"}, "downloads": -1, "filename": "bl3_cli_saveedit-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ae5d6d94a05f40f9bafefbec837541a9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 87008, "upload_time": "2020-04-07T18:07:44", "upload_time_iso_8601": "2020-04-07T18:07:44.882635Z", "url": "https://files.pythonhosted.org/packages/a0/85/3a37ba2df5dec9d9c3909fb2a8cf5ccf975cee363bb235ecdb21f45510d1/bl3_cli_saveedit-1.1.1-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "dee9a432ceacb1a5c91a06a301d65b05", "sha256": "7e9cfe75466f1bb6d75e59837accaa84361f239b5b0aad15892222ae8e03eda0"}, "downloads": -1, "filename": "bl3-cli-saveedit-1.1.1.tar.gz", "has_sig": false, "md5_digest": "dee9a432ceacb1a5c91a06a301d65b05", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 80783, "upload_time": "2020-04-07T18:07:46", "upload_time_iso_8601": "2020-04-07T18:07:46.239344Z", "url": "https://files.pythonhosted.org/packages/2a/b3/684824794880fb83825bd72f8e8418f594ba8b7bead511038cf2067e8114/bl3-cli-saveedit-1.1.1.tar.gz"}], "1.2.0": [{"comment_text": "", "digests": {"md5": "466797234e03f0aa75526f75d2982ee2", "sha256": "d8578398c9b13dd21bebb959af73f8560549f35ed042353ca9ac5ab5b724f6c9"}, "downloads": -1, "filename": "bl3_cli_saveedit-1.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "466797234e03f0aa75526f75d2982ee2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 184166, "upload_time": "2020-04-12T16:07:04", "upload_time_iso_8601": "2020-04-12T16:07:04.130305Z", "url": "https://files.pythonhosted.org/packages/5a/54/22b66873fa8208997bb3d565c0000ec1206c5481c273352d99b79df06b5b/bl3_cli_saveedit-1.2.0-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "c53bc62dc221138f5d124e966456b74c", "sha256": "f9d2ef3dfcde7a36548b0b5eac773c8cf605d02b4f2d6729ec7ddd236ad2d24f"}, "downloads": -1, "filename": "bl3-cli-saveedit-1.2.0.tar.gz", "has_sig": false, "md5_digest": "c53bc62dc221138f5d124e966456b74c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 179923, "upload_time": "2020-04-12T16:07:05", "upload_time_iso_8601": "2020-04-12T16:07:05.688971Z", "url": "https://files.pythonhosted.org/packages/9a/a8/1bfd13b4e6f272a0e99ef70ad7fcf1b09163f67f77597a08b517e622f01a/bl3-cli-saveedit-1.2.0.tar.gz"}], "1.2.1": [{"comment_text": "", "digests": {"md5": "85bc2494a7e62072ea8ccb36f567c628", "sha256": "2b078c79c53f42b0ce4d3ef619dc201bb5bc1935adf4229d7c41e3d821060d65"}, "downloads": -1, "filename": "bl3_cli_saveedit-1.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "85bc2494a7e62072ea8ccb36f567c628", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 184464, "upload_time": "2020-04-12T16:11:01", "upload_time_iso_8601": "2020-04-12T16:11:01.429151Z", "url": "https://files.pythonhosted.org/packages/2e/cf/fba7d5d607c4f46c3a39f522cfa226a5ccabf9a8cb733c6197952f4f33e1/bl3_cli_saveedit-1.2.1-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "22dfac8ee45dd5f6c4e78fe60100886f", "sha256": "01dc2344b257c9a29077f1e13d562a7f920d3ac9d9b7487731cfa1916658c48b"}, "downloads": -1, "filename": "bl3-cli-saveedit-1.2.1.tar.gz", "has_sig": false, "md5_digest": "22dfac8ee45dd5f6c4e78fe60100886f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 180253, "upload_time": "2020-04-12T16:11:02", "upload_time_iso_8601": "2020-04-12T16:11:02.869013Z", "url": "https://files.pythonhosted.org/packages/65/9c/068ddf23b40ef43e2e1e82df6a46256e3af945bde91c1e923d6c89691282/bl3-cli-saveedit-1.2.1.tar.gz"}], "1.2.2": [{"comment_text": "", "digests": {"md5": "a8849010047103f9cbd3c85b04aae0b8", "sha256": "73021f6530133d9abca5b109bc4fb9b834a4af5d518d873dd3e38f3cdf33eda7"}, "downloads": -1, "filename": "bl3_cli_saveedit-1.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "a8849010047103f9cbd3c85b04aae0b8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 184808, "upload_time": "2020-04-12T20:47:21", "upload_time_iso_8601": "2020-04-12T20:47:21.391795Z", "url": "https://files.pythonhosted.org/packages/2c/ce/0b3a0ccec00766991bc5c6841625c362ab413c1cb72488dbef01656a5363/bl3_cli_saveedit-1.2.2-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "5590baed2b426acce0c88aa41f3a04f2", "sha256": "459ffc03330c1299d1468ef8262886fb9d0a7985ab6e31ef95206c8f83869f1a"}, "downloads": -1, "filename": "bl3-cli-saveedit-1.2.2.tar.gz", "has_sig": false, "md5_digest": "5590baed2b426acce0c88aa41f3a04f2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 180637, "upload_time": "2020-04-12T20:47:22", "upload_time_iso_8601": "2020-04-12T20:47:22.769923Z", "url": "https://files.pythonhosted.org/packages/0d/93/10d21cf85996c978fac9cca983303f7bd94d7c8b3a8471dba2e25d56e9fb/bl3-cli-saveedit-1.2.2.tar.gz"}], "1.3.0": [{"comment_text": "", "digests": {"md5": "eca069fe6d53e296ca1fe3cd552fb379", "sha256": "83712c08c14cf8d02a12144fb11124870d58e54cfbef08a133a5c8ab20d62fe7"}, "downloads": -1, "filename": "bl3_cli_saveedit-1.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "eca069fe6d53e296ca1fe3cd552fb379", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 187077, "upload_time": "2020-04-14T20:50:20", "upload_time_iso_8601": "2020-04-14T20:50:20.640897Z", "url": "https://files.pythonhosted.org/packages/88/97/ca0b88e85ce551bc7ca62bdb7297210c345800c4b8e42b7af68002eb9b3c/bl3_cli_saveedit-1.3.0-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "9f75a1a78cb9726f30ff8d66da871959", "sha256": "3b1bf1d95527ead981cd230a667e7cf4f67df5a28769b7a177eaa314eb3d363f"}, "downloads": -1, "filename": "bl3-cli-saveedit-1.3.0.tar.gz", "has_sig": false, "md5_digest": "9f75a1a78cb9726f30ff8d66da871959", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 182077, "upload_time": "2020-04-14T20:50:22", "upload_time_iso_8601": "2020-04-14T20:50:22.355782Z", "url": "https://files.pythonhosted.org/packages/9c/5e/facd87b44384df13c959bb7f14978fb70464884963fe61699a407a96b2e6/bl3-cli-saveedit-1.3.0.tar.gz"}], "1.3.1": [{"comment_text": "", "digests": {"md5": "cc6b70a8e37841a0100f0d537cd8f8d4", "sha256": "1b87cc6766ad716c6a8c4e1ac93734fec5d435689705f6c7dd9de0c0861919d2"}, "downloads": -1, "filename": "bl3_cli_saveedit-1.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "cc6b70a8e37841a0100f0d537cd8f8d4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 187212, "upload_time": "2020-04-14T20:53:51", "upload_time_iso_8601": "2020-04-14T20:53:51.676686Z", "url": "https://files.pythonhosted.org/packages/70/ed/5a265d7cecae5e3a0d772a4ec72fb87a5c468b533a4310b9fee93da10c8e/bl3_cli_saveedit-1.3.1-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "aeaae7ea1ebc4cce47c706f2c261aa0e", "sha256": "3904706303b9f3cf85f3999425c99f31fd9845b5960ff9b1b78b48bebf02996c"}, "downloads": -1, "filename": "bl3-cli-saveedit-1.3.1.tar.gz", "has_sig": false, "md5_digest": "aeaae7ea1ebc4cce47c706f2c261aa0e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 182256, "upload_time": "2020-04-14T20:53:53", "upload_time_iso_8601": "2020-04-14T20:53:53.335409Z", "url": "https://files.pythonhosted.org/packages/7e/d5/27281f4ff1ca5de0a3acfbcfb0bbe6313e1e79ee201ec8971f80466a1cab/bl3-cli-saveedit-1.3.1.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "cc6b70a8e37841a0100f0d537cd8f8d4", "sha256": "1b87cc6766ad716c6a8c4e1ac93734fec5d435689705f6c7dd9de0c0861919d2"}, "downloads": -1, "filename": "bl3_cli_saveedit-1.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "cc6b70a8e37841a0100f0d537cd8f8d4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 187212, "upload_time": "2020-04-14T20:53:51", "upload_time_iso_8601": "2020-04-14T20:53:51.676686Z", "url": "https://files.pythonhosted.org/packages/70/ed/5a265d7cecae5e3a0d772a4ec72fb87a5c468b533a4310b9fee93da10c8e/bl3_cli_saveedit-1.3.1-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "aeaae7ea1ebc4cce47c706f2c261aa0e", "sha256": "3904706303b9f3cf85f3999425c99f31fd9845b5960ff9b1b78b48bebf02996c"}, "downloads": -1, "filename": "bl3-cli-saveedit-1.3.1.tar.gz", "has_sig": false, "md5_digest": "aeaae7ea1ebc4cce47c706f2c261aa0e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 182256, "upload_time": "2020-04-14T20:53:53", "upload_time_iso_8601": "2020-04-14T20:53:53.335409Z", "url": "https://files.pythonhosted.org/packages/7e/d5/27281f4ff1ca5de0a3acfbcfb0bbe6313e1e79ee201ec8971f80466a1cab/bl3-cli-saveedit-1.3.1.tar.gz"}]}