{"info": {"author": "Asghar Dadashzadeh", "author_email": "dev@ippanel.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3"], "description": "# IPPanel SMS api SDK\n\nThis repository contains open source Python client for `ippanel` api. Documentation can be found at: <http://docs.ippanel.com>.\n\n[![Build Status](https://travis-ci.org/ippanel/python-rest-sdk.svg?branch=master)](https://travis-ci.org/ippanel/python-rest-sdk)\n\n## Installation\n\nyou can install this package with either pip:\n\n```bash\npip install ippanel\n```\n\nor running bellow command after downloading source:\n\n```bash\npython setup.py install\n```\n\n## Examples\n\nFor using sdk, you have to create a client instance that gives you available methods on API\n\n```python\nfrom ippanel import Client\n\n# you api key that generated from panel\napi_key = \"api-key\"\n\n# create client instance\nsms = Client(api_key)\n\n...\n```\n\n### Credit check\n\n```python\n# return float64 type credit amount\ncredit = sms.get_credit()\n\n```\n\n### Send one to many\n\nFor sending sms, obviously you need `originator` number, `recipients` and `message`.\n\n```python\nbulk_id = sms.send(\n    \"+9810001\",          # originator\n    [\"98912xxxxxxx\"],    # recipients\n    \"ippanel is awesome\" # message\n)\n\n```\n\nIf send is successful, a unique tracking code returned and you can track your message status with that.\n\n### Get message summery\n\n```python\nbulk_id = \"message-tracking-code\"\n\nmessage = sms.get_message(bulk_id)\n\nprint(message.status)  # get message status\nprint(message.cost)    # get message cost\nprint(message.payback) # get message payback\n```\n\n### Get message delivery statuses\n\n```python\nbulk_id = \"message-tracking-code\"\n\nstatuses, pagination_info = sms.fetch_statuses(bulk_id, 0, 10)\n\n# you can loop in messages statuses list\nfor status in statuses {\n    print(\"Recipient: %s, Status: %s\" % (status.recipient, status.status))\n}\n\nprint(\"Total: \", pagination_info.total)\n```\n\n### Inbox fetch\n\nfetch inbox messages\n\n```python\nmessages, pagination_info = sms.fetch_inbox(0, 10)\n\nfor message in messages {\n    print(\"Received message %s from number %s in line %s\" % (message.message, message.sender, message.number))\n}\n```\n\n### Pattern create\n\nFor sending messages with predefined pattern(e.g. verification codes, ...), you hav to create a pattern. a pattern at least have a parameter. parameters defined with `%param_name%`.\n\n```python\npattern = sms.create_pattern(r\"%name% is awesome\", False)\n\nprint(pattern.code)\n```\n\n### Send with pattern\n\n```python\npattern_values = {\n    \"name\": \"IPPANEL\",\n}\n\nbulk_id = sms.send_pattern(\n    \"t2cfmnyo0c\",    # pattern code\n    \"+9810001\",      # originator\n    \"98912xxxxxxx\",  # recipient\n    pattern_values,  # pattern values\n)\n```\n\n### Error checking\n\n```python\nfrom ippanel import HTTPError, Error, ResponseCode\n\ntry:\n    bulk_id = sms.send(\"9810001\", [\"98912xxxxx\"], \"ippanel is awesome\")\nexcept Error as e: # ippanel sms error\n    print(\"Error handled => code: %s, message: %s\" % (e.code, e.message))\n    if e.code == ResponseCode.ErrUnprocessableEntity.value:\n        for field in e.message:\n            print(\"Field: %s , Errors: %s\" % (field, e.message[field]))\nexcept HTTPError as e: # http error like network error, not found, ...\n    print(\"Error handled => code: %s\" % (e))\n\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ippanel/python-rest-sdk", "keywords": "", "license": "BSD-2-Clause", "maintainer": "", "maintainer_email": "", "name": "ippanel", "package_url": "https://pypi.org/project/ippanel/", "platform": "", "project_url": "https://pypi.org/project/ippanel/", "project_urls": {"Homepage": "https://github.com/ippanel/python-rest-sdk"}, "release_url": "https://pypi.org/project/ippanel/1.1.0/", "requires_dist": null, "requires_python": "", "summary": "ippanel sdk", "version": "1.1.0"}, "last_serial": 6653120, "releases": {"1.1.0": [{"comment_text": "", "digests": {"md5": "49e2e02fc4ed59f0238c78deb696e488", "sha256": "9c224c985d028ff7a1f5cb624737eddbd53e3b713843967b3aa37d129466a2c9"}, "downloads": -1, "filename": "ippanel-1.1.0.tar.gz", "has_sig": false, "md5_digest": "49e2e02fc4ed59f0238c78deb696e488", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6834, "upload_time": "2020-02-18T13:00:05", "upload_time_iso_8601": "2020-02-18T13:00:05.071891Z", "url": "https://files.pythonhosted.org/packages/5b/b4/7d6a42fe9ec033da2c9750ad548fb4c4edd5c92720fff25dc21b2a613b26/ippanel-1.1.0.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "49e2e02fc4ed59f0238c78deb696e488", "sha256": "9c224c985d028ff7a1f5cb624737eddbd53e3b713843967b3aa37d129466a2c9"}, "downloads": -1, "filename": "ippanel-1.1.0.tar.gz", "has_sig": false, "md5_digest": "49e2e02fc4ed59f0238c78deb696e488", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6834, "upload_time": "2020-02-18T13:00:05", "upload_time_iso_8601": "2020-02-18T13:00:05.071891Z", "url": "https://files.pythonhosted.org/packages/5b/b4/7d6a42fe9ec033da2c9750ad548fb4c4edd5c92720fff25dc21b2a613b26/ippanel-1.1.0.tar.gz"}]}