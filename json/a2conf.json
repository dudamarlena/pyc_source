{"info": {"author": "Yaroslav Polyakov", "author_email": "yaroslaff@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License"], "description": "a2conf is utility and python module to work with apache2 config files.\n\nFor all examples we will use file [example.conf](https://gitlab.com/yaroslaff/a2conf/raw/master/examples/example.conf)\nwhich is available `examples/example.conf`. Use `export PYTHONPATH=.` to use module if it's not installed.\n\n# Installation\nUsual simple way:\n~~~\npip3 install a2conf\n~~~\n\nor get sources from git repo:\n~~~\ngit clone https://gitlab.com/yaroslaff/a2conf.git\n~~~\nIf using git sources (without installing), work from root dir of repo and do `export PYTONPATH=.`\n\n\n# CLI utilities\n## a2conf.py utility\n### Examples\nJust smart grep\n~~~shell\n$ bin/a2conf examples/example.conf --cmd ServerName ServerAlias\nServerName example.com\nServerAlias www.example.com example.com 1.example.com 2.example.com\nServerName example.com\nServerAlias www.example.com 1.example.com 2.example.com secure.example.com\n\n$ bin/a2conf examples/example.conf --cmd SSLCertificateFile\nSSLCertificateFile /etc/letsencrypt/live/example.com/fullchain.pem\n~~~\n\nOnly arguments:\n~~~shell\n# All arguments (including duplicates)\n$ bin/a2conf examples/example.conf --cmd ServerName ServerAlias --args\nexample.com www.example.com example.com 1.example.com 2.example.com example.com www.example.com 1.example.com 2.example.com secure.example.com\n\n# Only unique arguments\n$ bin/a2conf examples/example.conf --cmd ServerName ServerAlias --uargs\nsecure.example.com 1.example.com www.example.com example.com 2.example.com\n~~~\n\nFiltering:\n~~~shell\n# Only SSL hosts. Note: secure.example.com listed\n$ bin/a2conf examples/example.conf --cmd ServerName ServerAlias --uargs --filter sslengine on\n1.example.com example.com secure.example.com 2.example.com www.example.com\n\n# Inverted filtering, hosts without SSLEngine on. Note: secure.example.com not listed\n$ bin/a2conf examples/example.conf --cmd ServerName ServerAlias --uargs --filter sslengine on --neg\nexample.com 2.example.com 1.example.com www.example.com\n~~~\n\nPer-vhost info:\n~~~shell\n# show documentroot for virtualhosts\n$ bin/a2conf examples/example.conf  --cmd servername serveralias --uargs --vhost '{vhostargs} {servername} {documentroot}'\n*:80 example.com /var/www/example\n*:443 example.com /var/www/example\n\n# ... only for virtualhosts with SSLEngine On\n$ bin/a2conf examples/example.conf  --cmd servername serveralias --uargs --vhost '{vhostargs} {servername} {documentroot}' --filter sslengine on\n*:443 example.com /var/www/example\n\n# What certfile we use for secure.example.com ?\n$ bin/a2conf examples/example.conf --vhost '{servername} {sslcertificatefile}' --filter ServerName,ServerAlias secure.example.com\nexample.com /etc/letsencrypt/live/example.com/fullchain.pem\n\n# What certfile we use for 1.example.com (more good-style error-prone approach) ?\n$ bin/a2conf examples/example.conf --vhost '{servername} {sslcertificatefile}' --filter ServerName,ServerAlias 1.example.com  --undef _skip\nexample.com /etc/letsencrypt/live/example.com/fullchain.pem\n~~~\nYou can get list of all available tokens for `--vhost` option in verbose mode (`-v` option).\n\n## a2certbot.py\na2certbot.py utility used to quickly detect common LetsEncrypt configuration errors such as:\n- Different DocumentRoot in vhost and letsencrypt (e.g. if someone moved site)\n- RewriteRule or Redirect apache directives preventing verification\n- DNS record points to other host or not exists at all\n- And **ANY OTHER** problem (such as using wrong certificate path in apache or whatever). a2certbot.py \nsimulates HTTP verification (If LetsEncrypt verification fails, a2certbot will fail too, and vice versa).\n\na2certbot.py does not calls LetsEncrypt servers for verification, so if you will use a2certbot.py to verify your \nconfiguration, you will not hit [failed validation limit](https://letsencrypt.org/docs/rate-limits/) \n(*5 failures per account, per hostname, per hour* at moment) and will not be blacklisted on LetsEncrypt site.\n\nBefore requesting new certificates:\n~~~shell\n# Verify configuration for website for which you want to request certificate for first time.\nbin/a2certbot.py --prepare -w /var/www/virtual/static.okerr.com/ -d static.okerr.com\n=== manual ===\nInfo:\n    (static.okerr.com) is local 37.59.102.26\n    (static.okerr.com) Vhost: /etc/apache2/sites-enabled/static.okerr.com.conf:1\n    (static.okerr.com) DocumentRoot: /var/www/virtual/static.okerr.com/\n    (static.okerr.com) DocumentRoot /var/www/virtual/static.okerr.com/ matches LetsEncrypt and Apache\n    (static.okerr.com) Simulated check match root: /var/www/virtual/static.okerr.com/\n---\n\n# You can verify all hostnames for site\nbin/a2certbot.py --prepare -w /var/www/virtual/static.okerr.com/ -d static.okerr.com -d static2.okerr.com\n\n# ... and finally simple main all-in-one command, it guesses aliases and root (command below does same as command above):\nbin/a2certbot.py --prepare -d static.okerr.com --aliases\n~~~\n\nIf `certbot renew` fails:\n~~~shell\n# Check (verify) ALL existing LetsEncrypt certificates (to check why 'certbot renew' may fail ):\nroot@bravo:/home/xenon# a2certbot.py \n=== /etc/letsencrypt/renewal/bravo.okerr.com.conf PROBLEM ===\nInfo:\n    (bravo.okerr.com) Vhost: /etc/apache2/sites-enabled/okerr.conf:17\n    LetsEncrypt conf file: /etc/letsencrypt/renewal/bravo.okerr.com.conf\n    bravo.okerr.com is local 37.59.102.26\nProblems:\n    No DocumentRoot in vhost at /etc/apache2/sites-enabled/okerr.conf:17\n---\n\n# Verify only one certificate \nroot@bravo:/home/xenon# a2certbot.py --host bravo.okerr.com\n=== /etc/letsencrypt/renewal/bravo.okerr.com.conf PROBLEM ===\nInfo:\n    (bravo.okerr.com) Vhost: /etc/apache2/sites-enabled/okerr.conf:17\n    LetsEncrypt conf file: /etc/letsencrypt/renewal/bravo.okerr.com.conf\n    bravo.okerr.com is local 37.59.102.26\nProblems:\n    No DocumentRoot in vhost at /etc/apache2/sites-enabled/okerr.conf:17\n---\n~~~\n\na2certbot.py can generate letsencrypt certificates in simple way (automatically detecting all aliases and \nDocumentRoot, but you can use -d instead of --aliases):\n~~~\nroot@bravo:/home/xenon# a2certbot.py --create -d static.okerr.com --aliases\nCreate cert for static.okerr.com\nRUNNING: certbot certonly --webroot -w /var/www/virtual/static.okerr.com/ -d static.okerr.com -d static2.okerr.com\nSaving debug log to /var/log/letsencrypt/letsencrypt.log\nPlugins selected: Authenticator webroot, Installer None\nObtaining a new certificate\nPerforming the following challenges:\nhttp-01 challenge for static2.okerr.com\nUsing the webroot path /var/www/virtual/static.okerr.com for all unmatched domains.\nWaiting for verification...\nCleaning up challenges\n\nIMPORTANT NOTES:\n - Congratulations! Your certificate and chain have been saved at:\n...\n~~~\n\n## a2okerr.py\na2okerr.py is useful only if you are using [okerr](https://okerr.com/): free and open source hybrid (host/network) monitoring system. \n\n[Okerr](https://okerr.com/) is like [nagios](https://www.nagios.org/) or [zabbix](https://www.zabbix.com/), but can perform network checks \nfrom remote locations, has tiny and optional local client  which can run from cron, has powerful logical\nindicators (notify me if more then 2 servers are dead, notify me if problems not fixed for more then 2 hours, ...), \npublic status pages (like https://status.io/ but free), fault-tolerant sites (okerr will redirect dynamic DNS record to live backup site if main site will be dead) and many other features. \nYou can check health of your servers/sites from smartphone via [Telegram](https://telegram.org/). \n\nYou can use it as free service (like wordpress or gmail) or you can install server-part on your own server from \n[okerr git repository](https://gitlab.com/yaroslaff/okerr-dev/).\n\nYou will need to install [okerrupdate](https://gitlab.com/yaroslaff/okerrupdate) package to use a2okerr.py: `pip3 install okerrupdate`.\n\na2okerr.py discovers all https sites in apache and creates SSL-indicator in your okerr project. You will get alert to email and/or telegram \nif any of your https sites has any problem (certificate not updated in time for any reason and will expire soon or already \nexpired. Website unavailable for any reason). If you have linux server or website - you need okerr.\n\n~~~shell\n# Create indicator for all local https websites. If indicator already exists, HTTP error 400 will be received - this is OK.\na2okerr.py\n\n# alter prefix, policy and description\na2okerr.py --prefix my:prefix: --policy Hourly --desc \"I love okerr and a2okerr\"\n\n# do not really create indicators, just dry run\na2oker.py --dry\n~~~\n\n# Node class\n\n## Properties and methods\n\n`raw` - text line as-is, with all spaces, tabs and with comments\n\n`cmd` - cmd ('ServerName') without args or None (if section)\n\n`section` - section (e.g. 'VirtualHost')\n\n`args` - one text line args to cmd or section. for vhost args could be '*:80', for ServerAlias: 'example.com example.org'\n\n`name` - name of node. cmd if node has cmd, or section name (in brackets) if this is section. e.g. 'ServerName' or\n'<VirtualHost>'\n\n`content` - list of child nodes (possible empty). For container sections (VirtualHost) attribute `content` is list\n of children. For usual commands (e.g. ServerName) - empty list.\n\n\n### Methods\n\n`__init__(self, read=filename, raw=None, parent=None, name=None, path=None, line=None, includes=True)` - In most cases you should not need to use\nany parameters here except `includes` and `read`. `read` is apache config filename to read. Use `includes=False` if you want `read_file` method to ignore `Include*` directives.\n\n`children(name=None, recursive=None)` - Main query method, returns generator for all children  nodes (e.g. for VirtualHost node). Generator is empty if no\nchildren. If name specified, generator will return only nodes with this name (e.g. 'servername' or '<VirtualHost>'). If recursive is On,\ngenerator will return nested nodes too (e.g. what is inside `<IfModule>` or `<Directory>` settings). To get just one first element use\n`next(node.children('ServerName'))`. It will raise `StopIteration` if node has no such children elements.\n\n`first(name, recursive=None)` - wrapper for `children()`. Returns only first element or `None`. Not raising exceptions.\n\n`read_file(filename)` - Reads apache config. Called automatically from `__init__` if you specified `read` argument.\n\n`dump(fh=sys.stdout, depth=0)` - dump loaded config in unified format (indented). if fh not specified, just dumps to stdout()\n\n`write_file(filename)` - opens file for writing and dump() to this file.\n\n## Examples\n\n### Just dump apache config\n`examples/ex1_dump.py` just loads config and dumps its structure (without comments) as JSON:\n~~~python\n#!/usr/bin/env python3\nimport sys\nimport a2conf\nimport json\n\nroot = a2conf.Node(sys.argv[1])\n\ndef section_dump(node):\n    data = dict()\n\n    for ch in node.children():\n        if ch.section and not ch.section.startswith('/'):\n            if ch.args:\n                key = ch.section + ' ' + ch.args\n            else:\n                key = ch.section\n            data[key] = section_dump(ch)\n        elif ch.cmd:\n            data[ch.cmd] = ch.args\n    return data\n\ndata = section_dump(root)\nprint(json.dumps(data, indent=4))\n~~~\n\nOutput:\n~~~\n$ examples/ex1_dump.py examples/example.conf\n{\n    \"VirtualHost *:80\": {\n        \"DocumentRoot\": \"/var/www/example\",\n        \"ServerName\": \"example.com\",\n        \"ServerAlias\": \"www.example.com example.com 1.example.com 2.example.com\",\n        \"DirectoryIndex\": \"index.html index.htm default.htm index.php\",\n        \"Options\": \"-Indexes +FollowSymLinks\"\n    },\n    \"VirtualHost *:443\": {\n        \"DocumentRoot\": \"/var/www/example\",\n        \"ServerName\": \"example.com\",\n        \"ServerAlias\": \"www.example.com 1.example.com 2.example.com secure.example.com\",\n        \"DirectoryIndex\": \"index.html index.htm default.htm index.php\",\n        \"Options\": \"-Indexes +FollowSymLinks\",\n        \"SSLEngine\": \"On\",\n        \"SSLCertificateFile\": \"/etc/letsencrypt/live/example.com/fullchain.pem\",\n        \"SSLCertificateKeyFile\": \"/etc/letsencrypt/live/example.com/privkey.pem\",\n        \"SSLCertificateChainFile\": \"/etc/letsencrypt/live/example.com/chain.pem\"\n    }\n}\n~~~\nNote - this is short example just for demo, it's not very good for production: if virtualhost has more then one directive\n(e.g. `ServerAlias`, `RewriteRule`, `RewriteCond`), only last one will be used.\n\n\n### Query\n`examples/ex2_query.py` print all SSL sites from config:\n```python\n#!/usr/bin/env python3\nimport sys\nimport a2conf\nroot = a2conf.Node(sys.argv[1])\n\nfor vhost in root.children('<VirtualHost>'):\n    servername = vhost.first('servername').args # One query method, via first(). Not much fail-safe but short.\n\n    try:\n        ssl_option = next(vhost.children('sslengine')).args # Other query method, via children()\n        if ssl_option.lower() == 'on':\n            print(\"{} has SSL enabled\".format(servername))\n    except StopIteration:\n        # No SSL Engine directive in this vhost\n        continue\n```\n\nOutput:\n```\n$ examples/ex2_query.py examples/example.conf\nexample.com has SSL enabled\n```\n\n### Replace and delete\n`examples/ex3_replace_delete.py` disables SSLEngine directive:\n~~~python\n#!/usr/bin/env python3\nimport sys\nimport a2conf\nroot = a2conf.Node(sys.argv[1])\n\nfor vhost in root.children('<VirtualHost>'):\n    if vhost.first('sslengine'):\n        vhost.delete() # Delete SSL vhost\n    else:\n        # Modify DocumentRoot\n        vhost.first('DocumentRoot').args = '/var/www/example2'\n        vhost.first('DocumentRoot').suffix = '# New DocumentRoot!'\n        # Delete ServerAlias\n        vhost.first('ServerAlias').delete()\n\nroot.dump()\n~~~\n\nOutput:\n~~~shell\n$ examples/ex3_replace_delete.py examples/example.conf\n#\n# Example config file for a2conf\n#\n<VirtualHost *:80>\n    # Non-ssl site\n    DocumentRoot /var/www/example2 # New DocumentRoot!\n    ServerName example.com # .... OUR TEST SITE ....\n    DirectoryIndex index.html index.htm default.htm index.php\n    Options -Indexes +FollowSymLinks\n</VirtualHost>\n~~~\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/yaroslaff/a2conf", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "a2conf", "package_url": "https://pypi.org/project/a2conf/", "platform": "", "project_url": "https://pypi.org/project/a2conf/", "project_urls": {"Homepage": "https://gitlab.com/yaroslaff/a2conf"}, "release_url": "https://pypi.org/project/a2conf/0.2.8/", "requires_dist": ["requests"], "requires_python": ">=3", "summary": "apache2 configuration file parser and query tool", "version": "0.2.8"}, "last_serial": 7001758, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "78d0616f7f5ad2128fb9026b0c6de83d", "sha256": "75cdb01ba8bbeea08b9599d1ece120128395e597fbb6cc0931f800467f086b24"}, "downloads": -1, "filename": "a2conf-0.1.1.tar.gz", "has_sig": false, "md5_digest": "78d0616f7f5ad2128fb9026b0c6de83d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 5528, "upload_time": "2019-11-28T19:10:03", "upload_time_iso_8601": "2019-11-28T19:10:03.908196Z", "url": "https://files.pythonhosted.org/packages/56/31/88ada0d62efd234c1d8d05ffdf4b54f8e599308f6fa53d9ad057158962df/a2conf-0.1.1.tar.gz"}], "0.1.12": [{"comment_text": "", "digests": {"md5": "4049744d4b5eb2c43752902bd1993182", "sha256": "eaa1d3315c17ce43adf73421f680c9877ea23104c0636f0a7aff3f1e9d823bc0"}, "downloads": -1, "filename": "a2conf-0.1.12.tar.gz", "has_sig": false, "md5_digest": "4049744d4b5eb2c43752902bd1993182", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 10731, "upload_time": "2019-12-01T20:42:29", "upload_time_iso_8601": "2019-12-01T20:42:29.419427Z", "url": "https://files.pythonhosted.org/packages/6a/57/4c3e044457f7e73eff427f1a1b45f6d0722d47a4ad75a2d9d5219acc53ec/a2conf-0.1.12.tar.gz"}], "0.1.13": [{"comment_text": "", "digests": {"md5": "a09bfc7ca68c8ebff9f2a09093df0f6e", "sha256": "5c6f42095af7de64b25d499f4b428fc5258a8e10c10d2dc7bc9e1befdfd79b68"}, "downloads": -1, "filename": "a2conf-0.1.13.tar.gz", "has_sig": false, "md5_digest": "a09bfc7ca68c8ebff9f2a09093df0f6e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 13036, "upload_time": "2019-12-01T21:08:10", "upload_time_iso_8601": "2019-12-01T21:08:10.493431Z", "url": "https://files.pythonhosted.org/packages/dc/c6/2680422ff026fecf5118758e547fb409bad040300df8632ddf0273709edc/a2conf-0.1.13.tar.gz"}], "0.1.14": [{"comment_text": "", "digests": {"md5": "e62e68c924b6d8ca63ca43f5ecedf01c", "sha256": "0b70a284c0dc76dbd24c72024ae8cdb63056da5537080bbdad7362327c0d4648"}, "downloads": -1, "filename": "a2conf-0.1.14.tar.gz", "has_sig": false, "md5_digest": "e62e68c924b6d8ca63ca43f5ecedf01c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 13600, "upload_time": "2019-12-11T14:51:23", "upload_time_iso_8601": "2019-12-11T14:51:23.922862Z", "url": "https://files.pythonhosted.org/packages/20/46/4902699353e5e8a1dc99d28470c6f8d05d6860437c50e303cb80fae328b6/a2conf-0.1.14.tar.gz"}], "0.1.15": [{"comment_text": "", "digests": {"md5": "ade1da6a59029fb53673d9973316d986", "sha256": "58ae6aa19cbfeebb54785e69fea52f9ffd6d44f1cb5f1c2ef7045dc46b165b5e"}, "downloads": -1, "filename": "a2conf-0.1.15.tar.gz", "has_sig": false, "md5_digest": "ade1da6a59029fb53673d9973316d986", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 13638, "upload_time": "2019-12-20T22:27:24", "upload_time_iso_8601": "2019-12-20T22:27:24.770815Z", "url": "https://files.pythonhosted.org/packages/ad/fd/d220f0e3132212e33b7fa0974930068d47c2ab2602caa6f29adc9b38f201/a2conf-0.1.15.tar.gz"}], "0.1.4": [{"comment_text": "", "digests": {"md5": "558e5442a2d2af3ae1d7b0e0f4b744ee", "sha256": "fb5b6b4d77e705ab799b9cfa38baa0a0153cc06a83dd0021926d9f0f5d03ecc5"}, "downloads": -1, "filename": "a2conf-0.1.4.tar.gz", "has_sig": false, "md5_digest": "558e5442a2d2af3ae1d7b0e0f4b744ee", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 8767, "upload_time": "2019-11-30T08:21:19", "upload_time_iso_8601": "2019-11-30T08:21:19.738496Z", "url": "https://files.pythonhosted.org/packages/7e/22/a7b36fe1be3b6424edd6dab49251fea7d36ec6fc6097f35e3c9d09bababc/a2conf-0.1.4.tar.gz"}], "0.1.5": [{"comment_text": "", "digests": {"md5": "a59a3c1d4ddd9c4ac318a0f19dffce77", "sha256": "465a9942e9bee5fe255237b2e7775af842eeb4eb5878971c8c014b72d4ed7a58"}, "downloads": -1, "filename": "a2conf-0.1.5.tar.gz", "has_sig": false, "md5_digest": "a59a3c1d4ddd9c4ac318a0f19dffce77", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 8805, "upload_time": "2019-12-01T11:17:31", "upload_time_iso_8601": "2019-12-01T11:17:31.110229Z", "url": "https://files.pythonhosted.org/packages/17/b9/4163535b631706f6f48a104fd12bdff3419fc3caffc371d45c855514f44e/a2conf-0.1.5.tar.gz"}], "0.1.6": [{"comment_text": "", "digests": {"md5": "d316e3d50938a6938810c68caaf7aa6e", "sha256": "447a51c3bf48972c2978f017da47a91a5ad38db4f61e0a09277d84f07859b52c"}, "downloads": -1, "filename": "a2conf-0.1.6.tar.gz", "has_sig": false, "md5_digest": "d316e3d50938a6938810c68caaf7aa6e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 8931, "upload_time": "2019-12-01T12:01:43", "upload_time_iso_8601": "2019-12-01T12:01:43.499297Z", "url": "https://files.pythonhosted.org/packages/67/82/c580a72f670bd7fc1251da5142760593b1e5cf79a98c0a3908d016c900d3/a2conf-0.1.6.tar.gz"}], "0.1.7": [{"comment_text": "", "digests": {"md5": "484e113bd0be57880d6f6291c4a0a94d", "sha256": "b2b61f461753986e8d09bc49f74b49fc23ef2fc69503cbda799946c2ed755854"}, "downloads": -1, "filename": "a2conf-0.1.7.tar.gz", "has_sig": false, "md5_digest": "484e113bd0be57880d6f6291c4a0a94d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 9010, "upload_time": "2019-12-01T12:19:41", "upload_time_iso_8601": "2019-12-01T12:19:41.183398Z", "url": "https://files.pythonhosted.org/packages/a1/43/46d5a0ca524440de3c7ccc62756bed880169e1ab3e2c221fe9a9f36a6bfe/a2conf-0.1.7.tar.gz"}], "0.1.8": [{"comment_text": "", "digests": {"md5": "fc4b16ff50274bf363cd3c36db6134a7", "sha256": "47d25b7cf220904e93199cc1acddf7d0e63dba57bdd1f8b712da37ce7b3261e9"}, "downloads": -1, "filename": "a2conf-0.1.8.tar.gz", "has_sig": false, "md5_digest": "fc4b16ff50274bf363cd3c36db6134a7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 9262, "upload_time": "2019-12-01T14:40:30", "upload_time_iso_8601": "2019-12-01T14:40:30.213818Z", "url": "https://files.pythonhosted.org/packages/9b/e9/d476ec8c63ac8cbe11f0d8285fac5147b702211ff651c76eb82536e89d09/a2conf-0.1.8.tar.gz"}], "0.1.9": [{"comment_text": "", "digests": {"md5": "2b68ec6b052294f287f4c39e2b24f213", "sha256": "16f295d370df5e5d3ed385bf253fa70b4eed20824fab7da4ccdc12e380efaea7"}, "downloads": -1, "filename": "a2conf-0.1.9.tar.gz", "has_sig": false, "md5_digest": "2b68ec6b052294f287f4c39e2b24f213", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 9342, "upload_time": "2019-12-01T16:14:34", "upload_time_iso_8601": "2019-12-01T16:14:34.717529Z", "url": "https://files.pythonhosted.org/packages/1e/46/cc1ddae9d5b937e722e2aa97d444fc0a2541d17539229ed073e4636d168a/a2conf-0.1.9.tar.gz"}], "0.2.3": [{"comment_text": "", "digests": {"md5": "0e2f4e15311551ceff5383e4948fc465", "sha256": "961323cd956dc7eb7e3c0df07a6668d039ffe472244d9e381417588f59b1ded4"}, "downloads": -1, "filename": "a2conf-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "0e2f4e15311551ceff5383e4948fc465", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 12392, "upload_time": "2020-02-07T18:04:45", "upload_time_iso_8601": "2020-02-07T18:04:45.584729Z", "url": "https://files.pythonhosted.org/packages/e6/ec/2ff35917deb616b37324d831872f410510c2b665945a96dcc9f0647aff3c/a2conf-0.2.3-py3-none-any.whl"}], "0.2.4": [{"comment_text": "", "digests": {"md5": "b847834281b9f6ff0545876d2c24490d", "sha256": "48b289a4a7e3a290b888da70c224bdddde4e6daf163e4b2f26cd0fca7c9128e0"}, "downloads": -1, "filename": "a2conf-0.2.4-py3-none-any.whl", "has_sig": false, "md5_digest": "b847834281b9f6ff0545876d2c24490d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 12704, "upload_time": "2020-03-12T00:20:36", "upload_time_iso_8601": "2020-03-12T00:20:36.816050Z", "url": "https://files.pythonhosted.org/packages/a0/08/8a154a9b140c975d3682af0f5452191ef87619b719e1302efbcfe5421f54/a2conf-0.2.4-py3-none-any.whl"}], "0.2.6": [{"comment_text": "", "digests": {"md5": "c6c26d2043cb0eca1d629e9903f9ada9", "sha256": "499b750b25e6d94fad87a8478c33e0b6957c49b732d473c09eee224d95a09dbc"}, "downloads": -1, "filename": "a2conf-0.2.6-py3-none-any.whl", "has_sig": false, "md5_digest": "c6c26d2043cb0eca1d629e9903f9ada9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 12832, "upload_time": "2020-03-13T20:37:29", "upload_time_iso_8601": "2020-03-13T20:37:29.546074Z", "url": "https://files.pythonhosted.org/packages/98/56/d17fe3872df833defd67412d642633eebdaf4efdb855c218c471d0b76b0c/a2conf-0.2.6-py3-none-any.whl"}], "0.2.7": [{"comment_text": "", "digests": {"md5": "9bd2273e3cbe6487deeed54d2856d2dd", "sha256": "aa61c1678b28f5f6db9257cc7e733a5b10d0f5d5ee38ff4c1572eec9da8c2fe8"}, "downloads": -1, "filename": "a2conf-0.2.7-py3-none-any.whl", "has_sig": false, "md5_digest": "9bd2273e3cbe6487deeed54d2856d2dd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 17173, "upload_time": "2020-04-01T15:42:48", "upload_time_iso_8601": "2020-04-01T15:42:48.714418Z", "url": "https://files.pythonhosted.org/packages/b4/34/cd2a4733baabc62354dbeac50c7ab416386181e354c795962046a5521dc0/a2conf-0.2.7-py3-none-any.whl"}], "0.2.8": [{"comment_text": "", "digests": {"md5": "0ebce656c10d2ab4409b704e1e1ec764", "sha256": "a96a9d207f195c079ca2c36b19e2fd0c4ef122d793eeafa551b9b0a187c7ff17"}, "downloads": -1, "filename": "a2conf-0.2.8-py3-none-any.whl", "has_sig": false, "md5_digest": "0ebce656c10d2ab4409b704e1e1ec764", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 20786, "upload_time": "2020-04-11T21:33:26", "upload_time_iso_8601": "2020-04-11T21:33:26.257979Z", "url": "https://files.pythonhosted.org/packages/0a/cb/f3289520015b1ed243c4ba1f8ae90785cb09323bfb88331e313f673cb692/a2conf-0.2.8-py3-none-any.whl"}]}, "urls": [{"comment_text": "", "digests": {"md5": "0ebce656c10d2ab4409b704e1e1ec764", "sha256": "a96a9d207f195c079ca2c36b19e2fd0c4ef122d793eeafa551b9b0a187c7ff17"}, "downloads": -1, "filename": "a2conf-0.2.8-py3-none-any.whl", "has_sig": false, "md5_digest": "0ebce656c10d2ab4409b704e1e1ec764", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 20786, "upload_time": "2020-04-11T21:33:26", "upload_time_iso_8601": "2020-04-11T21:33:26.257979Z", "url": "https://files.pythonhosted.org/packages/0a/cb/f3289520015b1ed243c4ba1f8ae90785cb09323bfb88331e313f673cb692/a2conf-0.2.8-py3-none-any.whl"}]}