{"info": {"author": "Damian Krawczyk", "author_email": "damian.krawczyk@limberduck.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6"], "description": "nessus file reader by LimberDuck\n################################\n\n*nessus file reader* by LimberDuck (pronounced *\u02c8l\u026am.b\u025a d\u028ck*) is a python\nmodule created to quickly parse nessus files containing the results of scans\nperformed by using Nessus by (C) Tenable, Inc. This module will let you get\ndata through functions grouped into categories like file, scan, host and\nplugin to get specific information from the provided nessus scan files.\n\n|license| |repo_size| |code_size| |supported_platform|\n\n\n.. class:: no-web no-pdf\n\n.. contents::\n\n.. section-numbering::\n\nMain features\n=============\n\n* read data from nessus files containing results of scans performed by using Nessus by (C) Tenable, Inc.\n* use `nfr_example_script.py`_. to see examples\n\nUsage\n=====\n1. Install *nessus-file-reader* module.\n\n    .. code-block:: bash\n\n        pip install nessus-file-reader\n\n2. Import *nessus-file-reader* module.\n\n    .. code-block:: python\n\n        import nessus_file_reader as nfr\n\n3. Use *file* functions to get details about provided file e.g. root, file name, file size.\n\n    .. code-block:: python\n\n        nessus_scan_file = './your_nessus_file.nessus'\n        root = nfr.file.nessus_scan_file_root_element(nessus_scan_file)\n        file_name = nfr.file.nessus_scan_file_name_with_path(nessus_scan_file)\n        file_size = nfr.file.nessus_scan_file_size_human(nessus_scan_file)\n        print(f'File name: {file_name}')\n        print(f'File size: {file_size}')\n\n4. Use *scan* functions to get details about provided scan e.g. report name, number of target/scanned/credentialed hosts, scan time start/end/elapsed and more.\n\n    .. code-block:: python\n\n        report_name = nfr.scan.report_name(root)\n        number_of_target_hosts = nfr.scan.number_of_target_hosts(root)\n        number_of_scanned_hosts = nfr.scan.number_of_scanned_hosts(root)\n        number_of_scanned_hosts_with_credentialed_checks_yes = nfr.scan.number_of_scanned_hosts_with_credentialed_checks_yes(root)\n        scan_time_start = nfr.scan.scan_time_start(root)\n        scan_time_end = nfr.scan.scan_time_end(root)\n        scan_time_elapsed = nfr.scan.scan_time_elapsed(root)\n        print(f' Report name: {report_name}')\n        print(f' Number of target/scanned/credentialed hosts: {number_of_target_hosts}/{number_of_scanned_hosts}/{number_of_scanned_hosts_with_credentialed_checks_yes}')\n        print(f' Scan time START - END (ELAPSED): {scan_time_start} - {scan_time_end} ({scan_time_elapsed})')\n\n5. Use *host* functions to get details about hosts from provided scan e.g. report hosts names, operating system, hosts scan time start/end/elapsed, number of Critical/High/Medium/Low/None findings and more.\n\n    .. code-block:: python\n\n        for report_host in nfr.scan.report_hosts(root):\n            report_host_name = nfr.host.report_host_name(report_host)\n            report_host_os = nfr.host.detected_os(report_host)\n            report_host_scan_time_start = nfr.host.host_time_start(report_host)\n            report_host_scan_time_end = nfr.host.host_time_end(report_host)\n            report_host_scan_time_elapsed = nfr.host.host_time_elapsed(report_host)\n            report_host_critical = nfr.host.number_of_plugins_per_risk_factor(report_host, 'Critical')\n            report_host_high = nfr.host.number_of_plugins_per_risk_factor(report_host, 'High')\n            report_host_medium = nfr.host.number_of_plugins_per_risk_factor(report_host, 'Medium')\n            report_host_low = nfr.host.number_of_plugins_per_risk_factor(report_host, 'Low')\n            report_host_none = nfr.host.number_of_plugins_per_risk_factor(report_host, 'None')\n            print(f'  Report host name: {report_host_name}')\n            print(f'  Report host OS: {report_host_os}')\n            print(f'  Host scan time START - END (ELAPSED): {report_host_scan_time_start} - {report_host_scan_time_end} ({report_host_scan_time_elapsed})')\n            print(f'  Critical/High/Medium/Low/None findings: {report_host_critical}/{report_host_high}/{report_host_medium}/{report_host_low}/{report_host_none}')\n\n6. Use *plugin* functions to get details about plugins reported in provided scan e.g. plugins ID, plugins risk factor, plugins name.\n\n    .. code-block:: python\n\n        print('\\tPlugin ID\\t\\tRisk Factor\\t\\t\\t\\tPlugin Name')\n        report_items_per_host = nfr.host.report_items(report_host)\n        for report_item in report_items_per_host:\n            plugin_id = int(nfr.plugin.report_item_value(report_item, 'pluginID'))\n            risk_factor = nfr.plugin.report_item_value(report_item, 'risk_factor')\n            plugin_name = nfr.plugin.report_item_value(report_item, 'pluginName')\n            print('\\t', plugin_id, '  \\t\\t\\t', risk_factor, '  \\t\\t\\t', plugin_name)\n\n7. If you want to get output for interesting you plugin e.g. \"Nessus Scan Information\" use below function\n\n    .. code-block:: python\n\n        for report_host in nfr.scan.report_hosts(root):\n            pido_19506 = nfr.plugin.plugin_output(root, report_host, '19506')\n            print(f'Nessus Scan Information Plugin Output:\\n{pido_19506}')\n\n8. If you know that interesting you plugin occurs more than ones for particular host e.g. \"Netstat Portscanner (SSH)\" use below function\n\n    .. code-block:: python\n\n        for report_host in nfr.scan.report_hosts(root):\n            pidos_14272 = nfr.plugin.plugin_outputs(root, report_host, '14272')\n            print(f'All findings for Netstat Portscanner (SSH): \\n{pidos_14272}')\n\n\nMeta\n====\n\nChange log\n----------\n\nSee `CHANGELOG`_.\n\n\nLicence\n-------\n\nGNU GPLv3: `LICENSE`_.\n\n\n\nAuthors\n-------\n\n`Damian Krawczyk`_ created *nessus file reader* by LimberDuck.\n\n.. _Damian Krawczyk: https://limberduck.org\n.. _CHANGELOG: https://github.com/LimberDuck/nessus-file-reader/blob/master/CHANGELOG.rst\n.. _LICENSE: https://github.com/LimberDuck/nessus-file-reader/blob/master/LICENSE\n.. _nfr_example_script.py: https://github.com/LimberDuck/nessus-file-reader/blob/master/nfr_example_script.py\n\n.. |license| image:: https://img.shields.io/github/license/LimberDuck/nessus-file-reader.svg\n    :target: https://github.com/LimberDuck/nessus-file-reader/blob/master/LICENSE\n    :alt: License\n\n.. |repo_size| image:: https://img.shields.io/github/repo-size/LimberDuck/nessus-file-reader.svg\n    :target: https://github.com/LimberDuck/nessus-file-reader\n\n.. |code_size| image:: https://img.shields.io/github/languages/code-size/LimberDuck/nessus-file-reader.svg\n    :target: https://github.com/LimberDuck/nessus-file-reader\n\n.. |supported_platform| image:: https://img.shields.io/badge/platform-windows%20%7C%20macos%20%7C%20linux-lightgrey.svg\n    :target: https://github.com/LimberDuck/nessus-file-reader\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/LimberDuck/nessus-file-reader", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "nessus-file-reader", "package_url": "https://pypi.org/project/nessus-file-reader/", "platform": "", "project_url": "https://pypi.org/project/nessus-file-reader/", "project_urls": {"Homepage": "https://github.com/LimberDuck/nessus-file-reader"}, "release_url": "https://pypi.org/project/nessus-file-reader/0.2.0/", "requires_dist": null, "requires_python": "", "summary": "nessus file reader by LimberDuck (pronounced *\u02c8l\u026am.b\u025a d\u028ck*) is a python module created to quickly parse nessus files containing the results of scans performed by using Nessus by (C) Tenable, Inc.", "version": "0.2.0"}, "last_serial": 5804972, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "5d648dd4194b215d7291200511a7cb6c", "sha256": "dc76fc8c7f80ac8ae124e1651d9a923e74348484d766a9aa9e983e965eb04621"}, "downloads": -1, "filename": "nessus_file_reader-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "5d648dd4194b215d7291200511a7cb6c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 27646, "upload_time": "2019-06-23T21:52:07", "upload_time_iso_8601": "2019-06-23T21:52:07.177112Z", "url": "https://files.pythonhosted.org/packages/f5/4c/ad7760c85ab0d11390e95032f12ade48eebbab5fb070a1768fbfc5df9b6c/nessus_file_reader-0.1.0-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "8ed6623ff6af10660fbd9322bc1b641b", "sha256": "c2ea060bcb7894f2b73ed4f44e03feafd447ca1fb7f6c76ef66ddad52560bb04"}, "downloads": -1, "filename": "nessus_file_reader-0.1.0.tar.gz", "has_sig": false, "md5_digest": "8ed6623ff6af10660fbd9322bc1b641b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11259, "upload_time": "2019-06-23T21:52:10", "upload_time_iso_8601": "2019-06-23T21:52:10.064198Z", "url": "https://files.pythonhosted.org/packages/69/cd/9ebb8852138250a6fd08068220e925779c7efba55cf1080c62457dada664/nessus_file_reader-0.1.0.tar.gz"}], "0.2.0": [{"comment_text": "", "digests": {"md5": "054faea79b763abbe9d071b9ba9d4078", "sha256": "7032f2ac0317722377795ff5024a744ed9100f0f2680ff2e05a54cca1c330450"}, "downloads": -1, "filename": "nessus_file_reader-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "054faea79b763abbe9d071b9ba9d4078", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 27722, "upload_time": "2019-09-09T18:48:56", "upload_time_iso_8601": "2019-09-09T18:48:56.144139Z", "url": "https://files.pythonhosted.org/packages/46/a0/66e9348fc33a16e2614ff89e4608456b109050b04dbb82460efe4b66a1cc/nessus_file_reader-0.2.0-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "5817e8564684ee3904ba35915683b6cf", "sha256": "0a2d9f726ee55ac59346d4a46a02f09e975252365d75e663a5c10b6a82837ce9"}, "downloads": -1, "filename": "nessus_file_reader-0.2.0.tar.gz", "has_sig": false, "md5_digest": "5817e8564684ee3904ba35915683b6cf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11343, "upload_time": "2019-09-09T18:48:58", "upload_time_iso_8601": "2019-09-09T18:48:58.060018Z", "url": "https://files.pythonhosted.org/packages/0d/72/c3678ec0f727ea74da03e08186843280e388d87e0e6b9e7a3ca6320bb293/nessus_file_reader-0.2.0.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "054faea79b763abbe9d071b9ba9d4078", "sha256": "7032f2ac0317722377795ff5024a744ed9100f0f2680ff2e05a54cca1c330450"}, "downloads": -1, "filename": "nessus_file_reader-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "054faea79b763abbe9d071b9ba9d4078", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 27722, "upload_time": "2019-09-09T18:48:56", "upload_time_iso_8601": "2019-09-09T18:48:56.144139Z", "url": "https://files.pythonhosted.org/packages/46/a0/66e9348fc33a16e2614ff89e4608456b109050b04dbb82460efe4b66a1cc/nessus_file_reader-0.2.0-py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "5817e8564684ee3904ba35915683b6cf", "sha256": "0a2d9f726ee55ac59346d4a46a02f09e975252365d75e663a5c10b6a82837ce9"}, "downloads": -1, "filename": "nessus_file_reader-0.2.0.tar.gz", "has_sig": false, "md5_digest": "5817e8564684ee3904ba35915683b6cf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11343, "upload_time": "2019-09-09T18:48:58", "upload_time_iso_8601": "2019-09-09T18:48:58.060018Z", "url": "https://files.pythonhosted.org/packages/0d/72/c3678ec0f727ea74da03e08186843280e388d87e0e6b9e7a3ca6320bb293/nessus_file_reader-0.2.0.tar.gz"}]}