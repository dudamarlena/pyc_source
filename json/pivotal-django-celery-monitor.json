{"info": {"author": "Jannis Leidel", "author_email": "jannis@leidel.info", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Framework :: Django", "Framework :: Django :: 1.10", "Framework :: Django :: 1.11", "Framework :: Django :: 1.8", "Framework :: Django :: 1.9", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Communications", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: System :: Distributed Computing"], "description": "============================\nCelery Monitoring for Django\n============================\n\n:Version: 1.1.2\n:Web: https://django-celery-monitor.readthedocs.io/\n:Download: https://pypi.python.org/pypi/django_celery_monitor\n:Source: https://github.com/jezdez/django-celery-monitor\n:Keywords: django, celery, events, monitoring\n\n|build-status| |coverage| |license| |wheel| |pyversion| |pyimp|\n\nAbout\n=====\n\nThis extension enables you to monitor Celery tasks and workers.\n\nIt defines two models (``django_celery_monitor.models.WorkerState`` and\n``django_celery_monitor.models.TaskState``) used to store worker and task states\nand you can query this database table like any other Django model.\nIt provides a Camera class (``django_celery_monitor.camera.Camera``) to be\nused with the Celery events command line tool to automatically populate the\ntwo models with the current state of the Celery workers and tasks.\n\nHistory\n=======\n\nThis package is a Celery 4 compatible port of the Django admin based\nmonitoring feature that was included in the old\n`django-celery <https://pypi.python.org/pypi/django-celery>`_ package which\nis only compatible with Celery < 4.0.\nOther parts of django-celery were released as\n`django-celery-beat <https://pypi.python.org/pypi/django_celery_beat>`_\n(Database-backed Periodic Tasks) and\n`django-celery-results <https://pypi.python.org/pypi/django_celery_results>`_\n(Celery result backends for Django).\n\nInstallation\n============\n\nYou can install django_celery_monitor either via the Python Package Index (PyPI)\nor from source.\n\nTo install using `pip`,:\n\n.. code-block:: console\n\n    $ pip install -U django_celery_monitor\n\nUsage\n=====\n\nTo use this with your project you need to follow these steps:\n\n#. Install the django_celery_monitor library:\n\n   .. code-block:: console\n\n      $ pip install django_celery_monitor\n\n#. Add ``django_celery_monitor`` to ``INSTALLED_APPS`` in your\n   Django project's ``settings.py``::\n\n    INSTALLED_APPS = (\n        ...,\n        'django_celery_monitor',\n    )\n\n   Note that there is no dash in the module name, only underscores.\n\n#. Create the Celery database tables by performing a database migrations:\n\n   .. code-block:: console\n\n      $ python manage.py migrate celery_monitor\n\n#. Go to the Django admin of your site and look for the \"Celery Monitor\"\n   section.\n\nStarting the monitoring process\n===============================\n\nTo enable taking snapshots of the current state of tasks and workers you'll\nwant to run the Celery events command with the appropriate camera class\n``django_celery_monitor.camera.Camera``:\n\n.. code-block:: console\n\n    $ celery -A proj events -l info --camera django_celery_monitor.camera.Camera --frequency=2.0\n\nFor a complete listing of the command-line options available see:\n\n.. code-block:: console\n\n    $ celery events --help\n\nConfiguration\n=============\n\nThere are a few settings that regulate how long the task monitor should keep\nstate entries in the database. Either of the three should be a\n``datetime.timedelta`` value or ``None``.\n\n- ``monitor_task_success_expires`` -- Defaults to ``timedelta(days=1)`` (1 day)\n\n  The period of time to retain monitoring information about tasks with a\n  ``SUCCESS`` result.\n\n- ``monitor_task_error_expires`` -- Defaults to ``timedelta(days=3)`` (3 days)\n\n  The period of time to retain monitoring information about tasks with an\n  errornous result (one of the following event states: ``RETRY``, ``FAILURE``,\n  ``REVOKED``.\n\n- ``monitor_task_pending_expires`` -- Defaults to ``timedelta(days=5)`` (5 days)\n\n  The period of time to retain monitoring information about tasks with a\n  pending result (one of the following event states: ``PENDING``, ``RECEIVED``,\n  ``STARTED``, ``REJECTED``, ``RETRY``.\n\nIn your Celery configuration simply set them to override the defaults, e.g.::\n\n    from datetime import timedelta\n\n    monitor_task_success_expires = timedelta(days=7)\n\n\n.. |build-status| image:: https://secure.travis-ci.org/jezdez/django-celery-monitor.svg?branch=master\n    :alt: Build status\n    :target: https://travis-ci.org/jezdez/django-celery-monitor\n\n.. |coverage| image:: https://codecov.io/github/jezdez/django-celery-monitor/coverage.svg?branch=master\n    :target: https://codecov.io/github/jezdez/django-celery-monitor?branch=master\n\n.. |license| image:: https://img.shields.io/pypi/l/django-celery-monitor.svg\n    :alt: BSD License\n    :target: https://opensource.org/licenses/BSD-3-Clause\n\n.. |wheel| image:: https://img.shields.io/pypi/wheel/django-celery-monitor.svg\n    :alt: django-celery-monitor can be installed via wheel\n    :target: http://pypi.python.org/pypi/django_celery_monitor/\n\n.. |pyversion| image:: https://img.shields.io/pypi/pyversions/django-celery-monitor.svg\n    :alt: Supported Python versions.\n    :target: http://pypi.python.org/pypi/django_celery_monitor/\n\n.. |pyimp| image:: https://img.shields.io/pypi/implementation/django-celery-monitor.svg\n    :alt: Support Python implementations.\n    :target: http://pypi.python.org/pypi/django_celery_monitor/\n\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jezdez/django-celery-monitor", "keywords": "celery django events monitoring", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "pivotal-django-celery-monitor", "package_url": "https://pypi.org/project/pivotal-django-celery-monitor/", "platform": "any", "project_url": "https://pypi.org/project/pivotal-django-celery-monitor/", "project_urls": {"Homepage": "https://github.com/jezdez/django-celery-monitor"}, "release_url": "https://pypi.org/project/pivotal-django-celery-monitor/1.1.3/", "requires_dist": ["celery (<5.0,>=4.0)"], "requires_python": "", "summary": "Celery monitor for Django.", "version": "1.1.3"}, "last_serial": 4722792, "releases": {"1.1.3": [{"comment_text": "", "digests": {"md5": "8c17d6117dcac36868dbc6e592c549f2", "sha256": "7e8b7c06adb6c64874cdfdea65dd21569ee70f18cb454ae901cd35f48aa644db"}, "downloads": -1, "filename": "pivotal_django_celery_monitor-1.1.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8c17d6117dcac36868dbc6e592c549f2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 20846, "upload_time": "2019-01-21T18:38:00", "upload_time_iso_8601": "2019-01-21T18:38:00.885107Z", "url": "https://files.pythonhosted.org/packages/06/08/90b46dfd54bbf37a0a8a7da0819330e843ecc4d972a05c35a59d54387e5b/pivotal_django_celery_monitor-1.1.3-py2.py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "8339bc83f1a579e38945b7c2af9e2a9f", "sha256": "e0b30367eabdcf0c2f11861cbf09b655fe2e4afbc03c29d69ab7862681c9f232"}, "downloads": -1, "filename": "pivotal_django_celery_monitor-1.1.3.tar.gz", "has_sig": false, "md5_digest": "8339bc83f1a579e38945b7c2af9e2a9f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 63075, "upload_time": "2019-01-21T18:38:03", "upload_time_iso_8601": "2019-01-21T18:38:03.382699Z", "url": "https://files.pythonhosted.org/packages/1f/b7/72020894c9726e1fdc9302a80d0a5b13b7e855252ab0c4ebf457319fc32a/pivotal_django_celery_monitor-1.1.3.tar.gz"}]}, "urls": [{"comment_text": "", "digests": {"md5": "8c17d6117dcac36868dbc6e592c549f2", "sha256": "7e8b7c06adb6c64874cdfdea65dd21569ee70f18cb454ae901cd35f48aa644db"}, "downloads": -1, "filename": "pivotal_django_celery_monitor-1.1.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8c17d6117dcac36868dbc6e592c549f2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 20846, "upload_time": "2019-01-21T18:38:00", "upload_time_iso_8601": "2019-01-21T18:38:00.885107Z", "url": "https://files.pythonhosted.org/packages/06/08/90b46dfd54bbf37a0a8a7da0819330e843ecc4d972a05c35a59d54387e5b/pivotal_django_celery_monitor-1.1.3-py2.py3-none-any.whl"}, {"comment_text": "", "digests": {"md5": "8339bc83f1a579e38945b7c2af9e2a9f", "sha256": "e0b30367eabdcf0c2f11861cbf09b655fe2e4afbc03c29d69ab7862681c9f232"}, "downloads": -1, "filename": "pivotal_django_celery_monitor-1.1.3.tar.gz", "has_sig": false, "md5_digest": "8339bc83f1a579e38945b7c2af9e2a9f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 63075, "upload_time": "2019-01-21T18:38:03", "upload_time_iso_8601": "2019-01-21T18:38:03.382699Z", "url": "https://files.pythonhosted.org/packages/1f/b7/72020894c9726e1fdc9302a80d0a5b13b7e855252ab0c4ebf457319fc32a/pivotal_django_celery_monitor-1.1.3.tar.gz"}]}