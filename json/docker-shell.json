{"info": {"author": "Adam Rehn", "author_email": "adam@adamrehn.com", "bugtrack_url": null, "classifiers": ["Environment :: Console", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3.9"], "description": "Docker Interactive Shell Runner\n===============================\n\nThe `docker-shell` command makes it quick and easy to start an interactive shell inside a Docker container, with the following features:\n\n- Both Windows and Linux containers are supported.\n\n- The current working directory is automatically bind-mounted into the container and set as the container's working directory.\n\n- When running Linux containers under Linux host systems, [host networking mode](https://docs.docker.com/network/host/) is enabled automatically to eliminate the need for exposing individual ports or port ranges.\n\n- GPU support is automatically enabled when running GPU-enabled Linux containers under Linux host systems with the NVIDIA binary drivers and the [NVIDIA Container Toolkit](https://github.com/NVIDIA/nvidia-docker) installed.\n\n- Short aliases are provided for running popular shells:\n\n  - `dbash` for [GNU Bash](https://www.gnu.org/software/bash/)\n  - `dsh` for the [Bourne shell]()\n  - `dzsh` for [Zsh](https://www.zsh.org/)\n  - `dcmd` for the Windows Command Prompt\n  - `dps` and `dpowershell` for [PowerShell](https://docs.microsoft.com/en-us/powershell/)\n\n\n## Contents\n\n- [Installation](#installation)\n- [Usage](#usage)\n  - [Basic usage](#basic-usage)\n  - [Passing additional flags to Docker](#passing-additional-flags-to-docker)\n  - [Working with alias tags](#working-with-alias-tags)\n  - [Specifying additional options using image labels](#specifying-additional-options-using-image-labels)\n- [Legal](#legal)\n\n\n## Installation\n\nTo install `docker-shell`, run the following command:\n\n```bash\n# This may need to be prefixed with sudo under Linux and macOS\npip3 install docker-shell\n```\n\n\n## Usage\n\n### Basic usage\n\nTo start a GNU Bash shell in an [official Python container](https://hub.docker.com/_/python) under Windows, macOS or Linux, run either of the following commands:\n\n```bash\n# Long version\ndocker-shell bash python\n\n# Short version\ndbash python\n```\n\nTo start a Windows Command Prompt in a [Windows Server Core container](https://hub.docker.com/_/microsoft-windows-servercore) under Windows, run either of the following commands:\n\n```bash\n# Long version\ndocker-shell cmd mcr.microsoft.com/windows/servercore:ltsc2019\n\n# Short version\ndcmd mcr.microsoft.com/windows/servercore:ltsc2019\n```\n\nTo start a PowerShell session in a [Windows Server Core container](https://hub.docker.com/_/microsoft-windows-servercore) under Windows, run any of the following commands:\n\n```bash\n# Long version\ndocker-shell powershell mcr.microsoft.com/windows/servercore:ltsc2019\n\n# Short versions\ndps mcr.microsoft.com/windows/servercore:ltsc2019\ndpowershell mcr.microsoft.com/windows/servercore:ltsc2019\n```\n\n### Passing additional flags to Docker\n\nAny additional flags that are specified on the command-line will be propagated automatically to the underlying [docker run](https://docs.docker.com/engine/reference/run/) command:\n\n```bash\n# The flags `-u 1000 --name mycontainer` will be passed directly to Docker\ndocker-shell bash python -u 1000 --name mycontainer\n```\n\n### Working with alias tags\n\nWhen working with lengthy image tags it is often more convenient to use the [docker tag](https://docs.docker.com/engine/reference/commandline/tag/) command to create concise aliases, for example:\n\n```bash\n# Add a shorter tag alias for the Windows Server Core image\ndocker tag mcr.microsoft.com/windows/servercore:ltsc2019 windows:latest\n\n# Run a Windows Command Prompt using the short tag\ndcmd windows\n```\n\n### Specifying additional options using image labels\n\nIf there are bind mounts or command-line flags that you always use when running a particular image then you can specify these using image labels in your Dockerfile and `docker-shell` will apply them automatically:\n\n```dockerfile\nFROM my-base-image\n\n# The directory specified by the environment variable `SOMEVAR` will be bind-mounted irrespective of the host platform\nLABEL docker-shell.mounts.1=\"\\$SOMEVAR:/data\"\n\n# The current user's Desktop directory will be bind-mounted irrespective of the host platform\nLABEL docker-shell.mounts.2=\"~/Desktop:/desktop\"\n\n# This specific user's Desktop directory will be bind-mounted only when running on Linux hosts\nLABEL docker-shell.linux.mounts.1=\"/home/user/Desktop:/user-desktop\"\n\n# This specific user's Desktop directory will be bind-mounted only when running on macOS hosts\nLABEL docker-shell.mac.mounts.1=\"/Users/user/Desktop:/user-desktop\"\n\n# This specific user's Desktop directory will be bind-mounted only when running on Windows hosts\nLABEL docker-shell.windows.mounts.1=\"C:/Users/User/Desktop:/user-desktop\"\n\n# The command-line flags `-u 1000` will be applied irrespective of the host platform\nLABEL docker-shell.args.1=\"-u\"\nLABEL docker-shell.args.2=\"1000\"\n\n# The command-line flags `--priveleged` will be applied only when running on Linux hosts\nLABEL docker-shell.linux.args.1=\"--priveleged\"\n\n# The command-line flags `-m 1GB` will be applied only when running on macOS hosts\nLABEL docker-shell.mac.args.1=\"-m\"\nLABEL docker-shell.mac.args.2=\"1GB\"\n\n# The command-line flags `-m 2GB` will be applied only when running on Windows hosts\nLABEL docker-shell.windows.args.1=\"-m\"\nLABEL docker-shell.windows.args.2=\"2GB\"\n```\n\n\n## Legal\n\nCopyright &copy; 2020, Adam Rehn. Licensed under the MIT License, see the file [LICENSE](https://github.com/adamrehn/docker-shell/blob/master/LICENSE) for details.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/adamrehn/docker-shell", "keywords": "docker interactive console terminal", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "docker-shell", "package_url": "https://pypi.org/project/docker-shell/", "platform": "", "project_url": "https://pypi.org/project/docker-shell/", "project_urls": {"Homepage": "http://github.com/adamrehn/docker-shell"}, "release_url": "https://pypi.org/project/docker-shell/0.0.3/", "requires_dist": ["docker (>=4.0.0)", "setuptools (>=38.6.0)", "twine (>=1.11.0)", "wheel (>=0.31.0)"], "requires_python": ">=3.5", "summary": "Docker Interactive Shell Runner", "version": "0.0.3"}, "last_serial": 6693853, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "9f30e68ce2a6faec2ff6362cd235e607", "sha256": "7186160e9ede605ea781be4dcbb6d05ff2965bde5e113298f4efa7aaa6b3ebac"}, "downloads": -1, "filename": "docker_shell-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9f30e68ce2a6faec2ff6362cd235e607", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 6597, "upload_time": "2020-01-20T12:26:42", "upload_time_iso_8601": "2020-01-20T12:26:42.629483Z", "url": "https://files.pythonhosted.org/packages/00/0a/1d0159fb537d3779712d84d5ef6825ece140d89bdd1e0e6b5191169a789b/docker_shell-0.0.1-py3-none-any.whl"}], "0.0.2": [{"comment_text": "", "digests": {"md5": "6acf48e70ef32cc58d392d1bba101992", "sha256": "f1d5dd4710170271934390c3cbbe89a0bc9c459af69815a5324ae1cce6678c2f"}, "downloads": -1, "filename": "docker_shell-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "6acf48e70ef32cc58d392d1bba101992", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 7488, "upload_time": "2020-01-28T03:05:41", "upload_time_iso_8601": "2020-01-28T03:05:41.650116Z", "url": "https://files.pythonhosted.org/packages/57/5b/8dc21edc24571bd5e3baa27d429b271c530357700940efba5f53a9c4273b/docker_shell-0.0.2-py3-none-any.whl"}], "0.0.3": [{"comment_text": "", "digests": {"md5": "3781c7108129cddae4051e2032959049", "sha256": "7d51c8627e3c8ad834e237b7e84459f4ab282693cfcfd52227bde1ea2f0f506a"}, "downloads": -1, "filename": "docker_shell-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "3781c7108129cddae4051e2032959049", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 7663, "upload_time": "2020-02-25T02:26:55", "upload_time_iso_8601": "2020-02-25T02:26:55.526079Z", "url": "https://files.pythonhosted.org/packages/80/01/fb2a19c0f478c888430cd83adc91292386d8fa9d9a8d5408da05ce46a273/docker_shell-0.0.3-py3-none-any.whl"}]}, "urls": [{"comment_text": "", "digests": {"md5": "3781c7108129cddae4051e2032959049", "sha256": "7d51c8627e3c8ad834e237b7e84459f4ab282693cfcfd52227bde1ea2f0f506a"}, "downloads": -1, "filename": "docker_shell-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "3781c7108129cddae4051e2032959049", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 7663, "upload_time": "2020-02-25T02:26:55", "upload_time_iso_8601": "2020-02-25T02:26:55.526079Z", "url": "https://files.pythonhosted.org/packages/80/01/fb2a19c0f478c888430cd83adc91292386d8fa9d9a8d5408da05ce46a273/docker_shell-0.0.3-py3-none-any.whl"}]}