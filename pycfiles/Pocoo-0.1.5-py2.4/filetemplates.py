# uncompyle6 version 3.7.4
# Python bytecode 2.4 (62061)
# Decompiled from: Python 3.6.9 (default, Apr 18 2020, 01:56:04) 
# [GCC 8.4.0]
# Embedded file name: build/bdist.linux-i686/egg/pocoo/filetemplates.py
# Compiled at: 2006-12-26 17:18:07
"""
    pocoo.filetemplates
    ~~~~~~~~~~~~~~~~~~~

    Contains templates for autogenerated files.

    :copyright: 2006 by Georg Brandl.
    :license: GNU GPL, see LICENSE for more details.
"""
DEFAULT_CONFIG = '# -*- coding: utf-8 -*-\n\nsection general:\n    # servername + port + path to script (don\'t forget the trailing slash)\n    serverpath = http://localhost:8080/\n\n    # the application\'s charset\n    charset = utf-8\n\n    # list of all non-core packages to load\n    packages = list:\n        pony\n        highlight\n\n    # enabled auth module\n    auth_module = SessionAuth\n\n    # true if the system should inform the admins about errors\n    send_error_mails = false\n\n    # list of administrator email addresses\n    admin_mails = list:\n        me@example.invalid\n        you@example.invalid\n\n\nsection database:\n    # the database URI, see http://sqlobject.org/SQLObject.html#declaring-the-class\n    # TODO: Provide examples in the docs\n    uri = sqlite:////tmp/test.db\n    #uri = postgres://pocoo@localhost/pocoo\n    #uri = mysql://root@localhost/pocoo\n\n    # print database queries (only if in debug mode)\n    verbose = false\n\n\nsection development:\n    # enable debug mode?\n    # TODO: disable this on release\n    debug = true\n\n    # enable colubrid\'s evalexception feature? (only when in debug mode)\n    # WARNING: DON\'T ENABLE THIS ON A PUBLIC SERVER, IT ALLOWS CLIENTS\n    #          TO EXECUTE ARBITRARY CODE WHEN AN EXCEPTION IS ENCOUNTERED!\n    enable_evalexception = false\n\n    # send log output to: none|stdout|stderr|filename (XXX currently not working)\n    log_output = stderr\n\n    # development server hostname\n    hostname = localhost\n\n    # development server port\n    port = 8080\n\n\n# caching configuration\nsection cache:\n    # use memcache? only useful for FastCGI and other persistent interface types.\n    enabled = true\n\n    # cache parsed templates in the memory\n    template_memcache = false\n\n    # cache parsed template nodelists on the disk\n    template_diskcache = false\n\n\nsection security:\n    # password_strength:\n    #   0    non empty passwords\n    #   1    at least 4 chars\n    #   2    at least 6 chars\n    #   3    at least 6 chars, letters and numbers\n    #   4    at least 6 chars, letters, numbers and special chars\n    password_strength = 3\n\n    # activation_level:\n    #   0    automatically activate the user after registration\n    #   1    the user has to activate the account via mail\n    #   2    an administrator has to activate the account\n    activation_level = 1\n\n    # allow users to change their username?\n    username_change = false\n\n\n# SMTP configuration for mail notifications\nsection email:\n    # mail server configuration\n    host = localhost\n    user =\n    pass =\n\n    # the mail address of the system mails\n    from = My Pocoo Forum <noreply@localhost>\n\n    # subject prefix \'[pocoo] \' for example\n    prefix =\n\n    # subject suffix\n    suffix =\n\n    # mail signature\n    signature = Your board admin team\n\n\nsection board:\n    # The title of the pocoo board\n    title = Pocoo\n    # A short description of this board\n    description = ...comes with ponies included\n    # A logo image (must be an absolute URL)\n    logo =\n\n    # Text for a link displayed in the top right corner,\n    # leave blank to disable\n    toplinktitle =\n    # Target for the top link\n    toplinktarget = /\n\n    # After how many seconds should the confirm message after an action\n    # redirect to the next page\n    redirecttime = 3\n    # Are the users allowed to automatically be logged in\n    autologin = True\n    # Which image should be used as favicon?\n    favicon = favicon.ico\n    # The time after that cookies will get deleted (in seconds)\n    cookieexpire = 7200\n    # Session cookie name\n    cookiename = pocoo_sid\n    # Do new user accounts require email address verification?\n    email_verification = false\n    # Default View\n    # the default view if the user hasn\'t defined on in the settings:\n    #   flat            phpbb like bulletin board\n    #   threaded        mailinglist like threaded view\n    default_view = threaded\n    # number of posts / page for flat view\n    posts_per_page = 15\n    # number of threads on the forum view\n    threads_per_page = 20\n\n    # are avatars allowed?\n    allow_avatars = true\n    # maximal avatar size in pixel\n    avatar_dimension = 80\n\n    # Parser used for converting postings to HTML\n    # pocoo ships the following parsers:\n    #   plain           a text-only parser that just creates links and breaks\n    #                   lines; HTML is escaped.\n    #   bbcode          phpbb like bbcode parser\n    #   rest            restructured text parser\n    #   simplehtml      passes through HTML, but removes some\n    #                   unwanted tags (like <script>)\n    syntax_parser = bbcode\n\n    # bbcode tags allowed in signature.\n    # set this to \'ALL\' to enable all tags\n    # seperate the list of allowed tags with a comma\n    bbcode_signature_tags = b, i, u, s, size, url, color, email, code\n\n    # the maximum length allowed for the signature\n    signature_length = 255\n\n    # the maximum number of lines for the signature\n    signature_lines = 3\n\n    # Smiley providers to replace smilies in forum text.\n    # "default" is the pocoo standard parser.\n    smiley_providers = list:\n        default\n\n\nsection messages:\n    # Terms of Use for Login and Registering\n    termsofuse =\n    # A notice that is shown when creating a new post\n    newpostnotice =\n'
MANAGEPY = '#!%(executable)s\n# -*- coding: utf-8 -*-\n"""\n    Pocoo management wrapper for this instance\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n    This file was generated automagically - you should not need\n    to edit it.\n\n    :copyright: 2006 by the Pocoo team.\n    :license: GNU GPL, see LICENSE for more details.\n"""\n\nimport sys, os\n\nthisdir = os.path.dirname(__file__)\nroot = os.environ.get("POCOO_ROOT", None) or thisdir\n\npathfile = os.path.join(thisdir, \'PYTHONPATH\')\nif os.path.isfile(pathfile):\n    sys.path.extend(p.strip() for p in open(pathfile) if p.strip())\n\nimport pocoo.management\npocoo.management.main(root=thisdir)\n'
SITEINITPY = '# -*- coding: utf-8 -*-\n"""\n    Pocoo site package\n    ~~~~~~~~~~~~~~~~~~\n\n    This is the Pocoo "site" package which is always loaded.\n    Place custom components here or in subpackages.\n\n    Don\'t forget to update the ``package.conf`` file accordingly!\n"""\n'
PACKAGESREADME = 'Put packages containing plugins here.\n'
SITEPACKAGECONF = '#\n# Pocoo site package\n# ~~~~~~~~~~~~~~~~~~\n#\n# For every component, table, template tag/filter and middleware\n# you add to the site package, there must be an entry in this file.\n#\n\nfullname = "Pocoo site package for %(path)s"\ndescription = "This package contains site-specific customization."\nauthor = "Site admin"\n\ncomponents = list:\n    # Add component names here, with module names relative to\n    # the package.\n    # For example, if you have a component named "UserGreeter"\n    # in site.pkg/greeter.py, the entry must be\n\n    # greeter.UserGreeter\n\ntables = list:\n    # The same for database tables (inheriting from pocoo.db.Table).\n\ntemplate_tags = list:\n    # The same for template tags (inheriting from jinja.nodes.Node).\n\ntemplate_filters = list:\n    # The same for template filters (functions implenting Jinja filters).\n\nmiddlewares = list:\n    # The same for middlewares (WSGI application wrappers).\n\n'
SITETEMPLATEREADME = 'Place custom templates here.\n'
SITESTATICREADME = 'Put static content here.\n'
BLOBSREADME = 'This directory is used for storing uploaded files and other binary data.\n'
CACHEREADME = 'This directory is used for caching data.\n'
AVATARSREADME = 'This directory is used for storing user avatars.\n'