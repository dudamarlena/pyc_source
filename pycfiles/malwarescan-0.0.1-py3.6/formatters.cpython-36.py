# uncompyle6 version 3.7.4
# Python bytecode 3.6 (3379)
# Decompiled from: Python 3.6.9 (default, Apr 18 2020, 01:56:04) 
# [GCC 8.4.0]
# Embedded file name: build/bdist.linux-x86_64/egg/libs/formatters.py
# Compiled at: 2018-12-08 08:56:56
# Size of source mod 2**32: 2973 bytes
"""Main views.py file for current application module."""
import yaml
from datetime import datetime as dtime
from datetime import timedelta as tdelta
from dateutil.parser import parse as dtparser
from flask import url_for
from flask import Markup

def fmt_file_results(view, context, model, name):
    field = getattr(model, name)
    out_data = yaml.dump(field,
      explicit_start=True, width=150, indent=4)
    return Markup('<pre class="prettyprint">{}</pre>'.format(out_data))


def fmt_elapsed_time(view, context, model, name):
    date_b = getattr(model, name)
    date_f = model.date_f
    if model.status_f == 'InProgress':
        etime = str(dtparser(str(dtime.now())) - dtparser(str(date_f)))
    else:
        etime = str(dtparser(str(date_b)) - dtparser(str(date_f)))
    return Markup('<strong><i>{}</i></strong>'.format(etime))


def fmt_elapsed_time_secs(view, context, model, name):
    field = getattr(model, name)
    return Markup('<strong><i>{}</i></strong>'.format(str(tdelta(seconds=field))))


def fmt_cclient_details(view, context, model, name):
    field = getattr(model, name)
    url = url_for('clients.details_view', id=(model.id))
    return Markup('<a href="{}">{}</a>'.format(url, field))


def fmt_eclient_details(view, context, model, name):
    field = getattr(model, name)
    try:
        url = url_for('clients.details_view', id=(model.client.id))
    except:
        url = '#'

    return Markup('<a href="{}">{}</a>'.format(url, field))


def fmt_eval_details(view, context, model, name):
    url = url_for('evals.details_view', id=(model.id))
    return Markup('<a href="{}">{}</a>'.format(url, model.uuid_f))


def fmt_file_details(view, context, model, name):
    url = url_for('files.details_view', id=(model.id))
    return Markup('<a href="{}">{}</a>'.format(url, model.name))


def fmt_files_length(view, context, model, name):
    field = getattr(model, name)
    return Markup(f'<span class="label label-primary">{len(field)}</span>')


def fmt_counts(view, context, model, name):
    field = getattr(model, name)
    return Markup(f'<span class="label label-primary">{field}</span>')


def fmt_text_bold(view, context, model, name):
    field = getattr(model, name)
    return Markup(f"<strong>{field}</strong>")


def fmt_text_italic(view, context, model, name):
    field = getattr(model, name)
    return Markup(f"<i>{field}</i>")


def fmt_text_boldital(view, context, model, name):
    field = getattr(model, name)
    return Markup(f"<strong><i>{field}</i></strong>")


def fmt_render_score(view, context, model, name):
    field = getattr(model, name)
    if field > 5:
        return str(True)
    else:
        return str(False)