# uncompyle6 version 3.7.4
# Python bytecode 2.7 (62211)
# Decompiled from: Python 3.6.9 (default, Apr 18 2020, 01:56:04) 
# [GCC 8.4.0]
# Embedded file name: /Users/mmonroy/Desktop/data/num2words/tests/test_sl.py
# Compiled at: 2020-04-17 01:14:26
from __future__ import unicode_literals
from unittest import TestCase
from numinwords import numinwords

class numinwordsSLTest(TestCase):

    def test_ordinal_less_than_twenty(self):
        self.assertEqual(numinwords(2, ordinal=True, lang=b'sl'), b'drugi')
        self.assertEqual(numinwords(4, ordinal=True, lang=b'sl'), b'četrti')
        self.assertEqual(numinwords(7, ordinal=True, lang=b'sl'), b'sedmi')
        self.assertEqual(numinwords(8, ordinal=True, lang=b'sl'), b'osmi')
        self.assertEqual(numinwords(12, ordinal=True, lang=b'sl'), b'dvanajsti')
        self.assertEqual(numinwords(17, ordinal=True, lang=b'sl'), b'sedemnajsti')

    def test_ordinal_more_than_twenty(self):
        self.assertEqual(numinwords(81, ordinal=True, lang=b'sl'), b'enainosemdeseti')

    def test_ordinal_at_crucial_number(self):
        self.assertEqual(numinwords(100, ordinal=True, lang=b'sl'), b'stoti')
        self.assertEqual(numinwords(1000, ordinal=True, lang=b'sl'), b'tisoči')
        self.assertEqual(numinwords(4000, ordinal=True, lang=b'sl'), b'štiritisoči')
        self.assertEqual(numinwords(2000000, ordinal=True, lang=b'sl'), b'dvamilijonti')
        self.assertEqual(numinwords(5000000000, ordinal=True, lang=b'sl'), b'petmilijardti')

    def test_ordinal_numbers_from_repository_of_test_cases(self):
        self.assertEqual(numinwords(1, ordinal=True, lang=b'sl'), b'prvi')
        self.assertEqual(numinwords(2, ordinal=True, lang=b'sl'), b'drugi')
        self.assertEqual(numinwords(3, ordinal=True, lang=b'sl'), b'tretji')
        self.assertEqual(numinwords(4, ordinal=True, lang=b'sl'), b'četrti')
        self.assertEqual(numinwords(5, ordinal=True, lang=b'sl'), b'peti')
        self.assertEqual(numinwords(6, ordinal=True, lang=b'sl'), b'šesti')
        self.assertEqual(numinwords(7, ordinal=True, lang=b'sl'), b'sedmi')
        self.assertEqual(numinwords(8, ordinal=True, lang=b'sl'), b'osmi')
        self.assertEqual(numinwords(9, ordinal=True, lang=b'sl'), b'deveti')
        self.assertEqual(numinwords(10, ordinal=True, lang=b'sl'), b'deseti')
        self.assertEqual(numinwords(100, ordinal=True, lang=b'sl'), b'stoti')
        self.assertEqual(numinwords(101, ordinal=True, lang=b'sl'), b'stoprvi')
        self.assertEqual(numinwords(102, ordinal=True, lang=b'sl'), b'stodrugi')
        self.assertEqual(numinwords(103, ordinal=True, lang=b'sl'), b'stotretji')
        self.assertEqual(numinwords(104, ordinal=True, lang=b'sl'), b'stočetrti')
        self.assertEqual(numinwords(105, ordinal=True, lang=b'sl'), b'stopeti')
        self.assertEqual(numinwords(106, ordinal=True, lang=b'sl'), b'stošesti')
        self.assertEqual(numinwords(200, ordinal=True, lang=b'sl'), b'dvestoti')
        self.assertEqual(numinwords(1000, ordinal=True, lang=b'sl'), b'tisoči')
        self.assertEqual(numinwords(1001, ordinal=True, lang=b'sl'), b'tisočprvi')
        self.assertEqual(numinwords(1002, ordinal=True, lang=b'sl'), b'tisočdrugi')
        self.assertEqual(numinwords(1003, ordinal=True, lang=b'sl'), b'tisočtretji')
        self.assertEqual(numinwords(1004, ordinal=True, lang=b'sl'), b'tisoččetrti')
        self.assertEqual(numinwords(1005, ordinal=True, lang=b'sl'), b'tisočpeti')
        self.assertEqual(numinwords(1006, ordinal=True, lang=b'sl'), b'tisočšesti')
        self.assertEqual(numinwords(2000, ordinal=True, lang=b'sl'), b'dvatisoči')
        self.assertEqual(numinwords(20000, ordinal=True, lang=b'sl'), b'dvajsettisoči')
        self.assertEqual(numinwords(200000, ordinal=True, lang=b'sl'), b'dvestotisoči')
        self.assertEqual(numinwords(1000000, ordinal=True, lang=b'sl'), b'milijonti')
        self.assertEqual(numinwords(2000000, ordinal=True, lang=b'sl'), b'dvamilijonti')
        self.assertEqual(numinwords(3000000, ordinal=True, lang=b'sl'), b'trimilijonti')
        self.assertEqual(numinwords(101000000, ordinal=True, lang=b'sl'), b'stoenmilijonti')
        self.assertEqual(numinwords(202000000, ordinal=True, lang=b'sl'), b'dvestodvamilijonti')
        self.assertEqual(numinwords(1121, ordinal=True, lang=b'sl'), b'tisočstoenaindvajseti')
        self.assertEqual(numinwords(2405, ordinal=True, lang=b'sl'), b'dvatisočštiristopeti')

    def test_cardinal_at_some_numbers(self):
        self.assertEqual(numinwords(2, lang=b'sl'), b'dve')
        self.assertEqual(numinwords(4000, lang=b'sl'), b'štiri tisoč')
        self.assertEqual(numinwords(2000000, lang=b'sl'), b'dva milijona')
        self.assertEqual(numinwords(4000000000, lang=b'sl'), b'štiri milijarde')

    def test_cardinal_numbers_from_repository_of_test_cases(self):
        self.assertEqual(numinwords(0, lang=b'sl'), b'nič')
        self.assertEqual(numinwords(1, lang=b'sl'), b'ena')
        self.assertEqual(numinwords(2, lang=b'sl'), b'dve')
        self.assertEqual(numinwords(3, lang=b'sl'), b'tri')
        self.assertEqual(numinwords(4, lang=b'sl'), b'štiri')
        self.assertEqual(numinwords(5, lang=b'sl'), b'pet')
        self.assertEqual(numinwords(6, lang=b'sl'), b'šest')
        self.assertEqual(numinwords(7, lang=b'sl'), b'sedem')
        self.assertEqual(numinwords(8, lang=b'sl'), b'osem')
        self.assertEqual(numinwords(9, lang=b'sl'), b'devet')
        self.assertEqual(numinwords(10, lang=b'sl'), b'deset')
        self.assertEqual(numinwords(11, lang=b'sl'), b'enajst')
        self.assertEqual(numinwords(12, lang=b'sl'), b'dvanajst')
        self.assertEqual(numinwords(13, lang=b'sl'), b'trinajst')
        self.assertEqual(numinwords(14, lang=b'sl'), b'štirinajst')
        self.assertEqual(numinwords(15, lang=b'sl'), b'petnajst')
        self.assertEqual(numinwords(16, lang=b'sl'), b'šestnajst')
        self.assertEqual(numinwords(17, lang=b'sl'), b'sedemnajst')
        self.assertEqual(numinwords(18, lang=b'sl'), b'osemnajst')
        self.assertEqual(numinwords(19, lang=b'sl'), b'devetnajst')
        self.assertEqual(numinwords(20, lang=b'sl'), b'dvajset')
        self.assertEqual(numinwords(21, lang=b'sl'), b'enaindvajset')
        self.assertEqual(numinwords(22, lang=b'sl'), b'dvaindvajset')
        self.assertEqual(numinwords(23, lang=b'sl'), b'triindvajset')
        self.assertEqual(numinwords(24, lang=b'sl'), b'štiriindvajset')
        self.assertEqual(numinwords(25, lang=b'sl'), b'petindvajset')
        self.assertEqual(numinwords(26, lang=b'sl'), b'šestindvajset')
        self.assertEqual(numinwords(27, lang=b'sl'), b'sedemindvajset')
        self.assertEqual(numinwords(28, lang=b'sl'), b'osemindvajset')
        self.assertEqual(numinwords(29, lang=b'sl'), b'devetindvajset')
        self.assertEqual(numinwords(30, lang=b'sl'), b'trideset')
        self.assertEqual(numinwords(40, lang=b'sl'), b'štirideset')
        self.assertEqual(numinwords(50, lang=b'sl'), b'petdeset')
        self.assertEqual(numinwords(60, lang=b'sl'), b'šestdeset')
        self.assertEqual(numinwords(70, lang=b'sl'), b'sedemdeset')
        self.assertEqual(numinwords(80, lang=b'sl'), b'osemdeset')
        self.assertEqual(numinwords(90, lang=b'sl'), b'devetdeset')
        self.assertEqual(numinwords(100, lang=b'sl'), b'sto')
        self.assertEqual(numinwords(101, lang=b'sl'), b'sto ena')
        self.assertEqual(numinwords(102, lang=b'sl'), b'sto dve')
        self.assertEqual(numinwords(103, lang=b'sl'), b'sto tri')
        self.assertEqual(numinwords(104, lang=b'sl'), b'sto štiri')
        self.assertEqual(numinwords(105, lang=b'sl'), b'sto pet')
        self.assertEqual(numinwords(106, lang=b'sl'), b'sto šest')
        self.assertEqual(numinwords(200, lang=b'sl'), b'dvesto')
        self.assertEqual(numinwords(300, lang=b'sl'), b'tristo')
        self.assertEqual(numinwords(400, lang=b'sl'), b'štiristo')
        self.assertEqual(numinwords(500, lang=b'sl'), b'petsto')
        self.assertEqual(numinwords(600, lang=b'sl'), b'šeststo')
        self.assertEqual(numinwords(700, lang=b'sl'), b'sedemsto')
        self.assertEqual(numinwords(800, lang=b'sl'), b'osemsto')
        self.assertEqual(numinwords(900, lang=b'sl'), b'devetsto')
        self.assertEqual(numinwords(1000, lang=b'sl'), b'tisoč')
        self.assertEqual(numinwords(1001, lang=b'sl'), b'tisoč ena')
        self.assertEqual(numinwords(1002, lang=b'sl'), b'tisoč dve')
        self.assertEqual(numinwords(1003, lang=b'sl'), b'tisoč tri')
        self.assertEqual(numinwords(1004, lang=b'sl'), b'tisoč štiri')
        self.assertEqual(numinwords(1005, lang=b'sl'), b'tisoč pet')
        self.assertEqual(numinwords(1006, lang=b'sl'), b'tisoč šest')
        self.assertEqual(numinwords(2000, lang=b'sl'), b'dva tisoč')
        self.assertEqual(numinwords(20000, lang=b'sl'), b'dvajset tisoč')
        self.assertEqual(numinwords(100000, lang=b'sl'), b'sto tisoč')
        self.assertEqual(numinwords(101000, lang=b'sl'), b'sto en tisoč')
        self.assertEqual(numinwords(200000, lang=b'sl'), b'dvesto tisoč')
        self.assertEqual(numinwords(1000000, lang=b'sl'), b'milijon')
        self.assertEqual(numinwords(2000000, lang=b'sl'), b'dva milijona')
        self.assertEqual(numinwords(3000000, lang=b'sl'), b'trije milijoni')
        self.assertEqual(numinwords(101000000, lang=b'sl'), b'sto en milijon')
        self.assertEqual(numinwords(202000000, lang=b'sl'), b'dvesto dva milijona')
        self.assertEqual(numinwords(303000000, lang=b'sl'), b'tristo trije milijoni')
        self.assertEqual(numinwords(304000000, lang=b'sl'), b'tristo štirje milijoni')
        self.assertEqual(numinwords(1000000000, lang=b'sl'), b'milijarda')
        self.assertEqual(numinwords(2000000000, lang=b'sl'), b'dve milijardi')
        self.assertEqual(numinwords(1121, lang=b'sl'), b'tisoč sto enaindvajset')
        self.assertEqual(numinwords(2401, lang=b'sl'), b'dva tisoč štiristo ena')
        self.assertEqual(numinwords(201001004, lang=b'sl'), b'dvesto en milijon tisoč štiri')
        self.assertEqual(numinwords(1803603801, lang=b'sl'), b'milijarda osemsto trije milijoni šeststo tri tisoč osemsto ena')

    def test_cardinal_for_decimal_number(self):
        self.assertEqual(numinwords(3.48, lang=b'sl'), b'tri celih štiri osem')

    def test_ordinal_for_negative_numbers(self):
        self.assertRaises(TypeError, numinwords, -12, ordinal=True, lang=b'sl')

    def test_ordinal_for_floating_numbers(self):
        self.assertRaises(TypeError, numinwords, 2.453, ordinal=True, lang=b'sl')