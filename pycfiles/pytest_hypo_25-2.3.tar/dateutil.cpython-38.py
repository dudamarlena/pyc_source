# uncompyle6 version 3.7.4
# Python bytecode 3.8 (3413)
# Decompiled from: Python 3.6.9 (default, Apr 18 2020, 01:56:04) 
# [GCC 8.4.0]
# Embedded file name: C:\Users\User\AppData\Local\Temp\pip-install-oj_abz_z\hypothesis\hypothesis\extra\dateutil.py
# Compiled at: 2020-01-12 08:06:33
# Size of source mod 2**32: 2322 bytes
"""
--------------------
hypothesis[dateutil]
--------------------

This module provides ``dateutil`` timezones.

You can use this strategy to make
:py:func:`hypothesis.strategies.datetimes` and
:py:func:`hypothesis.strategies.times` produce timezone-aware values.
"""
import datetime as dt
from dateutil import tz, zoneinfo
import hypothesis.strategies._internal.core as st
__all__ = [
 'timezones']

def __zone_sort_key(zone):
    """Sort by absolute UTC offset at reference date,
    positive first, with ties broken by name.
    """
    assert zone is not None
    offset = zone.utcoffset(dt.datetime(2000, 1, 1))
    offset = 999 if offset is None else offset
    return (abs(offset), -offset, str(zone))


@st.cacheable
@st.defines_strategy
def timezones() -> st.SearchStrategy[dt.tzinfo]:
    """Any timezone in dateutil.

    This strategy minimises to UTC, or the timezone with the smallest offset
    from UTC as of 2000-01-01, and is designed for use with
    :py:func:`~hypothesis.strategies.datetimes`.

    Note that the timezones generated by the strategy may vary depending on the
    configuration of your machine. See the dateutil documentation for more
    information.
    """
    all_timezones = sorted((tz.gettz(t) for t in zoneinfo.get_zonefile_instance().zones),
      key=__zone_sort_key)
    all_timezones.insert(0, tz.UTC)
    assert None not in all_timezones
    return st.sampled_from([z for z in all_timezones if z is not None])