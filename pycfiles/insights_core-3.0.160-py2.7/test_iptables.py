# uncompyle6 version 3.7.4
# Python bytecode 2.7 (62211)
# Decompiled from: Python 3.6.9 (default, Apr 18 2020, 01:56:04) 
# [GCC 8.4.0]
# Embedded file name: build/bdist.linux-x86_64/egg/insights/parsers/tests/test_iptables.py
# Compiled at: 2019-05-16 13:41:33
from insights.parsers import iptables
from insights.parsers.iptables import IPTablesConfiguration, IPTables, IP6Tables, IPTabPermanent, IP6TabPermanent
from insights.tests import context_wrap
import doctest
IPTABLES_SAVE = '\n# Generated by iptables-save v1.4.7 on Tue Aug 16 10:18:43 2016\n*filter\n:INPUT ACCEPT [0:0]\n:FORWARD ACCEPT [0:0]\n:OUTPUT ACCEPT [769:196899]\n:REJECT-LOG - [0:0]\n-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT\n-A INPUT -m state --state RELATED,ESTABLISHED -g ACCEPT\n-A INPUT -s 192.168.0.0/24 -j ACCEPT\n-A INPUT -s 192.168.2.0/24\n-A INPUT -p icmp -j ACCEPT\n-A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT\n-A INPUT -j REJECT --reject-with icmp-host-prohibited\n-A REJECT-LOG -p tcp -j REJECT --reject-with tcp-reset\nCOMMIT\n# Completed on Tue Aug 16 10:18:43 2016\n# Generated by iptables-save v1.4.7 on Tue Aug 16 10:18:43 2016\n*mangle\n:PREROUTING ACCEPT [451:22060]\n:INPUT ACCEPT [451:22060]\n:FORWARD ACCEPT [0:0]\n:OUTPUT ACCEPT [594:47151]\n:POSTROUTING ACCEPT [594:47151]\nCOMMIT\n# Completed on Tue Aug 16 10:18:43 2016\n# Generated by iptables-save v1.4.7 on Tue Aug 16 10:18:43 2016\n*nat\n:PREROUTING ACCEPT [0:0]\n:POSTROUTING ACCEPT [3:450]\n:OUTPUT ACCEPT [3:450]\nCOMMIT\n# Completed on Tue Aug 16 10:18:43 2016\n'
PARSED_TCP_REJECT_RULE = {'table': 'filter', 
   'chain': 'REJECT-LOG', 
   'rule': '-p tcp -j REJECT --reject-with tcp-reset', 
   'target_action': 'jump', 
   'constraints': '-p tcp', 
   'target': 'REJECT', 
   'target_options': '--reject-with tcp-reset'}

def check_iptables_rules_parsing(iptables_obj):
    ipt = iptables_obj
    assert len(ipt.rules) == 8
    assert len(ipt.get_chain('INPUT')) == 7
    assert len(ipt.table_chains('mangle')) == 5
    assert ipt.rules[(-1)] == PARSED_TCP_REJECT_RULE
    assert ipt.get_table('nat')[1] == {'policy': 'ACCEPT', 
       'table': 'nat', 
       'name': 'POSTROUTING', 
       'packet_counter': 3, 
       'byte_counter': 450}
    assert 'tcp-reset' in ipt
    assert '--sport' not in ipt
    assert ipt.get_rule('tcp-reset') == [PARSED_TCP_REJECT_RULE]


def test_iptables_configuration():
    ipt = IPTablesConfiguration(context_wrap(IPTABLES_SAVE))
    check_iptables_rules_parsing(ipt)


def test_iptables_save():
    ipt = IPTables(context_wrap(IPTABLES_SAVE))
    check_iptables_rules_parsing(ipt)


def test_iptables_permanent():
    ipt = IPTabPermanent(context_wrap(IPTABLES_SAVE))
    check_iptables_rules_parsing(ipt)


IP6TABLES_SAVE = '\n# Generated by ip6tables-save v1.4.21 on Tue Jan 31 05:25:29 2017\n*nat\n:PREROUTING ACCEPT [0:0]\n:INPUT ACCEPT [0:0]\n:OUTPUT ACCEPT [0:0]\n:POSTROUTING ACCEPT [0:0]\nCOMMIT\n# Completed on Tue Jan 31 05:25:29 2017\n# Generated by ip6tables-save v1.4.21 on Tue Jan 31 05:25:29 2017\n*mangle\n:PREROUTING ACCEPT [0:0]\n:INPUT ACCEPT [0:0]\n:FORWARD ACCEPT [0:0]\n:OUTPUT ACCEPT [0:0]\n:POSTROUTING ACCEPT [0:0]\nCOMMIT\n# Completed on Tue Jan 31 05:25:29 2017\n# Generated by ip6tables-save v1.4.21 on Tue Jan 31 05:25:29 2017\n*security\n:INPUT ACCEPT [0:0]\n:FORWARD ACCEPT [0:0]\n:OUTPUT ACCEPT [8:512]\n:FORWARD_direct - [0:0]\n:INPUT_direct - [0:0]\n:OUTPUT_direct - [0:0]\n-A INPUT -j INPUT_direct\n-A FORWARD -j FORWARD_direct\n-A OUTPUT -j OUTPUT_direct\nCOMMIT\n# Completed on Tue Jan 31 05:25:29 2017\n# Generated by ip6tables-save v1.4.21 on Tue Jan 31 05:25:29 2017\n*raw\n:PREROUTING ACCEPT [0:0]\n:OUTPUT ACCEPT [8:512]\n:OUTPUT_direct - [0:0]\n:PREROUTING_direct - [0:0]\n-A PREROUTING -p ipv6-icmp -m icmp6 --icmpv6-type 134 -j ACCEPT\n-A PREROUTING -m rpfilter --invert -j DROP\n-A PREROUTING -j PREROUTING_direct\n-A OUTPUT -j OUTPUT_direct\nCOMMIT\n# Completed on Tue Jan 31 05:25:29 2017\n# Generated by ip6tables-save v1.4.21 on Tue Jan 31 05:25:29 2017\n*filter\n:INPUT ACCEPT [0:0]\n:FORWARD ACCEPT [0:0]\n:OUTPUT ACCEPT [0:0]\n:REJECT-LOG - [0:0]\n-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT\n-A INPUT -s fe80::/64 -j ACCEPT\n-A INPUT -s fe80::/64\n-A INPUT -p ipv6-icmp -j ACCEPT\n-A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT\n-A INPUT -j REJECT --reject-with icmp6-adm-prohibited\n-A REJECT-LOG -p tcp -j REJECT --reject-with tcp-reset\nCOMMIT\n# Completed on Tue Jan 31 05:25:29 2017\n'
PARSED_TCP_REJECT_RULE_6 = {'table': 'filter', 
   'chain': 'REJECT-LOG', 
   'rule': '-p tcp -j REJECT --reject-with tcp-reset', 
   'target_action': 'jump', 
   'constraints': '-p tcp', 
   'target': 'REJECT', 
   'target_options': '--reject-with tcp-reset'}

def check_ip6tables_rules_parsing(ip6tables_obj):
    ipt = ip6tables_obj
    assert len(ipt.rules) == 14
    assert len(ipt.get_chain('INPUT')) == 6
    assert len(ipt.table_chains('mangle')) == 5
    assert ipt.rules[(-1)] == PARSED_TCP_REJECT_RULE_6
    assert ipt.get_table('nat')[(-1)] == {'policy': 'ACCEPT', 
       'table': 'nat', 
       'byte_counter': 0, 
       'name': 'POSTROUTING', 
       'packet_counter': 0}
    assert 'tcp-reset' in ipt
    assert '--sport' not in ipt
    assert ipt.get_rule('tcp-reset') == [PARSED_TCP_REJECT_RULE]


def test_ip6tables_save():
    ipt = IP6Tables(context_wrap(IP6TABLES_SAVE))
    check_ip6tables_rules_parsing(ipt)


def test_ip6tables_permanent():
    ipt = IP6TabPermanent(context_wrap(IP6TABLES_SAVE))
    check_ip6tables_rules_parsing(ipt)


IPTABLES_SAVE_DOC = '\n# Generated by iptables-save v1.4.7 on Tue Aug 16 10:18:43 2016\n*filter\n:INPUT ACCEPT [0:0]\n:FORWARD ACCEPT [0:0]\n:OUTPUT ACCEPT [769:196899]\n:REJECT-LOG - [0:0]\n-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT\n-A INPUT -s 192.168.0.0/24 -j ACCEPT\n-A INPUT -p icmp -j ACCEPT\n-A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT\n-A INPUT -j REJECT --reject-with icmp-host-prohibited\n-A REJECT-LOG -p tcp -j REJECT --reject-with tcp-reset\nCOMMIT\n# Completed on Tue Aug 16 10:18:43 2016\n# Generated by iptables-save v1.4.7 on Tue Aug 16 10:18:43 2016\n*mangle\n:PREROUTING ACCEPT [451:22060]\n:INPUT ACCEPT [451:22060]\n:FORWARD ACCEPT [0:0]\n:OUTPUT ACCEPT [594:47151]\n:POSTROUTING ACCEPT [594:47151]\nCOMMIT\n# Completed on Tue Aug 16 10:18:43 2016\n# Generated by iptables-save v1.4.7 on Tue Aug 16 10:18:43 2016\n*nat\n:PREROUTING ACCEPT [0:0]\n:POSTROUTING ACCEPT [3:450]\n:OUTPUT ACCEPT [3:450]\nCOMMIT\n# Completed on Tue Aug 16 10:18:43 2016\n'

def test_ip6tables_doc():
    env = {'IPTables': IPTables, 
       'ipt': IPTables(context_wrap(IPTABLES_SAVE_DOC))}
    failed, total = doctest.testmod(iptables, globs=env)
    assert failed == 0


IP6TABLES_SAVE_SPECIAL = '\n# Generated by iptables-save v1.4.7 on Tue Aug 16 10:18:43 2016\n*filter\n:INPUT ACCEPT [0:0]\n:FORWARD ACCEPT [0:0]\n:OUTPUT ACCEPT [769:196899]\n:REJECT-LOG - [0:0]\n:Drop - [0:0]\n-A INPUT -j REJECT --reject-with icmp6-adm-prohibited\n-A OUTPUT -d 192.168.0.23/32 -m comment --comment "Permit IP to device net-j" -j ACCEPT\n-A DROP\n-A REJECT-LOG -p tcp -j REJECT --reject-with tcp-reset\n-A INPUT -p tcp -m tcp --dport 11 -m conntrack --ctstate NEW -j {s_1}\n# Just a test to cover 100->101\n-A\nCOMMIT\n# Completed on Tue Aug 16 10:18:43 2016\n# Generated by iptables-save v1.4.7 on Tue Aug 16 10:18:43 2016\n*mangle\n:PREROUTING ACCEPT [451:22060]\n:INPUT ACCEPT [451:22060]\n:FORWARD ACCEPT [0:0]\n:OUTPUT ACCEPT [594:47151]\n:POSTROUTING ACCEPT [594:47151]\nCOMMIT\n# Completed on Tue Aug 16 10:18:43 2016\n# Generated by iptables-save v1.4.7 on Tue Aug 16 10:18:43 2016\n*nat\n:PREROUTING ACCEPT [0:0]\n:POSTROUTING ACCEPT [3:450]\n:OUTPUT ACCEPT [3:450]\nCOMMIT\n# Completed on Tue Aug 16 10:18:43 2016\n'
PARSED_TCP_REJECT_RULEs = [
 {'table': 'filter', 
    'chain': 'INPUT', 
    'rule': '-j REJECT --reject-with icmp6-adm-prohibited', 
    'target_action': 'jump', 
    'constraints': '', 
    'target': 'REJECT', 
    'target_options': '--reject-with icmp6-adm-prohibited'},
 {'table': 'filter', 
    'chain': 'OUTPUT', 
    'rule': '-d 192.168.0.23/32 -m comment --comment "Permit IP to device net-j" -j ACCEPT', 
    'target': 'ACCEPT', 
    'target_options': None, 
    'target_action': 'jump', 
    'constraints': '-d 192.168.0.23/32 -m comment --comment "Permit IP to device net-j"'},
 {'table': 'filter', 
    'rule': '', 
    'chain': 'DROP'},
 {'table': 'filter', 
    'chain': 'REJECT-LOG', 
    'rule': '-p tcp -j REJECT --reject-with tcp-reset', 
    'target': 'REJECT', 
    'target_options': '--reject-with tcp-reset', 
    'target_action': 'jump', 
    'constraints': '-p tcp'},
 {'table': 'filter', 
    'chain': 'INPUT', 
    'rule': '-p tcp -m tcp --dport 11 -m conntrack --ctstate NEW -j', 
    'target': '', 
    'target_options': None, 
    'target_action': 'jump', 
    'constraints': '-p tcp -m tcp --dport 11 -m conntrack --ctstate NEW'}]

def test_ip6tables_save_special():
    ipt = IP6Tables(context_wrap(IP6TABLES_SAVE_SPECIAL.format(s_1='')))
    assert len(ipt.rules) == 5
    assert len(ipt.get_chain('INPUT')) == 2
    assert len(ipt.get_chain('OUTPUT')) == 1
    for rst, exp in zip(ipt.rules, PARSED_TCP_REJECT_RULEs):
        assert rst == exp

    assert ipt.get_chain('DROP') == [{'table': 'filter', 'rule': '', 'chain': 'DROP'}]