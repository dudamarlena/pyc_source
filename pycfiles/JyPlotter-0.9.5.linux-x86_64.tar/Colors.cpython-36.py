# uncompyle6 version 3.7.4
# Python bytecode 3.6 (3379)
# Decompiled from: Python 3.6.9 (default, Apr 18 2020, 01:56:04) 
# [GCC 8.4.0]
# Embedded file name: /usr/lib/python3.6/site-packages/PyPlotter/Colors.py
# Compiled at: 2017-05-19 14:51:50
# Size of source mod 2**32: 7333 bytes
"""Support module that provides a large number of different colorsets 
(r,g,b) which is especially usefull, when drawing many different curves
on the same graph. The list of colorsets can be filtered through a 
number of filter functions that allow only shades of a certain color to
pass through. This helps grouping graphs with similar colors.
"""
colors = ((0.0, 0.0, 0.5), (1.0, 1.0, 0.0), (0.33, 1.0, 1.0), (1.0, 0.0, 1.0), (0.0, 1.0, 0.0),
          (1.0, 0.0, 0.0), (1.0, 0.67, 0.67), (0.4, 0.4, 0.0), (0.33, 0.33, 1.0),
          (0.0, 0.6, 0.6), (0.4, 1.0, 0.4), (0.6, 0.0, 0.4), (0.5, 0.5, 0.5), (1.0, 0.5, 0.0),
          (0.0, 0.0, 1.0), (0.67, 0.67, 1.0), (0.0, 0.2, 0.0), (1.0, 0.2, 0.4), (0.6, 0.8, 0.0),
          (0.5, 0.0, 0.0), (0.0, 1.0, 0.5), (0.8, 1.0, 0.8), (0.0, 0.67, 1.0), (0.0, 0.6, 0.2),
          (0.6, 0.0, 0.8), (0.8, 1.0, 0.4), (1.0, 0.4, 1.0), (0.2, 0.0, 0.2), (1.0, 0.8, 1.0),
          (0.0, 1.0, 1.0), (0.0, 0.33, 1.0), (0.33, 0.0, 1.0), (0.33, 0.67, 1.0),
          (0.33, 1.0, 0.0), (0.67, 0.33, 1.0), (1.0, 0.67, 0.33), (1.0, 0.0, 0.67),
          (0.6, 0.8, 0.6), (0.8, 0.4, 0.6), (0.4, 0.2, 0.6), (0.2, 0.4, 0.4), (0.8, 0.4, 0.2),
          (0.33, 0.67, 0.33), (0.33, 0.67, 0.67), (0.67, 0.67, 0.33), (0.2, 0.6, 0.0),
          (0.4, 0.2, 0.2), (0.6, 1.0, 0.2), (0.8, 0.0, 0.2), (0.8, 0.2, 0.0), (1.0, 1.0, 0.6),
          (0.0, 0.33, 0.67), (0.8, 0.2, 0.8), (0.33, 1.0, 0.67), (0.2, 0.2, 0.8),
          (0.6, 1.0, 1.0), (0.8, 0.6, 0.8), (0.0, 0.8, 0.8), (0.2, 1.0, 0.2), (0.5, 0.5, 1.0),
          (1.0, 0.5, 0.5), (0.8, 0.8, 0.2), (0.0, 0.5, 0.0), (0.2, 0.0, 0.6), (0.0, 0.2, 0.4),
          (0.8, 0.6, 0.0), (0.0, 0.8, 0.4), (0.4, 0.4, 0.8), (1.0, 0.33, 0.67), (1.0, 0.0, 0.33),
          (1.0, 1.0, 0.33), (0.67, 0.0, 1.0), (0.67, 1.0, 0.0), (0.8, 0.0, 0.6),
          (0.4, 0.8, 0.8), (0.0, 0.4, 0.2), (0.2, 0.4, 0.6), (0.4, 0.0, 0.4), (0.4, 0.0, 0.8),
          (0.4, 0.8, 0.0), (0.6, 0.2, 0.2), (0.6, 0.2, 0.6), (0.6, 0.4, 0.0), (0.6, 0.4, 0.8),
          (0.0, 0.0, 0.2), (0.0, 0.2, 0.2), (0.0, 0.4, 0.4), (0.0, 1.0, 0.2), (0.2, 0.0, 0.0),
          (0.2, 0.0, 0.4), (0.2, 0.2, 0.0), (0.2, 0.2, 0.2), (0.2, 0.2, 0.4), (0.2, 0.4, 0.0),
          (0.2, 0.4, 0.2), (0.2, 0.8, 0.4), (0.2, 0.8, 0.8), (0.4, 0.0, 0.2), (0.4, 0.2, 0.0),
          (0.4, 0.2, 0.4), (0.4, 0.4, 0.2), (0.4, 0.8, 0.2), (0.6, 0.2, 0.4), (0.8, 0.4, 0.4),
          (1.0, 0.2, 0.2), (1.0, 0.2, 1.0), (0.0, 0.0, 0.8), (0.0, 0.6, 0.4), (0.0, 0.6, 0.8),
          (0.0, 0.8, 0.0), (0.0, 0.8, 0.2), (0.0, 0.8, 0.6), (0.0, 1.0, 0.8), (0.2, 0.0, 0.8),
          (0.2, 0.2, 0.6), (0.2, 0.4, 0.8), (0.2, 0.6, 0.8), (0.2, 0.8, 0.0), (0.2, 0.8, 0.2),
          (0.2, 0.8, 0.6), (0.2, 1.0, 0.4), (0.4, 0.0, 0.6), (0.4, 0.2, 0.8), (0.4, 0.6, 0.0),
          (0.4, 1.0, 0.2), (0.6, 0.0, 0.2), (0.6, 0.0, 0.6), (0.6, 0.2, 0.0), (0.6, 0.2, 0.8),
          (0.6, 0.4, 0.2), (0.6, 0.6, 0.0), (0.6, 0.6, 0.8), (0.6, 0.8, 0.2), (0.6, 0.8, 0.8),
          (0.6, 1.0, 0.4), (0.6, 1.0, 0.6), (0.6, 1.0, 0.8), (0.8, 0.0, 0.0), (0.8, 0.0, 0.4),
          (0.8, 0.0, 0.8), (0.8, 0.2, 0.2), (0.8, 0.2, 0.4), (0.8, 0.2, 0.6), (0.8, 0.4, 0.0),
          (0.8, 0.4, 0.8), (0.8, 0.6, 0.2), (0.8, 0.6, 0.6), (0.8, 0.8, 0.0), (0.8, 0.8, 0.4),
          (0.8, 0.8, 0.6), (0.8, 0.8, 0.8), (0.8, 1.0, 0.2), (0.8, 1.0, 0.6), (0.8, 1.0, 1.0),
          (1.0, 0.2, 0.0), (1.0, 0.4, 0.2), (1.0, 0.6, 1.0), (1.0, 0.8, 0.0), (0.2, 0.6, 0.2),
          (0.8, 0.8, 1.0), (1.0, 0.8, 0.8), (0.0, 0.2, 0.8), (0.2, 0.8, 1.0), (0.2, 1.0, 0.8),
          (0.8, 0.2, 1.0), (1.0, 0.2, 0.8), (1.0, 0.8, 0.2), (0.2, 0.2, 1.0), (0.6, 0.6, 0.6),
          (0.6, 0.4, 0.6), (0.4, 0.4, 0.6), (0.6, 0.4, 0.4), (0.4, 0.4, 0.4), (0.0, 0.5, 1.0),
          (0.5, 0.0, 1.0), (0.5, 1.0, 0.0), (1.0, 0.0, 0.5), (0.4, 0.8, 0.4), (0.4, 0.6, 0.8),
          (0.4, 0.8, 0.6), (0.6, 0.8, 0.4), (0.8, 0.6, 0.4), (0.2, 0.6, 0.4), (0.4, 0.6, 0.2),
          (0.2, 0.6, 0.6), (0.6, 0.6, 0.2), (0.0, 0.4, 0.8), (0.4, 0.8, 1.0), (0.4, 1.0, 0.8),
          (0.8, 0.4, 1.0), (1.0, 0.4, 0.8), (1.0, 0.8, 0.4), (0.6, 0.8, 1.0), (0.8, 0.6, 1.0),
          (1.0, 0.6, 0.8), (1.0, 0.8, 0.6), (1.0, 0.33, 0.33), (0.2, 0.4, 1.0), (0.4, 0.2, 1.0),
          (0.0, 0.2, 0.6), (0.2, 0.6, 1.0), (0.2, 1.0, 0.6), (0.6, 0.2, 1.0), (1.0, 0.2, 0.6),
          (1.0, 0.6, 0.2), (0.0, 0.5, 0.5), (0.5, 0.0, 0.5), (0.5, 0.5, 0.0), (0.5, 1.0, 0.5),
          (0.0, 0.0, 0.67), (0.0, 0.67, 0.0), (0.0, 1.0, 0.67), (0.67, 0.0, 0.0),
          (1.0, 0.67, 0.0), (0.0, 0.8, 1.0), (0.8, 0.0, 1.0), (0.8, 1.0, 0.0), (1.0, 0.0, 0.8),
          (0.0, 0.0, 0.33), (0.0, 0.33, 0.0), (0.0, 1.0, 0.33), (0.33, 0.0, 0.0),
          (1.0, 0.33, 0.0), (0.0, 0.2, 1.0), (0.2, 0.0, 1.0), (0.2, 1.0, 0.0), (0.2, 1.0, 1.0),
          (1.0, 0.0, 0.2), (1.0, 1.0, 0.2), (0.33, 0.33, 0.33), (0.33, 0.33, 0.67),
          (0.67, 0.33, 0.33), (0.4, 0.6, 0.4), (0.67, 0.33, 0.67), (0.4, 0.6, 0.6),
          (0.6, 0.6, 0.4), (0.67, 0.67, 0.67), (0.5, 1.0, 1.0), (1.0, 1.0, 0.5),
          (1.0, 0.5, 1.0), (0.0, 0.33, 0.33), (0.33, 0.0, 0.33), (0.33, 0.33, 0.0),
          (0.33, 1.0, 0.33), (0.4, 0.4, 1.0), (1.0, 0.4, 0.4), (0.0, 0.67, 0.33),
          (0.33, 0.0, 0.67), (0.33, 0.67, 0.0), (0.67, 0.0, 0.33), (0.67, 0.33, 0.0),
          (0.67, 1.0, 0.33), (0.0, 0.4, 0.6), (0.4, 0.6, 1.0), (0.4, 1.0, 0.6), (0.6, 0.4, 1.0),
          (1.0, 0.4, 0.6), (1.0, 0.6, 0.4), (0.0, 0.67, 0.67), (0.67, 0.0, 0.67),
          (0.67, 0.67, 0.0), (0.67, 1.0, 0.67), (0.6, 0.6, 1.0), (1.0, 0.6, 0.6),
          (1.0, 0.33, 1.0), (0.0, 0.0, 0.4), (0.0, 0.4, 0.0), (0.0, 0.4, 1.0), (0.0, 1.0, 0.4),
          (0.4, 0.0, 0.0), (0.4, 0.0, 1.0), (0.4, 1.0, 0.0), (0.4, 1.0, 1.0), (1.0, 0.0, 0.4),
          (1.0, 0.4, 0.0), (1.0, 1.0, 0.4), (0.67, 1.0, 1.0), (1.0, 0.67, 1.0), (1.0, 1.0, 0.67),
          (0.0, 0.0, 0.6), (0.0, 0.6, 0.0), (0.0, 0.6, 1.0), (0.0, 1.0, 0.6), (0.6, 0.0, 0.0),
          (0.6, 0.0, 1.0), (0.6, 1.0, 0.0), (1.0, 0.0, 0.6), (1.0, 0.6, 0.0))

def RedFilter(c):
    """Returns True if color can be classified as a shade of red"""
    if c[0] > c[1]:
        if c[0] > c[2]:
            if c[1] == c[2]:
                return True
    return False


def GreenFilter(c):
    """Returns True if color can be classified as a shade of green"""
    if c[1] > c[0]:
        if c[1] > c[2]:
            if c[0] == c[2]:
                return True
    return False


def BlueFilter(c):
    """Returns True if color can be classified as a shade of blue"""
    if c[2] > c[1]:
        if c[2] > c[0]:
            if c[1] == c[0]:
                return True
    return False


def YellowFilter(c):
    """Returns True if color can be classified as a shade of yellow"""
    if c[0] > c[2]:
        if c[1] > c[2]:
            if c[0] == c[1]:
                return True
    return False


def PinkFilter(c):
    """Returns True if color can be classified as a shade of pink"""
    if c[0] > c[1]:
        if c[2] > c[1]:
            if c[2] == c[0]:
                return True
    return False


def TurkeyFilter(c):
    """Returns True if color can be classified as a shade of turkey"""
    if c[2] > c[0]:
        if c[1] > c[0]:
            if c[2] == c[1]:
                return True
    return False