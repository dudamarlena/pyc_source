# uncompyle6 version 3.7.4
# Python bytecode 2.5 (62131)
# Decompiled from: Python 3.6.9 (default, Apr 18 2020, 01:56:04) 
# [GCC 8.4.0]
# Embedded file name: build/bdist.linux-x86_64/egg/pyglet/gl/glxext_arb.py
# Compiled at: 2009-02-07 06:48:49
"""Wrapper for http://oss.sgi.com/projects/ogl-sample/ABI/glxext.h

Generated by tools/gengl.py.
Do not modify this file.
"""
__docformat__ = 'restructuredtext'
__version__ = '$Id: glxext_arb.py 1579 2008-01-15 14:47:19Z Alex.Holkner $'
import ctypes
from ctypes import *
from pyglet.gl.lib import link_GLX as _link_function
from pyglet.gl.lib import c_ptrdiff_t
if not hasattr(ctypes, 'c_int64'):
    c_int64 = c_long
    c_uint64 = c_ulong
GLAPI = 0
GLX_GLXEXT_VERSION = 11
GLX_SAMPLE_BUFFERS_ARB = 100000
GLX_SAMPLES_ARB = 100001
GLX_RGBA_FLOAT_TYPE_ARB = 8377
GLX_RGBA_FLOAT_BIT_ARB = 4
GLX_SAMPLE_BUFFERS_SGIS = 100000
GLX_SAMPLES_SGIS = 100001
GLX_X_VISUAL_TYPE_EXT = 34
GLX_TRANSPARENT_TYPE_EXT = 35
GLX_TRANSPARENT_INDEX_VALUE_EXT = 36
GLX_TRANSPARENT_RED_VALUE_EXT = 37
GLX_TRANSPARENT_GREEN_VALUE_EXT = 38
GLX_TRANSPARENT_BLUE_VALUE_EXT = 39
GLX_TRANSPARENT_ALPHA_VALUE_EXT = 40
GLX_NONE_EXT = 32768
GLX_TRUE_COLOR_EXT = 32770
GLX_DIRECT_COLOR_EXT = 32771
GLX_PSEUDO_COLOR_EXT = 32772
GLX_STATIC_COLOR_EXT = 32773
GLX_GRAY_SCALE_EXT = 32774
GLX_STATIC_GRAY_EXT = 32775
GLX_TRANSPARENT_RGB_EXT = 32776
GLX_TRANSPARENT_INDEX_EXT = 32777
GLX_VISUAL_CAVEAT_EXT = 32
GLX_SLOW_VISUAL_EXT = 32769
GLX_NON_CONFORMANT_VISUAL_EXT = 32781
GLX_SHARE_CONTEXT_EXT = 32778
GLX_VISUAL_ID_EXT = 32779
GLX_SCREEN_EXT = 32780
GLX_WINDOW_BIT_SGIX = 1
GLX_PIXMAP_BIT_SGIX = 2
GLX_RGBA_BIT_SGIX = 1
GLX_COLOR_INDEX_BIT_SGIX = 2
GLX_DRAWABLE_TYPE_SGIX = 32784
GLX_RENDER_TYPE_SGIX = 32785
GLX_X_RENDERABLE_SGIX = 32786
GLX_FBCONFIG_ID_SGIX = 32787
GLX_RGBA_TYPE_SGIX = 32788
GLX_COLOR_INDEX_TYPE_SGIX = 32789
GLX_PBUFFER_BIT_SGIX = 4
GLX_BUFFER_CLOBBER_MASK_SGIX = 134217728
GLX_FRONT_LEFT_BUFFER_BIT_SGIX = 1
GLX_FRONT_RIGHT_BUFFER_BIT_SGIX = 2
GLX_BACK_LEFT_BUFFER_BIT_SGIX = 4
GLX_BACK_RIGHT_BUFFER_BIT_SGIX = 8
GLX_AUX_BUFFERS_BIT_SGIX = 16
GLX_DEPTH_BUFFER_BIT_SGIX = 32
GLX_STENCIL_BUFFER_BIT_SGIX = 64
GLX_ACCUM_BUFFER_BIT_SGIX = 128
GLX_SAMPLE_BUFFERS_BIT_SGIX = 256
GLX_MAX_PBUFFER_WIDTH_SGIX = 32790
GLX_MAX_PBUFFER_HEIGHT_SGIX = 32791
GLX_MAX_PBUFFER_PIXELS_SGIX = 32792
GLX_OPTIMAL_PBUFFER_WIDTH_SGIX = 32793
GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX = 32794
GLX_PRESERVED_CONTENTS_SGIX = 32795
GLX_LARGEST_PBUFFER_SGIX = 32796
GLX_WIDTH_SGIX = 32797
GLX_HEIGHT_SGIX = 32798
GLX_EVENT_MASK_SGIX = 32799
GLX_DAMAGED_SGIX = 32800
GLX_SAVED_SGIX = 32801
GLX_WINDOW_SGIX = 32802
GLX_PBUFFER_SGIX = 32803
GLX_SYNC_FRAME_SGIX = 0
GLX_SYNC_SWAP_SGIX = 1
GLX_DIGITAL_MEDIA_PBUFFER_SGIX = 32804
GLX_BLENDED_RGBA_SGIS = 32805
GLX_MULTISAMPLE_SUB_RECT_WIDTH_SGIS = 32806
GLX_MULTISAMPLE_SUB_RECT_HEIGHT_SGIS = 32807
GLX_SAMPLE_BUFFERS_3DFX = 32848
GLX_SAMPLES_3DFX = 32849
GLX_3DFX_WINDOW_MODE_MESA = 1
GLX_3DFX_FULLSCREEN_MODE_MESA = 2
GLX_VISUAL_SELECT_GROUP_SGIX = 32808
GLX_SWAP_METHOD_OML = 32864
GLX_SWAP_EXCHANGE_OML = 32865
GLX_SWAP_COPY_OML = 32866
GLX_SWAP_UNDEFINED_OML = 32867
GLX_FLOAT_COMPONENTS_NV = 8368
GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX = 80
GLX_BAD_HYPERPIPE_CONFIG_SGIX = 91
GLX_BAD_HYPERPIPE_SGIX = 92
GLX_HYPERPIPE_DISPLAY_PIPE_SGIX = 1
GLX_HYPERPIPE_RENDER_PIPE_SGIX = 2
GLX_PIPE_RECT_SGIX = 1
GLX_PIPE_RECT_LIMITS_SGIX = 2
GLX_HYPERPIPE_STEREO_SGIX = 3
GLX_HYPERPIPE_PIXEL_AVERAGE_SGIX = 4
GLX_HYPERPIPE_ID_SGIX = 32816
XID = c_ulong
GLXVideoSourceSGIX = XID
GLXFBConfigIDSGIX = XID

class struct___GLXFBConfigRec(Structure):
    __slots__ = []


struct___GLXFBConfigRec._fields_ = [
 (
  '_opaque_struct', c_int)]
GLXFBConfigSGIX = POINTER(struct___GLXFBConfigRec)

class struct_anon_199(Structure):
    __slots__ = [
     'type',
     'serial',
     'send_event',
     'display',
     'drawable',
     'event_type',
     'draw_type',
     'mask',
     'x',
     'y',
     'width',
     'height',
     'count']


class struct__XDisplay(Structure):
    __slots__ = []


struct__XDisplay._fields_ = [
 (
  '_opaque_struct', c_int)]
Display = struct__XDisplay
GLXDrawable = XID
struct_anon_199._fields_ = [
 (
  'type', c_int),
 (
  'serial', c_ulong),
 (
  'send_event', c_int),
 (
  'display', POINTER(Display)),
 (
  'drawable', GLXDrawable),
 (
  'event_type', c_int),
 (
  'draw_type', c_int),
 (
  'mask', c_uint),
 (
  'x', c_int),
 (
  'y', c_int),
 (
  'width', c_int),
 (
  'height', c_int),
 (
  'count', c_int)]
GLXBufferClobberEventSGIX = struct_anon_199
GLX_ARB_multisample = 1
GLX_ARB_fbconfig_float = 1
GLX_SGIS_multisample = 1
GLX_EXT_visual_info = 1
GLX_SGI_swap_control = 1
glXSwapIntervalSGI = _link_function('glXSwapIntervalSGI', c_int, [c_int], 'SGI_swap_control')
PFNGLXSWAPINTERVALSGIPROC = CFUNCTYPE(c_int, c_int)
GLX_SGI_video_sync = 1
glXGetVideoSyncSGI = _link_function('glXGetVideoSyncSGI', c_int, [POINTER(c_uint)], 'SGI_video_sync')
glXWaitVideoSyncSGI = _link_function('glXWaitVideoSyncSGI', c_int, [c_int, c_int, POINTER(c_uint)], 'SGI_video_sync')
PFNGLXGETVIDEOSYNCSGIPROC = CFUNCTYPE(c_int, POINTER(c_uint))
PFNGLXWAITVIDEOSYNCSGIPROC = CFUNCTYPE(c_int, c_int, c_int, POINTER(c_uint))
GLX_SGI_make_current_read = 1

class struct___GLXcontextRec(Structure):
    __slots__ = []


struct___GLXcontextRec._fields_ = [
 (
  '_opaque_struct', c_int)]
GLXContext = POINTER(struct___GLXcontextRec)
glXMakeCurrentReadSGI = _link_function('glXMakeCurrentReadSGI', c_int, [POINTER(Display), GLXDrawable, GLXDrawable, GLXContext], 'SGI_make_current_read')
glXGetCurrentReadDrawableSGI = _link_function('glXGetCurrentReadDrawableSGI', GLXDrawable, [], 'SGI_make_current_read')
PFNGLXMAKECURRENTREADSGIPROC = CFUNCTYPE(c_int, POINTER(Display), GLXDrawable, GLXDrawable, GLXContext)
PFNGLXGETCURRENTREADDRAWABLESGIPROC = CFUNCTYPE(GLXDrawable)
GLX_SGIX_video_source = 1
GLX_EXT_visual_rating = 1
GLX_EXT_import_context = 1
glXGetCurrentDisplayEXT = _link_function('glXGetCurrentDisplayEXT', POINTER(Display), [], 'EXT_import_context')
glXQueryContextInfoEXT = _link_function('glXQueryContextInfoEXT', c_int, [POINTER(Display), GLXContext, c_int, POINTER(c_int)], 'EXT_import_context')
GLXContextID = XID
glXGetContextIDEXT = _link_function('glXGetContextIDEXT', GLXContextID, [GLXContext], 'EXT_import_context')
glXImportContextEXT = _link_function('glXImportContextEXT', GLXContext, [POINTER(Display), GLXContextID], 'EXT_import_context')
glXFreeContextEXT = _link_function('glXFreeContextEXT', None, [POINTER(Display), GLXContext], 'EXT_import_context')
PFNGLXGETCURRENTDISPLAYEXTPROC = CFUNCTYPE(POINTER(Display))
PFNGLXQUERYCONTEXTINFOEXTPROC = CFUNCTYPE(c_int, POINTER(Display), GLXContext, c_int, POINTER(c_int))
PFNGLXGETCONTEXTIDEXTPROC = CFUNCTYPE(GLXContextID, GLXContext)
PFNGLXIMPORTCONTEXTEXTPROC = CFUNCTYPE(GLXContext, POINTER(Display), GLXContextID)
PFNGLXFREECONTEXTEXTPROC = CFUNCTYPE(None, POINTER(Display), GLXContext)
GLX_SGIX_fbconfig = 1
glXGetFBConfigAttribSGIX = _link_function('glXGetFBConfigAttribSGIX', c_int, [POINTER(Display), GLXFBConfigSGIX, c_int, POINTER(c_int)], 'SGIX_fbconfig')
glXChooseFBConfigSGIX = _link_function('glXChooseFBConfigSGIX', POINTER(GLXFBConfigSGIX), [POINTER(Display), c_int, POINTER(c_int), POINTER(c_int)], 'SGIX_fbconfig')
GLXPixmap = XID
Pixmap = XID
glXCreateGLXPixmapWithConfigSGIX = _link_function('glXCreateGLXPixmapWithConfigSGIX', GLXPixmap, [POINTER(Display), GLXFBConfigSGIX, Pixmap], 'SGIX_fbconfig')
glXCreateContextWithConfigSGIX = _link_function('glXCreateContextWithConfigSGIX', GLXContext, [POINTER(Display), GLXFBConfigSGIX, c_int, GLXContext, c_int], 'SGIX_fbconfig')

class struct_anon_196(Structure):
    __slots__ = [
     'visual',
     'visualid',
     'screen',
     'depth',
     'class',
     'red_mask',
     'green_mask',
     'blue_mask',
     'colormap_size',
     'bits_per_rgb']


class struct_anon_113(Structure):
    __slots__ = [
     'ext_data',
     'visualid',
     'class',
     'red_mask',
     'green_mask',
     'blue_mask',
     'bits_per_rgb',
     'map_entries']


class struct__XExtData(Structure):
    __slots__ = [
     'number',
     'next',
     'free_private',
     'private_data']


XPointer = c_char_p
struct__XExtData._fields_ = [
 (
  'number', c_int),
 (
  'next', POINTER(struct__XExtData)),
 (
  'free_private', POINTER(CFUNCTYPE(c_int, POINTER(struct__XExtData)))),
 (
  'private_data', XPointer)]
XExtData = struct__XExtData
VisualID = c_ulong
struct_anon_113._fields_ = [
 (
  'ext_data', POINTER(XExtData)),
 (
  'visualid', VisualID),
 (
  'class', c_int),
 (
  'red_mask', c_ulong),
 (
  'green_mask', c_ulong),
 (
  'blue_mask', c_ulong),
 (
  'bits_per_rgb', c_int),
 (
  'map_entries', c_int)]
Visual = struct_anon_113
struct_anon_196._fields_ = [
 (
  'visual', POINTER(Visual)),
 (
  'visualid', VisualID),
 (
  'screen', c_int),
 (
  'depth', c_int),
 (
  'class', c_int),
 (
  'red_mask', c_ulong),
 (
  'green_mask', c_ulong),
 (
  'blue_mask', c_ulong),
 (
  'colormap_size', c_int),
 (
  'bits_per_rgb', c_int)]
XVisualInfo = struct_anon_196
glXGetVisualFromFBConfigSGIX = _link_function('glXGetVisualFromFBConfigSGIX', POINTER(XVisualInfo), [POINTER(Display), GLXFBConfigSGIX], 'SGIX_fbconfig')
glXGetFBConfigFromVisualSGIX = _link_function('glXGetFBConfigFromVisualSGIX', GLXFBConfigSGIX, [POINTER(Display), POINTER(XVisualInfo)], 'SGIX_fbconfig')
PFNGLXGETFBCONFIGATTRIBSGIXPROC = CFUNCTYPE(c_int, POINTER(Display), GLXFBConfigSGIX, c_int, POINTER(c_int))
PFNGLXCHOOSEFBCONFIGSGIXPROC = CFUNCTYPE(POINTER(GLXFBConfigSGIX), POINTER(Display), c_int, POINTER(c_int), POINTER(c_int))
PFNGLXCREATEGLXPIXMAPWITHCONFIGSGIXPROC = CFUNCTYPE(GLXPixmap, POINTER(Display), GLXFBConfigSGIX, Pixmap)
PFNGLXCREATECONTEXTWITHCONFIGSGIXPROC = CFUNCTYPE(GLXContext, POINTER(Display), GLXFBConfigSGIX, c_int, GLXContext, c_int)
PFNGLXGETVISUALFROMFBCONFIGSGIXPROC = CFUNCTYPE(POINTER(XVisualInfo), POINTER(Display), GLXFBConfigSGIX)
PFNGLXGETFBCONFIGFROMVISUALSGIXPROC = CFUNCTYPE(GLXFBConfigSGIX, POINTER(Display), POINTER(XVisualInfo))
GLX_SGIX_pbuffer = 1
GLXPbufferSGIX = XID
glXCreateGLXPbufferSGIX = _link_function('glXCreateGLXPbufferSGIX', GLXPbufferSGIX, [POINTER(Display), GLXFBConfigSGIX, c_uint, c_uint, POINTER(c_int)], 'SGIX_pbuffer')
glXDestroyGLXPbufferSGIX = _link_function('glXDestroyGLXPbufferSGIX', None, [POINTER(Display), GLXPbufferSGIX], 'SGIX_pbuffer')
glXQueryGLXPbufferSGIX = _link_function('glXQueryGLXPbufferSGIX', c_int, [POINTER(Display), GLXPbufferSGIX, c_int, POINTER(c_uint)], 'SGIX_pbuffer')
glXSelectEventSGIX = _link_function('glXSelectEventSGIX', None, [POINTER(Display), GLXDrawable, c_ulong], 'SGIX_pbuffer')
glXGetSelectedEventSGIX = _link_function('glXGetSelectedEventSGIX', None, [POINTER(Display), GLXDrawable, POINTER(c_ulong)], 'SGIX_pbuffer')
PFNGLXCREATEGLXPBUFFERSGIXPROC = CFUNCTYPE(GLXPbufferSGIX, POINTER(Display), GLXFBConfigSGIX, c_uint, c_uint, POINTER(c_int))
PFNGLXDESTROYGLXPBUFFERSGIXPROC = CFUNCTYPE(None, POINTER(Display), GLXPbufferSGIX)
PFNGLXQUERYGLXPBUFFERSGIXPROC = CFUNCTYPE(c_int, POINTER(Display), GLXPbufferSGIX, c_int, POINTER(c_uint))
PFNGLXSELECTEVENTSGIXPROC = CFUNCTYPE(None, POINTER(Display), GLXDrawable, c_ulong)
PFNGLXGETSELECTEDEVENTSGIXPROC = CFUNCTYPE(None, POINTER(Display), GLXDrawable, POINTER(c_ulong))
GLX_SGI_cushion = 1
Window = XID
glXCushionSGI = _link_function('glXCushionSGI', None, [POINTER(Display), Window, c_float], 'SGI_cushion')
PFNGLXCUSHIONSGIPROC = CFUNCTYPE(None, POINTER(Display), Window, c_float)
GLX_SGIX_video_resize = 1
glXBindChannelToWindowSGIX = _link_function('glXBindChannelToWindowSGIX', c_int, [POINTER(Display), c_int, c_int, Window], 'SGIX_video_resize')
glXChannelRectSGIX = _link_function('glXChannelRectSGIX', c_int, [POINTER(Display), c_int, c_int, c_int, c_int, c_int, c_int], 'SGIX_video_resize')
glXQueryChannelRectSGIX = _link_function('glXQueryChannelRectSGIX', c_int, [POINTER(Display), c_int, c_int, POINTER(c_int), POINTER(c_int), POINTER(c_int), POINTER(c_int)], 'SGIX_video_resize')
glXQueryChannelDeltasSGIX = _link_function('glXQueryChannelDeltasSGIX', c_int, [POINTER(Display), c_int, c_int, POINTER(c_int), POINTER(c_int), POINTER(c_int), POINTER(c_int)], 'SGIX_video_resize')
GLenum = c_uint
glXChannelRectSyncSGIX = _link_function('glXChannelRectSyncSGIX', c_int, [POINTER(Display), c_int, c_int, GLenum], 'SGIX_video_resize')
PFNGLXBINDCHANNELTOWINDOWSGIXPROC = CFUNCTYPE(c_int, POINTER(Display), c_int, c_int, Window)
PFNGLXCHANNELRECTSGIXPROC = CFUNCTYPE(c_int, POINTER(Display), c_int, c_int, c_int, c_int, c_int, c_int)
PFNGLXQUERYCHANNELRECTSGIXPROC = CFUNCTYPE(c_int, POINTER(Display), c_int, c_int, POINTER(c_int), POINTER(c_int), POINTER(c_int), POINTER(c_int))
PFNGLXQUERYCHANNELDELTASSGIXPROC = CFUNCTYPE(c_int, POINTER(Display), c_int, c_int, POINTER(c_int), POINTER(c_int), POINTER(c_int), POINTER(c_int))
PFNGLXCHANNELRECTSYNCSGIXPROC = CFUNCTYPE(c_int, POINTER(Display), c_int, c_int, GLenum)
GLX_SGIX_dmbuffer = 1
GLX_SGIX_swap_group = 1
glXJoinSwapGroupSGIX = _link_function('glXJoinSwapGroupSGIX', None, [POINTER(Display), GLXDrawable, GLXDrawable], 'SGIX_swap_group')
PFNGLXJOINSWAPGROUPSGIXPROC = CFUNCTYPE(None, POINTER(Display), GLXDrawable, GLXDrawable)
GLX_SGIX_swap_barrier = 1
glXBindSwapBarrierSGIX = _link_function('glXBindSwapBarrierSGIX', None, [POINTER(Display), GLXDrawable, c_int], 'SGIX_swap_barrier')
glXQueryMaxSwapBarriersSGIX = _link_function('glXQueryMaxSwapBarriersSGIX', c_int, [POINTER(Display), c_int, POINTER(c_int)], 'SGIX_swap_barrier')
PFNGLXBINDSWAPBARRIERSGIXPROC = CFUNCTYPE(None, POINTER(Display), GLXDrawable, c_int)
PFNGLXQUERYMAXSWAPBARRIERSSGIXPROC = CFUNCTYPE(c_int, POINTER(Display), c_int, POINTER(c_int))
GLX_SUN_get_transparent_index = 1
glXGetTransparentIndexSUN = _link_function('glXGetTransparentIndexSUN', c_int, [POINTER(Display), Window, Window, POINTER(c_long)], 'SUN_get_transparent_index')
PFNGLXGETTRANSPARENTINDEXSUNPROC = CFUNCTYPE(c_int, POINTER(Display), Window, Window, POINTER(c_long))
GLX_MESA_copy_sub_buffer = 1
glXCopySubBufferMESA = _link_function('glXCopySubBufferMESA', None, [POINTER(Display), GLXDrawable, c_int, c_int, c_int, c_int], 'MESA_copy_sub_buffer')
PFNGLXCOPYSUBBUFFERMESAPROC = CFUNCTYPE(None, POINTER(Display), GLXDrawable, c_int, c_int, c_int, c_int)
GLX_MESA_pixmap_colormap = 1
Colormap = XID
glXCreateGLXPixmapMESA = _link_function('glXCreateGLXPixmapMESA', GLXPixmap, [POINTER(Display), POINTER(XVisualInfo), Pixmap, Colormap], 'MESA_pixmap_colormap')
PFNGLXCREATEGLXPIXMAPMESAPROC = CFUNCTYPE(GLXPixmap, POINTER(Display), POINTER(XVisualInfo), Pixmap, Colormap)
GLX_MESA_release_buffers = 1
glXReleaseBuffersMESA = _link_function('glXReleaseBuffersMESA', c_int, [POINTER(Display), GLXDrawable], 'MESA_release_buffers')
PFNGLXRELEASEBUFFERSMESAPROC = CFUNCTYPE(c_int, POINTER(Display), GLXDrawable)
GLX_MESA_set_3dfx_mode = 1
glXSet3DfxModeMESA = _link_function('glXSet3DfxModeMESA', c_int, [c_int], 'MESA_set_3dfx_mode')
PFNGLXSET3DFXMODEMESAPROC = CFUNCTYPE(c_int, c_int)
GLX_SGIX_visual_select_group = 1
GLX_OML_swap_method = 1
GLX_OML_sync_control = 1
glXGetSyncValuesOML = _link_function('glXGetSyncValuesOML', c_int, [POINTER(Display), GLXDrawable, POINTER(c_int64), POINTER(c_int64), POINTER(c_int64)], 'OML_sync_control')
glXGetMscRateOML = _link_function('glXGetMscRateOML', c_int, [POINTER(Display), GLXDrawable, POINTER(c_int32), POINTER(c_int32)], 'OML_sync_control')
glXSwapBuffersMscOML = _link_function('glXSwapBuffersMscOML', c_int64, [POINTER(Display), GLXDrawable, c_int64, c_int64, c_int64], 'OML_sync_control')
glXWaitForMscOML = _link_function('glXWaitForMscOML', c_int, [POINTER(Display), GLXDrawable, c_int64, c_int64, c_int64, POINTER(c_int64), POINTER(c_int64), POINTER(c_int64)], 'OML_sync_control')
glXWaitForSbcOML = _link_function('glXWaitForSbcOML', c_int, [POINTER(Display), GLXDrawable, c_int64, POINTER(c_int64), POINTER(c_int64), POINTER(c_int64)], 'OML_sync_control')
PFNGLXGETSYNCVALUESOMLPROC = CFUNCTYPE(c_int, POINTER(Display), GLXDrawable, POINTER(c_int64), POINTER(c_int64), POINTER(c_int64))
PFNGLXGETMSCRATEOMLPROC = CFUNCTYPE(c_int, POINTER(Display), GLXDrawable, POINTER(c_int32), POINTER(c_int32))
PFNGLXSWAPBUFFERSMSCOMLPROC = CFUNCTYPE(c_int64, POINTER(Display), GLXDrawable, c_int64, c_int64, c_int64)
PFNGLXWAITFORMSCOMLPROC = CFUNCTYPE(c_int, POINTER(Display), GLXDrawable, c_int64, c_int64, c_int64, POINTER(c_int64), POINTER(c_int64), POINTER(c_int64))
PFNGLXWAITFORSBCOMLPROC = CFUNCTYPE(c_int, POINTER(Display), GLXDrawable, c_int64, POINTER(c_int64), POINTER(c_int64), POINTER(c_int64))
GLX_NV_float_buffer = 1
GLX_SGIX_hyperpipe = 1

class struct_anon_201(Structure):
    __slots__ = [
     'pipeName',
     'networkId']


struct_anon_201._fields_ = [
 (
  'pipeName', c_char * 80),
 (
  'networkId', c_int)]
GLXHyperpipeNetworkSGIX = struct_anon_201

class struct_anon_202(Structure):
    __slots__ = [
     'pipeName',
     'channel',
     'participationType',
     'timeSlice']


struct_anon_202._fields_ = [
 (
  'pipeName', c_char * 80),
 (
  'channel', c_int),
 (
  'participationType', c_uint),
 (
  'timeSlice', c_int)]
GLXHyperpipeConfigSGIX = struct_anon_202

class struct_anon_203(Structure):
    __slots__ = [
     'pipeName',
     'srcXOrigin',
     'srcYOrigin',
     'srcWidth',
     'srcHeight',
     'destXOrigin',
     'destYOrigin',
     'destWidth',
     'destHeight']


struct_anon_203._fields_ = [
 (
  'pipeName', c_char * 80),
 (
  'srcXOrigin', c_int),
 (
  'srcYOrigin', c_int),
 (
  'srcWidth', c_int),
 (
  'srcHeight', c_int),
 (
  'destXOrigin', c_int),
 (
  'destYOrigin', c_int),
 (
  'destWidth', c_int),
 (
  'destHeight', c_int)]
GLXPipeRect = struct_anon_203

class struct_anon_204(Structure):
    __slots__ = [
     'pipeName',
     'XOrigin',
     'YOrigin',
     'maxHeight',
     'maxWidth']


struct_anon_204._fields_ = [
 (
  'pipeName', c_char * 80),
 (
  'XOrigin', c_int),
 (
  'YOrigin', c_int),
 (
  'maxHeight', c_int),
 (
  'maxWidth', c_int)]
GLXPipeRectLimits = struct_anon_204
glXQueryHyperpipeNetworkSGIX = _link_function('glXQueryHyperpipeNetworkSGIX', POINTER(GLXHyperpipeNetworkSGIX), [POINTER(Display), POINTER(c_int)], 'SGIX_hyperpipe')
glXHyperpipeConfigSGIX = _link_function('glXHyperpipeConfigSGIX', c_int, [POINTER(Display), c_int, c_int, POINTER(GLXHyperpipeConfigSGIX), POINTER(c_int)], 'SGIX_hyperpipe')
glXQueryHyperpipeConfigSGIX = _link_function('glXQueryHyperpipeConfigSGIX', POINTER(GLXHyperpipeConfigSGIX), [POINTER(Display), c_int, POINTER(c_int)], 'SGIX_hyperpipe')
glXDestroyHyperpipeConfigSGIX = _link_function('glXDestroyHyperpipeConfigSGIX', c_int, [POINTER(Display), c_int], 'SGIX_hyperpipe')
glXBindHyperpipeSGIX = _link_function('glXBindHyperpipeSGIX', c_int, [POINTER(Display), c_int], 'SGIX_hyperpipe')
glXQueryHyperpipeBestAttribSGIX = _link_function('glXQueryHyperpipeBestAttribSGIX', c_int, [POINTER(Display), c_int, c_int, c_int, POINTER(None), POINTER(None)], 'SGIX_hyperpipe')
glXHyperpipeAttribSGIX = _link_function('glXHyperpipeAttribSGIX', c_int, [POINTER(Display), c_int, c_int, c_int, POINTER(None)], 'SGIX_hyperpipe')
glXQueryHyperpipeAttribSGIX = _link_function('glXQueryHyperpipeAttribSGIX', c_int, [POINTER(Display), c_int, c_int, c_int, POINTER(None)], 'SGIX_hyperpipe')
PFNGLXQUERYHYPERPIPENETWORKSGIXPROC = CFUNCTYPE(POINTER(GLXHyperpipeNetworkSGIX), POINTER(Display), POINTER(c_int))
PFNGLXHYPERPIPECONFIGSGIXPROC = CFUNCTYPE(c_int, POINTER(Display), c_int, c_int, POINTER(GLXHyperpipeConfigSGIX), POINTER(c_int))
PFNGLXQUERYHYPERPIPECONFIGSGIXPROC = CFUNCTYPE(POINTER(GLXHyperpipeConfigSGIX), POINTER(Display), c_int, POINTER(c_int))
PFNGLXDESTROYHYPERPIPECONFIGSGIXPROC = CFUNCTYPE(c_int, POINTER(Display), c_int)
PFNGLXBINDHYPERPIPESGIXPROC = CFUNCTYPE(c_int, POINTER(Display), c_int)
PFNGLXQUERYHYPERPIPEBESTATTRIBSGIXPROC = CFUNCTYPE(c_int, POINTER(Display), c_int, c_int, c_int, POINTER(None), POINTER(None))
PFNGLXHYPERPIPEATTRIBSGIXPROC = CFUNCTYPE(c_int, POINTER(Display), c_int, c_int, c_int, POINTER(None))
PFNGLXQUERYHYPERPIPEATTRIBSGIXPROC = CFUNCTYPE(c_int, POINTER(Display), c_int, c_int, c_int, POINTER(None))
GLX_MESA_agp_offset = 1
glXGetAGPOffsetMESA = _link_function('glXGetAGPOffsetMESA', c_uint, [POINTER(None)], 'MESA_agp_offset')
PFNGLXGETAGPOFFSETMESAPROC = CFUNCTYPE(c_uint, POINTER(None))
__all__ = [
 'GLAPI', 'GLX_GLXEXT_VERSION', 'GLX_SAMPLE_BUFFERS_ARB',
 'GLX_SAMPLES_ARB', 'GLX_RGBA_FLOAT_TYPE_ARB', 'GLX_RGBA_FLOAT_BIT_ARB',
 'GLX_SAMPLE_BUFFERS_SGIS', 'GLX_SAMPLES_SGIS', 'GLX_X_VISUAL_TYPE_EXT',
 'GLX_TRANSPARENT_TYPE_EXT', 'GLX_TRANSPARENT_INDEX_VALUE_EXT',
 'GLX_TRANSPARENT_RED_VALUE_EXT', 'GLX_TRANSPARENT_GREEN_VALUE_EXT',
 'GLX_TRANSPARENT_BLUE_VALUE_EXT', 'GLX_TRANSPARENT_ALPHA_VALUE_EXT',
 'GLX_NONE_EXT', 'GLX_TRUE_COLOR_EXT', 'GLX_DIRECT_COLOR_EXT',
 'GLX_PSEUDO_COLOR_EXT', 'GLX_STATIC_COLOR_EXT', 'GLX_GRAY_SCALE_EXT',
 'GLX_STATIC_GRAY_EXT', 'GLX_TRANSPARENT_RGB_EXT', 'GLX_TRANSPARENT_INDEX_EXT',
 'GLX_VISUAL_CAVEAT_EXT', 'GLX_SLOW_VISUAL_EXT',
 'GLX_NON_CONFORMANT_VISUAL_EXT', 'GLX_SHARE_CONTEXT_EXT', 'GLX_VISUAL_ID_EXT',
 'GLX_SCREEN_EXT', 'GLX_WINDOW_BIT_SGIX', 'GLX_PIXMAP_BIT_SGIX',
 'GLX_RGBA_BIT_SGIX', 'GLX_COLOR_INDEX_BIT_SGIX', 'GLX_DRAWABLE_TYPE_SGIX',
 'GLX_RENDER_TYPE_SGIX', 'GLX_X_RENDERABLE_SGIX', 'GLX_FBCONFIG_ID_SGIX',
 'GLX_RGBA_TYPE_SGIX', 'GLX_COLOR_INDEX_TYPE_SGIX', 'GLX_PBUFFER_BIT_SGIX',
 'GLX_BUFFER_CLOBBER_MASK_SGIX', 'GLX_FRONT_LEFT_BUFFER_BIT_SGIX',
 'GLX_FRONT_RIGHT_BUFFER_BIT_SGIX', 'GLX_BACK_LEFT_BUFFER_BIT_SGIX',
 'GLX_BACK_RIGHT_BUFFER_BIT_SGIX', 'GLX_AUX_BUFFERS_BIT_SGIX',
 'GLX_DEPTH_BUFFER_BIT_SGIX', 'GLX_STENCIL_BUFFER_BIT_SGIX',
 'GLX_ACCUM_BUFFER_BIT_SGIX', 'GLX_SAMPLE_BUFFERS_BIT_SGIX',
 'GLX_MAX_PBUFFER_WIDTH_SGIX', 'GLX_MAX_PBUFFER_HEIGHT_SGIX',
 'GLX_MAX_PBUFFER_PIXELS_SGIX', 'GLX_OPTIMAL_PBUFFER_WIDTH_SGIX',
 'GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX', 'GLX_PRESERVED_CONTENTS_SGIX',
 'GLX_LARGEST_PBUFFER_SGIX', 'GLX_WIDTH_SGIX', 'GLX_HEIGHT_SGIX',
 'GLX_EVENT_MASK_SGIX', 'GLX_DAMAGED_SGIX', 'GLX_SAVED_SGIX',
 'GLX_WINDOW_SGIX', 'GLX_PBUFFER_SGIX', 'GLX_SYNC_FRAME_SGIX',
 'GLX_SYNC_SWAP_SGIX', 'GLX_DIGITAL_MEDIA_PBUFFER_SGIX',
 'GLX_BLENDED_RGBA_SGIS', 'GLX_MULTISAMPLE_SUB_RECT_WIDTH_SGIS',
 'GLX_MULTISAMPLE_SUB_RECT_HEIGHT_SGIS', 'GLX_SAMPLE_BUFFERS_3DFX',
 'GLX_SAMPLES_3DFX', 'GLX_3DFX_WINDOW_MODE_MESA',
 'GLX_3DFX_FULLSCREEN_MODE_MESA', 'GLX_VISUAL_SELECT_GROUP_SGIX',
 'GLX_SWAP_METHOD_OML', 'GLX_SWAP_EXCHANGE_OML', 'GLX_SWAP_COPY_OML',
 'GLX_SWAP_UNDEFINED_OML', 'GLX_FLOAT_COMPONENTS_NV',
 'GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX', 'GLX_BAD_HYPERPIPE_CONFIG_SGIX',
 'GLX_BAD_HYPERPIPE_SGIX', 'GLX_HYPERPIPE_DISPLAY_PIPE_SGIX',
 'GLX_HYPERPIPE_RENDER_PIPE_SGIX', 'GLX_PIPE_RECT_SGIX',
 'GLX_PIPE_RECT_LIMITS_SGIX', 'GLX_HYPERPIPE_STEREO_SGIX',
 'GLX_HYPERPIPE_PIXEL_AVERAGE_SGIX', 'GLX_HYPERPIPE_ID_SGIX',
 'GLXVideoSourceSGIX', 'GLXFBConfigIDSGIX', 'GLXFBConfigSGIX',
 'GLXBufferClobberEventSGIX', 'GLX_ARB_multisample', 'GLX_ARB_fbconfig_float',
 'GLX_SGIS_multisample', 'GLX_EXT_visual_info', 'GLX_SGI_swap_control',
 'glXSwapIntervalSGI', 'PFNGLXSWAPINTERVALSGIPROC', 'GLX_SGI_video_sync',
 'glXGetVideoSyncSGI', 'glXWaitVideoSyncSGI', 'PFNGLXGETVIDEOSYNCSGIPROC',
 'PFNGLXWAITVIDEOSYNCSGIPROC', 'GLX_SGI_make_current_read',
 'glXMakeCurrentReadSGI', 'glXGetCurrentReadDrawableSGI',
 'PFNGLXMAKECURRENTREADSGIPROC', 'PFNGLXGETCURRENTREADDRAWABLESGIPROC',
 'GLX_SGIX_video_source', 'GLX_EXT_visual_rating', 'GLX_EXT_import_context',
 'glXGetCurrentDisplayEXT', 'glXQueryContextInfoEXT', 'glXGetContextIDEXT',
 'glXImportContextEXT', 'glXFreeContextEXT', 'PFNGLXGETCURRENTDISPLAYEXTPROC',
 'PFNGLXQUERYCONTEXTINFOEXTPROC', 'PFNGLXGETCONTEXTIDEXTPROC',
 'PFNGLXIMPORTCONTEXTEXTPROC', 'PFNGLXFREECONTEXTEXTPROC', 'GLX_SGIX_fbconfig',
 'glXGetFBConfigAttribSGIX', 'glXChooseFBConfigSGIX',
 'glXCreateGLXPixmapWithConfigSGIX', 'glXCreateContextWithConfigSGIX',
 'glXGetVisualFromFBConfigSGIX', 'glXGetFBConfigFromVisualSGIX',
 'PFNGLXGETFBCONFIGATTRIBSGIXPROC', 'PFNGLXCHOOSEFBCONFIGSGIXPROC',
 'PFNGLXCREATEGLXPIXMAPWITHCONFIGSGIXPROC',
 'PFNGLXCREATECONTEXTWITHCONFIGSGIXPROC',
 'PFNGLXGETVISUALFROMFBCONFIGSGIXPROC', 'PFNGLXGETFBCONFIGFROMVISUALSGIXPROC',
 'GLX_SGIX_pbuffer', 'glXCreateGLXPbufferSGIX', 'glXDestroyGLXPbufferSGIX',
 'glXQueryGLXPbufferSGIX', 'glXSelectEventSGIX', 'glXGetSelectedEventSGIX',
 'PFNGLXCREATEGLXPBUFFERSGIXPROC', 'PFNGLXDESTROYGLXPBUFFERSGIXPROC',
 'PFNGLXQUERYGLXPBUFFERSGIXPROC', 'PFNGLXSELECTEVENTSGIXPROC',
 'PFNGLXGETSELECTEDEVENTSGIXPROC', 'GLX_SGI_cushion', 'glXCushionSGI',
 'PFNGLXCUSHIONSGIPROC', 'GLX_SGIX_video_resize', 'glXBindChannelToWindowSGIX',
 'glXChannelRectSGIX', 'glXQueryChannelRectSGIX', 'glXQueryChannelDeltasSGIX',
 'glXChannelRectSyncSGIX', 'PFNGLXBINDCHANNELTOWINDOWSGIXPROC',
 'PFNGLXCHANNELRECTSGIXPROC', 'PFNGLXQUERYCHANNELRECTSGIXPROC',
 'PFNGLXQUERYCHANNELDELTASSGIXPROC', 'PFNGLXCHANNELRECTSYNCSGIXPROC',
 'GLX_SGIX_dmbuffer', 'GLX_SGIX_swap_group', 'glXJoinSwapGroupSGIX',
 'PFNGLXJOINSWAPGROUPSGIXPROC', 'GLX_SGIX_swap_barrier',
 'glXBindSwapBarrierSGIX', 'glXQueryMaxSwapBarriersSGIX',
 'PFNGLXBINDSWAPBARRIERSGIXPROC', 'PFNGLXQUERYMAXSWAPBARRIERSSGIXPROC',
 'GLX_SUN_get_transparent_index', 'glXGetTransparentIndexSUN',
 'PFNGLXGETTRANSPARENTINDEXSUNPROC', 'GLX_MESA_copy_sub_buffer',
 'glXCopySubBufferMESA', 'PFNGLXCOPYSUBBUFFERMESAPROC',
 'GLX_MESA_pixmap_colormap', 'glXCreateGLXPixmapMESA',
 'PFNGLXCREATEGLXPIXMAPMESAPROC', 'GLX_MESA_release_buffers',
 'glXReleaseBuffersMESA', 'PFNGLXRELEASEBUFFERSMESAPROC',
 'GLX_MESA_set_3dfx_mode', 'glXSet3DfxModeMESA', 'PFNGLXSET3DFXMODEMESAPROC',
 'GLX_SGIX_visual_select_group', 'GLX_OML_swap_method', 'GLX_OML_sync_control',
 'glXGetSyncValuesOML', 'glXGetMscRateOML', 'glXSwapBuffersMscOML',
 'glXWaitForMscOML', 'glXWaitForSbcOML', 'PFNGLXGETSYNCVALUESOMLPROC',
 'PFNGLXGETMSCRATEOMLPROC', 'PFNGLXSWAPBUFFERSMSCOMLPROC',
 'PFNGLXWAITFORMSCOMLPROC', 'PFNGLXWAITFORSBCOMLPROC', 'GLX_NV_float_buffer',
 'GLX_SGIX_hyperpipe', 'GLXHyperpipeNetworkSGIX', 'GLXHyperpipeConfigSGIX',
 'GLXPipeRect', 'GLXPipeRectLimits', 'glXQueryHyperpipeNetworkSGIX',
 'glXHyperpipeConfigSGIX', 'glXQueryHyperpipeConfigSGIX',
 'glXDestroyHyperpipeConfigSGIX', 'glXBindHyperpipeSGIX',
 'glXQueryHyperpipeBestAttribSGIX', 'glXHyperpipeAttribSGIX',
 'glXQueryHyperpipeAttribSGIX', 'PFNGLXQUERYHYPERPIPENETWORKSGIXPROC',
 'PFNGLXHYPERPIPECONFIGSGIXPROC', 'PFNGLXQUERYHYPERPIPECONFIGSGIXPROC',
 'PFNGLXDESTROYHYPERPIPECONFIGSGIXPROC', 'PFNGLXBINDHYPERPIPESGIXPROC',
 'PFNGLXQUERYHYPERPIPEBESTATTRIBSGIXPROC', 'PFNGLXHYPERPIPEATTRIBSGIXPROC',
 'PFNGLXQUERYHYPERPIPEATTRIBSGIXPROC', 'GLX_MESA_agp_offset',
 'glXGetAGPOffsetMESA', 'PFNGLXGETAGPOFFSETMESAPROC']