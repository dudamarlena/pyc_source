# uncompyle6 version 3.7.4
# Python bytecode 3.7 (3394)
# Decompiled from: Python 3.6.9 (default, Apr 18 2020, 01:56:04) 
# [GCC 8.4.0]
# Embedded file name: build/bdist.linux-x86_64/egg/fastachar/fasta_doc.py
# Compiled at: 2020-02-21 09:31:38
# Size of source mod 2**32: 12113 bytes
ERRORS = {1:'File not found', 
 2:'Invalid or corrupt file', 
 3:'Could not save file', 
 4:'No case data', 
 5:'Not all sequences are of equal length', 
 7:'Case file formatting error', 
 8:'Regular expression formatting error', 
 15:'Unkwown error.'}
ABOUT_TEXT = '\nABOUT\n\nFastaChar V0.1.0 is a simple python program that reads a fasta file\nwith sequences for a number of different species. From the list\nof species, the user can make a selection of two sets (A) and \n(B), which can be analysed. \n\nThe available operations are\n* Molecular diagnostic characters of the sequences in list A: \n  lists the positions of the sequences of A for which holds that:\n      - they are the same for all sequences in list A\n      - all sequences in list B have a different nucleotide on\n        this position\n* Potential molecular diagnostic characters\n  lists the positions of all sequences of A for which holds that \n      - the nucleotides on in list A are different from those in\n        list B, but,\n      - the nucleotides in list A are not unique.\n\nThis software is licensed under GPLv3.\n\nAuthors:\n    Lucas Merckelbach lucas.merckelbach@hzg.de\n    Luisa Borges      luisaborges2000@yahoo.co.uk\n\nFebuary 2020\n\nCopyright 2017-2020\n'
DISCLAIMER = '\nDISCLAIMER\n\nThis software is provided "as is" and any expressed or implied\nwarranties, including, but not limited to, the implied warranties of\nmerchantability and fitness for a particular purpose are\ndisclaimed. In no event shall the regents or contributors be liable\nfor any direct, indirect, incidental, special, exemplary, or\nconsequential damages (including, but not limited to, procurement of\nsubstitute goods or services; loss of use, data, or profits; or\nbusiness interruption) however caused and on any theory of liability,\nwhether in contract, strict liability, or tort (including negligence\nor otherwise) arising in any way out of the use of this software, even\nif advised of the possibility of such damage.\n\n'
HELP_TEXT = '\nHELP\n\nFastaChar is a simple python program to compare aligned sequences of\ndifferent or (supposedly) the same species.\n\nThe sequences are assumed to be provided in the standard fasta file\nformat. See for example https://en.wikipedia.org/wiki/FASTA_format.\n\nWORKFLOW\n========\n\nBefore using the program the user needs to prepare a valid fasta file,\nwith sequences of one or more species. A given species may be\nrepresented by more than one sequence, each with its own ID.\n\nFasta header parsing settings\n-----------------------------\nIn a fasta file a sequence data entry consists of two lines. The\nfirst line (starting with >), which we refer to as the sequence\nheader, contains then species name and usually an sequence ID. The\nformat of this header is not prescribed. FastaChar has a flexible\nmechanism to interprete sequence header strings. The condition that\nmust be met, though, is that all sequences in a given fasta file\nadhere to the same format. It may therefore be required to configure\nFastaChar\'s sequence header parsing settings prior to open a fasta file\nwith aligned sequences. \n\nSequence header parsing settings can be modified from selecting the\noption "Header parsing settings" from the "File" menu. This presents a\nnew window with three entry fields for regular expressions. Regular\nexpressions are patterns that allows for searching text strings. using\na powerful wild-card system, see for example \nhttp://www.rexegg.com/\n\nThese entries could look like this:\n\n+----------------+-------------------+\n| Header format: | {ID}[_ ]{SPECIES} |\n+----------------+-------------------+\n| Regex ID:      | [A-Za-z0-9]+      |\n+----------------+-------------------+\n| Regex SPECIES: | [A-Z][a-z _]+      |\n+----------------+-------------------+\n\nThe "Header format" describes the general layout of the header, where\nthe regular expressions for the ID and species are substituted for\n{ID} and {SPECIES}, respectively. It is therefore mandatory that the\nheader format contains the strings {ID} and {SPECIES}.\n\nIn this example, the sequence headers is formed by some ID string,\nseparated by a space or an underscore, as indicated by "[ _]", from\nthe species string. The ID string is expected to be of the form of\nalphanumeric characters, possibly captialised, and digits, and at\nleast one character long. The species strings is expected to start\nwith a capital, followed by non-capitalised alphanumeric characters,\nand may include spaces and underscores.\n\nUsing the patterns is shown above, the following header will be\nprocessed correctly:\n\nWBET118 Lyrodus_pedicellatus_Tl_FR \n\nyielding the ID to be WBET118 and the species name to be\nLyrodus_pedicellatus_Tl_FR.\n\nAny changes made, are accepted when clicking the button "OK", or\ndiscarded when clicking the button "Cancel". The button "Help"\nprovides a new window with additional explanation.\n\nOpen a fasta file\n-----------------\n\nTo open a fasta file, select from the menu "File" and then "Open fasta\nfile". A dialogue window appears from which a fasta file can be\nselected. The directory displayed is the working directory (home\ndirectory if not previously specified). Prior to opening the fasta\nfile, it may be convenient to set the working directory path\nfirst. The setting of the working directory is persistent (i.e., it\nwill be kept from one session to the next).\n\n\n\nWhen the fasta file is opened, all species distinguished in the fasta\nfile will appear in the top left list box (species).\n\nNOTES: \n\n   1) if a species has multiple sequences, it will still appear as one\n      entry.  \n\n   2) if a given species has multiple sequences, and the names are not\n      exactly the same, then they will appear as two or more different \n      species.\n\nFrom the pool of available species, the user can make two selections,\ncalled list A and list B. Both lists should contain at least one\nspecies. When species are selected, they are *moved* from their origin\n(the box called "species" in this case) to their destination (list A for\nexample).\n\nSee below (MAKING A SELECTION) how to\nmake a selection of one or more species and drag them into a list box.\n\nOPERATION\n=========\nThe next step is to choose an operation. Two types of operations are\navailable:\n    1) Molecular diagnostic characters in A\n    2) Potential molecular diagnostic characters in A\n\n\nMolecular diagnostic characters in A\n------------------------------------\nThis operation compares the sequences\nin list  A with those in list B and lists all positions and base\ncharacters for which holds that for a given\nposition:\n    - all base characters in list A are identical; and\n    - all base characters in list B are different from those in list A\n\nPotential molecular diagnostic characters in A\n----------------------------------------------\nThis operation lists all those positions for which the base characters\nin A are not unique, but different from those in list B.\n\nAfter choosing the operation, the "PROCESS" button can be hit, to make\nthe comparsion. The result report appears in the bottom window.\n\nRESULT WINDOW\n=============\n\nThe results are displayed in the following format. First the selected\nfasta file is printed, followed by all the sequences (including ID) in\nlist A and list B. Then the actual result is printed. \n\nIf list A is found not to have any unique characters then that will\nbe the result. Otherwise the result is printed as\n\nThe species in List A have the following MCDs:\n\nposition: character(s) |  characters for species in List B\n                       |  1 2 3 4 5 6 7 8 \n--------------------------------------------------------------------------------\n    32: G              |  T T T T T T T T\n   202: G              |  C C C C C C C C\n   207: G              |  C C C C C C C C\n\n\nwhich means that positions 32, 202 and 207 in *all* sequences of list A\nare the same, and have the character G. List B, having 8 sequences,\nhas sequences that are all different from G. Using the list of\nsequences in list B printed above, the differences between the\nsequences in this list can be attributed to different sequences.\n\nWhen the operation for postenial MCDs is chosen, we might get a result such as:\n\nThe species in List A have the following potential MCDs:\n\nposition: character(s)  |  characters for species in List B\n          1 2 3 4       |  1 2 3 4 5 6 7 8 \n--------------------------------------------------------------------------------\n      16: G K G G       |  A A A A A A A A\n\n\nwhich indicates the positions where the sequences in list A differ from those \nin list B, but the characters in A are not unique. In this case, the second \nsequence has a K on position 16, which codes for either a G or T. Given the \nevidence of the other sequences, the user may conclude that the K most likely\nrepresents a G, so that G is a potenial MCD on position 16.\n\nRepeated processing will add the result to the result window, which\ncan be cleared using the "Clear output" button. The information in the\nresult window can be written to a text file via menu Output -> Save\nreport.\n\nCASE FILES\n==================\n\nA given setting, defined by the selections made for species, list A,\nlist B and operation, can be saved to file for reanalysis later, or\nas starting point for a similar, but not identical comparison. A case\nfile can be saved using the menu File -> Save case file, or loaded via\nmenu File -> Load case file.\n\n\nMAKING A SELECTION \n==================\n\nTo make a selection, click with the mouse on a species name. To select\nmultiple species, click on another species name whilst pressing\n"SHIFT"; this will select all the species in between as well. To add\nmore species to the selection, click on the species to select, whilst\npressing "CTRL". Use the right-hand button to drag the selection into\nthe listbox of choice.\n\nThis works identical for making a selection to move species from the\nlist "species" to list A, or back, or between list A and B.\n\n\n'
REGEX_HELP_TEXT = "\nRegular expressions\n-------------------\n\nThe sequence data in an aligned fasta file are assumed to be grouped\nin two lines of data: a line indicative of the species and an\nidentifier, and a line containing the sequence characters. In the\nfields below the format of the header can be precisely formatted. Note\nthat within a single alignment the header format should be consistent\nfor all entries.\n\n\nHeader format: This prescribes the global format of the header and\nconsists of the strings '{ID}' and '{SPECIES}', where {ID} and {SPECIES}\nare placeholders for the identifier and species text strings,\nrespectively.\n\nExample\n-------\n\nSuppose the header is given by 'WBT001 Lyrodus pediciliatus', then the\nfirst word refers to an ID and the rest of the string refers to the\nspecies. In this case the header format would be '{ID} {SPECIES}',\nthat is, the header consists of a ID string, and a species string\nseparated by a space. (Note the curly braces.)\n\n\nThe strings {ID} and {SPECIES} are subsitituted by regular\nexpressions. Sticking with the example above, IDs are given by\ncaptialised letters and digits, and the species names consists of\nletters and spaces. Then the regular exprresion for the ID becomes\n'[A-Z0-9]+', and for the species names '[A-Z][a-z ]+'.\n\nCommon patterns\n---------------\n\nstring: WBET001_Nototeredo_norvagica_Ms_TK\nhdr_format : {ID}_{SPECIES}\nregex ID: [A-Z0-9]+\nregex SPECIES: [A-Za-z_]+\n\nstring: NR_042052.1_Streptococcus_equinus_ATCC_9812_16S_ribosomal_RNA_partial_sequence\nhdr_format : {ID}_{SPECIES}\nregex ID: NR_[0-9]+\\.[0-9]+\nregex SPECIES: [A-Za-z0-9_]+\n\nstring: Tongapyrgus_kohitateaSp2\nhdr_format : {SPECIES}_{ID}\nregex ID: [A-Za-z0-9]+\nregex SPECIES: [A-Za-z]+\n\nstring: ZSM20100597 Pontohedyle wiggi\nhdr_format : {ID} {SPECIES}\nregex ID: [A-Z0-9]+\nregex SPECIES: [A-Za-z ]+\n\nstring: CP036529.1 Streptococcus pneumoniae strain 521 chromosome complete genome\nhdr_format : {ID}_{SPECIES}\nregex ID: [A-Z0-9]+\\.[0-9]+\nregex SPECIES: [A-Za-z0-9_]+\n\n\n\nMany websites provide further information on how to use regular\nexpressions. Try for example http://www.rexegg.com/.\n\n"