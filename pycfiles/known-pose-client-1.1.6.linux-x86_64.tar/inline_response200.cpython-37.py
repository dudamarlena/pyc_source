# uncompyle6 version 3.7.4
# Python bytecode 3.7 (3394)
# Decompiled from: Python 3.6.9 (default, Apr 18 2020, 01:56:04) 
# [GCC 8.4.0]
# Embedded file name: /usr/lib/python3.7/site-packages/known_pose_client/models/inline_response200.py
# Compiled at: 2019-10-26 08:01:19
# Size of source mod 2**32: 4062 bytes
"""
    Known Pose API

    Define and retrieve (accurate) semantic poses in a 2D environment. This version is a workaround for some not yet available features of the OpenAPI Specification v3.0 (e.g. `anyOf` as a response type and adding a  `discriminator` for supporting polymorphism/composition). Therefore, ATM the sub-components BasicPose and InaccuratePose are reference objects inside their respective parent model.    # noqa: E501

    The version of the OpenAPI document: 1.1.0
    Contact: Kai.Waelti@dfki.de
    Generated by: https://openapi-generator.tech
"""
import pprint, re, six

class InlineResponse200(object):
    __doc__ = 'NOTE: This class is auto generated by OpenAPI Generator.\n    Ref: https://openapi-generator.tech\n\n    Do not edit the class manually.\n    '
    openapi_types = {'id':'str', 
     'deleted':'bool'}
    attribute_map = {'id':'id', 
     'deleted':'deleted'}

    def __init__(self, id=None, deleted=None):
        """InlineResponse200 - a model defined in OpenAPI"""
        self._id = None
        self._deleted = None
        self.discriminator = None
        self.id = id
        self.deleted = deleted

    @property
    def id(self):
        """Gets the id of this InlineResponse200.  # noqa: E501

        :return: The id of this InlineResponse200.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this InlineResponse200.

        :param id: The id of this InlineResponse200.  # noqa: E501
        :type: str
        """
        if id is None:
            raise ValueError('Invalid value for `id`, must not be `None`')
        self._id = id

    @property
    def deleted(self):
        """Gets the deleted of this InlineResponse200.  # noqa: E501

        :return: The deleted of this InlineResponse200.  # noqa: E501
        :rtype: bool
        """
        return self._deleted

    @deleted.setter
    def deleted(self, deleted):
        """Sets the deleted of this InlineResponse200.

        :param deleted: The deleted of this InlineResponse200.  # noqa: E501
        :type: bool
        """
        if deleted is None:
            raise ValueError('Invalid value for `deleted`, must not be `None`')
        self._deleted = deleted

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}
        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(lambda x:                 if hasattr(x, 'to_dict'):
x.to_dict() # Avoid dead code: x, value))
            elif hasattr(value, 'to_dict'):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(lambda item:                 if hasattr(item[1], 'to_dict'):
(item[0], item[1].to_dict()) # Avoid dead code: item, value.items()))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InlineResponse200):
            return False
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other