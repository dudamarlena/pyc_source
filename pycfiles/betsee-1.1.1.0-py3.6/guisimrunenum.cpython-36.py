# uncompyle6 version 3.7.4
# Python bytecode 3.6 (3379)
# Decompiled from: Python 3.6.9 (default, Apr 18 2020, 01:56:04) 
# [GCC 8.4.0]
# Embedded file name: build/bdist.linux-x86_64/egg/betsee/gui/simtab/run/guisimrunenum.py
# Compiled at: 2019-08-01 01:03:54
# Size of source mod 2**32: 4744 bytes
"""
Low-level **simulator enumeration** (e.g., :class:`enum.Enum` subclass
describing different types of simulator state) functionality.
"""
from betse.util.type.enums import make_enum
SimmerState = make_enum(class_name='SimmerState',
  member_names=('UNQUEUED', 'QUEUED', 'MODELLING', 'EXPORTING', 'PAUSED', 'STOPPING',
                'FINISHED'),
  doc='\n    Enumeration of all supported types of **simulator state** (i.e., mutually\n    exclusive combination of one or more booleans uniquely capturing the\n    condition of the currently queued simulation subcommand if any, analogous\n    to a state in a finite state automata).\n\n    Attributes\n    ----------\n    UNQUEUED : enum\n        **Unqueued state,** implying no subcommands to be queued.\n    QUEUED : enum\n        **Queued state,** implying one or more subcommands to be queued but\n        *not* yet run and hence neither paused, halted, nor done.\n    MODELLING : enum\n        **Modelling state,** implying one or more queued subcommands specific\n        to modelling (e.g., seed, initialization) to be currently running and\n        hence neither paused, halted, nor done.\n    EXPORTING : enum\n        **Exporting state,** implying one or more queued subcommands specific\n        to exporting (e.g., seed exports, initialization exports) to be\n        currently running and hence neither paused, halted, nor done.\n    PAUSED : enum\n        **Paused state,** implying one or more queued subcommands to have been\n        run but paused before completion.\n    STOPPING : enum\n        **Stopping state,** implying one or more queued subcommands to have\n        been run but manually stopped before completion. This is a temporary\n        state during which the proactor waits for the previously running worker\n        to gracefully stop. Until this worker does so, the proactor remains\n        incapable of performing new work (i.e., running queued subcommands).\n        After this worker gracefully stops, the proactor switches from this\n        state into the :attr:`FINISHED` state, implying the proactor to be\n        capable of performing new work.\n    FINISHED : enum\n        **Completion state,** implying all queued subcommands to have completed\n        either:\n\n        * Successfully, in which case those subcommands ran to completion.\n        * Unsuccessfully, in which case either:\n\n          * The user prematurely stopped some or all of those subcommands.\n          * One of those subcommands raised an uncaught fatal exception.\n    ')
SimmerModelState = make_enum(class_name='SimmerModelState',
  member_names=('PREPARING', 'MODELLING', 'FINISHING'),
  doc='\n    Enumeration of all supported types of **simulator modelling state** (i.e.,\n    mutually exclusive boolean uniquely capturing the condition of the\n    currently queued modelling simulation subcommand if any, analogous to a\n    state in a finite state automata).\n\n    This enumeration applies *only* when the proactor is currently modelling\n    (i.e., when the state of the proactor is :attr:`SimmerState.MODELLING`).\n    This enumeration generically applies to modelling all simulation phases,\n    including the seed, initialization, and simulation phases of a simulation.\n    That said, this enumeration is typically only used to describe simulation\n    phases whose modelling entails time steps -- notably, the initialization\n    and simulation (but *not* seed) phases.\n\n    Attributes\n    ----------\n    PREPARING : enum\n        **Pre-processing state.** When modelling the initialization and\n        simulation (but *not* seed) phases, this state implies a proactor\n        worker to be preparing to model the first time step of this phase but\n        to have yet to actually do so.\n    MODELLING : enum\n        **In-processing state.** When modelling the initialization and\n        simulation (but *not* seed) phases, this state implies a proactor\n        worker to be modelling a time step of this phase.\n    FINISHING : enum\n        **Post-processing state,** implying a proactor worker to:\n\n        * Have successfully modelled all time steps of this phase.\n        * Now be saving the results of this phase to disk, typically as one or\n          more Python-specific pickled files.\n    ')