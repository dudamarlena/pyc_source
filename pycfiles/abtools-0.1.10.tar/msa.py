# uncompyle6 version 3.7.4
# Python bytecode 2.7 (62211)
# Decompiled from: Python 3.6.9 (default, Apr 18 2020, 01:56:04) 
# [GCC 8.4.0]
# Embedded file name: /Users/bryanbriney/git/abtools/abtools/phylogeny/msa.py
# Compiled at: 2016-01-29 19:53:56
import os, re, subprocess as sp

def align(seqs, fasta):
    """
    Makes a multiple sequence alignment.

    Input
    seqs: sequences to be aligned (as biopython SeqIO objects)
    fasta: path to use for the alignment input file

    Output
    path to the alignment file generated by MUSCLE
    """
    build_alignment_input(seqs, fasta)
    return muscle(fasta, len(seqs))


def build_alignment_input(seqs, fasta):
    flist = []
    for s in seqs:
        seq_id = re.sub('[:;]', '_', s.id)
        flist.append(('>{}\n{}').format(seq_id, str(s.sequence).upper()))

    open(fasta, 'w').write(('\n').join(flist))


def muscle(fasta, count):
    output_dir = os.path.dirname(fasta)
    output_name = ('{}_aligned.aln').format(os.path.basename(fasta).replace('.fasta', ''))
    output = os.path.join(output_dir, output_name)
    if count < 100:
        muscle_cline = ('muscle -in {} -out {}').format(fasta, output)
    elif count < 1000:
        muscle_cline = ('muscle -maxiters 2 -in {} -out {}').format(fasta, output)
    else:
        muscle_cline = ('muscle -maxiters 1 -diags -in {} -out {}').format(fasta, output)
    m = sp.Popen(muscle_cline, stdout=sp.PIPE, stderr=sp.PIPE, shell=True)
    stdout, stderr = m.communicate()
    return output