# uncompyle6 version 3.7.4
# Python bytecode 3.6 (3379)
# Decompiled from: Python 3.6.9 (default, Apr 18 2020, 01:56:04) 
# [GCC 8.4.0]
# Embedded file name: /Users/sanhehu/Documents/GitHub/troposphere_mate-project/troposphere_mate/canned/dev/get_all_aws_service_name.py
# Compiled at: 2019-08-08 16:17:46
# Size of source mod 2**32: 5626 bytes
"""
Full list can be found at https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html?shortFooter=true#genref-aws-service-namespaces
"""
copied_table_content = '\nAlexa for Business\ta4b\nAPI Gateway\tapigateway\nApplication Auto Scaling\tapplication-autoscaling\nAWS Application Discovery Service\tdiscovery\nAmazon AppStream\tappstream\nAWS AppSync\tappsync\nAWS Artifact\tartifact\nAmazon Athena\tathena\nAuto Scaling Plans\tautoscaling-plans\nAWS Batch\tbatch\nAWS Billing and Cost Management\taws-portal\nAWS Budgets\tbudgets\nAWS Certificate Manager (ACM)\tacm\nAWS Certificate Manager Private Certificate Authority\tacm-pca\nAmazon Chime\tchime\nAWS Cloud9\tcloud9\nAmazon Cloud Directory\tclouddirectory\nAWS CloudFormation\tcloudformation\nAmazon CloudFront\tcloudfront\nAWS CloudHSM\tcloudhsm\nAWS Cloud Map\tservicediscovery\nAmazon CloudSearch\tcloudsearch\nAWS CloudTrail\tcloudtrail\nAmazon CloudWatch\tcloudwatch\nAmazon CloudWatch Events\tevents\nAmazon CloudWatch Logs\tlogs\nCodeBuild\tcodebuild\nAWS CodeCommit\tcodecommit\nAWS CodeDeploy\tcodedeploy\nAWS CodePipeline\tcodepipeline\nAWS Code Signing for Amazon FreeRTOS\tsigner\nAWS CodeStar\tcodestar\nAmazon Cognito Your User Pools\tcognito-idp\nAmazon Cognito Federated Identities\tcognito-identity\nAmazon Cognito Sync\tcognito-sync\nAmazon Comprehend\tcomprehend\nAWS Config\tconfig\nAmazon Connect\tconnect\nAWS Cost and Usage Report\tcur\nAWS Cost Explorer Service\tce\nAWS Data Pipeline\tdatapipeline\nAWS Database Migration Service (AWS DMS)\tdms\nAWS Device Farm\tdevicefarm\nAWS Direct Connect\tdirectconnect\nAWS Directory Service\tds\nAmazon DocumentDB\trds\nAmazon DynamoDB\tdynamodb\nAmazon DynamoDB Accelerator (DAX)\tdax\nAmazon EC2 Auto Scaling\tautoscaling\nAmazon Elastic Compute Cloud (Amazon EC2)\tec2\nAmazon Elastic Container Registry (Amazon ECR)\tecr\nAmazon Elastic Container Service (Amazon ECS)\tecs\nAmazon Elastic Kubernetes Service (Amazon EKS)\teks\nAWS Elastic Beanstalk\telasticbeanstalk\nAmazon Elastic File System (Amazon EFS)\telasticfilesystem\nElastic Load Balancing\telasticloadbalancing\nAmazon EMR\telasticmapreduce\nAmazon Elastic Transcoder\telastictranscoder\nAmazon ElastiCache\telasticache\nAmazon Elasticsearch Service (Amazon ES)\tes\nAWS Firewall Manager\tfms\nAmazon FreeRTOS\tfreertos\nAmazon GameLift\tgamelift\nAmazon S3 Glacier\tglacier\nAWS Global Accelerator\tglobalaccelerator\nAWS Glue\tglue\nAWS IoT Greengrass\tgreengrass\nAWS Ground Station\tgroundstation\nAmazon GuardDuty\tguardduty\nAWS Health / Personal Health Dashboard\thealth\nAWS Identity and Access Management (IAM)\tiam\nAWS Import/Export\timportexport\nAmazon Inspector\tinspector\nAWS IoT\tiot\nAWS IoT Analytics\tiotanalytics\nAWS IoT 1-Click\tiot1click\nAWS Key Management Service (AWS KMS)\tkms\nAmazon Kinesis Data Analytics\tkinesisanalytics\nAmazon Kinesis Data Firehose\tfirehose\nAmazon Kinesis Data Streams\tkinesis\nAmazon Kinesis Video Streams\tkinesisvideo\nAWS Lambda\tlambda\nAmazon Lex\tlex\nAmazon Lightsail\tlightsail\nAmazon Macie\tmacie\nAmazon Machine Learning\tmachinelearning\nAWS Marketplace\taws-marketplace\nAWS Marketplace Management Portal\taws-marketplace-management\nAmazon Mechanical Turk\tmechanicalturk\nAmazon Mechanical Turk Crowd\tcrowd\nAWS Elemental MediaConnect\tmediaconnect\nAWS Elemental MediaConvert\tmediaconvert\nAWS Elemental MediaLive\tmedialive\nAWS Elemental MediaPackage\tmediapackage\nAWS Elemental MediaStore\tmediastore\nAWS Elemental MediaTailor\tmediatailor\nAmazon Message Delivery Service\tec2message\nAWS Migration Hub\tmgh\nAmazon Mobile Analytics\tmobileanalytics\nAWS Mobile Hub\tmobilehub\nAmazon MQ\tmq\nAWS OpsWorks\topsworks\nAWS OpsWorks for Chef Automate or AWS OpsWorks for Puppet Enterprise\topsworks-cm\nAWS Organizations\torganizations\nAmazon Personalize\tpersonalize\nAmazon Pinpoint\tmobiletargeting\nAmazon Polly\tpolly\nAWS Price List\tpricing\nAmazon QuickSight\tquicksight\nAmazon Redshift\tredshift\nAmazon Rekognition\trekognition\nAmazon Relational Database Service (Amazon RDS)\trds\nAWS Resource Groups\tresource-groups\nAmazon Resource Group Tagging API\ttag\nAmazon Route 53\troute53\nAmazon Route 53 Domains\troute53domains\nAmazon Route 53 Resolver\troute53resolver\nAmazon SageMaker\tsagemaker\nAWS Secrets Manager\tsecretsmanager\nAWS Security Token Service (AWS STS)\tsts\nAWS Serverless Application Repository\tserverlessrepo\nAWS Service Catalog\tservicecatalog\nAWS Shield\tshield\nAWS Shield Advanced\tshield\nAWS SFTP\ttransfer\nAmazon Simple Email Service (Amazon SES)\tses\nAmazon Simple Notification Service (Amazon SNS)\tsns\nAmazon Simple Queue Service (Amazon SQS)\tsqs\nAmazon Simple Storage Service (Amazon S3)\ts3\nAmazon Simple Workflow Service (Amazon SWF)\tswf\nAmazon SimpleDB\tsdb\nAWS Single Sign-On\tsso\nAWS Snowball\tsnowball\nAWS Step Functions\tstates\nAWS Storage Gateway\tstoragegateway\nAmazon Sumerian\tsumerian\nAWS Support\tsupport\nAWS Systems Manager\tssm\nAmazon Textract\ttextract\nAmazon Transcribe\ttranscribe\nAmazon Translate\ttranslate\nAWS Trusted Advisor\ttrustedadvisor\nAmazon Virtual Private Cloud (Amazon VPC)\tec2\nAWS WAF\twaf\nAWS WAF Regional\twaf-regional\nAmazon WorkDocs\tworkdocs\nAmazon WorkLink\tworklink\nAmazon WorkMail\tworkmail\nAmazon WorkSpaces\tworkspaces\nAmazon WorkSpaces Application Manager\twam\nAWS X-Ray\txray\n'.strip()
lines = list()
lines.append('class AWSServiceName:')
for line in copied_table_content.split('\n'):
    name, keyword = line.strip().split('\t')
    if name.startswith('AWS'):
        name = name.replace('AWS', 'aws', 1)
    for forbidden_char in '()-/':
        name = name.replace(forbidden_char, ' ')

    name = '_'.join([word.strip() for word in name.split(' ') if word.strip()])
    name = name[0].lower() + name[1:]
    lines.append('    {} = "{}"'.format(name, keyword))

print('\n'.join(lines))