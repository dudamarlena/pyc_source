# uncompyle6 version 3.7.4
# Python bytecode 3.7 (3394)
# Decompiled from: Python 3.6.9 (default, Apr 18 2020, 01:56:04) 
# [GCC 8.4.0]
# Embedded file name: /home/ake/projects/python/lingua-franca/lingua_franca/lang/common_data_nl.py
# Compiled at: 2020-01-13 02:46:59
# Size of source mod 2**32: 5932 bytes
from collections import OrderedDict
_ARTICLES = {
 'de', 'het'}
_NUM_STRING_NL = {0:'nul', 
 1:'een', 
 2:'twee', 
 3:'drie', 
 4:'vier', 
 5:'vijf', 
 6:'zes', 
 7:'zeven', 
 8:'acht', 
 9:'negen', 
 10:'tien', 
 11:'elf', 
 12:'twaalf', 
 13:'dertien', 
 14:'veertien', 
 15:'vijftien', 
 16:'zestien', 
 17:'zeventien', 
 18:'achttien', 
 19:'negentien', 
 20:'twintig', 
 30:'dertig', 
 40:'veertig', 
 50:'vijftig', 
 60:'zestig', 
 70:'zeventig', 
 80:'tachtig', 
 90:'negentig'}
_FRACTION_STRING_NL = {2:'half', 
 3:'derde', 
 4:'vierde', 
 5:'vijfde', 
 6:'zesde', 
 7:'zevende', 
 8:'achtste', 
 9:'negende', 
 10:'tiende', 
 11:'elfde', 
 12:'twaalfde', 
 13:'dertiende', 
 14:'veertiende', 
 15:'vijftiende', 
 16:'zestiende', 
 17:'zeventiende', 
 18:'achttiende', 
 19:'negentiende', 
 20:'twintigste'}
_LONG_SCALE_NL = OrderedDict([
 (100, 'honderd'),
 (1000, 'duizend'),
 (1000000, 'miljoen'),
 (1000000000000.0, 'biljoen'),
 (1e+18, 'triljoen'),
 (1e+24, 'quadriljoen'),
 (1e+30, 'quintillion'),
 (1e+36, 'sextillion'),
 (1e+42, 'septillion'),
 (1e+48, 'octillion'),
 (1e+54, 'nonillion'),
 (1e+60, 'decillion'),
 (1e+66, 'undecillion'),
 (1e+72, 'duodecillion'),
 (1e+78, 'tredecillion'),
 (1e+84, 'quattuordecillion'),
 (1e+90, 'quinquadecillion'),
 (1e+96, 'sedecillion'),
 (1e+102, 'septendecillion'),
 (1e+108, 'octodecillion'),
 (1e+114, 'novendecillion'),
 (1e+120, 'vigintillion'),
 (1e+306, 'unquinquagintillion'),
 (float('inf'), 'duoquinquagintillion'),
 (float('inf'), 'sesquinquagintillion'),
 (float('inf'), 'unsexagintillion')])
_SHORT_SCALE_NL = OrderedDict([
 (100, 'honderd'),
 (1000, 'duizend'),
 (1000000, 'miljoen'),
 (1000000000.0, 'miljard'),
 (1000000000000.0, 'biljoen'),
 (1000000000000000.0, 'quadrillion'),
 (1e+18, 'quintiljoen'),
 (1e+21, 'sextiljoen'),
 (1e+24, 'septiljoen'),
 (1e+27, 'octiljoen'),
 (1e+30, 'noniljoen'),
 (1e+33, 'deciljoen'),
 (1e+36, 'undeciljoen'),
 (1e+39, 'duodeciljoen'),
 (1e+42, 'tredeciljoen'),
 (1e+45, 'quattuordeciljoen'),
 (1e+48, 'quinquadeciljoen'),
 (1e+51, 'sedeciljoen'),
 (1e+54, 'septendeciljoen'),
 (1e+57, 'octodeciljoen'),
 (1e+60, 'novendeciljoen'),
 (1e+63, 'vigintiljoen'),
 (1e+66, 'unvigintiljoen'),
 (1e+69, 'uuovigintiljoen'),
 (1e+72, 'tresvigintiljoen'),
 (1e+75, 'quattuorvigintiljoen'),
 (1e+78, 'quinquavigintiljoen'),
 (1e+81, 'qesvigintiljoen'),
 (1e+84, 'septemvigintiljoen'),
 (1e+87, 'octovigintiljoen'),
 (1e+90, 'novemvigintiljoen'),
 (1e+93, 'trigintiljoen'),
 (1e+96, 'untrigintiljoen'),
 (1e+99, 'duotrigintiljoen'),
 (1e+102, 'trestrigintiljoen'),
 (1e+105, 'quattuortrigintiljoen'),
 (1e+108, 'quinquatrigintiljoen'),
 (1e+111, 'sestrigintiljoen'),
 (1e+114, 'septentrigintiljoen'),
 (1e+117, 'octotrigintiljoen'),
 (1e+120, 'noventrigintiljoen'),
 (1e+123, 'quadragintiljoen'),
 (1e+153, 'quinquagintiljoen'),
 (1e+183, 'sexagintiljoen'),
 (1e+213, 'septuagintiljoen'),
 (1e+243, 'octogintiljoen'),
 (1e+273, 'nonagintiljoen'),
 (1e+303, 'centiljoen'),
 (1e+306, 'uncentiljoen'),
 (float('inf'), 'duocentiljoen'),
 (float('inf'), 'trescentiljoen'),
 (float('inf'), 'decicentiljoen'),
 (float('inf'), 'undecicentiljoen'),
 (float('inf'), 'viginticentiljoen'),
 (float('inf'), 'unviginticentiljoen'),
 (float('inf'), 'trigintacentiljoen'),
 (float('inf'), 'quadragintacentiljoen'),
 (float('inf'), 'quinquagintacentiljoen'),
 (float('inf'), 'sexagintacentiljoen'),
 (float('inf'), 'septuagintacentiljoen'),
 (float('inf'), 'ctogintacentiljoen'),
 (float('inf'), 'nonagintacentiljoen'),
 (float('inf'), 'ducentiljoen'),
 (float('inf'), 'trecentiljoen'),
 (float('inf'), 'quadringentiljoen'),
 (float('inf'), 'quingentiljoen'),
 (float('inf'), 'sescentiljoen'),
 (float('inf'), 'septingentiljoen'),
 (float('inf'), 'octingentiljoen'),
 (float('inf'), 'nongentiljoen'),
 (float('inf'), 'milliniljoen')])
_ORDINAL_STRING_BASE_NL = {1:'eerste', 
 2:'tweede', 
 3:'derde', 
 4:'vierde', 
 5:'vijfde', 
 6:'zesde', 
 7:'zevende', 
 8:'achtste', 
 9:'negende', 
 10:'tiende', 
 11:'elfde', 
 12:'twaalfde', 
 13:'dertiende', 
 14:'veertiende', 
 15:'vijftiende', 
 16:'zestiende', 
 17:'zeventiende', 
 18:'achttiende', 
 19:'negentiende', 
 20:'twintigste', 
 30:'dertigste', 
 40:'veertigste', 
 50:'vijftigste', 
 60:'zestigste', 
 70:'zeventigste', 
 80:'tachtigste', 
 90:'negentigste', 
 10000.0:'honderdste', 
 1000.0:'duizendste'}
_SHORT_ORDINAL_STRING_NL = {1000000.0:'miloenste', 
 1000000000.0:'miljardste', 
 1000000000000.0:'biljoenste', 
 1000000000000000.0:'biljardste', 
 1e+18:'triljoenste', 
 1e+21:'trijardste', 
 1e+24:'quadriljoenste', 
 1e+27:'quadriljardste', 
 1e+30:'quintiljoenste', 
 1e+33:'quintiljardste'}
_SHORT_ORDINAL_STRING_NL.update(_ORDINAL_STRING_BASE_NL)
_LONG_ORDINAL_STRING_NL = {1000000.0:'miloenste', 
 1000000000.0:'miljardste', 
 1000000000000.0:'biljoenste', 
 1000000000000000.0:'biljardste', 
 1e+18:'triljoenste', 
 1e+21:'trijardste', 
 1e+24:'quadriljoenste', 
 1e+27:'quadriljardste', 
 1e+30:'quintiljoenste', 
 1e+33:'quintiljardste'}
_LONG_ORDINAL_STRING_NL.update(_ORDINAL_STRING_BASE_NL)