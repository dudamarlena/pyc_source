# uncompyle6 version 3.7.4
# Python bytecode 3.7 (3394)
# Decompiled from: Python 3.6.9 (default, Apr 18 2020, 01:56:04) 
# [GCC 8.4.0]
# Embedded file name: /home/ake/projects/python/lingua-franca/lingua_franca/lang/common_data_en.py
# Compiled at: 2020-01-13 02:46:59
# Size of source mod 2**32: 5830 bytes
from collections import OrderedDict
_ARTICLES_EN = {
 'a', 'an', 'the'}
_NUM_STRING_EN = {0:'zero', 
 1:'one', 
 2:'two', 
 3:'three', 
 4:'four', 
 5:'five', 
 6:'six', 
 7:'seven', 
 8:'eight', 
 9:'nine', 
 10:'ten', 
 11:'eleven', 
 12:'twelve', 
 13:'thirteen', 
 14:'fourteen', 
 15:'fifteen', 
 16:'sixteen', 
 17:'seventeen', 
 18:'eighteen', 
 19:'nineteen', 
 20:'twenty', 
 30:'thirty', 
 40:'forty', 
 50:'fifty', 
 60:'sixty', 
 70:'seventy', 
 80:'eighty', 
 90:'ninety'}
_FRACTION_STRING_EN = {2:'half', 
 3:'third', 
 4:'forth', 
 5:'fifth', 
 6:'sixth', 
 7:'seventh', 
 8:'eigth', 
 9:'ninth', 
 10:'tenth', 
 11:'eleventh', 
 12:'twelveth', 
 13:'thirteenth', 
 14:'fourteenth', 
 15:'fifteenth', 
 16:'sixteenth', 
 17:'seventeenth', 
 18:'eighteenth', 
 19:'nineteenth', 
 20:'twentyith'}
_LONG_SCALE_EN = OrderedDict([
 (100, 'hundred'),
 (1000, 'thousand'),
 (1000000, 'million'),
 (1000000000000.0, 'billion'),
 (1e+18, 'trillion'),
 (1e+24, 'quadrillion'),
 (1e+30, 'quintillion'),
 (1e+36, 'sextillion'),
 (1e+42, 'septillion'),
 (1e+48, 'octillion'),
 (1e+54, 'nonillion'),
 (1e+60, 'decillion'),
 (1e+66, 'undecillion'),
 (1e+72, 'duodecillion'),
 (1e+78, 'tredecillion'),
 (1e+84, 'quattuordecillion'),
 (1e+90, 'quinquadecillion'),
 (1e+96, 'sedecillion'),
 (1e+102, 'septendecillion'),
 (1e+108, 'octodecillion'),
 (1e+114, 'novendecillion'),
 (1e+120, 'vigintillion'),
 (1e+306, 'unquinquagintillion'),
 (float('inf'), 'duoquinquagintillion'),
 (float('inf'), 'sesquinquagintillion'),
 (float('inf'), 'unsexagintillion')])
_SHORT_SCALE_EN = OrderedDict([
 (100, 'hundred'),
 (1000, 'thousand'),
 (1000000, 'million'),
 (1000000000.0, 'billion'),
 (1000000000000.0, 'trillion'),
 (1000000000000000.0, 'quadrillion'),
 (1e+18, 'quintillion'),
 (1e+21, 'sextillion'),
 (1e+24, 'septillion'),
 (1e+27, 'octillion'),
 (1e+30, 'nonillion'),
 (1e+33, 'decillion'),
 (1e+36, 'undecillion'),
 (1e+39, 'duodecillion'),
 (1e+42, 'tredecillion'),
 (1e+45, 'quattuordecillion'),
 (1e+48, 'quinquadecillion'),
 (1e+51, 'sedecillion'),
 (1e+54, 'septendecillion'),
 (1e+57, 'octodecillion'),
 (1e+60, 'novendecillion'),
 (1e+63, 'vigintillion'),
 (1e+66, 'unvigintillion'),
 (1e+69, 'uuovigintillion'),
 (1e+72, 'tresvigintillion'),
 (1e+75, 'quattuorvigintillion'),
 (1e+78, 'quinquavigintillion'),
 (1e+81, 'qesvigintillion'),
 (1e+84, 'septemvigintillion'),
 (1e+87, 'octovigintillion'),
 (1e+90, 'novemvigintillion'),
 (1e+93, 'trigintillion'),
 (1e+96, 'untrigintillion'),
 (1e+99, 'duotrigintillion'),
 (1e+102, 'trestrigintillion'),
 (1e+105, 'quattuortrigintillion'),
 (1e+108, 'quinquatrigintillion'),
 (1e+111, 'sestrigintillion'),
 (1e+114, 'septentrigintillion'),
 (1e+117, 'octotrigintillion'),
 (1e+120, 'noventrigintillion'),
 (1e+123, 'quadragintillion'),
 (1e+153, 'quinquagintillion'),
 (1e+183, 'sexagintillion'),
 (1e+213, 'septuagintillion'),
 (1e+243, 'octogintillion'),
 (1e+273, 'nonagintillion'),
 (1e+303, 'centillion'),
 (1e+306, 'uncentillion'),
 (float('inf'), 'duocentillion'),
 (float('inf'), 'trescentillion'),
 (float('inf'), 'decicentillion'),
 (float('inf'), 'undecicentillion'),
 (float('inf'), 'viginticentillion'),
 (float('inf'), 'unviginticentillion'),
 (float('inf'), 'trigintacentillion'),
 (float('inf'), 'quadragintacentillion'),
 (float('inf'), 'quinquagintacentillion'),
 (float('inf'), 'sexagintacentillion'),
 (float('inf'), 'septuagintacentillion'),
 (float('inf'), 'ctogintacentillion'),
 (float('inf'), 'nonagintacentillion'),
 (float('inf'), 'ducentillion'),
 (float('inf'), 'trecentillion'),
 (float('inf'), 'quadringentillion'),
 (float('inf'), 'quingentillion'),
 (float('inf'), 'sescentillion'),
 (float('inf'), 'septingentillion'),
 (float('inf'), 'octingentillion'),
 (float('inf'), 'nongentillion'),
 (float('inf'), 'millinillion')])
_ORDINAL_BASE_EN = {1:'first', 
 2:'second', 
 3:'third', 
 4:'fourth', 
 5:'fifth', 
 6:'sixth', 
 7:'seventh', 
 8:'eighth', 
 9:'ninth', 
 10:'tenth', 
 11:'eleventh', 
 12:'twelfth', 
 13:'thirteenth', 
 14:'fourteenth', 
 15:'fifteenth', 
 16:'sixteenth', 
 17:'seventeenth', 
 18:'eighteenth', 
 19:'nineteenth', 
 20:'twentieth', 
 30:'thirtieth', 
 40:'fortieth', 
 50:'fiftieth', 
 60:'sixtieth', 
 70:'seventieth', 
 80:'eightieth', 
 90:'ninetieth', 
 100.0:'hundredth', 
 1000.0:'thousandth'}
_SHORT_ORDINAL_EN = {1000000.0:'millionth', 
 1000000000.0:'billionth', 
 1000000000000.0:'trillionth', 
 1000000000000000.0:'quadrillionth', 
 1e+18:'quintillionth', 
 1e+21:'sextillionth', 
 1e+24:'septillionth', 
 1e+27:'octillionth', 
 1e+30:'nonillionth', 
 1e+33:'decillionth'}
_SHORT_ORDINAL_EN.update(_ORDINAL_BASE_EN)
_LONG_ORDINAL_EN = {1000000.0:'millionth', 
 1000000000000.0:'billionth', 
 1e+18:'trillionth', 
 1e+24:'quadrillionth', 
 1e+30:'quintillionth', 
 1e+36:'sextillionth', 
 1e+42:'septillionth', 
 1e+48:'octillionth', 
 1e+54:'nonillionth', 
 1e+60:'decillionth'}
_LONG_ORDINAL_EN.update(_ORDINAL_BASE_EN)