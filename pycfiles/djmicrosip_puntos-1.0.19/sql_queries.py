# uncompyle6 version 3.7.4
# Python bytecode 2.7 (62211)
# Decompiled from: Python 3.6.9 (default, Apr 18 2020, 01:56:04) 
# [GCC 8.4.0]
# Embedded file name: C:\GitHub\django-microsip-base\django_microsip_base\django_microsip_base\apps\plugins\djmicrosip_puntos\djmicrosip_puntos\custom_db\ventas\sql_queries.py
# Compiled at: 2015-06-01 14:40:26
triggers_activate = {}
triggers_activate['SIC_PUNTOS_ve_DOCTOSVE_BU'] = "\n  CREATE OR ALTER TRIGGER SIC_PUNTOS_ve_DOCTOSVE_BU FOR DOCTOS_ve\n  ACTIVE BEFORE UPDATE POSITION 0\n  as\n  declare variable cliente_tipo_tarjeta char(1);\n  declare variable cliente_tipo_id integer;\n  declare variable cliente_hereda_valorpuntos smallint;\n  declare variable cliente_valor_puntos double precision;\n  declare variable valor_puntos double precision;\n  declare variable valor_puntos_pago double precision;\n  declare variable puntos_pago integer;\n  declare variable dinero_electronico_pago double precision;\n  declare variable darpuntosenpago char(1);\n  BEGIN\n    /* Si es una venta o una devolucion */\n    IF (NEW.tipo_docto = 'F' or NEW.tipo_docto = 'R' ) THEN\n    BEGIN\n      /* Se saca el cliente para manejar puntos de la clave_cliente indicada en el documento */\n      execute procedure SIC_PUNTOS_GETCLIENTETARJETA(new.docto_ve_id, 'VE')\n      returning_values new.cliente_id, new.sic_cliente_clave_id, new.sic_cliente_tarjeta;\n\n      /*DATOS DEL CLIENTE QUE RECIBE */\n      SELECT sic_tipo_tarjeta, sic_hereda_valorpuntos, sic_valor_puntos, tipo_cliente_id\n      FROM clientes\n      WHERE cliente_id = NEW.sic_cliente_tarjeta\n      INTO :cliente_tipo_tarjeta, :cliente_hereda_valorpuntos, :cliente_valor_puntos, :cliente_tipo_id;\n\n      /*DATOS el cliente hereda el valor de los puntos*/\n      IF ( NOT cliente_tipo_id IS NULL AND cliente_hereda_valorpuntos = 1) THEN\n      BEGIN\n        SELECT sic_valor_puntos\n        FROM tipos_clientes\n        WHERE tipo_cliente_id = :cliente_tipo_id\n        INTO :cliente_valor_puntos;\n      END\n\n      IF(cliente_valor_puntos IS NULL) THEN\n        cliente_valor_puntos = 0;\n\n      /*------------------------------------\n        ---  MANEJO DE PAGOS CON PUNTOS  ---\n        ------------------------------------  */\n      /* Entra solo si se maneja tareja de puntos o dinero electronico\n      y si se aplica un descuento */\n\n      IF((cliente_tipo_tarjeta = 'P' OR cliente_tipo_tarjeta = 'D' )) THEN\n      BEGIN\n        /* si se esta haciendo un pago y en preferencias\n        esta no dar puntos en pago ponemos el dinero en 0*/\n        select VALOR FROM REGISTRY WHERE NOMBRE = 'SIC_Puntos_DarDineroEnPagos' INTO :DarPuntosEnPago;\n        if (DarPuntosEnPago = '0' and NEW.dscto_importe >0 ) then\n          new.sic_dinero_electronico=0;\n\n        IF (cliente_tipo_tarjeta='D') THEN\n        BEGIN\n          valor_puntos_pago =  0;\n          puntos_pago =  0;\n          dinero_electronico_pago = NEW.dscto_importe;\n        END\n        ELSE IF (cliente_tipo_tarjeta='P') THEN\n        BEGIN\n          valor_puntos = cliente_valor_puntos;\n          IF (valor_puntos > 0) THEN\n            puntos_pago =  NEW.dscto_importe/valor_puntos;\n          ELSE\n            puntos_pago = 0;\n\n          valor_puntos_pago =  valor_puntos;\n          dinero_electronico_pago = 0;\n        END\n\n        NEW.sic_dinero_electronico_pago = :dinero_electronico_pago;\n        NEW.sic_valor_puntos_pago = :valor_puntos_pago;\n        NEW.sic_puntos_pago = :puntos_pago;\n\n        if (new.sic_puntos is null) then\n          new.sic_puntos = 0;\n        if  (new.sic_puntos_pago is null)then\n          new.sic_puntos_pago = 0;\n      END\n    END\n  END\n  "
triggers_activate['SIC_PUNTOS_ve_DOCTOSVEDET_BU'] = "\n  CREATE OR ALTER TRIGGER SIC_PUNTOS_ve_DOCTOSVEDET_BU FOR DOCTOS_ve_DET\n  ACTIVE BEFORE UPDATE POSITION 0\n  as\n  /* Datos de articulos */\n  declare variable articulo_hereda_puntos smallint;\n  declare variable articulo_puntos integer;\n  declare variable articulo_pct_dinero_electronico double precision;\n  declare variable precioconimpuestos smallint;\n  declare variable precio_unitario double precision;\n  declare variable linea_hereda_puntos smallint;\n  declare variable documento_total_puntos integer;\n  declare variable documento_total_dinero_electronico double precision;\n  declare variable detalle_descuento_importe double precision;\n  declare variable linea_articulo_id integer;\n  declare variable grupo_linea_id integer;\n  declare variable tarjeta_cliente_id integer;\n  declare variable tarjeta_tipo char(1);\n\n  BEGIN\n    /*------------------------------------\n      ---  SE SACA CLIENTE DE TARJETA  ---\n      ------------------------------------  */\n\n    select sic_cliente_tarjeta, sic_puntos, sic_dinero_electronico\n    from doctos_ve\n    where docto_ve_id = new.docto_ve_id\n    into :tarjeta_cliente_id, :documento_total_puntos, :documento_total_dinero_electronico;\n\n    if (documento_total_puntos is null) then\n        documento_total_puntos = 0;\n    if (documento_total_dinero_electronico is null) then\n        documento_total_dinero_electronico = 0;\n\n    if (not tarjeta_cliente_id is null) then\n    begin\n      /* checar si la tarjeta esta activa */\n      select sic_tipo_tarjeta\n      from clientes\n      where cliente_id = :tarjeta_cliente_id\n      into :tarjeta_tipo;\n\n\n      if (tarjeta_tipo = 'P' or tarjeta_tipo = 'D') then\n      begin\n\n        /*------------------------------------\n          --- SE SACAN PUNTOS DEL ARTICULO ---\n          ------------------------------------  */\n\n        SELECT sic_puntos, sic_dinero_electronico, sic_hereda_puntos, linea_articulo_id\n        FROM articulos\n        WHERE articulo_id = new.articulo_id\n        INTO :articulo_puntos, :articulo_pct_dinero_electronico, :articulo_hereda_puntos, :linea_articulo_id;\n\n        if (not linea_articulo_id is null and articulo_hereda_puntos = 1) then\n        begin\n          /*Datos de la linea*/\n          SELECT sic_puntos, sic_dinero_electronico, sic_hereda_puntos, grupo_linea_id\n          FROM lineas_articulos\n          WHERE linea_articulo_id = :linea_articulo_id\n          INTO :articulo_puntos, :articulo_pct_dinero_electronico, :linea_hereda_puntos, :grupo_linea_id;\n\n          if (not grupo_linea_id is null and linea_hereda_puntos = 1) then\n          begin\n            /*Datos del grupo*/\n            SELECT sic_puntos, sic_dinero_electronico\n            FROM grupos_lineas\n            WHERE grupo_linea_id = :grupo_linea_id\n            INTO :articulo_puntos, :articulo_pct_dinero_electronico;\n          end\n        end\n        \n        /*si no tienen puntos se ponen el valor por defecto*/\n        if( articulo_puntos is null )then\n          select valor from registry where nombre = 'SIC_PUNTOS_ARTICULO_PUNTOS_PREDET' into :articulo_puntos;\n        if( articulo_pct_dinero_electronico is null )then\n          select valor from registry where nombre = 'SIC_PUNTOS_ARTICULO_DINERO_ELECT_PREDET' into :articulo_pct_dinero_electronico;\n\n        if(tarjeta_tipo = 'P') then\n          new.sic_puntos = (new.unidades * articulo_puntos);\n        else if(tarjeta_tipo = 'D') then\n        begin\n          select valor from registry where nombre = 'SIC_Puntos_PrecioConImpuestos' into :precioconimpuestos;\n          if (precioconimpuestos = 1) then\n            precio_unitario =  new.precio_unitario;\n          else\n            precio_unitario =  new.precio_unitario;\n          \n          /*para tomar en cuanta descuentos en detalles */\n          detalle_descuento_importe = precio_unitario * (new.pctje_dscto/100);\n          precio_unitario =  precio_unitario - detalle_descuento_importe;\n\n          new.sic_dinero_electronico = (new.unidades * precio_unitario) * (articulo_pct_dinero_electronico /100);\n        end\n            \n        if (new.sic_puntos is null) then\n          new.sic_puntos = 0;\n        if (new.sic_dinero_electronico is null) then\n          new.sic_dinero_electronico = 0;\n\n        documento_total_puntos = documento_total_puntos + new.sic_puntos - old.sic_puntos;\n        documento_total_dinero_electronico = documento_total_dinero_electronico + new.sic_dinero_electronico - old.sic_dinero_electronico;\n\n        update doctos_ve set sic_puntos=:documento_total_puntos, sic_dinero_electronico=:documento_total_dinero_electronico where docto_ve_id = new.docto_ve_id;\n\n      end\n    end\n  END\n  "