# uncompyle6 version 3.7.4
# Python bytecode 2.7 (62211)
# Decompiled from: Python 3.6.9 (default, Apr 18 2020, 01:56:04) 
# [GCC 8.4.0]
# Embedded file name: build/bdist.macosx-10.9-x86_64/egg/ncloud_server/model/create_public_ip_instance_request.py
# Compiled at: 2020-05-13 01:24:46
"""
    server

    OpenAPI spec version: 2019-10-17T10:28:43Z
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""
import pprint, re, six

class CreatePublicIpInstanceRequest(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    swagger_types = {'server_instance_no': 'str', 
       'public_ip_description': 'str', 
       'internet_line_type_code': 'str', 
       'region_no': 'str', 
       'zone_no': 'str'}
    attribute_map = {'server_instance_no': 'serverInstanceNo', 
       'public_ip_description': 'publicIpDescription', 
       'internet_line_type_code': 'internetLineTypeCode', 
       'region_no': 'regionNo', 
       'zone_no': 'zoneNo'}

    def __init__(self, server_instance_no=None, public_ip_description=None, internet_line_type_code=None, region_no=None, zone_no=None):
        """CreatePublicIpInstanceRequest - a model defined in Swagger"""
        self._server_instance_no = None
        self._public_ip_description = None
        self._internet_line_type_code = None
        self._region_no = None
        self._zone_no = None
        self.discriminator = None
        if server_instance_no is not None:
            self.server_instance_no = server_instance_no
        if public_ip_description is not None:
            self.public_ip_description = public_ip_description
        if internet_line_type_code is not None:
            self.internet_line_type_code = internet_line_type_code
        if region_no is not None:
            self.region_no = region_no
        if zone_no is not None:
            self.zone_no = zone_no
        return

    @property
    def server_instance_no(self):
        u"""Gets the server_instance_no of this CreatePublicIpInstanceRequest.  # noqa: E501

        서버인스턴스번호  # noqa: E501

        :return: The server_instance_no of this CreatePublicIpInstanceRequest.  # noqa: E501
        :rtype: str
        """
        return self._server_instance_no

    @server_instance_no.setter
    def server_instance_no(self, server_instance_no):
        u"""Sets the server_instance_no of this CreatePublicIpInstanceRequest.

        서버인스턴스번호  # noqa: E501

        :param server_instance_no: The server_instance_no of this CreatePublicIpInstanceRequest.  # noqa: E501
        :type: str
        """
        self._server_instance_no = server_instance_no

    @property
    def public_ip_description(self):
        u"""Gets the public_ip_description of this CreatePublicIpInstanceRequest.  # noqa: E501

        공인IP설명  # noqa: E501

        :return: The public_ip_description of this CreatePublicIpInstanceRequest.  # noqa: E501
        :rtype: str
        """
        return self._public_ip_description

    @public_ip_description.setter
    def public_ip_description(self, public_ip_description):
        u"""Sets the public_ip_description of this CreatePublicIpInstanceRequest.

        공인IP설명  # noqa: E501

        :param public_ip_description: The public_ip_description of this CreatePublicIpInstanceRequest.  # noqa: E501
        :type: str
        """
        self._public_ip_description = public_ip_description

    @property
    def internet_line_type_code(self):
        u"""Gets the internet_line_type_code of this CreatePublicIpInstanceRequest.  # noqa: E501

        인터넷라인구분코드  # noqa: E501

        :return: The internet_line_type_code of this CreatePublicIpInstanceRequest.  # noqa: E501
        :rtype: str
        """
        return self._internet_line_type_code

    @internet_line_type_code.setter
    def internet_line_type_code(self, internet_line_type_code):
        u"""Sets the internet_line_type_code of this CreatePublicIpInstanceRequest.

        인터넷라인구분코드  # noqa: E501

        :param internet_line_type_code: The internet_line_type_code of this CreatePublicIpInstanceRequest.  # noqa: E501
        :type: str
        """
        self._internet_line_type_code = internet_line_type_code

    @property
    def region_no(self):
        u"""Gets the region_no of this CreatePublicIpInstanceRequest.  # noqa: E501

        리전번호  # noqa: E501

        :return: The region_no of this CreatePublicIpInstanceRequest.  # noqa: E501
        :rtype: str
        """
        return self._region_no

    @region_no.setter
    def region_no(self, region_no):
        u"""Sets the region_no of this CreatePublicIpInstanceRequest.

        리전번호  # noqa: E501

        :param region_no: The region_no of this CreatePublicIpInstanceRequest.  # noqa: E501
        :type: str
        """
        self._region_no = region_no

    @property
    def zone_no(self):
        u"""Gets the zone_no of this CreatePublicIpInstanceRequest.  # noqa: E501

        ZONE번호  # noqa: E501

        :return: The zone_no of this CreatePublicIpInstanceRequest.  # noqa: E501
        :rtype: str
        """
        return self._zone_no

    @zone_no.setter
    def zone_no(self, zone_no):
        u"""Sets the zone_no of this CreatePublicIpInstanceRequest.

        ZONE번호  # noqa: E501

        :param zone_no: The zone_no of this CreatePublicIpInstanceRequest.  # noqa: E501
        :type: str
        """
        self._zone_no = zone_no

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}
        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(lambda x: x.to_dict() if hasattr(x, 'to_dict') else x, value))
            elif hasattr(value, 'to_dict'):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(lambda item: (item[0], item[1].to_dict()) if hasattr(item[1], 'to_dict') else item, value.items()))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CreatePublicIpInstanceRequest):
            return False
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other