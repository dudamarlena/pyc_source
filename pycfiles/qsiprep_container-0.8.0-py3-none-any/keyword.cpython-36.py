# uncompyle6 version 3.7.4
# Python bytecode 3.6 (3379)
# Decompiled from: Python 3.6.9 (default, Apr 18 2020, 01:56:04) 
# [GCC 8.4.0]
# Embedded file name: /tmp/src/qsiprep/wrapper/build/lib/python3.6/keyword.py
# Compiled at: 2019-03-22 00:31:36
# Size of source mod 2**32: 2211 bytes
"""Keywords (from "graminit.c")

This file is automatically generated; please don't muck it up!

To update the symbols in this file, 'cd' to the top directory of
the python source tree after building the interpreter and run:

    ./python Lib/keyword.py
"""
__all__ = [
 'iskeyword', 'kwlist']
kwlist = [
 'False',
 'None',
 'True',
 'and',
 'as',
 'assert',
 'break',
 'class',
 'continue',
 'def',
 'del',
 'elif',
 'else',
 'except',
 'finally',
 'for',
 'from',
 'global',
 'if',
 'import',
 'in',
 'is',
 'lambda',
 'nonlocal',
 'not',
 'or',
 'pass',
 'raise',
 'return',
 'try',
 'while',
 'with',
 'yield']
iskeyword = frozenset(kwlist).__contains__

def main():
    import sys, re
    args = sys.argv[1:]
    iptfile = args and args[0] or 'Python/graminit.c'
    if len(args) > 1:
        optfile = args[1]
    else:
        optfile = 'Lib/keyword.py'
    with open(optfile, newline='') as (fp):
        format = fp.readlines()
    nl = format[0][len(format[0].strip()):] if format else '\n'
    with open(iptfile) as (fp):
        strprog = re.compile('"([^"]+)"')
        lines = []
        for line in fp:
            if '{1, "' in line:
                match = strprog.search(line)
                if match:
                    lines.append("        '" + match.group(1) + "'," + nl)

    lines.sort()
    try:
        start = format.index('#--start keywords--' + nl) + 1
        end = format.index('#--end keywords--' + nl)
        format[start:end] = lines
    except ValueError:
        sys.stderr.write('target does not contain format markers\n')
        sys.exit(1)

    with open(optfile, 'w', newline='') as (fp):
        fp.writelines(format)


if __name__ == '__main__':
    main()