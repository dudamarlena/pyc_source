# uncompyle6 version 3.7.4
# Python bytecode 3.6 (3379)
# Decompiled from: Python 3.6.9 (default, Apr 18 2020, 01:56:04) 
# [GCC 8.4.0]
# Embedded file name: /Users/romainegele/Documents/Argonne/deephyper/build/lib/deephyper/core/exceptions/nas/struct.py
# Compiled at: 2019-07-10 12:45:57
# Size of source mod 2**32: 1794 bytes
from deephyper.core.exceptions.nas import NASError

class WrongSequenceToSetOperations(NASError):
    __doc__ = 'Raised when a sequence of actions is not of the same lenght as the number of variable nodes of the structure.'

    def __init__(self, sequence_given, sequence_valid):
        self.sequence_given = sequence_given
        self.sequence_valid = sequence_valid

    def __str__(self):
        return f"Wrong sequence given: '{self.sequence_given}' of length {len(self.sequence_given)} when a valid sequence should be of length {len(self.sequence_valid)}"


class StructureHasACycle(NASError):
    __doc__ = 'Raised when a structure is containing a cycle.'

    def __init__(self, msg):
        self.msg = msg

    def __str__(self):
        return self.msg


class InputShapeOfWrongType(NASError):
    __doc__ = 'Raised when an input shape of a structure is of a wrong type.\n    '

    def __init__(self, input_shape):
        self.input_shape = input_shape

    def __str__(self):
        f"input_shape must be either a 'tuple' or a 'list(tuple)' but it is of type '{type(self.input_shape)}'!"


class NodeAlreadyAdded(NASError):
    __doc__ = 'Raised when a node has already been added in a structure.\n    '

    def __init__(self, node):
        self.node = node

    def __str__(self):
        return f"The node '{str(self.node)}' has already been added to the structure."


class WrongOutputShape(NASError):
    __doc__ = "Raised when the output shape of the model generated by a structure doesn't\n    match the expected shape.\n    "

    def __init__(self, tensor, expected_shape):
        self.tensor = tensor
        self.expected_shape = expected_shape

    def __str__(self):
        return f"The output tensor of shape {self.tensor.get_shape()} doesn't match the expected shape {self.expected_shape}!"