# uncompyle6 version 3.7.4
# Python bytecode 2.7 (62211)
# Decompiled from: Python 3.6.9 (default, Apr 18 2020, 01:56:04) 
# [GCC 8.4.0]
# Embedded file name: /Users/Dani/Documents/Projects/Golismero_2.0/src_github/plugins/testing/recon/dns_malware.py
# Compiled at: 2013-12-09 06:41:16
__license__ = '\nGoLismero 2.0 - The web knife - Copyright (C) 2011-2013\n\nAuthors:\n  Daniel Garcia Garcia a.k.a cr0hn | cr0hn<@>cr0hn.com\n  Mario Vilas | mvilas<@>gmail.com\n\nGolismero project site: http://golismero-project.com\nGolismero project mail: golismero.project<@>gmail.com\n\n\nThis program is free software; you can redistribute it and/or\nmodify it under the terms of the GNU General Public License\nas published by the Free Software Foundation; either version 2\nof the License, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program; if not, write to the Free Software\nFoundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n'
from golismero.api.config import Config
from golismero.api.data.information.dns import DnsRegister
from golismero.api.data.vulnerability.malware.dns_poisoning import DNSPoisoning
from golismero.api.logger import Logger
from golismero.api.plugin import TestingPlugin
from golismero.api.text.wordlist import WordListLoader, WordlistNotFound

class DNSMalware(TestingPlugin):

    def get_accepted_info(self):
        return [
         DnsRegister]

    def recv_info(self, info):
        if info.type != 'CNAME':
            return
        root = info.target
        Logger.log_verbose('Looking for poisoned domains at: *.%s' % root)
        wordlist_filename = Config.plugin_args['wordlist']
        try:
            wordlist = WordListLoader.get_advanced_wordlist_as_list(wordlist_filename)
        except WordlistNotFound:
            Logger.log_error_verbose('Wordlist not found: ' + wordlist_filename)
            return
        except TypeError:
            Logger.log_error_verbose('Wordlist is not a file: ' + wordlist_filename)
            return

        results = []
        root_set = set([root])
        for x in root_set.intersection(set(wordlist)):
            v = DNSPoisoning(x)
            v.add_information(info)
            results.append(v)

        if results:
            Logger.log_verbose('Discovered %s poisoned domains.' % len(results))
        else:
            Logger.log_verbose('No poisoned domains found.')
        return results