# uncompyle6 version 3.7.4
# Python bytecode 2.7 (62211)
# Decompiled from: Python 3.6.9 (default, Apr 18 2020, 01:56:04) 
# [GCC 8.4.0]
# Embedded file name: build/bdist.linux-x86_64/egg/cantools/cfg.py
# Compiled at: 2020-04-03 17:49:48
import os
cfg = {'log': {'allow': [
                   'info', 'log', 'error']}, 
   'plugin': {'modules': [], 'path': '%s/.ctplug' % (os.environ.get('HOME') or os.environ.get('USERPROFILE'),), 
              'base': 'bubbleboy14'}, 
   'geo': {'test': False, 
           'zip': 'google', 
           'user': {'geonames': [
                               'demo'], 
                    'google': [
                             '']}}, 
   'memcache': {'request': False, 
                'db': False}, 
   'admin': {'host': 'localhost', 
             'port': 8002, 
             'protocol': 'http', 
             'log': None, 
             'contacts': [], 'whitelist': [], 'monitor': {'interval': 5, 
                         'log': False, 
                         'geo': [], 'proxy': None, 
                         'thresholds': {'cpu': 80}}}, 
   'web': {'server': 'dez', 
           'domain': 'your.web.domain', 
           'host': '0.0.0.0', 
           'port': 8080, 
           'protocol': 'http', 
           'xorigin': False, 
           'log': None, 
           'errlog': None, 
           'rollz': {}, 'whitelist': []}, 
   'ssl': {'verify': True, 
           'certfile': None, 
           'keyfile': None, 
           'cacerts': None, 
           'pubsubcert': None, 
           'pubsubcacerts': None, 
           'pubsubkey': None}, 
   'db': {'gae': 'data.db', 
          'dez': 'sqlite:///data.db', 
          'test': 'sqlite:///data_test.db', 
          'blob': 'blob', 
          'alter': False, 
          'echo': False, 
          'public': True}, 
   'pay': {'merchant': None, 
           'public': None, 
           'private': None}, 
   'scrambler': '1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ+/=_', 
   'encode': False, 
   'mailer': None, 
   'mailhtml': True, 
   'pubsub': {'host': 'localhost', 
              'port': 8888, 
              'history': 10, 
              'botnames': [], 'bots': {}, 'echo': True, 
              'log': None, 
              'meta': False, 
              'b64': False}, 
   'parse_error_segment_length': 100, 
   'build': {'include': [], 'exclude': [], 'web': {'dynamic': 'html', 
                     'compiled': {'static': 'html-static', 
                                  'production': 'html-production'}}, 
             'admin': {'dynamic': 'dynamic', 
                       'compiled': {'static': 'static', 
                                    'production': 'production'}}}, 
   'js': {'path': 'js', 
          'flag': '<script src="/', 
          'offset': len('<script src="'), 
          'endoffset': len('"></script>')}, 
   'yaml': {'path': 'app.yaml', 
            'start': '# START mode: ', 
            'end': '# END mode: '}, 
   'py': {'path': 'ct.cfg', 
          'enc': 'ENCODE = %s', 
          'mode': 'MODE = %s'}, 
   'noscript': '\n\t\t<noscript>\n\t\t <div style="position: absolute; left:0px; top:0px;">\n\t\t  This site requires Javascript to function properly. To enable Javascript in your browser, please follow <a href="http://www.google.com/support/bin/answer.py?answer=23852">these instructions</a>. Thank you, and have a nice day.\n\t\t </div>\n\t\t</noscript>\n\t', 
   'init': {'core': [
                   'CT.require("core.config");', 'CT.require("core.util");'], 
            'config': {'log': {'include': [], 'exclude': []}, 'header': {'logo': 'Your Logo', 
                                  'right': []}, 
                       'borderbox': True, 
                       'css': [], 'keys': {}, 'mobile': {'scale': False}, 
                       'CC': {'gateway': 'https://care-coin.net/comp/api.js', 
                              'membership': None, 
                              'agent': None, 
                              'pod': None}}, 
            'util': {'main': {}, 'post': '', 
                     'template': 'core.util = %s;\r\n\r\nCT.log.grep(core.config.log.include, core.config.log.exclude);%s'}, 
            'dirs': [
                   'js', 'css', 'img', 'logs', 'blob', 'html', 'html-static', 'html-production'], 
            'vcignore': {'.': [
                             '*pyc', '*~', '.ctp', '_', 'admin.py', '_db.py', '_memcache.py', '_pay.py', 'logs', 'blob'], 
                         'css': [
                               'ct.css'], 
                         'js': [
                              'CT']}, 
            'yaml': {'gae': 'application: %s\nversion: 1\nruntime: python27\napi_version: 1\nthreadsafe: false\n\nhandlers:\n- url: /remote_api\n  script: $PYTHON_LIB/google/appengine/ext/remote_api/handler.py\n  login: admin', 
                     'core': "\n- url: /css\n  static_dir: css\n\n- url: /img\n  static_dir: img\n\n- url: /blob\n  static_dir: blob\n\n- url: /_db\n  script: _db.py\n\n- url: /_memcache\n  script: _memcache.py\n\n- url: /_pay\n  script: _pay.py\n\n## MODE SWITCHING -- DON'T MESS WITH (unless you know what you're doing)!\n# START mode: dynamic\n- url: /js\n  static_dir: js\n- url: /.*\\.html\n  static_dir: html\n# END mode: dynamic\n# START mode: static\n#- url: /js\n#  static_dir: js\n#- url: /.*\\.html\n#  static_dir: html-static\n# END mode: static\n# START mode: production\n#- url: /.*\\.html\n#  static_dir: html-production\n# END mode: production"}, 
            'cron': 'cron:', 
            'html': '<!doctype html>\n<html>\n  <head>\n    <title>%s</title>\n    <link rel="stylesheet" href="/css/ct.css">\n    <script src="/js/CT/ct.js"></script>\n  </head>\n  <body>\n   Hello World\n  </body>\n</html>', 
            'ctcfg': os.linesep.join(['ENCODE = False', 'MODE = dynamic', 'WEB_SERVER = %s']), 
            'model': 'from cantools import db'}, 
   'about': '# cantools %s\nThis portable modern web framework is the application-neutral backbone of Civil Action Network. It includes: a pubsub WebSocket server and bot platform; swappable web backends capable of targeting high-concurrency standalone or cloud platforms; a variable-mode application compiler; a broad-spectrum ORM and database migration tools; a built in administrative interface; and a rich modular JavaScript library.\n\n - Docs: http://ct.mkult.co\n - License: MIT (see LICENSE)\n\n## Repository Installation (full)\n  - upside: includes full codebase (not just Python)\n  - site: https://github.com/bubbleboy14/cantools\n  - steps\n    - git clone https://github.com/bubbleboy14/cantools.git\n    - cd cantools\n    - python setup.py install\n    - python setup.py develop\n\nIf you\'re running OSX or Ubuntu (or probably most Debian derivatives), you may consider running (as root or sudoer):\n\n    ./bootstrap.sh\n\nInstead of the two "python setup.py" lines. This will also install various dependencies\nthat may not already be present on your system (some systems don\'t even come with Python).\n\n## Production Installation (transparent)\n  - upside\n    - cantools and all dependencies installed in one line\n    - hidden away like any standard system library\n    - cleanest way to deploy your applications\n  - downside\n    - no easy access to ct source -- aren\'t you curious?\n    - OSX or Debian (especially Ubuntu) -only (until you add support for your system!)\n  - command: wget -O - https://raw.githubusercontent.com/bubbleboy14/cantools/master/bootstrap.sh | bash\n\n## Package Installation (limited -- not recommended)\n  - downside\n    - does _not_ include full package (such as client-side web files)\n    - enough to mess around with cantools -- not enough to develop end-to-end applications\n  - package: https://pypi.python.org/pypi/ct\n  - command: easy_install ct\n\n## Hello World\nThis takes less than a moment. Pop open a terminal in your home directory:\n\n\t~$ git clone https://github.com/bubbleboy14/cantools.git\n\t~$ cd cantools/\n\t~/cantools$ python setup.py install\n\t~/cantools$ python setup.py develop\n\t~/cantools$ cd ..\n\t~$ ctinit hello_world\n\t~$ cd hello_world/\n\t~/hello_world$ ctstart\n\nAnd that\'s it. Open http://localhost:8080/ in your browser and call it a day.\n\n## Deployment Steps\nYou just found out that you need to deploy a cantools project to a fresh, naked\nUbuntu system that doesn\'t even have Python or git. Oh no, what do you do? This\n(as root or sudoer for first and last commands):\n\n\t~$ wget -O - https://raw.githubusercontent.com/bubbleboy14/cantools/master/bootstrap.sh | bash\n\t~$ git clone https://github.com/your_organization/your_project.git\n\t~$ cd your_project\n\t~/your_project$ ctinit -r\n\t~/your_project$ ctstart -p80\n\nNow just make sure port 80 is open, and you\'re good to go. Also, you should probably\nrun ctstart in a screen or something (so that you can eventually log out) - that\'s it!'}