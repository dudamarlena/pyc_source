# uncompyle6 version 3.7.4
# Python bytecode 3.2 (3180)
# Decompiled from: Python 3.6.9 (default, Apr 18 2020, 01:56:04) 
# [GCC 8.4.0]
# Embedded file name: build/bdist.linux-x86_64/egg/pgp/cipher/tests/test_twofish.py
# Compiled at: 2015-08-31 08:17:33
import unittest, warnings
from Crypto.SelfTest.Cipher.common import make_block_tests
from pgp.cipher import twofish
test_data = [
 ('00000000000000000000000000000000', '9f589f5cf6122c32b6bfec2f2ae8c35a', '00000000000000000000000000000000',
 '128-bit key'),
 ('00000000000000000000000000000000', 'cfd1d2e5a9be9cdf501f13b892bd2248', '0123456789abcdeffedcba98765432100011223344556677',
 '192-bit key'),
 ('00000000000000000000000000000000', '37527be0052334b89f0cfccae87cfa20', '0123456789abcdeffedcba987654321000112233445566778899aabbccddeeff',
 '256-bit key'),
 ('00000000000000000000000000000000', '9f589f5cf6122c32b6bfec2f2ae8c35a', '00000000000000000000000000000000',
 '128-bit key'),
 ('00000000000000000000000000000000', 'efa71f788965bd4453f860178fc19101', '000000000000000000000000000000000000000000000000',
 '192-bit key'),
 ('00000000000000000000000000000000', '57ff739d4dc92c1bd7fc01700cc8216f', '0000000000000000000000000000000000000000000000000000000000000000',
 '256-bit key'),
 ('00000000000000000000000000000000', '6bfd32804a1c3206c4bf85eb11241f89', '80000000000000000000000000000000',
 '128-bit key'),
 ('00000000000000000000000000000000', 'b5aed133641004f4121b66e7db8f2ff0', '800000000000000000000000000000000000000000000000',
 '192-bit key'),
 ('00000000000000000000000000000000', '785229b51b515f30a1fcc88b969a4e47', '8000000000000000000000000000000000000000000000000000000000000000',
 '256-bit key'),
 ('80000000000000000000000000000000', '73b9ff14cf2589901ff52a0d6f4b7ede', '00000000000000000000000000000000',
 '128-bit key'),
 ('80000000000000000000000000000000', '62ef193edb7d399aca50ec1cbe5398d8', '000000000000000000000000000000000000000000000000',
 '192-bit key'),
 ('80000000000000000000000000000000', '23a385f617f313dac05bcb7eabd61807', '0000000000000000000000000000000000000000000000000000000000000000',
 '256-bit key'),
 (
  '00000000000000000000000000000000', '9f589f5cf6122c32b6bfec2f2ae8c35a',
  '00000000000000000000000000000000',
  '128-bit key',
  dict(mode='CBC', iv='00000000000000000000000000000000')),
 (
  '00000000000000000000000000000000', 'efa71f788965bd4453f860178fc19101',
  '000000000000000000000000000000000000000000000000',
  '192-bit key',
  dict(mode='CBC', iv='00000000000000000000000000000000')),
 (
  '00000000000000000000000000000000', '57ff739d4dc92c1bd7fc01700cc8216f',
  '0000000000000000000000000000000000000000000000000000000000000000',
  '256-bit key',
  dict(mode='CBC', iv='00000000000000000000000000000000'))]

def get_tests(config={}):
    return make_block_tests(twofish, 'Twofish', test_data)


def test_twofish():
    if twofish is None:
        warnings.warn('Twofish not available on this system. Skipping its tests.')
        return
    else:
        for testcase in get_tests():
            yield getattr(testcase, testcase._testMethodName)

        return


if hasattr(unittest, 'skip'):
    test_camellia = unittest.skipIf(twofish is None, 'Twofish not available on this system.')(test_twofish)