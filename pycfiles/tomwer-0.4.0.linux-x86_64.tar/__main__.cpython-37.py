# uncompyle6 version 3.7.4
# Python bytecode 3.7 (3394)
# Decompiled from: Python 3.6.9 (default, Apr 18 2020, 01:56:04) 
# [GCC 8.4.0]
# Embedded file name: /users/payno/.local/share/virtualenvs/tomwer_venc/lib/python3.7/site-packages/tomwer/__main__.py
# Compiled at: 2020-03-06 02:01:31
# Size of source mod 2**32: 4570 bytes
"""This module describe tomwer applications which are available  through
the silx launcher.

Your environment should provide a command `tomwer`. You can reach help with
`tomwer --help`, and check the version with `tomwer --version`.
"""
__authors__ = [
 'V. Valls', 'P. Knobel', 'H. Payno']
__license__ = 'MIT'
__date__ = '04/01/2018'
import logging
logging.basicConfig()
import sys
from silx.utils.launcher import Launcher
import tomwer.version

def main():
    """Main function of the launcher

    This function is referenced in the setup.py file, to create a
    launcher script generated by setuptools.

    :rtype: int
    :returns: The execution status
    """
    _version = tomwer.version.version
    launcher = Launcher(prog='tomwer', version=_version)
    launcher.add_command('canvas', module_name='tomwer.app.canvas',
      description='open the orange-canvas')
    launcher.add_command('axis', module_name='tomwer.app.axis',
      description='Compute center of rotation of a scan or between two projections')
    launcher.add_command('rsync', module_name='tomwer.app.rsync',
      description='Tool for synchronization between acquisition contained in a folder and a target folder')
    launcher.add_command('darkref', module_name='tomwer.app.darkref',
      description='Compute mean / median darks and flat fields')
    launcher.add_command('ftseries', module_name='tomwer.app.ftseries',
      description='Interface for pyhst reconstruction')
    launcher.add_command('liveslice', module_name='tomwer.app.liveslice',
      description='Run liveslice application')
    launcher.add_command('samplemoved', module_name='tomwer.app.samplemoved',
      description='Interface to check if a sample have moved during acquisition ')
    launcher.add_command('slicestack', module_name='tomwer.app.slicestack',
      description='Display each reconstruction contained in the ROOT_DIR or sub-folders')
    launcher.add_command('radiostack', module_name='tomwer.app.radiostack',
      description='Display each radio contained in the ROOT_DIR or sub-folders')
    launcher.add_command('lamino', module_name='tomwer.app.lamino',
      description='Run laminography reconstruction using tofu')
    launcher.add_command('test', module_name='tomwer.app.test_',
      description='Launch tomwer unittest')
    status = launcher.execute(sys.argv)
    return status


if __name__ == '__main__':
    status = main()
    sys.exit(status)