# uncompyle6 version 3.7.4
# Python bytecode 2.6 (62161)
# Decompiled from: Python 3.6.9 (default, Apr 18 2020, 01:56:04) 
# [GCC 8.4.0]
# Embedded file name: build\bdist.win32\egg\reconstruct\formats\filesystem\mbr.py
# Compiled at: 2010-05-01 15:45:14
"""
Master Boot Record
The first sector on disk, contains the partition table, bootloader, et al.

http://www.win.tue.nl/~aeb/partitions/partition_types-1.html
"""
from construct import *
mbr = Struct('mbr', HexDumpAdapter(Bytes('bootloader_code', 446)), Array(4, Struct('partitions', Enum(Byte('state'), INACTIVE=0, ACTIVE=128), BitStruct('beginning', Octet('head'), Bits('sect', 6), Bits('cyl', 10)), Enum(UBInt8('type'), Nothing=0, FAT12=1, XENIX_ROOT=2, XENIX_USR=3, FAT16_old=4, Extended_DOS=5, FAT16=6, FAT32=11, FAT32_LBA=12, NTFS=7, LINUX_SWAP=130, LINUX_NATIVE=131, _default_=Pass), BitStruct('ending', Octet('head'), Bits('sect', 6), Bits('cyl', 10)), UBInt32('sector_offset'), UBInt32('size'))), Const(Bytes('signature', 2), b'U\xaa'))
if __name__ == '__main__':
    capdecode('hex')
    print mbr.parse(cap1)