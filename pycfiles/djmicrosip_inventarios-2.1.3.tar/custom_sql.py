# uncompyle6 version 3.7.4
# Python bytecode 2.7 (62211)
# Decompiled from: Python 3.6.9 (default, Apr 18 2020, 01:56:04) 
# [GCC 8.4.0]
# Embedded file name: C:\repositorios\web\djmicrosip_apps\djmicrosip_inventarios\djmicrosip_inventarios\utils\db\custom_sql.py
# Compiled at: 2019-09-17 20:13:06
procedures = {}
procedures_fijos = []
procedures['SIC_PUERTA_DEL_TRIGGERS'] = "\n    CREATE OR ALTER PROCEDURE SIC_PUERTA_DEL_TRIGGERS \n    as\n    begin\n        if (exists(\n            select 1 from RDB$Triggers\n            where RDB$Trigger_name = 'SIC_PUERTA_INV_DOCTOSIN_BU')) then\n            execute statement 'drop trigger SIC_PUERTA_INV_DOCTOSIN_BU';\n    end\n    "
procedures['SIC_ALMACENES_AT'] = "\n    CREATE OR ALTER PROCEDURE SIC_ALMACENES_AT \n    as\n    begin\n        if (not exists(\n        select 1 from RDB$RELATION_FIELDS rf\n        where rf.RDB$RELATION_NAME = 'ALMACENES' and rf.RDB$FIELD_NAME = 'SIC_INVENTARIANDO')) then\n            execute statement 'ALTER TABLE ALMACENES ADD SIC_INVENTARIANDO SMALLINT DEFAULT 1';\n\n        if (not exists(\n        select 1 from RDB$RELATION_FIELDS rf\n        where rf.RDB$RELATION_NAME = 'ALMACENES' and rf.RDB$FIELD_NAME = 'SIC_INVCONAJUSTES')) then\n            execute statement 'ALTER TABLE ALMACENES ADD SIC_INVCONAJUSTES SMALLINT DEFAULT 0';\n\n        if (not exists(\n        select 1 from RDB$RELATION_FIELDS rf\n        where rf.RDB$RELATION_NAME = 'ALMACENES' and rf.RDB$FIELD_NAME = 'SIC_INVMODIFCOSTOS')) then\n            execute statement 'ALTER TABLE ALMACENES ADD SIC_INVMODIFCOSTOS SMALLINT DEFAULT 0';\n    end\n    "
procedures['SIC_DOCTOSINDET_AT'] = "\n    CREATE OR ALTER PROCEDURE SIC_DOCTOSINDET_AT\n    as\n    BEGIN\n\n        if (not exists(\n        select 1 from RDB$RELATION_FIELDS rf\n        where rf.RDB$RELATION_NAME = 'DOCTOS_IN_DET' and rf.RDB$FIELD_NAME = 'SIC_FECHAHORA_U')) then\n            execute statement 'ALTER TABLE DOCTOS_IN_DET ADD SIC_FECHAHORA_U FECHA_Y_HORA';\n\n        if (not exists(\n        select 1 from RDB$RELATION_FIELDS rf\n        where rf.RDB$RELATION_NAME = 'DOCTOS_IN_DET' and rf.RDB$FIELD_NAME = 'SIC_USUARIO_ULT_MODIF')) then\n            execute statement 'ALTER TABLE DOCTOS_IN_DET ADD SIC_USUARIO_ULT_MODIF USUARIO_TYPE';\n\n        if (not exists(\n        select 1 from RDB$RELATION_FIELDS rf\n        where rf.RDB$RELATION_NAME = 'DOCTOS_IN_DET' and rf.RDB$FIELD_NAME = 'SIC_DETALLETIME_MODIFICACIONES')) then\n            execute statement 'ALTER TABLE DOCTOS_IN_DET ADD SIC_DETALLETIME_MODIFICACIONES MEMO';\n    END\n    "
procedures['SIC_LOGINVENTARIO_VALINI_AT'] = "\n    CREATE OR ALTER PROCEDURE SIC_LOGINVENTARIO_VALINI_AT\n    AS\n    BEGIN\n        IF (NOT EXISTS(\n        SELECT 1 FROM RDB$RELATION_FIELDS RF\n        WHERE RF.RDB$RELATION_NAME = 'SIC_LOGINVENTARIO_VALOR_INICIAL' AND RF.RDB$FIELD_NAME = 'EXISTENCIA_FINAL')) THEN\n            EXECUTE STATEMENT 'ALTER TABLE SIC_LOGINVENTARIO_VALOR_INICIAL ADD EXISTENCIA_FINAL DECIMAL(18,5)';\n    END\n    "
procedures_fijos.append({'name': 'SIC_GET_PRECIO_CON_IMPUESTO', 
   'procedure': "\n        CREATE OR ALTER PROCEDURE SIC_GET_PRECIO_CON_IMPUESTO (\n            articulo_id integer)\n        returns (\n            precio_con_impuesto numeric(18,6))\n        as\n        declare variable v_fpgc_unitario numeric(18,6);\n        declare variable v_precio_lista numeric(18,6);\n        BEGIN\n            SELECT PA.PRECIO FROM ARTICULOS A JOIN PRECIOS_ARTICULOS PA ON PA.ARTICULO_ID = A.ARTICULO_ID\n            JOIN PRECIOS_EMPRESA PE ON PE.PRECIO_EMPRESA_ID = PA.PRECIO_EMPRESA_ID\n            WHERE ( PE.ID_INTERNO = 'L' ) AND A.ARTICULO_ID = :ARTICULO_ID\n            INTO :V_PRECIO_LISTA;\n\n            IF (V_PRECIO_LISTA IS NULL) THEN\n                V_PRECIO_LISTA = 0;\n            EXECUTE PROCEDURE PRECIO_CON_IMPTO(:ARTICULO_ID,:V_PRECIO_LISTA,'N','P','N')\n            RETURNING_VALUES PRECIO_CON_IMPUESTO;\n          SUSPEND;\n        END\n    "})