# uncompyle6 version 3.7.4
# Python bytecode 2.5 (62131)
# Decompiled from: Python 3.6.9 (default, Apr 18 2020, 01:56:04) 
# [GCC 8.4.0]
# Embedded file name: build/bdist.linux-x86_64/egg/sitetool/help.py
# Compiled at: 2009-07-16 14:54:28
redirect = "usage: %(program)s redirect [OPTIONS]...\n\nupdate (ex): Generate Apache .htaccess with required redirects\n\nScan for files which may have come from elsewhere and require redirects to\ntheir current positions. If -S is specified only the files under that\ndirectory are scanned, otherwise all files in the site are scanned.\n\nCaution:\n\n  Currently adds the redirects even if files at that location already\n  exist.\n\nOptions:\n\n         -b, --base-url=BASE_URL\n               path to the site root directory\n         -S, --start-path=START_PATH\n               the path to start the search at\n\n        Plus all program options... (see `%(program)s --help')\n\nTypical use to export wordpress to reStructuredText:\n\n  %(program)s redirect -c about.html -b http://jimmyg.org -S blog\n"
convert = "     usage: %(program)s convert [OPTIONS]... [PLUGIN_OPTIONS]...\n\n     convert (cv): Convert a source file to HTML using all available plugins\n\n     If -S is specified only the files under that directory are scanned, in\n     which case the -s option is not required. If START_PATH is a file, only\n     that file is converted, if it is a directory all files in that directory\n     are converted. If -r is specified, or -S is not specified the search is\n     recursive and all child directories are converted. If -f is specified,\n     files are re-created even if they appear up to date.\n\n     The -c option is always required because it contains information about\n     which plugins should be used to convert which sections and the templates\n     to use. See [1]http://jimmyg.org/blog/2009/site-tool for more\n     information.\n\n     Caution:\n\n       You shouldn't usually try to convert a sub-directoy of a blog\n       directory if you want the indexes to be re-generated, instead convert\n       the whole directory.\n\n     Options:\n\n        -c, --config=CONFIG\n                     path to the config file\n        -s, --site-root=SITE_ROOT\n                     path to the site root directory\n        -S, --start-path=START_PATH\n                     the path to start the search at\n        -g, --generated-files\n                     create generated files and index pages\n        -u, --user-files\n                     convert user-created files\n        -r, --recursive\n                     recursivley convert all files under that directory\n        -f, --force  force convertion of all files, even if HTML versions\n                     already exist\n        -C, --context-items\n                     reapply context library items to newly converted and\n                     existing pages\n\n       Plus all program options... (see `%(program)s --help')\n\n     Plugin options:\n\n        -t, --template=TEMPLATE\n             the template to use for the plain rst plugin\n\n     Typical use to re-convert an entire section and then reapply context\n     items to both newly convert and existing items:\n\n       %(program)s convert -c about.html -ugrfC -S blog\n\nReferences\n\n   Visible links\n   1. http://jimmyg.org/blog/2009/site-tool\n"
set = "usage: %(program)s set [OPTIONS]... [PAGE|TEMPLATE]\n\nset: Set a page region or property\n\nIf neither the -i nor -n options are used the value to update the page\nwith is read from STDIN.\n\nArguments:\n\n   PAGE:      the path of the page to update\n   TEMPLATE:  the path of the template\n\nOptions:\n\n   -a, --area=AREA\n      name of the page region or property to fetch\n   -e, --new-content=CONTENT\n      the value to update the content with\n   -i, --interactive\n      load the current value of the region in the editor specified by the\n      EDITOR environment variable and update the saved contents of the\n      page when the editor exits\n\n  Plus all program options... (see `%(program)s --help')\n\nTypical use for interactive editing:\n\n  %(program)s set -i -a doctitle page.html\n"
thumb = "usage: %(program)s [PROGRAM_OPTIONS] thumb SOURCE DEST\n\nRecursively convert all the pictures and videos in SOURCE into a directory\nstructure in DEST\n\nArguments:\n\n   SOURCE:  The source directory for the images and videos\n   DEST:    An empty directory which will be populated with a converted\n            data structure\n\nOptions:\n\n         -t, --thumbnail-size=THUMBNAIL_SIZE\n            The width in pixels of the thumbnails\n         -o, --video-overlay-file=OVERLAY_FILE\n            A transparent PNG file the same size as the thumbnails to\n            overlay on video thumbnails to distinguish them from picture\n            thumbnails\n\n        All PROGRAM_OPTIONS (see `%(program)s --help')\n"
get = "usage: %(program)s get [OPTIONS]... [PAGE|TEMPLATE]\n\nget: Display the contents of a page or template region or property\n\nArguments:\n\n   PAGE:      the path of the page\n   TEMPLATE:  the path of the template\n\nOptions:\n\n   -a, --area=AREA\n      name of the page region or property to fetch\n\n  Plus all program options... (see `%(program)s --help')\n\nTypical use:\n\n  %(program)s get -a doctitle page.html\n"
orphan = 'usage: %(program)s orphan [OPTIONS]...\n\norphan (or): Find ophaned files\n\nScans the entire site for files which are not linked from other files in\nthe site.\n\nOptions:\n\n   -c, --config=CONFIG\n               path to the config file\n   -s, --site-root=SITE_ROOT\n               path to the site root directory\n   --relative  make paths relative to the current dir\n\n  Plus all program options... (see `%(program)s --help\')\n\nTypical use:\n\n  %(program)s orphan -s static | grep "\\.html"\n'
create = "usage: %(program)s create [OPTION]... TEMPLATE PAGE\n\ncreate (cr): Create a new page\n\nArguments:\n\n   PAGE:      path of page to create\n   TEMPLATE:  the full path of the template to use\n\nOptions:\n\n  All program options... (see `%(program)s --help')\n\nTypical use:\n\n  %(program)s create Templates/jimmyg.dwt new.html\n"
move = "usage: %(program)s move [OPTIONS]... SOURCE DEST\n\nmove (mv): Move a page or section\n\nArguments:\n\n   SOURCE:  path of the page or directory to move\n   DEST:    path of directory to move to\n\nOptions:\n\n   -c, --config=CONFIG\n                path to the config file\n   -s, --site-root=SITE_ROOT\n                path to the site root directory\n   -l, --links  update links sitewide to the moved page(s)\n   -C, --context-items\n                update context items in the moved page(s)\n\n  Plus all program options... (see `%(program)s --help')\n\nTypical use:\n\n  %(program)s move -Clc about.html src/page.html dst\n"
list = "usage: %(program)s list [OPTIONS]... [PAGE|TEMPLATE]\n\nlist (ls): List the regions and properties contained in a page or template\n\nArguments:\n\n   PAGE:      the path of the page\n   TEMPLATE:  the path of the template\n\nOptions:\n\n  All program options... (see `%(program)s --help')\n\nTypical use:\n\n  %(program)s list page.html\n"
update = "usage: %(program)s update [OPTIONS]...\n\nupdate (ud): Convert a source file to HTML using all available plugins\n\nIf -S is specified only the files under that directory are scanned. If\nSTART_PATH is a file, only that file is updated, if it is a directory all\nfiles in that directory are converted. If -r is specified, or -S is not\nspecified the search is recursive and all child directories are updated.\n\nThe -T, -C, -D and -L options specify what to update in any pages which\nare found.\n\nOptions:\n\n   -c, --config=CONFIG\n          path to the config file\n   -s, --site-root=SITE_ROOT\n          path to the site root directory\n   -S, --start-path=START_PATH\n          the path to start the search at\n   -r, --recursive\n          recursivley convert all files under directory\n   -T, --templates\n          reapply the templates\n   -C, --context-items\n          reapply context library items\n   -D, --dynamic-items\n          reapply dynamic library items\n   -L, --static-items\n          reapply static library items\n\n  Plus all program options... (see `%(program)s --help')\n\nTypical use to udpdate an entire section:\n        %(program)s update -c about.html -rTCDL -S blog/\n"
broken = "usage: %(program)s broken [OPTIONS]...\n\nbroken (br): Find broken links\n\nScans the entire site for broken links. If -S is specified only the files\nunder that directory are scanned, in which case the -c and -s options are\nnot required. If START_PATH is a file, only that file is converted, if it\nis a directory all files in that directory are converted. If -r is\nspecified, or -S is not specified the search is recursive and all child\ndirectories are scanned.\n\nOptions:\n\n   -c, --config=CONFIG\n         path to the config file\n   -s, --site-root=SITE_ROOT\n         path to the site root directory\n\n  Plus all program options... (see `%(program)s --help')\n\nTypical use:\n\n  %(program)s broken -S blog/\n"
export = "usage: %(program)s export [OPTIONS]... [MYSQL_OPTIONS] DEST\n\nupdate (ex): Export from another system to static files\n\nSpecify the export mode with -m. Currently only `wordpress-rst' is\nsupported.\n\nArguments:\n\n   DEST:  directory to export the files to\n\nOptions:\n\n   -c, --config=CONFIG\n       path to the config file\n   -s, --site-root=SITE_ROOT\n       path to the site root directory\n   -m, --mode=MODE\n       export mode (only `wordpress-rst' supported)\n\n  Plus all program options... (see `%(program)s --help')\n\nMySQL Options:\n\n   -B, --database=DATABASE\n        MySQL database to export\n   -h, --host=HOST\n        host or IP address of the server\n   -p, --port=PORT\n        the port of the MySQL server\n   -U, --username=USERNAME\n        the username to use to connect\n   -w, --password=PASSWORD\n        specify password on the command line. Hint: more secure to use -i\n   -i, --interactive\n        prompt for a password\n\nTypical use to export wordpress to reStructuredText:\n\n  %(program)s export -m wordpress-rst -h db.example.com -B wp -U user -i blog/\n"
resize = "usage: %(program)s resize [OPTIONS]... -z 800x600 -F png -o test.rst FILES...\n\nresize (rz): Create thumbnails for images and pre-popualte a .rst file\n\nArguments:\n\n   FILES:  A list of files to convert\n\nWARNING: If the output format is the same as the input format your input\nfiles will be overwritten.\n\nOptions:\n\n   -z, --size=SIZE\n       the size for the thumbnails\n   -F, --format=FORMAT\n       the output format for the thumbnails\n   -o, --output=OUTPUT\n       the filename to contain the optional rst source\n\n  Plus all program options... (see `%(program)s --help')\n\nTypical use to export wordpress to reStructuredText:\n\n  %(program)s resize -z 800x600 -F png -o holiday.rst holiday/*.JPG\n"
deploy = "usage: %(program)s deploy [OPTIONS]...\n\ndeploy (dp): Upload any local changes to the remote site\n\nEither a config file containing SITE_ROOT and REMOTE_SCP must be specified\nor the -s and -d options must be used. Internally the command uses `rsync'\nbut does not delete files on the remote server unless --delete is\nspecified.\n\nOptions:\n\n   -c, --config=CONFIG\n                  path to the config file\n   -s, --site-root=SITE_ROOT\n                  path to the site root directory\n   -d, --remote-scp=REMOTE_SCP\n                  remote directory in the format expected by the `scp'\n                  program\n   --delete       delete files on the remote server which aren't present\n                  on the local server\n   -n, --dry-run  show the changes to be made but don't make them\n   --exclude-from=EXCLUDE_FROM\n                  a file listing all the files not to deploy\n\n  Plus all program options... (see `%(program)s --help')\n\nTypical use:\n\n  %(program)s deploy -s ./ -d user@server.example.com:path/to/site\n"
gallery = "usage: %(program)s [PROGRAM_OPTIONS] gallery SOURCE DEST\n\nAutomatically build galleries based on the file strucutre of the meta\ndirectory specified as SOURCE and put them in DEST.\n\nThe order of files is a gallery is determined by stripping all characters\nwhich aren't numbers from the filename and then numbering the files in\norder\n\nArguments:\n\n   SOURCE:  The meta sub-directory of the converted directory structure\n   DEST:    An empty directory within which the galleries will be placed\n\n  All PROGRAM_OPTIONS (see `%(program)s --help')\n"
sitemap = "   usage: %(program)s sitemap [OPTIONS]... SITEMAP\n\n   sitemap (sm): Scan the site and rebuild a sitemap\n\n   Arguments:\n\n      SITEMAP:  path of the file to create\n\n   Options:\n\n      -c, --config=CONFIG\n         path to the config file\n      -s, --site-root=SITE_ROOT\n         path to the site root directory\n      -F, --format=FORMAT\n         format for the sitemap, can be `html' for a human readable sitemap\n         or `xml' for a search engine comaptible sitemap (see\n         [1]http://sitemaps.org)\n      -t, --template=TEMPLATE\n         the template to use for the sitemap\n\n     Plus all program options... (see `%(program)s --help')\n\n   Typical use:\n\n     %(program)s sitemap -c about.html sitemap.html\n\nReferences\n\n   Visible links\n   1. http://sitemaps.org/\n"
metadata = "usage: %(program)s [PROGRAM_OPTIONS] metadata SOURCE DEST\n\nGenerate a gallery (-F gallery) or photo metadata file (-F photo) from a\nCSV file.\n\nIf generating a gallery the file can conatin multiple columns but must\ncontain the following:\n\nPath\n        The name to use for the gallery\n\nTitle\n        The title of the gallery\n\nDescription\n        A description of the gallery\n\nIndex\n        The relative path from the root to a thumbnail to represent the\n        gallery\n\nIf generating a gallery the file can conatin multiple columns but must\ncontain the following:\n\nIn either case the first line in the CSV file will be treated as the\ncolumn headings. Any extra columns will be added to the gallery file and\ndisplayed in the HTML version.\n\nArguments:\n\n   SOURCE:  The path to the CSV file\n   DEST:    The path to the gallery or photo metadata folder to contain\n            the output from this command.\n\nOptions:\n\n         -F, --format=FORMAT\n              The type of CSV file we are using, photo or gallery\n\n        All PROGRAM_OPTIONS (see `%(program)s --help')\n"
__program__ = "usage: %(program)s [PROGRAM_OPTS] COMMAND [OPTIONS] ARGS\n\nPROGRAM_OPTS (available to all commands):\n\n   -q, --quiet    don't show info messages\n   -v, --verbose  show debug messages as well as usual output\n   --help         show this help message and exit\n   --version      show program's version number and exit\n\nCOMMAND (alias):\n\nPages:\n\n         create (cr):  create page from a template\n         list (ls):    list page or template regions and properties\n         get:          display contents of page or template region or\n                       property\n         set:          set page or template region or property\n         update (ud):  update template, context, dynamic and static\n                       library items\n\nSite:\n\n         convert (cv):  convert source file(s) to HTML using available\n                        plugins\n         deploy (dp):   upload local changes to remote site\n         move (mv):     move or rename page or section\n         sitemap (sm):  scan site and build sitemap\n         broken (br):   find broken links\n         orphans (or):  find orphaned files\n\nWordpress:\n\n         export (ex):    export from another system to a static file\n         redirect (rd):  generate Apache .htaccess with required\n                         redirects\n\nGallery:\n\n         resize (rz):    Create thumbnails for images and pre-popualte a .rst \n                         file\n         thumb (gt):     convert pictures and videos to web format\n         metadata (gm):  extract metadata from CSV files\n         gallery (gc):   create galleries automatically from folders of\n                         thumbs\n\nConfig Options (can be specifed in an HTML file):\n\n   SITE_ROOT:   the local path of the site root directory\n   REMOTE_SCP:  the remote directory path in the format understood by scp\n\nTry `%(program)s COMMAND --help' for help on a specific command.\n"