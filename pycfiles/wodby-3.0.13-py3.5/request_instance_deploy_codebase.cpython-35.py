# uncompyle6 version 3.7.4
# Python bytecode 3.5 (3351)
# Decompiled from: Python 3.6.9 (default, Apr 18 2020, 01:56:04) 
# [GCC 8.4.0]
# Embedded file name: build/bdist.linux-x86_64/egg/wodby/models/request_instance_deploy_codebase.py
# Compiled at: 2020-04-12 05:03:52
# Size of source mod 2**32: 4127 bytes
"""
    Wodby API Client

    Wodby Developer Documentation https://wodby.com/docs/dev  # noqa: E501

    OpenAPI spec version: 3.0.13
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""
import pprint, re, six
from wodby.models.request_instance_create_git import RequestInstanceCreateGit

class RequestInstanceDeployCodebase(object):
    __doc__ = 'NOTE: This class is auto generated by the swagger code generator program.\n\n    Do not edit the class manually.\n    '
    swagger_types = {'git': 'RequestInstanceCreateGit', 
     'post_deployment': 'bool'}
    attribute_map = {'git': 'git', 
     'post_deployment': 'post_deployment'}

    def __init__(self, git=None, post_deployment=None):
        """RequestInstanceDeployCodebase - a model defined in Swagger"""
        self._git = None
        self._post_deployment = None
        self.discriminator = None
        if git is not None:
            self.git = git
        if post_deployment is not None:
            self.post_deployment = post_deployment

    @property
    def git(self):
        """Gets the git of this RequestInstanceDeployCodebase.  # noqa: E501

        :return: The git of this RequestInstanceDeployCodebase.  # noqa: E501
        :rtype: RequestInstanceCreateGit
        """
        return self._git

    @git.setter
    def git(self, git):
        """Sets the git of this RequestInstanceDeployCodebase.

        :param git: The git of this RequestInstanceDeployCodebase.  # noqa: E501
        :type: RequestInstanceCreateGit
        """
        self._git = git

    @property
    def post_deployment(self):
        """Gets the post_deployment of this RequestInstanceDeployCodebase.  # noqa: E501

        :return: The post_deployment of this RequestInstanceDeployCodebase.  # noqa: E501
        :rtype: bool
        """
        return self._post_deployment

    @post_deployment.setter
    def post_deployment(self, post_deployment):
        """Sets the post_deployment of this RequestInstanceDeployCodebase.

        :param post_deployment: The post_deployment of this RequestInstanceDeployCodebase.  # noqa: E501
        :type: bool
        """
        self._post_deployment = post_deployment

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}
        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(lambda x: x.to_dict() if hasattr(x, 'to_dict') else x, value))
            else:
                if hasattr(value, 'to_dict'):
                    result[attr] = value.to_dict()
                else:
                    if isinstance(value, dict):
                        result[attr] = dict(map(lambda item: (item[0], item[1].to_dict()) if hasattr(item[1], 'to_dict') else item, value.items()))
                    else:
                        result[attr] = value

        if issubclass(RequestInstanceDeployCodebase, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, RequestInstanceDeployCodebase):
            return False
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other